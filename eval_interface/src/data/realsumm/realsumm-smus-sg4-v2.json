[{"instance_id": "realsumm-0", "summary": "<t> Anuradha Koirala and 425 young women and girls have been sleeping outdoors because of aftershocks . </t> <t> Pushpa Basnet and 45 children she cares for were forced to evacuate their residence . </t> <t> Seven other CNN Heroes and their organizations now assisting in relief efforts . </t>", "summary_trees": ["# ::snt  Anuradha Koirala and 425 young women and girls have been sleeping outdoors because of aftershocks . \n(c / cause-01\n      :ARG0 (a / aftershock)\n      :ARG1 (s / sleep-01\n            :ARG0 (a2 / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n                  :op2 (w / woman)\n                  :op3 (g / girl)\n                  :quant 425\n                  :mod (y / young))\n            :location (o / outdoors)))", "# ::snt  Pushpa Basnet and 45 children she cares for were forced to evacuate their residence . \n(f / force-01\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Pushpa\"\n                        :op2 \"Basnet\"))\n            :op2 (c / child\n                  :quant 45\n                  :ARG1-of (c2 / care-03\n                        :ARG0 p)))\n      :ARG2 (e / evacuate-01\n            :ARG1 (t / thing\n                  :ARG1-of (r / reside-01\n                        :ARG0 a))\n            :ARG2 a))", "# ::snt  Seven other CNN Heroes and their organizations now assisting in relief efforts . \n(a / assist-01\n      :ARG0 (a2 / and\n            :op1 (h / hero\n                  :quant 7\n                  :mod (p / publication\n                        :name (n / name\n                              :op1 \"CNN\"))\n                  :mod (o / other))\n            :op2 (o2 / organization\n                  :poss h))\n      :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n      :time (n2 / now))"], "tree": ["(s / sleep-01\n   :ARG0 (w / woman)\n   :location (o / outdoors))", "(s / sleep-01\n   :ARG0 (g / girl\n            :quant 425\n            :mod (y / young)))", "(s / sleep-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anuradha\"\n                     :op2 \"Koirala\")))", "(s / sleep-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anuradha\"\n                     :op2 \"Koirala\"))\n   :location (o / outdoors))", "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (w / woman)\n            :location (o / outdoors)))", "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n            :location (o / outdoors)))", "(e / evacuate-01\n   :ARG1 (t / thing\n            :ARG1 (r / reside-01\n                     :ARG0 (a / and)))\n   :ARG2 a)", "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\")))", "(f / force-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Pushpa\"\n                             :op2 \"Basnet\"))\n            :op2 (c / child\n                    :quant 45\n                    :ARG1 (c2 / care-03\n                              :ARG0 p))))", "(f / force-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Pushpa\"\n                     :op2 \"Basnet\"))\n   :ARG2 (e / evacuate-01\n            :ARG1 (t / thing\n                     :ARG1 (r / reside-01\n                              :ARG0 p))\n            :ARG2 p))", "(f / force-01\n   :ARG1 (c / child\n            :quant 45\n            :ARG1 (c2 / care-03\n                      :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))\n   :ARG2 (e / evacuate-01\n            :ARG1 (t / thing\n                     :ARG1 (r / reside-01\n                              :ARG0 c))\n            :ARG2 c)\n   :ARG2 e)", "(f / force-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Pushpa\"\n                             :op2 \"Basnet\"))\n            :op2 (c / child\n                    :quant 45\n                    :ARG1 (c2 / care-03\n                              :ARG0 p)))\n   :ARG2 (e / evacuate-01\n            :ARG1 (t / thing\n                     :ARG1 (r / reside-01\n                              :ARG0 a))\n            :ARG2 a))", "(a / assist-01\n   :ARG0 (o2 / organization\n             :poss (h / hero)))", "(a / assist-01\n   :ARG0 (o2 / organization\n             :poss (h / hero))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :ARG2 e)", "(a / assist-01\n   :ARG0 (o2 / organization\n             :poss (h / hero))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :ARG2 e\n   :time (n2 / now))", "(a / assist-01\n   :ARG0 (h / hero\n            :quant 7\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\"))\n            :mod (o / other)))", "(a / assist-01\n   :ARG0 (h / hero\n            :quant 7\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\"))\n            :mod (o / other))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))", "(a / assist-01\n   :ARG0 (a2 / and\n             :op1 (h / hero\n                     :quant 7\n                     :mod (p / publication\n                             :name (n / name\n                                      :op1 \"CNN\"))\n                     :mod (o / other))\n             :op2 (o2 / organization\n                      :poss h)))"], "smus": ["Women sleeping outdoors.", "425 young girls are sleeping.", "Anuradha Koirala is sleeping.", "Anuradha koirala is sleeping outdoors.", "The aftershocks caused the women to be sleeping outdoors.", "Anuradha koirala was sleeping outdoors because of the aftershocks.", "Evacuate their residence.", "Pushpa Basnet was forced.", "Pushpa Basnet and 45 children who she cares for are forced.", "Pushpa Basnet was forced to evacuate his residence.", "45 children whose care is being forced to evacuate their residence were Pushpa Basnets.", "Pushpa Basnet and 45 children she cares for were forced to evacuate their residence.", "The heroes' organizations are assisting.", "Heroes' organizations are assisting in relief efforts.", "Heroes' organizations are now assisting in relief efforts.", "7 other CNN heroes assisted.", "7 other CNN heroes are assisting in relief efforts.", "The other 7 CNN heroes and their organizations are assisting."]}, {"instance_id": "realsumm-1", "summary": "<t> Students from the University of Surrey discovered thousands of colonies . </t> <t> They submerged coins and notes in agar to accelerate growth pf bacteria . </t> <t> Most were harmless on the money , but one caused boils and spots . </t> <t> Previous studies have revealed MRSA bacteria on notes and coins . </t>", "summary_trees": ["# ::snt  Students from the University of Surrey discovered thousands of colonies . \n(d / discover-01\n      :ARG0 (p / person\n            :ARG0-of (s / study-01)\n            :source (u / university\n                  :name (n / name\n                        :op1 \"University\"\n                        :op2 \"of\"\n                        :op3 \"Surrey\")))\n      :ARG1 (c / colony\n            :quant (m / multiple\n                  :op1 1000)))", "# ::snt  They submerged coins and notes in agar to accelerate growth pf bacteria . \n(s / submerge-01\n      :ARG0 (t / they)\n      :ARG1 (a / and\n            :op1 (c / coin)\n            :op2 (n / note))\n      :ARG2 (a2 / agar)\n      :purpose (a3 / accelerate-01\n            :ARG0 t\n            :ARG1 (g / grow-03\n                  :ARG1 (b / bacterium\n                        :name (n2 / name\n                              :op1 \"Pf\")))))", "# ::snt  Most were harmless on the money , but one caused boils and spots . \n(c / contrast-01\n      :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most)\n            :mod (o / on-the-money))\n      :ARG2 (c2 / cause-01\n            :ARG0 (o2 / one)\n            :ARG1 (a / and\n                  :op1 (b / boil-01)\n                  :op2 (s / spot))))", "# ::snt  Previous studies have revealed MRSA bacteria on notes and coins . \n(r / reveal-01\n      :ARG0 (s / study-01\n            :time (p / previous))\n      :ARG1 (b / bacterium\n            :mod (d / disease\n                  :name (n / name\n                        :op1 \"MRSA\"))\n            :location (a / and\n                  :op1 (n2 / note)\n                  :op2 (c / coin))))"], "tree": ["(d / discover-01\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))", "(d / discover-01\n   :ARG0 (p / person\n            :ARG0 (s / study-01)\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))", "(g / grow-03\n   :ARG1 (b / bacterium\n            :name (n2 / name\n                      :op1 \"Pf\")))", "(a3 / accelerate-01\n    :ARG0 (t / they)\n    :ARG1 (g / grow-03\n             :ARG1 (b / bacterium\n                      :name (n2 / name\n                                :op1 \"Pf\"))))", "(s / submerge-01\n   :ARG0 (t / they)\n   :ARG1 (c / coin)\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG0 t\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))", "(s / submerge-01\n   :ARG0 (t / they)\n   :ARG1 (n / note)\n   :ARG2 (a2 / agar)\n   :ARG2 a2\n   :purpose (a3 / accelerate-01\n                :ARG0 t\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))", "(s / submerge-01\n   :ARG0 (t / they)\n   :ARG1 (a / and\n            :op1 (c / coin)\n            :op2 (n / note))\n   :ARG2 (a2 / agar)\n   :purpose (a3 / accelerate-01\n                :ARG0 t\n                :ARG1 (g / grow-03\n                         :ARG1 (b / bacterium\n                                  :name (n2 / name\n                                            :op1 \"Pf\")))))", "(c2 / cause-01\n    :ARG0 (o2 / one)\n    :ARG1 (b / boil-01))", "(c2 / cause-01\n    :ARG0 (o2 / one)\n    :ARG1 (s / spot))", "(h / harmful-02\n   :polarity -\n   :ARG0 (m / most)\n   :mod (o / on-the-money))", "(c2 / cause-01\n    :ARG0 (o2 / one)\n    :ARG1 (a / and\n             :op1 (b / boil-01)\n             :op2 (s / spot)))", "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most)\n            :mod (o / on-the-money))\n   :ARG2 (c2 / cause-01\n             :ARG0 (o2 / one)\n             :ARG1 (b / boil-01)))", "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most)\n            :mod (o / on-the-money))\n   :ARG2 (c2 / cause-01\n             :ARG0 (o2 / one)\n             :ARG1 (s / spot)))", "(r / reveal-01\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (n2 / note)))", "(r / reveal-01\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (c / coin)))", "(r / reveal-01\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (a / and\n                         :op1 (n2 / note)\n                         :op2 (c / coin))))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (n2 / note)))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (c / coin)))", "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (a / and\n                         :op1 (n2 / note)\n                         :op2 (c / coin))))"], "smus": ["Thousands of colonies were discovered.", "Students from the University of Surrey discovered thousands of colonies.", "Pf growth", "They will accelerate the growth of Pf bacteria.", "They submerged the coins in the agar to accelerate the growth of the Pf bacteria.", "They submerged the notes in agar to accelerate the growth of the Pf bacteria.", "They submerged coins and notes in agar to accelerate the growth of Pf bacteria.", "One caused boils.", "One caused the spots.", "Most aren't harmful on the mone.", "One caused boils and spots.", "Most aren't harmful on the mone but one caused boils.", "Most aren't harmful on the mone but one caused the spots.", "The MRSA bacteria were revealed on the notes.", "The MRSA bacteria in the coins has been revealed.", "MRSA bacteria have been revealed on notes and coins.", "Previous studies have revealed MRSA bacteria on the notes.", "Previous studies have revealed MRSA bacteria in coins.", "Previous studies have revealed MRSA bacteria on notes and coins."]}, {"instance_id": "realsumm-2", "summary": "<t> Danilo this week agreed to join Real Madrid in the summer for \u00a3 23million . </t> <t> Transfer will take total raised from player sales to \u00a3 440 m since 2004 . </t> <t> James Rodriguez , Pepe and Radamel Falcao among those sold by Porto . </t> <t> CLICK HERE for all the latest Real Madrid news . </t>", "summary_trees": ["# ::snt  Danilo this week agreed to join Real Madrid in the summer for \u00a3 23million . \n(a / agree-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Danilo\"))\n      :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                  :name (n2 / name\n                        :op1 \"Real\"\n                        :op2 \"Madrid\"))\n            :time (d / date-entity\n                  :season (s / summer))\n            :prep-for (m / monetary-quantity\n                  :quant 23000000\n                  :unit (p2 / pound)))\n      :time (w / week\n            :mod (t2 / this)))", "# ::snt  Transfer will take total raised from player sales to \u00a3 440 m since 2004 . \n(t / take-01\n      :ARG0 (t2 / transfer-01)\n      :ARG1 (m / monetary-quantity\n            :ARG1-of (t3 / total-01)\n            :ARG1-of (r / raise-01\n                  :ARG3 (s / sell-01\n                        :ARG1 (p / person\n                              :ARG0-of (p2 / play-01)))))\n      :ARG3 (m2 / monetary-quantity\n            :quant 440000000\n            :unit (p3 / pound))\n      :time (s2 / since\n            :op1 (d / date-entity\n                  :year 2004)))", "# ::snt  James Rodriguez , Pepe and Radamel Falcao among those sold by Porto . \n(ii / include-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"Roduez\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Pepe\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Radamel\"\n                        :op2 \"Falcao\")))\n      :ARG2 (t / that\n            :ARG1-of (s / sell-01\n                  :ARG0 (t2 / team\n                        :name (n4 / name\n                              :op1 \"Porto\")))))", "# ::snt  CLICK HERE for all the latest Real Madrid news . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (n / news\n            :mod (a / all)\n            :topic (t / team\n                  :name (n2 / name\n                        :op1 \"Real\"\n                        :op2 \"Madrid\"))\n            :mod (l / last)))"], "tree": ["(a / agree-01\n   :time (w / week\n            :mod (t2 / this)))", "(j / join-04\n   :time (d / date-entity\n            :season (s / summer)))", "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\")))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\")))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :time (d / date-entity\n            :season (s / summer)))", "(s / sell-01\n   :ARG1 (p / person\n            :ARG0 (p2 / play-01)))", "(t / take-01\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))", "(r / raise-01\n   :ARG3 (s / sell-01\n            :ARG1 (p / person\n                     :ARG0 (p2 / play-01))))", "(t / take-01\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01)\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01))))))", "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01)\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01))))))", "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1 (t3 / total-01)\n            :ARG1 (r / raise-01\n                     :ARG3 (s / sell-01\n                              :ARG1 (p / person\n                                       :ARG0 (p2 / play-01)))))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))", "(s / sell-01\n   :ARG1 (p / person\n            :ARG0 (p2 / play-01)))", "(s / sell-01\n   :ARG0 (t2 / team\n             :name (n4 / name\n                       :op1 \"Porto\")))", "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Pepe\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"James\"\n                      :op2 \"Roduez\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Radamel\"\n                        :op2 \"Falcao\"))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\"))))\n    :ARG2 t)", "(ii / include-91\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"James\"\n                              :op2 \"Roduez\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Pepe\"))\n             :op3 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Radamel\"\n                                :op2 \"Falcao\")))\n    :ARG2 (t / that\n             :ARG1 (s / sell-01\n                      :ARG0 (t2 / team\n                                :name (n4 / name\n                                          :op1 \"Porto\")))))", "(c / CLICK-01\n   :mode imperative\n   :location (h / here)\n   :purpose (n / news\n               :mod (a / all)\n               :topic (t / team\n                         :name (n2 / name\n                                   :op1 \"Real\"\n                                   :op2 \"Madrid\"))\n               :mod (l / last)))", "(c / CLICK-01\n   :mode imperative\n   :ARG0 (y / you)\n   :location (h / here)\n   :purpose (n / news\n               :mod (a / all)\n               :topic (t / team\n                         :name (n2 / name\n                                   :op1 \"Real\"\n                                   :op2 \"Madrid\"))\n               :mod (l / last)))"], "smus": ["This week agreed.", "Join in summer.", "Danilo agreed.", "Danilo will join Real Madrid.", "Danilo will join Real Madrid in the summer.", "The player is sold.", "Take since 2004.", "The sale of the player was raised.", "Take the total raised from the sale of the player.", "The transfer would take the total raised from the sale of the player.", "The transfer would take the total raised from the sale of the player since 2004.", "The player is sold.", "Porto have sold.", "Pepe was one of those Porto have sold.", "James Rodriguez was one of those Porto have sold.", "Radamel Falcao was one of those sold by Porto.", "That Porto has sold is James Rodriguez, Pepe and Radamel Falcao.", "CLICK HERE for all the latest Real Madrid news.", "For all the latest Real Madrid news, CLICK HERE."]}, {"instance_id": "realsumm-3", "summary": "<t> Dominatrix claims she shared a ' hot , deep kiss ' with Prince Harry in Vegas . </t> <t> Carrie Reichert said she felt overdressed after seeing his ' cute naked a * * ' The 43-year - old made the claim in an excerpt from her upcoming book . </t> <t> Kensington Palace has previously denied she was invited to the hotel suite . </t>", "summary_trees": ["# ::snt  Dominatrix claims she shared a ' hot , deep kiss ' with Prince Harry in Vegas . \n(c / claim-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dominatrix\"))\n      :ARG1 (s / share-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Prince\"\n                              :op2 \"Harry\"))\n                  :ARG1-of (h / hot-05)\n                  :ARG1-of (d / deep-03))\n            :ARG2 p2\n            :location (c2 / city\n                  :name (n3 / name\n                        :op1 \"Vegas\"))))", "# ::snt  Carrie Reichert said she felt overdressed after seeing his ' cute naked a * * ' The 43-year - old made the claim in an excerpt from her upcoming book . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Carrie\"\n                  :op2 \"Reichert\")\n            :age (t / temporal-quantity\n                  :quant 43\n                  :unit (y / year)))\n      :ARG1 (f / feel-01\n            :ARG0 p\n            :ARG1 (o / overdress-01\n                  :ARG1 p)\n            :time (a / after\n                  :op1 (s2 / see-01\n                        :ARG0 p\n                        :ARG1 (n2 / naked\n                              :domain (h / he)\n                              :mod (c / cute)))))\n      :ARG1-of (c2 / claim-01\n            :ARG0 p\n            :medium (e / excerpt-01\n                  :ARG2 (b / book\n                        :poss p\n                        :ARG1-of (c3 / come-up-13)))))", "# ::snt  Kensington Palace has previously denied she was invited to the hotel suite . \n(d / deny-01\n      :ARG0 (g / government-organization\n            :name (n / name\n                  :op1 \"Kensington\"\n                  :op2 \"Palace\"))\n      :ARG1 (ii / invite-01\n            :ARG1 (s / she)\n            :ARG2 (s2 / suite\n                  :location (h / hotel)))\n      :time (p / previous))"], "tree": ["(k / kiss-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Prince\"\n                       :op2 \"Harry\"))\n   :ARG1 (h / hot-05)\n   :ARG1 (d / deep-03))", "(s / share-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (k / kiss-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Prince\"\n                                :op2 \"Harry\"))\n            :ARG1 (h / hot-05)\n            :ARG1 (d / deep-03))\n   :ARG2 p2\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Vegas\")))", "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                     :ARG0 p\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Prince\"\n                                         :op2 \"Harry\"))\n                     :ARG1 (h / hot-05)\n                     :ARG1 (d / deep-03))\n            :ARG2 p2\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"Vegas\"))))", "(f / feel-01\n   :time (a / after\n            :op1 (s2 / see-01)))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n    :ARG1 (n2 / naked\n              :domain (h / he)\n              :mod (c / cute)))", "(f / feel-01\n   :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n   :ARG1 (o / overdress-01\n            :ARG1 p)\n   :time (a / after\n            :op1 (s2 / see-01\n                     :ARG0 p\n                     :ARG1 (n2 / naked\n                               :domain (h / he)\n                               :mod (c / cute)))))", "(d / deny-01\n   :ARG1 (ii / invite-01\n             :ARG1 (s / she)\n             :ARG2 (s2 / suite\n                       :location (h / hotel))))", "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (s / she)\n             :ARG2 (s2 / suite\n                       :location (h / hotel))))", "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (s / she)\n             :ARG2 (s2 / suite\n                       :location (h / hotel)))\n   :time (p / previous))"], "smus": ["Dominatrix gave Prince Harry a hot, deep kiss.", "Dominatrix shared a hot, deep kiss with Prince Harry in Vegas.", "Dominatrix claims she shared a hot, deep kiss with Prince Harry in Vegas.", "Feeled after seeing.", "Carrie Reichert is seeing how cute he is naked.", "After seeing him as cutely naked, Carol Reichert felt overdressed.", "She was denied invitation to a hotel suite.", "The Kensington Palace has denied that she was invited to a hotel suite.", "The Kensington Palace had previously denied that she had been invited to a hotel suite."]}, {"instance_id": "realsumm-4", "summary": "<t> Eva Chapin , 34 , from West Linn , Oregon , has been accused of harassment . </t> <t> Referred to her neighbors as ' n * * * * * ' but insists she is not racist . </t> <t> One note said : ' There were no [ expletive ] in W.L until you came ' . </t> <t> Victim has said her family may be forced to move as they do n't feel safe . </t>", "summary_trees": ["# ::snt  Eva Chapin , 34 , from West Linn , Oregon , has been accused of harassment . \n(a / accuse-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Eva\"\n                  :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                  :quant 34\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"West\"\n                        :op2 \"Linn\")\n                  :location (s / state\n                        :name (n3 / name\n                              :op1 \"Oregon\"))))\n      :ARG2 (h / harass-01\n            :ARG0 p))", "# ::snt  Referred to her neighbors as ' n * * * * * ' but insists she is not racist . \n(c / contrast-01\n      :ARG1 (r / refer-01\n            :ARG1 (p / person\n                  :ARG1-of (n / neighbor-01\n                        :ARG2 (s / she)))\n            :ARG2 (n2 / nigger))\n      :ARG2 (ii / insist-01\n            :ARG0 s\n            :ARG1 (r2 / racist\n                  :polarity -\n                  :domain s)))", "# ::snt  One note said : ' There were no [ expletive ] in W.L until you came ' . \n(s / say-01\n      :ARG0 (n / note\n            :quant 1)\n      :ARG1 (b / be-located-at-91\n            :polarity -\n            :ARG1 (e / expletive)\n            :ARG2 (c / city\n                  :name (n2 / name\n                        :op1 \"W.L\"))\n            :time (u / until\n                  :op1 (c2 / come-01\n                        :ARG1 (y / you)))))", "# ::snt  Victim has said her family may be forced to move as they do n't feel safe . \n(s / say-01\n      :ARG0 (v / victim)\n      :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                  :ARG1 (f2 / family\n                        :poss v)\n                  :ARG2 (m / move-01\n                        :ARG1 f2)\n                  :ARG1-of (c / cause-01\n                        :ARG0 (f3 / feel-01\n                              :polarity -\n                              :ARG0 f2\n                              :ARG1 (s2 / safe-01\n                                    :ARG1 f2))))))"], "tree": ["(a / accuse-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                    :quant 34\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\")\n                       :location (s / state\n                                    :name (n3 / name\n                                              :op1 \"Oregon\"))))\n   :ARG2 (h / harass-01\n            :ARG0 p))", "(ii / insist-01\n    :ARG0 (s / she)\n    :ARG1 (r2 / racist\n              :polarity -\n              :domain s))", "(r / refer-01\n   :ARG1 (p / person\n            :ARG1 (n / neighbor-01\n                     :ARG2 (s / she)))\n   :ARG2 (n2 / nigger))", "(c / contrast-01\n   :ARG1 (r / refer-01\n            :ARG1 (p / person\n                     :ARG1 (n / neighbor-01\n                              :ARG2 (s / she)))\n            :ARG2 (n2 / nigger))\n   :ARG2 (ii / insist-01\n             :ARG0 s\n             :ARG1 (r2 / racist\n                       :polarity -\n                       :domain s)))", "(b / be-located-at-91\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"W.L\")))", "(b / be-located-at-91\n   :polarity -\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"W.L\"))\n   :time (u / until\n            :op1 (c2 / come-01\n                     :ARG1 (y / you))))", "(s / say-01\n   :ARG0 (n / note\n            :quant 1)\n   :ARG1 (b / be-located-at-91\n            :polarity -\n            :ARG1 (e / expletive)\n            :ARG2 (c / city\n                     :name (n2 / name\n                               :op1 \"W.L\"))\n            :time (u / until\n                     :op1 (c2 / come-01\n                              :ARG1 (y / you)))))", "(f3 / feel-01\n    :polarity -\n    :ARG0 (f2 / family)\n    :ARG1 (s2 / safe-01\n              :ARG1 f2))", "(c / cause-01\n   :ARG0 (f3 / feel-01\n             :polarity -\n             :ARG0 (f2 / family)\n             :ARG1 (s2 / safe-01\n                       :ARG1 f2)))", "(p / possible-01\n   :ARG1 (f / force-01\n            :ARG1 (f2 / family\n                      :poss (v / victim))\n            :ARG2 (m / move-01\n                     :ARG1 f2)\n            :ARG1 (c / cause-01\n                     :ARG0 (f3 / feel-01\n                               :polarity -\n                               :ARG0 f2\n                               :ARG1 (s2 / safe-01\n                                         :ARG1 f2)))))", "(s / say-01\n   :ARG0 (v / victim)\n   :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                     :ARG1 (f2 / family\n                               :poss v)\n                     :ARG2 (m / move-01\n                              :ARG1 f2)\n                     :ARG1 (c / cause-01\n                              :ARG0 (f3 / feel-01\n                                        :polarity -\n                                        :ARG0 f2\n                                        :ARG1 (s2 / safe-01\n                                                  :ARG1 f2))))))"], "smus": ["Eva Chapin, 34, of West Linn, Oregon, was accused of harassment.", "She insists she is not racist.", "Her neighbors were referred to as nigger.", "Her neighbors are referred to as niggers but she insists she is not racist.", "expletive in W.L", "There is no expletive in W.L until you come.", "One note said: \"There is no expletive in W.L until you come.\"", "The family doesn't feel safe.", "Because the family doesn't feel safe.", "Victim's family may be forced to move because they don't feel safe.", "Victims have said their families may be forced to move because they don't feel safe."]}, {"instance_id": "realsumm-5", "summary": "<t> Justin Rose finished joint runner - up at the Masters 2015 on 14-under - par . </t> <t> Rose 's final total has only been bettered six times at the the Masters . </t> <t> Rose hopes to build on his display and take some big titles across the year . </t> <t> CLICK HERE for all the latest news and reaction following the Masters . </t>", "summary_trees": ["# ::snt  Justin Rose finished joint runner - up at the Masters 2015 on 14-under - par . \n(f / finish-07\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Justin\"\n                  :op2 \"Rose\"))\n      :ARG2 (r / runner-up\n            :mod (j / joint))\n      :ARG3 (e / event\n            :name (n2 / name\n                  :op1 \"Masters\")\n            :time (d / date-entity\n                  :year 2015))\n      :manner (s / score-entity\n            :op1 14\n            :op2 (p2 / par)))", "# ::snt  Rose 's final total has only been bettered six times at the the Masters . \n(b / best-01\n      :frequency 6\n      :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Rose\")))\n      :mod (o / only)\n      :time (g / game\n            :name (n2 / name\n                  :op1 \"Masters\")))", "# ::snt  Rose hopes to build on his display and take some big titles across the year . \n(h / hope-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rose\"))\n      :ARG1 (a / and\n            :op1 (b / build-01\n                  :ARG0 p\n                  :ARG1 (d / display-01\n                        :ARG0 p))\n            :op2 (t / take-01\n                  :ARG0 p\n                  :ARG1 (t2 / title\n                        :mod (b2 / big)\n                        :quant (s / some))\n                  :time (a2 / across\n                        :op1 (y / year)))))", "# ::snt  CLICK HERE for all the latest news and reaction following the Masters . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (a / and\n            :op1 (n / news\n                  :mod (l / last))\n            :op2 (r / react-01)\n            :mod (a2 / all)\n            :ARG1-of (f / follow-01\n                  :ARG2 (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\")))))"], "tree": ["(f / finish-07\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))", "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")\n            :time (d / date-entity\n                     :year 2015))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))", "(b / best-01\n   :frequency 6\n   :mod (o / only)\n   :time (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))", "(b / best-01\n   :frequency 6\n   :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Rose\")))\n   :mod (o / only)\n   :time (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))", "(b / build-01\n   :ARG1 (d / display-01\n            :ARG0 (p / person :name (n / name :op1 \"Rose\"))))", "(b / build-01\n   :ARG0 (p / person :name (n / name :op1 \"Rose\"))\n   :ARG1 (d / display-01\n            :ARG0 p))", "(t / take-01\n   :ARG1 (t2 / title\n             :mod (b2 / big)\n             :quant (s / some)))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (b / build-01\n            :ARG0 p\n            :ARG1 (d / display-01\n                     :ARG0 p)))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (t2 / title\n                      :mod (b2 / big)\n                      :quant (s / some))\n            :time (a2 / across\n                      :op1 (y / year))))", "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (a / and\n            :op1 (b / build-01\n                    :ARG0 p\n                    :ARG1 (d / display-01\n                             :ARG0 p))\n            :op2 (t / take-01\n                    :ARG0 p\n                    :ARG1 (t2 / title\n                              :mod (b2 / big)\n                              :quant (s / some))\n                    :time (a2 / across\n                              :op1 (y / year)))))", "(f / follow-01\n   :ARG2 (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))", "(c / CLICK-01\n   :mode imperative\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)))", "(c / CLICK-01\n   :mode imperative\n   :ARG0 (y / you)\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)))", "(c / CLICK-01\n   :mode imperative\n   :ARG0 (y / you)\n   :location (h / here)\n   :purpose (r / react-01\n               :mod (a2 / all)\n               :ARG1 (f / follow-01\n                        :ARG2 (g / game\n                                 :name (n2 / name\n                                           :op1 \"Masters\")))))", "(c / CLICK-01\n   :mode imperative\n   :ARG0 (y / you)\n   :location (h / here)\n   :purpose (a / and\n               :op1 (n / news\n                       :mod (l / last))\n               :op2 (r / react-01)\n               :mod (a2 / all)\n               :ARG1 (f / follow-01\n                        :ARG2 (g / game\n                                 :name (n2 / name\n                                           :op1 \"Masters\")))))"], "smus": ["finished 14 under par.", "Justin Rose finished joint runner up at the Masters in 2015 with a par of 14.", "Only six best times in the Masters.", "Rose's final total was only 6 best times in the Masters.", "Build Rose's display.", "Rose will build a display.", "Take some big titles.", "Rose hopes to build a display.", "Rose hopes to take some big titles across the year.", "Rose hopes to build a display and take some big titles across the year.", "Following the Masters.", "CLICK HERE for the latest news.", "For the latest news, CLICK HERE.", "CLICK HERE for all the reaction to following the Masters.", "CLICK HERE for all the latest news and reaction following the Masters."]}, {"instance_id": "realsumm-6", "summary": "<t> Girl was playing with friend when Zbigniew Huminski forced her into car . </t> <t> Chloe 's naked body was found in nearby woods an hour - and - a - half later . </t> <t> Prosecutors say there is evidence of ' strangulation and sexual violence ' Polish immigrant , who was heading to England , has admitted to killing . </t>", "summary_trees": ["# ::snt  Girl was playing with friend when Zbigniew Huminski forced her into car . \n(p / play-01\n      :ARG0 (g / girl)\n      :ARG3 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 g\n                  :ARG2 (f / friend)))\n      :time (f2 / force-01\n            :ARG0 (p3 / person\n                  :name (n / name\n                        :op1 \"Zbigniew\"\n                        :op2 \"Huminski\"))\n            :ARG1 g\n            :ARG2 (c / car)))", "# ::snt  Chloe 's naked body was found in nearby woods an hour - and - a - half later . \n(f / find-01\n      :ARG1 (b / body\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Chloe\"))\n            :ARG1-of (n2 / naked-02))\n      :location (w / woods\n            :location (n3 / nearby))\n      :time (a / after\n            :quant (t / temporal-quantity\n                  :quant 1.5\n                  :unit (h / hour))))", "# ::snt  Prosecutors say there is evidence of ' strangulation and sexual violence ' Polish immigrant , who was heading to England , has admitted to killing . \n(m / multi-sentence\n      :snt1 (s / say-01\n            :ARG0 (p / person\n                  :ARG0-of (p2 / prosecute-01))\n            :ARG1 (e / evidence-01\n                  :ARG1 (a / and\n                        :op1 (s2 / strangulate-01)\n                        :op2 (v / violence\n                              :mod (s3 / sex)))))\n      :snt2 (a2 / admit-01\n            :ARG0 (p3 / person\n                  :ARG0-of (ii / immigrate-01\n                        :ARG2 (c / country\n                              :name (n / name\n                                    :op1 \"Poland\")))\n                  :ARG0-of (h / head-02\n                        :ARG1 (c2 / country\n                              :name (n2 / name\n                                    :op1 \"England\"))))\n            :ARG1 (k / kill-01\n                  :ARG0 p3)))"], "tree": ["(h / have-rel-role-91\n   :ARG1 (g / girl)\n   :ARG2 (f / friend))", "(f2 / force-01\n    :ARG1 (g / girl)\n    :ARG2 (c / car))", "(f2 / force-01\n    :ARG0 (p3 / person\n              :name (n / name\n                       :op1 \"Zbigniew\"\n                       :op2 \"Huminski\"))\n    :ARG1 (g / girl)\n    :ARG2 (c / car))", "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 g\n                      :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Zbigniew\"\n                                :op2 \"Huminski\"))\n             :ARG1 g\n             :ARG2 (c / car)))", "(f / find-01\n   :location (w / woods\n                :location (n3 / nearby)))", "(f / find-01\n   :location (w / woods\n                :location (n3 / nearby))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5\n                      :unit (h / hour))))", "(e / evidence-01\n   :ARG1 (v / violence\n            :mod (s3 / sex)))", "(h / head-02\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"England\")))", "(e / evidence-01\n   :ARG1 (a / and\n            :op1 (s2 / strangulate-01)\n            :op2 (v / violence\n                    :mod (s3 / sex))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (s2 / strangulate-01)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (v / violence\n                     :mod (s3 / sex))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (a / and\n                     :op1 (s2 / strangulate-01)\n                     :op2 (v / violence\n                             :mod (s3 / sex)))))"], "smus": ["The Girl is a friend.", "The girl was forced into a car.", "Zbigniew Huminski forced the girl into a car.", "When Zbigniew Huminski forced the girl into a car, the girl was playing with her friend.", "Found in nearby woods.", "Found in nearby woods an hour and a half later.", "There is evidence of sexual violence.", "Heading for England.", "There is evidence of strangulation and sexual violence.", "Prosecutors say there is evidence of strangulation.", "Prosecutors say there is evidence of sexual violence.", "Prosecutors say there is evidence of strangulation and sexual violence."]}, {"instance_id": "realsumm-7", "summary": "<t> Pair were left homeless after storms and met in Connecticut trailer park . </t> <t> Won lottery last year but only cashed prize in after Easter to mark new start . ' </t> <t> Because of Sandy I met the love of my life ' , said thrilled lottery winner . </t>", "summary_trees": ["# ::snt  Pair were left homeless after storms and met in Connecticut trailer park . \n(a / and\n      :op1 (l / leave-13\n            :ARG1 (p / pair)\n            :ARG2 (h / homeless\n                  :domain p)\n            :time (a2 / after\n                  :op1 (s / storm)))\n      :op2 (m / meet-03\n            :ARG0 p\n            :location (p2 / park\n                  :mod (t / trailer)\n                  :location (s2 / state\n                        :name (n / name\n                              :op1 \"Connecticut\")))))", "# ::snt  Won lottery last year but only cashed prize in after Easter to mark new start . ' \n(c / contrast-01\n      :ARG1 (w / win-01\n            :ARG2 (l / lottery)\n            :time (y / year\n                  :mod (l2 / last)))\n      :ARG2 (c2 / cash-in-03\n            :ARG1 (p / prize)\n            :time (a / after\n                  :op1 (f / festival\n                        :name (n / name\n                              :op1 \"Easter\")))\n            :purpose (m / mark-01\n                  :ARG1 (s / start-01\n                        :ARG1-of (n2 / new-01)))\n            :mod (o / only)))", "# ::snt  Because of Sandy I met the love of my life ' , said thrilled lottery winner . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (w / win-01\n                  :ARG1 (l / lottery))\n            :ARG1-of (t / thrill-01))\n      :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Sandy\"))\n            :ARG1 (m / meet-02\n                  :ARG0 p\n                  :ARG1 (p3 / person\n                        :ARG0-of (l2 / love-01\n                              :ARG1 p)\n                        :ARG0-of (l3 / live-01\n                              :ARG1 p)))))"], "tree": ["(l / leave-13\n   :time (a2 / after\n             :op1 (s / storm)))", "(l / leave-13\n   :ARG1 (p / pair)\n   :ARG2 (h / homeless\n            :domain p)\n   :time (a2 / after\n             :op1 (s / storm)))", "(m / meet-03\n   :location (p2 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(m / meet-03\n   :ARG0 (p / pair)\n   :location (p2 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))", "(m / mark-01\n   :ARG1 (s / start-01\n            :ARG1 (n2 / new-01)))", "(w / win-01\n   :time (y / year\n            :mod (l2 / last)))", "(w / win-01\n   :ARG2 (l / lottery)\n   :time (y / year\n            :mod (l2 / last)))", "(c2 / cash-in-03\n    :time (a / after\n             :op1 (f / festival\n                     :name (n / name\n                              :op1 \"Easter\")))\n    :purpose (m / mark-01)\n    :mod (o / only))", "(c2 / cash-in-03\n    :ARG1 (p / prize)\n    :time (a / after\n             :op1 (f / festival\n                     :name (n / name\n                              :op1 \"Easter\")))\n    :purpose (m / mark-01\n                :ARG1 (s / start-01\n                         :ARG1 (n2 / new-01)))\n    :mod (o / only))", "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery)\n            :time (y / year\n                     :mod (l2 / last)))\n   :ARG2 (c2 / cash-in-03\n             :ARG1 (p / prize)\n             :time (a / after\n                      :op1 (f / festival\n                              :name (n / name\n                                       :op1 \"Easter\")))\n             :purpose (m / mark-01\n                         :ARG1 (s / start-01\n                                  :ARG1 (n2 / new-01)))\n             :mod (o / only)))", "(m / meet-02\n   :ARG0 (p / person)\n   :ARG1 (p3 / person\n             :ARG0 (l2 / love-01\n                       :ARG1 p)\n             :ARG0 (l3 / live-01\n                       :ARG1 p)))", "(c / cause-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Sandy\"))\n   :ARG1 (m / meet-02\n            :ARG0 (p / person)\n            :ARG1 (p3 / person\n                      :ARG0 (l2 / love-01\n                                :ARG1 p)\n                      :ARG0 (l3 / live-01\n                                :ARG1 p))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (w / win-01\n                     :ARG1 (l / lottery))\n            :ARG1 (t / thrill-01))\n   :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Sandy\"))\n            :ARG1 (m / meet-02\n                     :ARG0 p\n                     :ARG1 (p3 / person\n                               :ARG0 (l2 / love-01\n                                         :ARG1 p)\n                               :ARG0 (l3 / live-01\n                                         :ARG1 p)))))"], "smus": ["Leaved after storms", "The pair were left homeless after the storms.", "The meeting took place at a trailer park in Connecticut.", "The pair met at a trailer park in Connecticut.", "mark the start of a new", "The win last year.", "Lottery win last year", "Only after Easter is cash in to mark.", "The prize will only be cashed in after Easter to mark the start of a new year.", "The lottery won last year, but the prize was only cashed in after Easter to mark the start of a new year.", "People met people whose love is their life.", "Because Sandy, people met the love of their lives.", "The thrill of winning the lottery was that Sandy met the love of his life,"]}, {"instance_id": "realsumm-8", "summary": "<t> Cesc Fabregas was caught by trailing arm of Stoke City ace Charlie Adam . </t> <t> Former Barcelona man picked up the injury during Chelsea 's home win . </t> <t> Midfielder Adam scored wonder goal during the game but it was n't enough . </t> <t> Fabregas took to Instagram to show he was all smiles despite the bruises . </t> <t> CLICK HERE for all the latest Chelsea news . </t>", "summary_trees": ["# ::snt  Cesc Fabregas was caught by trailing arm of Stoke City ace Charlie Adam . \n(c / catch-03\n      :ARG0 (a / arm\n            :part-of (p / person\n                  :name (n / name\n                        :op1 \"Charlie\"\n                        :op2 \"Adam\")\n                  :mod (a2 / ace)\n                  :part-of (t / team\n                        :name (n2 / name\n                              :op1 \"Stoke\"\n                              :op2 \"City\")))\n            :ARG0-of (t2 / trail-01))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"Cesc\"\n                  :op2 \"Fabregas\")))", "# ::snt  Former Barcelona man picked up the injury during Chelsea 's home win . \n(p / pick-up-11\n      :ARG0 (m / man\n            :time (f / former)\n            :part-of (t / team\n                  :name (n / name\n                        :op1 \"Barcelona\")))\n      :ARG1 (ii / injury)\n      :time (w / win-01\n            :ARG0 (t2 / team\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))\n            :location (h / home)))", "# ::snt  Midfielder Adam scored wonder goal during the game but it was n't enough . \n(h / have-concession-91\n      :ARG1 (s / score-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Adam\")\n                  :ARG0-of (h2 / have-org-role-91\n                        :ARG2 (m / midfielder)))\n            :ARG1 (g / goal\n                  :mod (w / wonder))\n            :time (g2 / game))\n      :ARG2 (h3 / have-quant-91\n            :ARG1 g\n            :ARG3 (e / enough\n                  :polarity -)))", "# ::snt  Fabregas took to Instagram to show he was all smiles despite the bruises . \n(t / take-35\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Fabregas\"))\n      :ARG2 (p2 / publication\n            :name (n2 / name\n                  :op1 \"Instagram\"))\n      :purpose (s / show-01\n            :ARG0 p\n            :ARG1 (s2 / smile-01\n                  :ARG0 p\n                  :mod (a / all)\n                  :concession (b / bruise-01\n                        :ARG1 p))))", "# ::snt  CLICK HERE for all the latest Chelsea news . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (n / news\n            :mod (l / last)\n            :mod (a / all)\n            :topic (p / person\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))))"], "tree": ["(c / catch-03\n   :ARG0 (a / arm\n            :part-of (p / person\n                        :name (n / name\n                                 :op1 \"Charlie\"\n                                 :op2 \"Adam\")\n                        :mod (a2 / ace)\n                        :part-of (t / team\n                                    :name (n2 / name\n                                              :op1 \"Stoke\"\n                                              :op2 \"City\")))\n            :ARG0-of (t2 / trail-01))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))", "(p / pick-up-11\n   :time (w / win-01\n            :location (h / home)))", "(p / pick-up-11\n   :ARG0 (m / man\n            :time (f / former)\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Barcelona\")))\n   :ARG1 (ii / injury)\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Chelsea\"))\n            :location (h / home)))", "(h3 / have-quant-91\n    :ARG1 (g / goal)\n    :ARG3 (e / enough\n             :polarity -))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Adam\")\n            :ARG0 (h2 / have-org-role-91\n                      :ARG2 (m / midfielder)))\n   :ARG1 (g / goal\n            :mod (w / wonder)))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Adam\")\n            :ARG0 (h2 / have-org-role-91\n                      :ARG2 (m / midfielder)))\n   :ARG1 (g / goal\n            :mod (w / wonder))\n   :time (g2 / game))", "(h / have-concession-91\n   :ARG1 (s / score-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Adam\")\n                     :ARG0 (h2 / have-org-role-91\n                               :ARG2 (m / midfielder)))\n            :ARG1 (g / goal\n                     :mod (w / wonder))\n            :time (g2 / game)))", "(h / have-concession-91\n   :ARG1 (s / score-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Adam\")\n                     :ARG0 (h2 / have-org-role-91\n                               :ARG2 (m / midfielder)))\n            :ARG1 (g / goal\n                     :mod (w / wonder))\n            :time (g2 / game))\n   :ARG2 (h3 / have-quant-91\n             :ARG1 g\n             :ARG3 (e / enough\n                      :polarity -)))", "(s2 / smile-01\n    :mod (a / all)\n    :concession (b / bruise-01))", "(s2 / smile-01\n    :ARG0 (p / person :name (n / name :op1 \"Fabregas\"))\n    :mod (a / all)\n    :concession (b / bruise-01\n                   :ARG1 p))", "(s / show-01\n   :ARG0 (p / person :name (n / name :op1 \"Fabregas\"))\n   :ARG1 (s2 / smile-01\n             :ARG0 p\n             :mod (a / all)\n             :concession (b / bruise-01\n                            :ARG1 p)))", "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\"))\n   :purpose (s / show-01\n               :ARG0 p\n               :ARG1 (s2 / smile-01\n                         :ARG0 p\n                         :mod (a / all)\n                         :concession (b / bruise-01\n                                        :ARG1 p))))", "(c / CLICK-01\n   :mode imperative\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :topic (p / person\n                         :name (n2 / name\n                                   :op1 \"Chelsea\"))))", "(c / CLICK-01\n   :mode imperative\n   :ARG0 (y / you)\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :topic (p / person\n                         :name (n2 / name\n                                   :op1 \"Chelsea\"))))"], "smus": ["The trailing arm of Stoke City ace Charlie Adam caught Cesc Fabregas.", "Picked up with a win at home.", "The former Barcelona man picked up the injury in Chelsea's home victory.", "The goal is not enough.", "Adam, the midfielder, scored a wonder goal.", "Midfielder Adam scored a wonder goal in the game.", "But midfielder Adam scored a wonder goal in the game.", "The midfielder Adam scored a wonder goal in the game but that wasn't enough.", "All smiles, bruises aside.", "Fabregas had all smiles despite bruises.", "Fabregas did show all his smiles despite his bruises.", "Fabregas took to Instagram to show all his smiles despite his bruises.", "CLICK HERE for all the latest Chelsea news.", "CLICK HERE for all the latest Chelsea news."]}, {"instance_id": "realsumm-9", "summary": "<t> The life of 16-year - old Maren Sanchez stabbed to death a year ago on the day of prom was celebrated on Saturday by hundreds of people . ' </t> <t> I do n't think there 's anything sad about this . </t> <t> It 's such a celebration , ' said Darby Hudd , a 17-year - old friend of the slain teen . </t> <t> A classmate , Christopher Plaskon , has been charged with Sanchez 's murder . </t>", "summary_trees": ["# ::snt  The life of 16-year - old Maren Sanchez stabbed to death a year ago on the day of prom was celebrated on Saturday by hundreds of people . ' \n(m / multi-sentence\n      :snt1 (c / celebrate-01\n            :ARG0 (p / person\n                  :quant (m2 / multiple\n                        :op1 100))\n            :ARG1 (l / life\n                  :poss (p2 / person\n                        :name (n / name\n                              :op1 \"Maren\"\n                              :op2 \"Sanchez\")\n                        :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                        :ARG1-of (s / stab-01\n                              :ARG4 (d / die-01\n                                    :ARG1 p2)\n                              :time (b / before\n                                    :op1 (n2 / now)\n                                    :quant (t2 / temporal-quantity\n                                          :quant 1\n                                          :unit (y2 / year)))\n                              :time (d2 / day\n                                    :time-of (p3 / prom)))))\n            :time (d3 / date-entity\n                  :weekday (s2 / saturday))))", "# ::snt  I do n't think there 's anything sad about this . \n(t / think-01\n      :polarity -\n      :ARG0 (ii / i)\n      :ARG1 (s / sad-02\n            :ARG0 (a / anything)\n            :topic (t2 / this)))", "# ::snt  It 's such a celebration , ' said Darby Hudd , a 17-year - old friend of the slain teen . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Darby\"\n                  :op2 \"Hudd\")\n            :age (t / temporal-quantity\n                  :quant 17\n                  :unit (y / year))\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (t2 / teen\n                        :ARG1-of (s2 / slay-01))\n                  :ARG2 (f / friend)))\n      :ARG1 (c / celebrate-02\n            :domain (ii / it)\n            :degree (s3 / such)))", "# ::snt  A classmate , Christopher Plaskon , has been charged with Sanchez 's murder . \n(m / multi-sentence\n      :snt1 (c / charge-05\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Christopher\"\n                        :op2 \"Plaskon\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG2 (c2 / classmate)))\n            :ARG2 (m2 / murder-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Sanchez\")))))"], "tree": ["(c / celebrate-01\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100)))", "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(s / stab-01\n   :ARG4 (d / die-01\n            :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 1\n                       :unit (y2 / year)))\n   :time (d2 / day\n             :time (p3 / prom)))", "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)\n                               :time (b / before\n                                        :op1 (n2 / now)\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y2 / year)))\n                               :time (d2 / day\n                                         :time (p3 / prom))))))", "(c / celebrate-01\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1 (s / stab-01\n                               :ARG4 (d / die-01\n                                        :ARG1 p2)\n                               :time (b / before\n                                        :op1 (n2 / now)\n                                        :quant (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y2 / year)))\n                               :time (d2 / day\n                                         :time (p3 / prom)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))", "(c / celebrate-02\n   :domain (ii / it)\n   :degree (s3 / such))", "(h / have-rel-role-91\n   :ARG1 (t2 / teen\n             :ARG1 (s2 / slay-01))\n   :ARG2 (f / friend))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Darby\"\n                     :op2 \"Hudd\")\n            :age (t / temporal-quantity\n                    :quant 17\n                    :unit (y / year))\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (t2 / teen\n                               :ARG1 (s2 / slay-01))\n                     :ARG2 (f / friend)))\n   :ARG1 (c / celebrate-02\n            :domain (ii / it)\n            :degree (s3 / such)))", "(m2 / murder-01\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Sanchez\")))", "(m2 / murder-01\n    :ARG0 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Plaskon\")))\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Sanchez\")))", "(c / charge-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Plaskon\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (c2 / classmate))))", "(c / charge-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Plaskon\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (c2 / classmate)))\n   :ARG2 (m2 / murder-01\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sanchez\"))))"], "smus": ["Celebrated Saturday.", "Hundreds of people celebrated.", "Hundreds celebrated Saturday.", "Maren Sanchez's death was stabbed a year ago on a prom day.", "Maren Sanchez, 16, was celebrated for her life on prom day when she was stabbed to death a year ago.", "Maren Sanchez, 16, was celebrated Saturday for her life, stabbed to death on prom day a year ago.", "It was such a celebration.", "The teen was a friend of the slain.", "\"It was such a celebration,\" said Darby Husd, a 17-year-old friend of the teen killed.", "Sanchez's murder", "Christopher Plaskon murdered Sanchez.", "Christopher Plaskon is charged with being a classmate.", "Christopher Plaskon, a classmate, has been charged with murdering Sanchez."]}, {"instance_id": "realsumm-10", "summary": "<t> Audrey Alexander wanted her neighbours to chop down their huge hedge . </t> <t> She claims the 40 ft leylandii was blocking sunlight from reaching her home . </t> <t> Feud started in 1980 when it blocked light from reaching a vegetable patch . </t> <t> Council finally rules that the hedge can stay - but must be cut back to 20 ft . </t>", "summary_trees": ["# ::snt  Audrey Alexander wanted her neighbours to chop down their huge hedge . \n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Audrey\"\n                  :op2 \"Alexander\"))\n      :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (n2 / neighbor)))\n            :ARG1 (h2 / hedge\n                  :mod (h3 / huge)\n                  :poss p2)))", "# ::snt  She claims the 40 ft leylandii was blocking sunlight from reaching her home . \n(c / claim-01\n      :ARG0 (s / she)\n      :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                  :quant (d / distance-quantity\n                        :quant 40\n                        :unit (f / foot)))\n            :ARG1 (s2 / sunlight)\n            :ARG2 (r / reach-01\n                  :ARG0 s2\n                  :ARG1 (h / home\n                        :poss s))))", "# ::snt  Feud started in 1980 when it blocked light from reaching a vegetable patch . \n(s / start-01\n      :ARG1 (f / feud-01)\n      :time (d / date-entity\n            :year 1980\n            :time-of (b / block-01\n                  :ARG0 f\n                  :ARG1 (r / reach-01\n                        :ARG0 (l / light)\n                        :ARG1 (p / patch\n                              :mod (v / vegetable))))))", "# ::snt  Council finally rules that the hedge can stay - but must be cut back to 20 ft . \n(r / rule-01\n      :ARG0 (c / council)\n      :ARG1 (c2 / contrast-01\n            :ARG1 (p / possible-01\n                  :ARG1 (s / stay-01\n                        :ARG1 (h / hedge)))\n            :ARG2 (o / obligate-01\n                  :ARG2 (c3 / cut-back-05\n                        :ARG1 h\n                        :ARG2 (d / distance-quantity\n                              :quant 20\n                              :unit (f / foot)))))\n      :time (f2 / final))"], "tree": ["(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                      :ARG0 (h / have-rel-role-91\n                               :ARG1 p\n                               :ARG2 (n2 / neighbor)))\n            :ARG1 (h2 / hedge\n                      :mod (h3 / huge)\n                      :poss p2)))", "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :quant 40\n                      :unit (f / foot)))\n   :ARG1 (s2 / sunlight))", "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :quant 40\n                      :unit (f / foot)))\n   :ARG1 (s2 / sunlight)\n   :ARG2 (r / reach-01\n            :ARG0 s2\n            :ARG1 (h / home\n                     :poss (s / she))))", "(c / claim-01\n   :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                     :quant (d / distance-quantity\n                               :quant 40\n                               :unit (f / foot)))\n            :ARG1 (s2 / sunlight)\n            :ARG2 (r / reach-01\n                     :ARG0 s2\n                     :ARG1 (h / home\n                              :poss (s / she)))))", "(c / claim-01\n   :ARG0 (s / she)\n   :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                     :quant (d / distance-quantity\n                               :quant 40\n                               :unit (f / foot)))\n            :ARG1 (s2 / sunlight)\n            :ARG2 (r / reach-01\n                     :ARG0 s2\n                     :ARG1 (h / home\n                              :poss s))))", "(s / start-01\n   :time (d / date-entity\n            :year 1980\n            :time (b / block-01)))", "(b / block-01\n   :ARG1 (r / reach-01\n            :ARG0 (l / light)\n            :ARG1 (p / patch\n                     :mod (v / vegetable))))", "(b / block-01\n   :ARG0 (f / feud-01)\n   :ARG1 (r / reach-01\n            :ARG0 (l / light)\n            :ARG1 (p / patch\n                     :mod (v / vegetable))))", "(s / start-01\n   :ARG1 (f / feud-01)\n   :time (d / date-entity\n            :year 1980\n            :time (b / block-01\n                     :ARG0 f\n                     :ARG1 (r / reach-01\n                              :ARG0 (l / light)\n                              :ARG1 (p / patch\n                                       :mod (v / vegetable))))))", "(p / possible-01\n   :ARG1 (s / stay-01\n            :ARG1 (h / hedge)))", "(o / obligate-01\n   :ARG2 (c3 / cut-back-05\n             :ARG1 (h / hedge)\n             :ARG2 (d / distance-quantity\n                      :quant 20\n                      :unit (f / foot))))", "(c2 / contrast-01\n    :ARG1 (p / possible-01\n             :ARG1 (s / stay-01\n                      :ARG1 (h / hedge)))\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG1 h\n                       :ARG2 (d / distance-quantity\n                                :quant 20\n                                :unit (f / foot)))))", "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p / possible-01\n                      :ARG1 (s / stay-01\n                               :ARG1 (h / hedge)))\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 h\n                                :ARG2 (d / distance-quantity\n                                         :quant 20\n                                         :unit (f / foot)))))\n   :time (f2 / final))"], "smus": ["Audrey Alexander wanted his neighbors to chop down his huge hedge.", "40-foot leylandii are blocking sunlight.", "40-foot leylandii blocked sunlight from reaching her home.", "The 40-foot-long leylandii claims to be blocking sunlight from reaching her home.", "She claims 40-foot leylandii are blocking sunlight from reaching her home.", "started in 1980 when the blockage occurred.", "The light blocked reaching the vegetable patch.", "Feudal blocked light from reaching the vegetable patch.", "Feud started in 1980, when it blocked light reaching a vegetable patch.", "The hedge can stay put.", "The hedge had to be cut back by 20ft.", "The hedge may stay, but it must be cut back 20ft.", "The Council finally rules that the hedge can stay but must be cut back to 20ft."]}, {"instance_id": "realsumm-11", "summary": "<t> Catherine Nevin was allowed out despite being jailed for life in April 2000 . </t> <t> 62-year - old was seen on the bus , with a pal and walking around in Dublin . </t> <t> Sat next to unsuspecting commuter on bus and went totally unnoticed . </t> <t> Ireland 's most infamous female prisoner murdered husband Tom in 1996 . </t>", "summary_trees": ["# ::snt  Catherine Nevin was allowed out despite being jailed for life in April 2000 . \n(a / allow-01\n      :ARG1 (o / out-06\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Catherine\"\n                        :op2 \"Nevin\")))\n      :concession (j / jail-01\n            :ARG1 p\n            :ARG2 (l / life)\n            :time (d / date-entity\n                  :year 2000\n                  :month 4)))", "# ::snt  62-year - old was seen on the bus , with a pal and walking around in Dublin . \n(s / see-01\n      :ARG1 (p / person\n            :age (t / temporal-quantity\n                  :quant 62\n                  :unit (y / year))\n            :accompanier (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (p3 / pal)))\n            :ARG0-of (w / walk-01\n                  :location (a / around\n                        :op1 (c / city\n                              :name (n / name\n                                    :op1 \"Dublin\")))))\n      :location (b / bus))", "# ::snt  Sat next to unsuspecting commuter on bus and went totally unnoticed . \n(a / and\n      :op1 (s / sit-01\n            :ARG1 (ii / i)\n            :ARG2 (n / next-to\n                  :op1 (p / person\n                        :ARG0-of (c / commute-01)\n                        :ARG0-of (s2 / suspect-01\n                              :polarity -))\n                  :location (b / bus)))\n      :op2 (n2 / notice-01\n            :polarity -\n            :ARG1 ii\n            :degree (t / total)))", "# ::snt  Ireland 's most infamous female prisoner murdered husband Tom in 1996 . \n(m / murder-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tom\")\n            :ARG1-of (h / have-rel-role-91\n                  :ARG0 (p2 / person\n                        :ARG1-of (ii / imprison-01)\n                        :mod (f / female)\n                        :ARG1-of (h2 / have-degree-91\n                              :ARG2 (ii2 / infamous)\n                              :ARG3 (m2 / most)\n                              :ARG5 (p3 / person\n                                    :ARG1-of (ii3 / imprison-01)\n                                    :location (c / country\n                                          :name (n2 / name\n                                                :op1 \"Ireland\")))))\n                  :ARG2 (h3 / husband)))\n      :ARG1 p\n      :time (d / date-entity\n            :year 1996))"], "tree": ["(j / jail-01\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (l / life))", "(j / jail-01\n   :time (d / date-entity\n            :year 2000\n            :month 4))", "(o / out-06\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")))", "(j / jail-01\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (l / life)\n   :time (d / date-entity\n            :year 2000\n            :month 4))", "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\"))))", "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\")))\n   :concession (j / jail-01\n                  :ARG1 p\n                  :ARG2 (l / life)\n                  :time (d / date-entity\n                           :year 2000\n                           :month 4)))", "(w / walk-01\n   :location (a / around\n                :op1 (c / city\n                        :name (n / name\n                                 :op1 \"Dublin\"))))", "(h / have-rel-role-91\n   :ARG1 (p :ARG0 (w / walk-01\n                     :location (a / around\n                                  :op1 (c / city\n                                          :name (n / name\n                                                   :op1 \"Dublin\")))))\n   :ARG2 (p3 / pal))", "(s / see-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 62\n                    :unit (y / year))\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG1 p\n                                      :ARG2 (p3 / pal)))\n            :ARG0 (w / walk-01\n                     :location (a / around\n                                  :op1 (c / city\n                                          :name (n / name\n                                                   :op1 \"Dublin\"))))))", "(s / see-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 62\n                    :unit (y / year))\n            :accompanier (p2 / person\n                             :ARG0 (h / have-rel-role-91\n                                      :ARG1 p\n                                      :ARG2 (p3 / pal)))\n            :ARG0 (w / walk-01\n                     :location (a / around\n                                  :op1 (c / city\n                                          :name (n / name\n                                                   :op1 \"Dublin\")))))\n   :location (b / bus))", "(s / sit-01\n   :ARG1 (ii / i)\n   :ARG2 (n / next-to\n            :op1 (p / person\n                    :ARG0 (c / commute-01)\n                    :ARG0 (s2 / suspect-01\n                              :polarity -))\n            :location (b / bus)))", "(h2 / have-degree-91\n    :ARG2 (ii2 / infamous)\n    :ARG3 (m2 / most)\n    :ARG5 (p3 / person\n              :ARG1 (ii3 / imprison-01)\n              :location (c / country\n                           :name (n2 / name\n                                     :op1 \"Ireland\"))))"], "smus": ["Catherine Nevin was jailed for life.", "Jail Date: April 2000", "Catherine Nevin is out.", "Catherine Nevin was jailed for life in April 2000.", "Catherine Nevin was allowed out.", "Catherine Nevin was allowed out despite being jailed for life in April 2000.", "Walking around Dublin.", "Walking around Dublin pal.", "A 62 year old man was seen walking around Dublin with his pal.", "A 62 year old man was seen on a bus with his pal walking around Dublin.", "I'm sitting next to an unsuspecting commuter on the bus.", "The most infamous prisoner in Ireland."]}, {"instance_id": "realsumm-12", "summary": "<t> Didier Drogba given the Barclays Spirit of the Game award . </t> <t> The 37-year - old 's foundation has done impressive work in Africa . </t> <t> Some of Chelsea 's stars attended a charity ball which raised \u00a3 400,000 . </t> <t> CLICK HERE for all the latest Chelsea news . </t>", "summary_trees": ["# ::snt  Didier Drogba given the Barclays Spirit of the Game award . \n(g / give-01\n      :ARG1 (a / award\n            :name (n / name\n                  :op1 \"Barclays\"\n                  :op2 \"Spirit\"\n                  :op3 \"of\"\n                  :op4 \"the\"\n                  :op5 \"Game\"))\n      :ARG2 (p / person\n            :name (n2 / name\n                  :op1 \"Didier\"\n                  :op2 \"Drogba\")))", "# ::snt  The 37-year - old 's foundation has done impressive work in Africa . \n(w / work-01\n      :ARG0 (f / foundation\n            :poss (p / person\n                  :age (t / temporal-quantity\n                        :quant 37\n                        :unit (y / year))))\n      :ARG0-of (ii / impress-01)\n      :location (c / continent\n            :name (n / name\n                  :op1 \"Africa\")))", "# ::snt  Some of Chelsea 's stars attended a charity ball which raised \u00a3 400,000 . \n(a / attend-01\n      :ARG0 (s / star\n            :ARG1-of (ii / include-91\n                  :ARG2 (s2 / star\n                        :poss (p / person\n                              :name (n / name\n                                    :op1 \"Chelsea\"))))\n            :quant (s3 / some))\n      :ARG1 (b / ball\n            :purpose (c / charity)\n            :ARG0-of (r / raise-02\n                  :ARG1 (m / monetary-quantity\n                        :quant 400000\n                        :unit (p2 / pound)))))", "# ::snt  CLICK HERE for all the latest Chelsea news . \n(c / CLICK-01\n      :mode imperative\n      :ARG0 (y / you)\n      :location (h / here)\n      :purpose (n / news\n            :mod (l / last)\n            :mod (a / all)\n            :topic (p / person\n                  :name (n2 / name\n                        :op1 \"Chelsea\"))))"], "tree": ["(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\")))", "(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\"))\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Didier\"\n                      :op2 \"Drogba\")))", "(w / work-01\n   :location (c / continent\n                :name (n / name\n                         :op1 \"Africa\")))", "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :age (t / temporal-quantity\n                             :quant 37\n                             :unit (y / year)))))", "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :age (t / temporal-quantity\n                             :quant 37\n                             :unit (y / year))))\n   :location (c / continent\n                :name (n / name\n                         :op1 \"Africa\")))", "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :age (t / temporal-quantity\n                             :quant 37\n                             :unit (y / year))))\n   :ARG0 (ii / impress-01)\n   :location (c / continent\n                :name (n / name\n                         :op1 \"Africa\")))", "(a / attend-01\n   :ARG0 (s / star\n            :ARG1 (ii / include-91\n                      :ARG2 (s2 / star\n                                :poss (p / person\n                                         :name (n / name\n                                                  :op1 \"Chelsea\"))))\n            :quant (s3 / some)))", "(c / CLICK-01\n   :mode imperative\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :topic (p / person\n                         :name (n2 / name\n                                   :op1 \"Chelsea\"))))", "(c / CLICK-01\n   :mode imperative\n   :ARG0 (y / you)\n   :location (h / here)\n   :purpose (n / news\n               :mod (l / last)\n               :mod (a / all)\n               :topic (p / person\n                         :name (n2 / name\n                                   :op1 \"Chelsea\"))))"], "smus": ["The Barclays Spirit of the Game award was given", "The Barclays Spirit of the Game award was given to Didier Drogba.", "Work in Africa.", "The 37 year old's foundation is at work.", "The 37-year-old's foundation is at work in Africa.", "The 37 year old's foundation has been impressive work in Africa.", "Some of Chelsea's stars attended.", "CLICK HERE for all the latest Chelsea news.", "CLICK HERE for all the latest Chelsea news."]}, {"instance_id": "realsumm-13", "summary": "<t> Figures from the Catholic Church show more and more becoming nuns . </t> <t> The number of women taking Holy Vows stood at just seven back in 2004 . </t> <t> But that figure had risen to 15 in 2009 and increased further to 45 last year . </t> <t> One father said a ' gap in the market for meaning ' led people toward religion . </t>", "summary_trees": ["# ::snt  Figures from the Catholic Church show more and more becoming nuns . \n(s / show-01\n      :ARG0 (f / figure\n            :source (o / organization\n                  :name (n / name\n                        :op1 \"Catholic\"\n                        :op2 \"Church\")))\n      :ARG1 (b / become-01\n            :ARG1 (p / person\n                  :quant (n2 / number\n                        :ARG1-of (ii / increase-01)))\n            :ARG2 (n3 / nun)))", "# ::snt  The number of women taking Holy Vows stood at just seven back in 2004 . \n(m / multi-sentence\n      :snt1 (s / stand-04\n            :ARG1 (n / number\n                  :quant-of (w / woman\n                        :ARG0-of (t / take-01\n                              :ARG1 (v / vow-01\n                                    :mod (h / holy)))))\n            :ARG2 (n2 / numerical-quantity\n                  :quant 7\n                  :mod (j / just))\n            :time (d / date-entity\n                  :year 2004)))", "# ::snt  But that figure had risen to 15 in 2009 and increased further to 45 last year . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (r / rise-01\n                  :ARG1 (f / figure\n                        :mod (t / that))\n                  :ARG4 (n / numerical-quantity\n                        :quant 15)\n                  :time (d / date-entity\n                        :year 2009))\n            :op2 (ii / increase-01\n                  :ARG1 f\n                  :ARG4 (n2 / numerical-quantity\n                        :quant 45)\n                  :degree (f2 / further)\n                  :time (y / year\n                        :mod (l / last)))))", "# ::snt  One father said a ' gap in the market for meaning ' led people toward religion . \n(s / say-01\n      :ARG0 (p / person\n            :quant 1\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (f / father)))\n      :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                  :location (m / market)\n                  :topic (m2 / mean-01))\n            :ARG1 (p2 / person)\n            :ARG4 (r / religion)))"], "tree": ["(b / become-01\n   :ARG1 (p / person\n            :quant (n2 / number\n                       :ARG1 (ii / increase-01)))\n   :ARG2 (n3 / nun))", "(s / show-01\n   :ARG0 (f / figure\n            :source (o / organization\n                       :name (n / name\n                                :op1 \"Catholic\"\n                                :op2 \"Church\")))\n   :ARG1 (b / become-01\n            :ARG1 (p / person\n                     :quant (n2 / number\n                                :ARG1 (ii / increase-01)))\n            :ARG2 (n3 / nun)))", "(t / take-01\n   :ARG1 (v / vow-01\n            :mod (h / holy)))", "(r / rise-01\n   :time (d / date-entity\n            :year 2009))", "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that)))", "(ii / increase-01\n    :degree (f2 / further)\n    :time (y / year\n             :mod (l / last)))", "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that))\n   :ARG4 (n / numerical-quantity\n            :quant 15))", "(ii / increase-01\n    :ARG1 (f / figure)\n    :ARG4 (n2 / numerical-quantity\n              :quant 45)\n    :degree (f2 / further)\n    :time (y / year\n             :mod (l / last)))", "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that))\n   :ARG4 (n / numerical-quantity\n            :quant 15)\n   :time (d / date-entity\n            :year 2009))", "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market)\n            :topic (m2 / mean-01)))", "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market)\n            :topic (m2 / mean-01))\n   :ARG1 (p2 / person))", "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market)\n            :topic (m2 / mean-01))\n   :ARG1 (p2 / person)\n   :ARG4 (r / religion))", "(s / say-01\n   :ARG0 (p / person\n            :quant 1\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (f / father)))\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :location (m / market)\n                     :topic (m2 / mean-01))\n            :ARG1 (p2 / person)\n            :ARG4 (r / religion)))"], "smus": ["More and more people are becoming nuns.", "Catholic Church figures show that more and more people are becoming nuns.", "Taking the Holy Vow.", "In 2009, it rose by.", "That figure has risen.", "Further increased last year.", "That figure has risen to 15.", "The figure increased further to 45 in last year.", "That figure has risen to 15 in 2009.", "The mean-ness gap in the market has led to it.", "The meanness gap in the market has led people.", "The meaning gap in the market has led people to religion.", "One father said the \"meaning gap\" in the market had led people to religion."]}, {"instance_id": "realsumm-14", "summary": "<t> Eduardo Vargas put QPR ahead with a spectacular strike from 25 yards after 15 minutes . </t> <t> Charlie Austin doubled the lead with a header 20 minutes later , Bobby Zamora made it three . </t> <t> Victor Anichebe pulled one back for West Brom before Youssouf Mulumbu was sent off and Joey Barton scored . </t>", "summary_trees": ["# ::snt  Eduardo Vargas put QPR ahead with a spectacular strike from 25 yards after 15 minutes . \n(p / put-03\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Eduardo\"\n                  :op2 \"Vargas\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"QPR\"))\n      :ARG2 (a / ahead)\n      :manner (s / strike-01\n            :ARG0 p2\n            :ARG2 (d / distance-quantity\n                  :quant 25\n                  :unit (y / yard))\n            :mod (s2 / spectacle))\n      :time (a2 / after\n            :op1 (t2 / temporal-quantity\n                  :quant 15\n                  :unit (m / minute))))", "# ::snt  Charlie Austin doubled the lead with a header 20 minutes later , Bobby Zamora made it three . \n(a / and\n      :op1 (d / double-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Charlie\"\n                        :op2 \"Austin\"))\n            :ARG1 (l / lead-01)\n            :instrument (h / header)\n            :time (a2 / after\n                  :quant (t / temporal-quantity\n                        :quant 20\n                        :unit (m / minute))))\n      :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Bobby\"\n                        :op2 \"Zamora\"))\n            :ARG1 (ii / it\n                  :quant 3)))", "# ::snt  Victor Anichebe pulled one back for West Brom before Youssouf Mulumbu was sent off and Joey Barton scored . \n(p / pull-back-09\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Victor\"\n                  :op2 \"Anichebe\"))\n      :ARG1 (o / one)\n      :beneficiary (t / team\n            :name (n2 / name\n                  :op1 \"West\"\n                  :op2 \"Brum\"))\n      :time (b / before\n            :op1 (a / and\n                  :op1 (s / send-off-08\n                        :ARG1 (p3 / person\n                              :name (n3 / name\n                                    :op1 \"Youssouf\"\n                                    :op2 \"Mulumbu\")))\n                  :op2 (s2 / score-01\n                        :ARG0 (p4 / person\n                              :name (n4 / name\n                                    :op1 \"Joey\"\n                                    :op2 \"Barton\"))))))"], "tree": ["(p / put-03\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead))", "(p / put-03\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15\n                      :unit (m / minute))))", "(s / strike-01\n   :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n   :ARG2 (d / distance-quantity\n            :quant 25\n            :unit (y / yard))\n   :mod (s2 / spectacle))", "(p / put-03\n   :manner (s / strike-01)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15\n                      :unit (m / minute))))", "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead))", "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15\n                      :unit (m / minute))))", "(m2 / make-01\n    :ARG1 (ii / it\n              :quant 3))", "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01))", "(m2 / make-01\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Bobby\"\n                        :op2 \"Zamora\"))\n    :ARG1 (ii / it\n              :quant 3))", "(d / double-01\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20\n                       :unit (m / minute))))", "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01)\n   :instrument (h / header)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20\n                       :unit (m / minute))))", "(s2 / score-01\n    :ARG0 (p4 / person\n              :name (n4 / name\n                        :op1 \"Joey\"\n                        :op2 \"Barton\")))", "(s / send-off-08\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Youssouf\"\n                       :op2 \"Mulumbu\")))", "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08)))", "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s2 / score-01)))", "(p / pull-back-09\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (a / and\n                    :op1 (s / send-off-08)\n                    :op2 (s2 / score-01))))", "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\"))\n   :time (b / before\n            :op1 (s / send-off-08\n                    :ARG1 (p3 / person\n                              :name (n3 / name\n                                        :op1 \"Youssouf\"\n                                        :op2 \"Mulumbu\")))))"], "smus": ["QPR put ahead", "Put after 15 minutes.", "Eduardo Vargas made a spectacle strike of 25 yards.", "Put the strike after 15 minutes.", "Eduardo Vargas put QPR ahead.", "After 15 minutes Eduardo Vargas put QPR ahead.", "It made three.", "Charlie Austin doubled the lead.", "Bobby Zamora made three of it.", "The header doubled after 20 minutes.", "Charlie Austin doubled the lead with a header 20 minutes later.", "Joey Barton scored.", "Youssouf Mulumbu was sent off.", "West Brom pulled back before being sent off.", "Pullback for West Brom before scoring", "West Brom pulled back before being sent off and scored.", "Victor Anchebe pulled back one for West Brum before Youssouf Mulumbu was sent off."]}, {"instance_id": "realsumm-15", "summary": "<t> Detroit Red Wings ' Drew Miller was caught by a skate in the first period against the Ottawa Senators . </t> <t> The massive cut required 50 to 60 stitches to close , but did not damage Miller 's eye . </t> <t> The Red Wings lost 2 - 1 but remained in third place in the Atlantic division . </t>", "summary_trees": ["# ::snt  Detroit Red Wings ' Drew Miller was caught by a skate in the first period against the Ottawa Senators . \n(c / catch-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Drew\"\n                  :op2 \"Miller\")\n            :part-of (t / team\n                  :name (n2 / name\n                        :op1 \"Detroit\"\n                        :op2 \"Red\"\n                        :op3 \"Wings\")))\n      :ARG2 (s / skate)\n      :time (p2 / period\n            :ord (o / ordinal-entity\n                  :value 1)\n            :subevent-of (o2 / oppose-01\n                  :ARG0 t\n                  :ARG1 (t2 / team\n                        :name (n3 / name\n                              :op1 \"Ottawa\"\n                              :op2 \"Senators\")))))", "# ::snt  The massive cut required 50 to 60 stitches to close , but did not damage Miller 's eye . \n(c / contrast-01\n      :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                  :ARG1 (c3 / cut-01\n                        :mod (m / massive)))\n            :ARG1 (s / stitch\n                  :quant (b / between\n                        :op1 50\n                        :op2 60)))\n      :ARG2 (d / damage-01\n            :polarity -\n            :ARG0 c3\n            :ARG1 (e / eye\n                  :part-of (p / person\n                        :name (n / name\n                              :op1 \"Miller\")))))", "# ::snt  The Red Wings lost 2 - 1 but remained in third place in the Atlantic division . \n(h / have-concession-91\n      :ARG1 (r / remain-01\n            :ARG1 (t / team\n                  :name (n / name\n                        :op1 \"Red\"\n                        :op2 \"Wings\"))\n            :ARG3 (p / place\n                  :ord (o / ordinal-entity\n                        :value 3)\n                  :location (d / division\n                        :mod (o2 / ocean\n                              :name (n2 / name\n                                    :op1 \"Atlantic\")))))\n      :ARG2 (l / lose-03\n            :ARG0 t\n            :quant (s / score-entity\n                  :op1 2\n                  :op2 1)))"], "tree": ["(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\")))", "(o2 / oppose-01\n    :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\"))\n    :ARG1 (t2 / team\n              :name (n3 / name\n                        :op1 \"Ottawa\"\n                        :op2 \"Senators\")))", "(c2 / close-01\n    :ARG1 (c3 / cut-01\n              :mod (m / massive)))", "(r / require-01\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op1 50\n                      :op2 60)))", "(d / damage-01\n   :polarity -\n   :ARG0 (c3 / cut-01)\n   :ARG1 (e / eye\n            :part (p / person\n                     :name (n / name\n                              :op1 \"Miller\"))))", "(r / require-01\n   :ARG0 (c2 / close-01\n             :ARG1 (c3 / cut-01\n                       :mod (m / massive)))\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op1 50\n                      :op2 60)))", "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                      :ARG1 (c3 / cut-01\n                                :mod (m / massive)))\n            :ARG1 (s / stitch\n                     :quant (b / between\n                               :op1 50\n                               :op2 60)))\n   :ARG2 (d / damage-01\n            :polarity -\n            :ARG0 c3\n            :ARG1 (e / eye\n                     :part (p / person\n                              :name (n / name\n                                       :op1 \"Miller\")))))", "(l / lose-03\n   :quant (s / score-entity\n             :op1 2\n             :op2 1))", "(l / lose-03\n   :ARG0 (t / team :name (n / name :op1 \"Red\" :op2 \"Wings\"))\n   :quant (s / score-entity\n             :op1 2\n             :op2 1))", "(r / remain-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Red\"\n                     :op2 \"Wings\")))", "(r / remain-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Red\"\n                     :op2 \"Wings\"))\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 3)\n            :location (d / division\n                         :mod (o2 / ocean\n                                  :name (n2 / name\n                                            :op1 \"Atlantic\")))))", "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG1 (t / team\n                     :name (n / name\n                              :op1 \"Red\"\n                              :op2 \"Wings\"))\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 3)\n                     :location (d / division\n                                  :mod (o2 / ocean\n                                           :name (n2 / name\n                                                     :op1 \"Atlantic\"))))))", "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG1 (t / team\n                     :name (n / name\n                              :op1 \"Red\"\n                              :op2 \"Wings\"))\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 3)\n                     :location (d / division\n                                  :mod (o2 / ocean\n                                           :name (n2 / name\n                                                     :op1 \"Atlantic\")))))\n   :ARG2 (l / lose-03\n            :ARG0 t\n            :quant (s / score-entity\n                      :op1 2\n                      :op2 1)))"], "smus": ["Drew Miller was caught.", "Detroit Red Wings vs Ottawa Senators", "Close the massive cut.", "required 50-60 stitches.", "The cut did not damage Miller's eye.", "The massive cut required between 50 and 60 stitches to close.", "The massive cut required 50-60 stitches to close, but did not damage Miller's eye.", "Loss 2 to 1", "The Red Wings lost by 2 goals, 1 in", "The Red Wings remained.", "The Red Wings remained in third place in the Atlantic division.", "However, the Red Wings remained in third place in the Atlantic division.", "The Red Wings remained in third place in the Atlantic division, but lost by two goals in one loss."]}, {"instance_id": "realsumm-16", "summary": "<t> Jurgen Klopp will leave Borussia Dortmund at the end of the season . </t> <t> German boss has enjoyed success with club during seven - year stint . </t> <t> He has been linked with Manchester City , Manchester United and Arsenal . </t> <t> Per Mertesacker says he would like to see Klopp in the Premier League . </t>", "summary_trees": ["# ::snt  Jurgen Klopp will leave Borussia Dortmund at the end of the season . \n(l / leave-15\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Jurgen\"\n                  :op2 \"Klopp\"))\n      :ARG1 (t / team\n            :name (n2 / name\n                  :op1 \"Borussia\"\n                  :op2 \"Dortmund\"))\n      :time (e / end-01\n            :ARG1 (s / season)))", "# ::snt  German boss has enjoyed success with club during seven - year stint . \n(e / enjoy-01\n      :ARG0 (b / boss\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Germany\")))\n      :ARG1 (s / succeed-01\n            :ARG0 b\n            :ARG1 (c2 / club))\n      :duration (s2 / stint\n            :duration (t / temporal-quantity\n                  :quant 7\n                  :unit (y / year))))", "# ::snt  He has been linked with Manchester City , Manchester United and Arsenal . \n(l / link-01\n      :ARG1 (h / he)\n      :ARG2 (a / and\n            :op1 (t / team\n                  :name (n / name\n                        :op1 \"Manchester\"\n                        :op2 \"City\"))\n            :op2 (t2 / team\n                  :name (n2 / name\n                        :op1 \"Manchester\"\n                        :op2 \"United\"))\n            :op3 (t3 / team\n                  :name (n3 / name\n                        :op1 \"Arsenal\"))))", "# ::snt  Per Mertesacker says he would like to see Klopp in the Premier League . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Per\"\n                  :op2 \"Mertesacker\"))\n      :ARG1 (l / like-02\n            :ARG0 p\n            :ARG1 (s2 / see-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Klopp\")\n                        :location (l2 / league\n                              :name (n3 / name\n                                    :op1 \"Premier\"\n                                    :op2 \"League\"))))))"], "tree": ["(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\")))", "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\"))\n   :time (e / end-01\n            :ARG1 (s / season)))", "(s / succeed-01\n   :ARG0 (b / boss)\n   :ARG1 (c2 / club))", "(e / enjoy-01\n   :duration (s2 / stint\n                 :duration (t / temporal-quantity\n                              :quant 7\n                              :unit (y / year))))", "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG0 b\n            :ARG1 (c2 / club)))", "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG0 b\n            :ARG1 (c2 / club))\n   :duration (s2 / stint\n                 :duration (t / temporal-quantity\n                              :quant 7\n                              :unit (y / year))))", "(l / link-01\n   :ARG1 (h / he)\n   :ARG2 (t3 / team\n             :name (n3 / name\n                       :op1 \"Arsenal\")))", "(l / link-01\n   :ARG1 (h / he)\n   :ARG2 (t / team\n            :name (n / name\n                     :op1 \"Manchester\"\n                     :op2 \"City\")))", "(l / link-01\n   :ARG1 (h / he)\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"United\")))", "(s2 / see-01\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Klopp\")\n              :location (l2 / league\n                            :name (n3 / name\n                                      :op1 \"Premier\"\n                                      :op2 \"League\"))))", "(l / like-02\n   :ARG0 (p / person :name (n / name :op1 \"Per\" :op2 \"Mertesacker\"))\n   :ARG1 (s2 / see-01\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Klopp\")\n                       :location (l2 / league\n                                     :name (n3 / name\n                                               :op1 \"Premier\"\n                                               :op2 \"League\")))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG0 p\n            :ARG1 (s2 / see-01\n                      :ARG0 p\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Klopp\")\n                                :location (l2 / league\n                                              :name (n3 / name\n                                                        :op1 \"Premier\"\n                                                        :op2 \"League\"))))))"], "smus": ["Kurgen Klopp will leave Borussia Dortmund.", "Jurgen Klopp will leave Borussia Dortmund at the end of the season.", "The club has had a successful boss.", "Enjoyed a 7 year stint.", "The German boss has enjoyed success at the club.", "The German boss has enjoyed success at the club during his seven-year stint.", "He was linked with Arsenal.", "He was linked with Manche City.", "He is linked with Manchester United.", "See Klopp in the Premier League.", "Per Mertesacker would like to see Klopp in the Prem League.", "Per Mertesacker says he would like to see Klopp in the Prem League."]}, {"instance_id": "realsumm-17", "summary": "<t> AppleInsider spotted nine listings in the past month relating to batteries . </t> <t> These include one for an iOS battery life software engineer and another for iOS software power systems engineer . </t> <t> Apple significantly improved the battery life on its iPhone 6 and 6 Plus . </t> <t> But it has been criticised for phones and tablets that only do n't last a day . </t>", "summary_trees": ["# ::snt  AppleInsider spotted nine listings in the past month relating to batteries . \n(s / spot-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"AppleInsider\"))\n      :ARG1 (l / listing\n            :quant 9\n            :ARG1-of (r / relate-01\n                  :ARG2 (b / battery)))\n      :time (m / month\n            :mod (p2 / past)))", "# ::snt  These include one for an iOS battery life software engineer and another for iOS software power systems engineer . \n(ii / include-01\n      :ARG1 (a / and\n            :op1 (o / one\n                  :purpose (p / person\n                        :ARG0-of (e / engineer-01\n                              :ARG1 (s / software\n                                    :purpose (l / life\n                                          :mod (b / battery))\n                                    :mod (p2 / product\n                                          :name (n / name\n                                                :op1 \"iOS\"))))))\n            :op2 (a2 / another\n                  :purpose (p3 / person\n                        :ARG0-of (e2 / engineer-01\n                              :ARG1 (s2 / system\n                                    :mod (p4 / power)\n                                    :mod (s3 / software))))))\n      :ARG2 (t / this))", "# ::snt  Apple significantly improved the battery life on its iPhone 6 and 6 Plus . \n(ii / improve-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Apple\"))\n      :ARG1 (l / life\n            :duration-of (b / battery)\n            :poss (a / and\n                  :op1 (p / product\n                        :name (n2 / name\n                              :op1 \"iPhone\"\n                              :op2 6))\n                  :op2 (p2 / product\n                        :name (n3 / name\n                              :op1 \"iPhone\"\n                              :op2 6\n                              :op3 \"Plus\"))\n                  :poss c))\n      :ARG1-of (s / significant-02))", "# ::snt  But it has been criticised for phones and tablets that only do n't last a day . \n(c / contrast-01\n      :ARG2 (c2 / criticize-01\n            :ARG1 (ii / it)\n            :ARG2 (a / and\n                  :op1 (p / phone)\n                  :op2 (t / tablet)\n                  :ARG1-of (l / last-04\n                        :polarity -\n                        :ARG2 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (d / day))\n                        :mod (o / only)))))"], "tree": ["(s / spot-01\n   :time (m / month\n            :mod (p2 / past)))", "(s / spot-01\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery)))\n   :time (m / month\n            :mod (p2 / past)))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery))))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1 (r / relate-01\n                     :ARG2 (b / battery)))\n   :time (m / month\n            :mod (p2 / past)))", "(e2 / engineer-01\n    :ARG1 (s2 / system\n              :mod (p4 / power)\n              :mod (s3 / software)))", "(e / engineer-01\n   :ARG1 (s / software\n            :purpose (l / life\n                        :mod (b / battery))\n            :mod (p2 / product\n                     :name (n / name\n                              :op1 \"iOS\"))))", "(ii / include-01\n    :ARG1 (a2 / another\n              :purpose (p3 / person\n                           :ARG0 (e2 / engineer-01\n                                     :ARG1 (s2 / system\n                                               :mod (p4 / power)\n                                               :mod (s3 / software)))))\n    :ARG2 (t / this)\n    :ARG2 t)", "(ii / include-01\n    :ARG1 (o / one\n             :purpose (p / person\n                         :ARG0 (e / engineer-01\n                                  :ARG1 (s / software\n                                           :purpose (l / life\n                                                       :mod (b / battery))\n                                           :mod (p2 / product\n                                                    :name (n / name\n                                                             :op1 \"iOS\"))))))\n    :ARG2 (t / this))", "(ii / include-01\n    :ARG1 (a / and\n             :op1 (o / one\n                     :purpose (p / person\n                                 :ARG0 (e / engineer-01\n                                          :ARG1 (s / software\n                                                   :purpose (l / life\n                                                               :mod (b / battery))\n                                                   :mod (p2 / product\n                                                            :name (n / name\n                                                                     :op1 \"iOS\"))))))\n             :op2 (a2 / another\n                      :purpose (p3 / person\n                                   :ARG0 (e2 / engineer-01\n                                             :ARG1 (s2 / system\n                                                       :mod (p4 / power)\n                                                       :mod (s3 / software))))))\n    :ARG2 (t / this))", "(ii / improve-01\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p / product\n                      :name (n2 / name\n                                :op1 \"iPhone\"\n                                :op2 6))))", "(ii / improve-01\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p2 / product\n                       :name (n3 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\")\n                       :poss (c / company :name (n / name :op1 \"Apple\")))))", "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p / product\n                      :name (n2 / name\n                                :op1 \"iPhone\"\n                                :op2 6))))", "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p2 / product\n                       :name (n3 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\")\n                       :poss c)))", "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (p2 / product\n                       :name (n3 / name\n                                 :op1 \"iPhone\"\n                                 :op2 6\n                                 :op3 \"Plus\")\n                       :poss c))\n    :ARG1 (s / significant-02))", "(ii / improve-01\n    :ARG1 (l / life\n             :duration (b / battery)\n             :poss (a / and\n                      :op1 (p / product\n                              :name (n2 / name\n                                        :op1 \"iPhone\"\n                                        :op2 6))\n                      :op2 (p2 / product\n                               :name (n3 / name\n                                         :op1 \"iPhone\"\n                                         :op2 6\n                                         :op3 \"Plus\"))\n                      :poss (c / company :name (n / name :op1 \"Apple\")))))", "(l / last-04\n   :polarity -\n   :mod (o / only))", "(c2 / criticize-01\n    :ARG1 (ii / it)\n    :ARG2 (p / phone))", "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG1 (ii / it)\n             :ARG2 (p / phone)))", "(l / last-04\n   :polarity -\n   :ARG2 (t2 / temporal-quantity\n             :quant 1\n             :unit (d / day))\n   :mod (o / only))", "(c2 / criticize-01\n    :ARG1 (ii / it)\n    :ARG2 (t / tablet\n             :ARG1 (l / last-04\n                      :polarity -\n                      :ARG2 (t2 / temporal-quantity\n                                :quant 1\n                                :unit (d / day))\n                      :mod (o / only))))", "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG1 (ii / it)\n             :ARG2 (t / tablet\n                      :ARG1 (l / last-04\n                               :polarity -\n                               :ARG2 (t2 / temporal-quantity\n                                         :quant 1\n                                         :unit (d / day))\n                               :mod (o / only)))))"], "smus": ["Spotted in the past month.", "In the past month, 9 listings related to batteries were spotted.", "AppleInsider spotted 9 listings related to batteries.", "AppleInsider spotted 9 listings related to batteries in the past month.", "Power and software systems engineering", "IOS battery life software engineering", "This includes another for power and software engineers.", "This includes one for an IOS battery life engineer.", "These include one for an IOS battery life engineer and another for a software power system engineer.", "The battery life of the iPhone 6 improved.", "The battery life of Apple's iPhone 6 Plus improved.", "Apple improved the battery life of the iPhone 6.", "Apple improved the battery life of its iPhone 6 Plus.", "Apple significantly improved the battery life of its iPhone 6 Plus.", "Apple's iPhone 6 and iPhone 6 Plus battery life improved.", "It only doesn't last.", "It's been critiquised on phones.", "But it's critiquised as \"phones\".", "It doesn't only last a day.", "It was critiquised as being a tablet that only lasts a day.", "But it was critiquised as a \"tablet\" that only lasts a day."]}, {"instance_id": "realsumm-18", "summary": "<t> Tournament performances have restored Andy Murray to World No 3 . </t> <t> But it 's wedding to Kim Sears that takes Murray 's No 1 spot this week . </t> <t> Murray is due to marry fianc\u00e9e Sears in Dunblane this coming Saturday . </t> <t> There are believed to be well over 100 names on down - to - earth guest list . </t>", "summary_trees": ["# ::snt  Tournament performances have restored Andy Murray to World No 3 . \n(r / restore-01\n      :ARG0 (p / perform-02\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Andy\"\n                        :op2 \"Murray\"))\n            :mod (t / tournament))\n      :ARG1 (h / have-org-role-91\n            :ARG0 p2\n            :ARG1 (w / world)\n            :ARG2 (n2 / no\n                  :ord (o / ordinal-entity\n                        :value 3))))", "# ::snt  But it 's wedding to Kim Sears that takes Murray 's No 1 spot this week . \n(c / contrast-01\n      :ARG2 (t / take-01\n            :ARG0 (w / wed-01\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Murray\"))\n                  :ARG2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Kim\"\n                              :op2 \"Sears\")))\n            :ARG1 (s / spot\n                  :ord (o / ordinal-entity\n                        :value 1)\n                  :poss p)\n            :time (w2 / week\n                  :mod (t2 / this))))", "# ::snt  Murray is due to marry fianc\u00e9e Sears in Dunblane this coming Saturday . \n(d / due-03\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Murray\"))\n      :ARG2 (m / marry-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Sears\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (f / fiancee)))\n            :location (c / city\n                  :name (n3 / name\n                        :op1 \"Dunblane\")))\n      :time (d2 / date-entity\n            :weekday (s / saturday)\n            :mod (t / this)\n            :ARG1-of (c2 / come-01)))", "# ::snt  There are believed to be well over 100 names on down - to - earth guest list . \n(b / believe-01\n      :ARG1 (n / name\n            :quant (o / over\n                  :op1 100\n                  :quant (w / well))\n            :location (l / list-01\n                  :ARG1 (g / guest)\n                  :mod (d / down-to-earth))))"], "tree": ["(h / have-org-role-91\n   :ARG0 (p2 / person :name (n / name :op1 \"Andy\" :op2 \"Murray\"))\n   :ARG2 (n2 / no\n             :ord (o / ordinal-entity\n                     :value 3)))", "(p / perform-02\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Andy\"\n                      :op2 \"Murray\")))", "(h / have-org-role-91\n   :ARG0 (p2 / person :name (n / name :op1 \"Andy\" :op2 \"Murray\"))\n   :ARG1 (w / world)\n   :ARG2 (n2 / no\n             :ord (o / ordinal-entity\n                     :value 3)))", "(p / perform-02\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Andy\"\n                      :op2 \"Murray\"))\n   :mod (t / tournament))", "(r / restore-01\n   :ARG1 (h / have-org-role-91\n            :ARG0 (p2 / person :name (n / name :op1 \"Andy\" :op2 \"Murray\"))\n            :ARG1 (w / world)\n            :ARG2 (n2 / no\n                      :ord (o / ordinal-entity\n                              :value 3))))", "(r / restore-01\n   :ARG0 (p / perform-02\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andy\"\n                               :op2 \"Murray\"))\n            :mod (t / tournament))\n   :ARG1 (h / have-org-role-91\n            :ARG0 p2\n            :ARG1 (w / world)\n            :ARG2 (n2 / no\n                      :ord (o / ordinal-entity\n                              :value 3))))", "(t / take-01\n   :time (w2 / week\n             :mod (t2 / this)))", "(w / wed-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\")))", "(t / take-01\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)\n            :poss (p / person :name (n / name :op1 \"Murray\"))))", "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\"))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)\n            :poss p))", "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\"))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)\n            :poss p)\n   :time (w2 / week\n             :mod (t2 / this)))", "(c / contrast-01\n   :ARG2 (t / take-01\n            :ARG0 (w / wed-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Murray\"))\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Kim\"\n                                         :op2 \"Sears\")))\n            :ARG1 (s / spot\n                     :ord (o / ordinal-entity\n                             :value 1)\n                     :poss p)\n            :time (w2 / week\n                      :mod (t2 / this))))", "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Murray\"))\n   :ARG2 (f / fiancee))", "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\")))", "(m / marry-01\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Dunblane\")))", "(d / due-03\n   :time (d2 / date-entity\n             :weekday (s / saturday)\n             :mod (t / this)))", "(m / marry-01\n   :ARG1 (p / person :name (n / name :op1 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sears\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p\n                      :ARG2 (f / fiancee))))", "(m / marry-01\n   :ARG1 (p / person :name (n / name :op1 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sears\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p\n                      :ARG2 (f / fiancee)))\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Dunblane\")))", "(l / list-01\n   :ARG1 (g / guest)\n   :mod (d / down-to-earth))", "(b / believe-01\n   :ARG1 (n / name\n            :quant (o / over\n                      :op1 100\n                      :quant (w / well))\n            :location (l / list-01\n                         :ARG1 (g / guest)\n                         :mod (d / down-to-earth))))"], "smus": ["Andy Murray is no 3", "Andy Murray's performances:", "Andy Murray is the World No. 3.", "Andy Murray's Tournament Performances", "Andy Murray has restored the World to No 3", "Andy Murray's Tournament performances have restored him to World No. 3.", "This week takes.", "Murray got married.", "Takes Murray's first spot.", "Murray's wedding to Kim Sears takes his first spot.", "This week, Murray's wedding to Kim Sears takes his first spot.", "But this week, Murray's wedding to Kim Sears takes his first spot.", "Murray's fiancee", "Murray is due.", "Marry in Dunblane.", "Due this Saturday.", "Murray to marry his fiancee Seers.", "Murray will marry his fiancee Seers in Dunblane.", "Down to earth guest list.", "Well over 100 names on the down-to-earth guest list are believed to be."]}, {"instance_id": "realsumm-19", "summary": "<t> Paula Dunican paid \u00a3 25 for the baby blue coat at her local branch of Asda . </t> <t> When she took it home she noticed a ' seeping ' stain on the back of coat . </t> <t> She then discovered the reptile 's crushed body on the garment 's lining . </t> <t> The supermarket has apologised and offered her a \u00a3 40 voucher and refund . </t>", "summary_trees": ["# ::snt  Paula Dunican paid \u00a3 25 for the baby blue coat at her local branch of Asda . \n(p / pay-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Paula\"\n                  :op2 \"Dunican\"))\n      :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound))\n      :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby))\n      :location (b3 / branch\n            :poss p2\n            :ARG1-of (l / local-02)\n            :part-of (c2 / company\n                  :name (n2 / name\n                        :op1 \"Asda\"))))", "# ::snt  When she took it home she noticed a ' seeping ' stain on the back of coat . \n(n / notice-01\n      :ARG0 (s / she)\n      :ARG1 (s2 / stain-01\n            :ARG1-of (s3 / seep-01)\n            :location (b / back\n                  :part-of (c / coat)))\n      :time (t / take-01\n            :ARG0 s\n            :ARG1 c\n            :ARG3 (h / home)))", "# ::snt  She then discovered the reptile 's crushed body on the garment 's lining . \n(d / discover-01\n      :ARG0 (s / she)\n      :ARG1 (b / body\n            :part-of (r / reptile)\n            :ARG1-of (c / crush-01))\n      :location (l / lining\n            :part-of (g / garment))\n      :time (t / then))", "# ::snt  The supermarket has apologised and offered her a \u00a3 40 voucher and refund . \n(a / and\n      :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket))\n      :op2 (o / offer-01\n            :ARG0 s\n            :ARG1 (a3 / and\n                  :op1 (v / voucher\n                        :mod (m / monetary-quantity\n                              :quant 40\n                              :unit (p / pound)))\n                  :op2 (r / refund-01\n                        :ARG0 s\n                        :ARG2 (s2 / she)))\n            :ARG3 s2))"], "tree": ["(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\")))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby)))", "(t / take-01\n   :ARG0 (s / she)\n   :ARG1 (c / coat)\n   :ARG3 (h / home))", "(s2 / stain-01\n    :ARG1 (s3 / seep-01)\n    :location (b / back))", "(n / notice-01\n   :ARG0 (s / she)\n   :ARG1 (s2 / stain-01\n             :ARG1 (s3 / seep-01)\n             :location (b / back)))", "(d / discover-01\n   :location (l / lining\n                :part (g / garment)))", "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01)))", "(d / discover-01\n   :location (l / lining\n                :part (g / garment))\n   :time (t / then))", "(d / discover-01\n   :ARG0 (s / she)\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01)))", "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01))\n   :time (t / then))", "(d / discover-01\n   :ARG1 (b / body\n            :part (r / reptile)\n            :ARG1 (c / crush-01))\n   :location (l / lining\n                :part (g / garment)))", "(r / refund-01\n   :ARG0 (s / supermarket)\n   :ARG2 (s2 / she))", "(o / offer-01\n   :ARG1 (r / refund-01\n            :ARG0 (s / supermarket)\n            :ARG2 (s2 / she)))", "(o / offer-01\n   :ARG0 (s / supermarket)\n   :ARG1 (r / refund-01\n            :ARG0 s\n            :ARG2 (s2 / she)))", "(o / offer-01\n   :ARG0 (s / supermarket)\n   :ARG1 (r / refund-01\n            :ARG0 s\n            :ARG2 (s2 / she\n                      :ARG3-of o)))"], "smus": ["Paula Dunican paid.", "Paula Dunican paid for the blue baby coat.", "She took the coat home.", "Seeping stain on the back.", "She noticed a stain of seeping on the back.", "Discovered in the garment lining.", "The reptile's body was discovered crushed.", "Then discovered in the garment lining.", "She discovered a reptile's body was crushed.", "The reptile's body was then discovered to be crushed.", "The reptile's body was discovered crushed in the garment lining.", "The supermarket gave her a refund.", "The supermarket offered her a refund.", "The supermarket offered her a refund.", "The supermarket offered to refund her."]}, {"instance_id": "realsumm-20", "summary": "<t> Ronnie Carroll placed fourth in the Eurovision contest in 1962 and 1963 . </t> <t> He died in London two days ago , aged 80 , following a battle with cancer . </t> <t> Mr Carroll was running in the General Election for Hampstead and Kilburn . </t> <t> He remains on the paper and he will be elected if he gets enough votes . </t>", "summary_trees": ["# ::snt  Ronnie Carroll placed fourth in the Eurovision contest in 1962 and 1963 . \n(p / place-01\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 \"Ronnie\"\n                  :op2 \"Carroll\"))\n      :ARG2 (f / fourth)\n      :subevent-of (c / contest-02\n            :ARG3 (e / event\n                  :name (n2 / name\n                        :op1 \"Eurovision\")))\n      :time (a / and\n            :op1 (d / date-entity\n                  :year 1962)\n            :op2 (d2 / date-entity\n                  :year 1963)))", "# ::snt  He died in London two days ago , aged 80 , following a battle with cancer . \n(d / die-01\n      :ARG1 (h / he\n            :age (t / temporal-quantity\n                  :quant 80\n                  :unit (y / year)))\n      :location (c / city\n            :name (n / name\n                  :op1 \"London\"))\n      :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                  :quant 2\n                  :unit (d2 / day)))\n      :ARG1-of (f / follow-01\n            :ARG2 (b2 / battle-01\n                  :ARG0 h\n                  :ARG1 (d3 / disease\n                        :name (n3 / name\n                              :op1 \"cancer\")))))", "# ::snt  Mr Carroll was running in the General Election for Hampstead and Kilburn . \n(r / run-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Mr\"\n                  :op2 \"Carroll\"))\n      :ARG1 (a / and\n            :op1 (c / city-district\n                  :name (n2 / name\n                        :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                  :name (n3 / name\n                        :op1 \"Kilburn\")))\n      :subevent-of (e / elect-01\n            :ARG1-of (g / general-02)))", "# ::snt  He remains on the paper and he will be elected if he gets enough votes . \n(a / and\n      :op1 (r / remain-01\n            :ARG1 (h / he)\n            :location (p / paper))\n      :op2 (e / elect-01\n            :ARG1 h\n            :condition (g / get-01\n                  :ARG0 h\n                  :ARG1 (v / vote-01\n                        :ARG1 h\n                        :ARG1-of (h2 / have-quant-91\n                              :ARG3 (e2 / enough))))))"], "tree": ["(c / contest-02\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Eurovision\")))", "(p / place-01\n   :subevent (c / contest-02)\n   :time (d / date-entity\n            :year 1962))", "(p / place-01\n   :subevent (c / contest-02)\n   :time (d2 / date-entity\n             :year 1963))", "(p / place-01\n   :subevent (c / contest-02)\n   :time (a / and\n            :op1 (d / date-entity\n                    :year 1962)\n            :op2 (d2 / date-entity\n                     :year 1963)))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d / date-entity\n            :year 1962))", "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :subevent (c / contest-02\n                :ARG3 (e / event\n                         :name (n2 / name\n                                   :op1 \"Eurovision\")))\n   :time (d2 / date-entity\n             :year 1963))", "(b2 / battle-01\n    :ARG1 (d3 / disease\n              :name (n3 / name\n                        :op1 \"cancer\")))", "(b2 / battle-01\n    :ARG0 (h / he)\n    :ARG1 (d3 / disease\n              :name (n3 / name\n                        :op1 \"cancer\")))", "(d / die-01\n   :ARG1 (h / he\n            :age (t / temporal-quantity\n                    :quant 80\n                    :unit (y / year))))", "(f / follow-01\n   :ARG2 (b2 / battle-01\n             :ARG0 (h / he)\n             :ARG1 (d3 / disease\n                       :name (n3 / name\n                                 :op1 \"cancer\"))))", "(d / die-01\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 2\n                       :unit (d2 / day))))", "(d / die-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"London\"))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 2\n                       :unit (d2 / day))))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c / city-district\n            :name (n2 / name\n                      :op1 \"Hampstead\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (c2 / city-district\n             :name (n3 / name\n                       :op1 \"Kilburn\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (a / and\n            :op1 (c / city-district\n                    :name (n2 / name\n                              :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                     :name (n3 / name\n                               :op1 \"Kilburn\"))))", "(r / remain-01\n   :ARG1 (h / he)\n   :location (p / paper))", "(e / elect-01\n   :ARG1 (h / he)\n   :condition (g / get-01\n                 :ARG0 h\n                 :ARG1 (v / vote-01\n                          :ARG1 h\n                          :ARG1 (h2 / have-quant-91\n                                    :ARG3 (e2 / enough)))))"], "smus": ["The Eurovision contest", "The contest was placed in 1962.", "The contest was placed in 1963.", "The contest was placed in 1962 and 1963.", "In the Eurovision contest in 1962, Ronnie Carroll placed fourth.", "In 1963, Ronnie Carroll placed fourth in the Eurovision contest.", "battle with cancer", "He's in battle with cancer.", "He died at age 80.", "Following his battle with cancer.", "Two days ago, a man died.", "Two days ago, a man died in London.", "Mr Carroll is running.", "Mr Carroll is running for Hampstead.", "Kilburn is run by Mr Carroll.", "Mr Carroll is running Hampstead and Kilburn.", "He remains in the paper.", "If he gets enough votes he will be elected."]}, {"instance_id": "realsumm-21", "summary": "<t> McHenry , 28 , berated single mother Gina Michelle for towing her car . </t> <t> She insulted her looks and social status in footage that went viral . </t> <t> ESPN suspended the sports reporter for a week amid investigation . </t> <t> But despite thousands of calls for her to be fired , she returns this week . </t>", "summary_trees": ["# ::snt  McHenry , 28 , berated single mother Gina Michelle for towing her car . \n(b / berate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Gina\"\n                  :op2 \"Michelle\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother\n                        :ARG1-of (s / single-03))))\n      :ARG2 (t2 / tow-01\n            :ARG0 p2\n            :ARG1 (c / car\n                  :poss p)))", "# ::snt  She insulted her looks and social status in footage that went viral . \n(ii / insult-01\n      :ARG0 (s / she)\n      :ARG1 (a / and\n            :op1 (l / look-02\n                  :ARG0 s)\n            :op2 (s2 / status\n                  :mod (s3 / social)\n                  :poss s))\n      :medium (f / footage\n            :ARG1-of (g / go-08\n                  :ARG2 (v / viral))))", "# ::snt  ESPN suspended the sports reporter for a week amid investigation . \n(s / suspend-01\n      :ARG0 (p / publication\n            :name (n / name\n                  :op1 \"ESPN\"))\n      :ARG1 (p2 / person\n            :ARG0-of (r / report-01\n                  :ARG1 (s2 / sport)))\n      :duration (t / temporal-quantity\n            :quant 1\n            :unit (w / week))\n      :ARG1-of (c / cause-01\n            :ARG0 (ii / investigate-01)))", "# ::snt  But despite thousands of calls for her to be fired , she returns this week . \n(h / have-concession-91\n      :ARG1 (r / return-01\n            :ARG1 (s / she)\n            :time (w / week\n                  :mod (t / this)))\n      :ARG2 (c / call-03\n            :ARG1 (f / fire-02\n                  :ARG1 s)\n            :quant (m / multiple\n                  :op1 1000)))"], "tree": ["(t2 / tow-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Gina\" :op2 \"Michelle\")))\n    :ARG1 (c / car\n             :poss (p / person :name (n / name :op1 \"McHenry\")))))", "(h / have-rel-role-91\n   :ARG2 (m / mother\n            :ARG1 (s / single-03)))", "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (m / mother\n                               :ARG1 (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG0 p2\n             :ARG1 (c / car\n                      :poss p)))", "(ii / insult-01\n    :ARG0 (s / she)\n    :ARG1 (l / look-02\n             :ARG0 s)\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))", "(ii / insult-01\n    :ARG0 (s / she)\n    :ARG1 (s2 / status\n              :mod (s3 / social)\n              :poss s)\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral)))\n    :medium f)", "(ii / insult-01\n    :ARG0 (s / she)\n    :ARG1 (a / and\n             :op1 (l / look-02\n                     :ARG0 s)\n             :op2 (s2 / status\n                      :mod (s3 / social)\n                      :poss s))\n    :medium (f / footage\n               :ARG1 (g / go-08\n                        :ARG2 (v / viral))))", "(s / suspend-01\n   :duration (t / temporal-quantity\n                :quant 1\n                :unit (w / week)))", "(s / suspend-01\n   :ARG1 (p2 / person\n             :ARG0 (r / report-01\n                      :ARG1 (s2 / sport))))", "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :ARG1 (p2 / person\n             :ARG0 (r / report-01\n                      :ARG1 (s2 / sport))))", "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :ARG1 (p2 / person\n             :ARG0 (r / report-01\n                      :ARG1 (s2 / sport)))\n   :duration (t / temporal-quantity\n                :quant 1\n                :unit (w / week))\n   :ARG1 (c / cause-01\n            :ARG0 (ii / investigate-01)))", "(c / call-03\n   :ARG1 (f / fire-02\n            :ARG1 (s / she)))", "(c / call-03\n   :quant (m / multiple\n             :op1 1000))", "(r / return-01\n   :time (w / week\n            :mod (t / this)))", "(c / call-03\n   :ARG1 (f / fire-02\n            :ARG1 (s / she))\n   :quant (m / multiple\n             :op1 1000))", "(r / return-01\n   :ARG1 (s / she)\n   :time (w / week\n            :mod (t / this)))", "(h / have-concession-91\n   :ARG1 (r / return-01\n            :ARG1 (s / she)\n            :time (w / week\n                     :mod (t / this))))"], "smus": ["Gina Michelle towing McHenry's car.", "Single mother.", "McHenry, 28, berated single mother Gina Michelle for towing her car.", "She insulted her looks in the footage that went viral.", "In the footage that went viral, she insulted her social status.", "In the footage that went viral, she insulted her looks and social status.", "The suspension was for a week.", "Sports reporting suspended.", "ESPN suspended a sports reporter.", "ESPN suspended a sports reporter for a week over the investigation.", "Calls for her to be fired.", "Thousands of calls.", "Returns this week.", "She has received thousands of calls to be fired.", "She returns this week.", "She returns this week though."]}, {"instance_id": "realsumm-22", "summary": "<t> Chloe Owens , 27 , from Swanley , designed new app Bump 2 Breast . </t> <t> Came up with idea when pregnant with daughter , Lola , now three months . </t> <t> Says her and husband David felt like ' rabbits in headlights ' at first . </t> <t> Also struggled to remember which boob to use when breastfeeding . </t>", "summary_trees": ["# ::snt  Chloe Owens , 27 , from Swanley , designed new app Bump 2 Breast . \n(d / design-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Chloe\"\n                  :op2 \"Owens\")\n            :age (t / temporal-quantity\n                  :quant 27\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Swanley\")))\n      :ARG1 (a / app\n            :name (n3 / name\n                  :op1 \"Bump\"\n                  :op2 2\n                  :op3 \"Breast\")\n            :ARG1-of (n4 / new-01)))", "# ::snt  Came up with idea when pregnant with daughter , Lola , now three months . \n(c / come-up-11\n      :ARG1 (ii / idea)\n      :time (ii2 / impregnate-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Lola\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG2 (d / daughter))\n                  :age (t / temporal-quantity\n                        :quant 3\n                        :unit (m / month)\n                        :time (n2 / now)))))", "# ::snt  Says her and husband David felt like ' rabbits in headlights ' at first . \n(s / say-01\n      :ARG1 (f / feel-01\n            :ARG0 (a / and\n                  :op1 (s2 / she)\n                  :op2 (p / person\n                        :name (n / name\n                              :op1 \"David\")\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 s2\n                              :ARG2 (h2 / husband))))\n            :ARG1 (r / resemble-01\n                  :ARG1 a\n                  :ARG2 (b / bunny\n                        :location (h3 / head\n                              :part-of (h4 / headlights))))\n            :time (a2 / at-first)))", "# ::snt  Also struggled to remember which boob to use when breastfeeding . \n(s / struggle-02\n      :ARG0 (ii / i)\n      :ARG1 (r / remember-01\n            :ARG0 ii\n            :ARG1 (b / boob\n                  :ARG1-of (u / use-01\n                        :ARG0 ii\n                        :time (b2 / breastfeed-01\n                              :ARG0 ii))))\n      :mod (a / also))"], "tree": ["(d / design-01\n   :ARG1 (a / app\n            :name (n3 / name\n                      :op1 \"Bump\"\n                      :op2 2\n                      :op3 \"Breast\")\n            :ARG1 (n4 / new-01)))", "(ii2 / impregnate-01\n     :ARG1 (p / person\n              :name (n / name\n                       :op1 \"Lola\")\n              :ARG0 (h / have-rel-role-91\n                       :ARG2 (d / daughter))\n              :age (t / temporal-quantity\n                      :quant 3\n                      :unit (m / month)\n                      :time (n2 / now))))", "(c / come-up-11\n   :ARG1 (ii / idea)\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :name (n / name\n                                :op1 \"Lola\")\n                       :ARG0 (h / have-rel-role-91\n                                :ARG2 (d / daughter))\n                       :age (t / temporal-quantity\n                               :quant 3\n                               :unit (m / month)\n                               :time (n2 / now)))))", "(r / resemble-01\n   :ARG1 (a / and)\n   :ARG2 (b / bunny\n            :location (h3 / head\n                          :part (h4 / headlights))))", "(f / feel-01\n   :ARG0 (s2 / she)\n   :ARG1 (r / resemble-01\n            :ARG1 s2\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights)))))", "(f / feel-01\n   :ARG0 (s2 / she)\n   :ARG1 (r / resemble-01\n            :ARG1 s2\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :time (a2 / at-first))", "(s / say-01\n   :ARG1 (f / feel-01\n            :ARG0 (s2 / she)\n            :ARG1 (r / resemble-01\n                     :ARG1 s2\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part (h4 / headlights))))\n            :time (a2 / at-first)))", "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (s2 / she)\n                     :ARG2 (h2 / husband)))\n   :ARG1 (r / resemble-01\n            :ARG1 p\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :ARG1 r)", "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (s2 / she)\n                     :ARG2 (h2 / husband)))\n   :ARG1 (r / resemble-01\n            :ARG1 p\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part (h4 / headlights))))\n   :ARG1 r\n   :time (a2 / at-first))", "(u / use-01\n   :ARG0 (ii / i)\n   :time (b2 / breastfeed-01\n             :ARG0 ii))", "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG0 ii\n            :ARG1 (b / boob\n                     :ARG1 (u / use-01\n                              :ARG0 ii\n                              :time (b2 / breastfeed-01\n                                        :ARG0 ii))))\n   :mod (a / also))"], "smus": ["The new app, bump 2 breast, was designed.", "Lola is the daughter of three months now.", "The idea came up when Lola was pregnant with her daughter who is now 3 months old.", "Like bunnies on headlights heads.", "She felt like a bunny on its headlights.", "At first she felt like a bunny with headlights on their heads.", "She says she felt like a bunny on its headlights at first.", "Her husband David felt like a bunny with headlights on his head.", "At first David, her husband, felt like a bunny with headlights on his head.", "I use when I'm breast feeding.", "I also struggled to remember the boobs I used to use while breast feeding."]}, {"instance_id": "realsumm-23", "summary": "<t> Harley Street is a top destination for private cosmetic surgery . </t> <t> Patients pay thousands for treatments they hope will change their lives . </t> <t> Michael , 33 , spent \u00a3 7,500 on a hair transplant to boost his self - esteem . </t> <t> Andrea , 72 , pays for a facelift - but her husband ca n't tell the difference . </t>", "summary_trees": ["# ::snt  Harley Street is a top destination for private cosmetic surgery . \n(d / destination\n      :mod (t / top)\n      :domain (s / street\n            :name (n / name\n                  :op1 \"Harley\"\n                  :op2 \"Street\"))\n      :purpose (s2 / surgery-01\n            :ARG2 (c / cosmetic)\n            :ARG1-of (p / private-03)))", "# ::snt  Patients pay thousands for treatments they hope will change their lives . \n(p / pay-01\n      :ARG0 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (p3 / patient)))\n      :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                  :quant 1000\n                  :unit (d / dollar)))\n      :ARG3 (t / treat-03\n            :ARG1 p2\n            :ARG0-of (c / change-01\n                  :ARG1 (l / life\n                        :poss p2)\n                  :ARG1-of (h2 / hope-01\n                        :ARG0 p2))))", "# ::snt  Michael , 33 , spent \u00a3 7,500 on a hair transplant to boost his self - esteem . \n(s / spend-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Michael\")\n            :age (t / temporal-quantity\n                  :quant 33\n                  :unit (y / year)))\n      :ARG1 (t2 / transplant-01\n            :ARG1 (h / hair)\n            :ARG2 p)\n      :ARG3 (m / monetary-quantity\n            :quant 7000\n            :unit (p2 / pound))\n      :purpose (b / boost-01\n            :ARG0 p\n            :ARG1 (e / esteem-01\n                  :ARG0 p\n                  :ARG1 p)))", "# ::snt  Andrea , 72 , pays for a facelift - but her husband ca n't tell the difference . \n(c / contrast-01\n      :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Andrea\")\n                  :age (t / temporal-quantity\n                        :quant 72\n                        :unit (y / year)))\n            :ARG3 (f / facelift))\n      :ARG2 (p3 / possible-01\n            :polarity -\n            :ARG1 (k / know-04\n                  :ARG0 (p4 / person\n                        :ARG0-of (h / have-rel-role-91\n                              :ARG1 p2\n                              :ARG2 (h2 / husband)))\n                  :ARG1 (t2 / thing\n                        :ARG1-of (d / differ-02)))))"], "tree": ["(s2 / surgery-01\n    :ARG2 (c / cosmetic)\n    :ARG1 (p / private-03))", "(c / change-01\n   :ARG1 (l / life\n            :poss (p2 / person)))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient))))", "(p / pay-01\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG3 (t / treat-03\n            :ARG1 p2))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar)))\n   :ARG3 (t / treat-03\n            :ARG1 p2))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient))))", "(p / pay-01\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar))))", "(t2 / transplant-01\n    :ARG1 (h / hair)\n    :ARG2 (p / person :name (n / name :op1 \"Michael\"))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / patient))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Andrea\")\n             :age (t / temporal-quantity\n                     :quant 72\n                     :unit (y / year)))\n   :ARG3 (f / facelift))", "(p3 / possible-01\n    :polarity -\n    :ARG1 (k / know-04\n             :ARG0 (p4 / person\n                       :ARG0 (h / have-rel-role-91\n                                :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n                                :ARG2 (h2 / husband)))\n             :ARG1 (t2 / thing\n                       :ARG1 (d / differ-02))))", "(c / contrast-01\n   :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andrea\")\n                      :age (t / temporal-quantity\n                              :quant 72\n                              :unit (y / year)))\n            :ARG3 (f / facelift))\n   :ARG2 (p3 / possible-01\n             :polarity -\n             :ARG1 (k / know-04\n                      :ARG0 (p4 / person\n                                :ARG0 (h / have-rel-role-91\n                                         :ARG1 p2\n                                         :ARG2 (h2 / husband)))\n                      :ARG1 (t2 / thing\n                                :ARG1 (d / differ-02)))))"], "smus": ["Private cosmetic surgery.", "Change people's lives.", "Patients pay.", "pay thousands.", "Patients pay for their own treatments.", "Patients pay thousands.", "Patients pay thousands for their treatments.", "Patients pay.", "pay thousands.", "Michael had a hair transplant.", "Patients pay.", "Andrea, 72, pays for a facelift.", "Andrea's husband couldn't know the difference.", "Andrea, 72, pays for a facelift but her husband can't tell the difference."]}, {"instance_id": "realsumm-24", "summary": "<t> General Motors unveiled their concept car at an event in Shanghai . </t> <t> Chevrolet - FNR has ' dragonfly ' swing doors and ' crystal laser headlights ' It is self - driving , electric , and the front chairs can swivel round . </t> <t> And using iris recognition software you can start it using just your eyes . </t>", "summary_trees": ["# ::snt  General Motors unveiled their concept car at an event in Shanghai . \n(u / unveil-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"General\"\n                  :op2 \"Motors\"))\n      :ARG1 (c2 / car\n            :mod (c3 / concept)\n            :poss c)\n      :time (e / event\n            :location (c4 / city\n                  :name (n2 / name\n                        :op1 \"Shanghai\"))))", "# ::snt  Chevrolet - FNR has ' dragonfly ' swing doors and ' crystal laser headlights ' It is self - driving , electric , and the front chairs can swivel round . \n(m / multi-sentence\n      :snt1 (h / have-03\n            :ARG0 (c / car-make\n                  :name (n / name\n                        :op1 \"Chevrolet\"\n                        :op2 \"FNR\"))\n            :ARG1 (a / and\n                  :op1 (d / door\n                        :mod (s / swing)\n                        :mod (d2 / dragonfly))\n                  :op2 (h2 / headlight\n                        :mod (l / laser\n                              :mod (c2 / crystal)))))\n      :snt2 (a2 / and\n            :op1 (d3 / drive-01\n                  :ARG0 (s2 / self)\n                  :ARG1 (ii / it))\n            :op2 (e / electric\n                  :domain ii)\n            :op3 (p / possible-01\n                  :ARG1 (s3 / swivel-01\n                        :ARG1 (c3 / chair\n                              :mod (f / front))\n                        :direction (r / round)))))", "# ::snt  And using iris recognition software you can start it using just your eyes . \n(m / multi-sentence\n      :snt1 (a / and\n            :op2 (p / possible-01\n                  :ARG1 (s / start-01\n                        :ARG0 (y / you)\n                        :ARG1 (ii / it)\n                        :manner (u / use-01\n                              :ARG0 y\n                              :ARG1 (e / eye\n                                    :mod (j / just)\n                                    :part-of (y2 / you))))\n                  :manner (u2 / use-01\n                        :ARG0 y\n                        :ARG1 (s2 / software\n                              :ARG0-of (r / recognize-02\n                                    :ARG1 (ii2 / iris)))))))"], "tree": ["(u / unveil-01\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss (c / company :name (n / name :op1 \"General\" :op2 \"Motors\"))))", "(u / unveil-01\n   :time (e / event\n            :location (c4 / city\n                          :name (n2 / name\n                                    :op1 \"Shanghai\"))))", "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss c))", "(u / unveil-01\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss (c / company :name (n / name :op1 \"General\" :op2 \"Motors\")))\n   :time (e / event\n            :location (c4 / city\n                          :name (n2 / name\n                                    :op1 \"Shanghai\"))))", "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss c)\n   :time (e / event\n            :location (c4 / city\n                          :name (n2 / name\n                                    :op1 \"Shanghai\"))))", "(u / unveil-01\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss (c / company :name (n / name :op1 \"General\" :op2 \"Motors\"))))", "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss c))", "(d3 / drive-01\n    :ARG0 (s2 / self)\n    :ARG1 (ii / it))", "(s3 / swivel-01\n    :ARG1 (c3 / chair\n              :mod (f / front))\n    :direction (r / round))", "(p / possible-01\n   :ARG1 (s3 / swivel-01\n             :ARG1 (c3 / chair\n                       :mod (f / front))\n             :direction (r / round)))", "(u2 / use-01\n    :ARG1 (s2 / software\n              :ARG0 (r / recognize-02\n                       :ARG1 (ii2 / iris))))", "(u / use-01\n   :ARG1 (e / eye\n            :mod (j / just)\n            :part (y2 / you)))", "(u2 / use-01\n    :ARG0 (y / you)\n    :ARG1 (s2 / software\n              :ARG0 (r / recognize-02\n                       :ARG1 (ii2 / iris))))", "(u / use-01\n   :ARG0 (y / you)\n   :ARG1 (e / eye\n            :mod (j / just)\n            :part (y2 / you)))", "(s / start-01\n   :ARG0 (y / you)\n   :ARG1 (ii / it)\n   :manner (u / use-01\n              :ARG0 y\n              :ARG1 (e / eye\n                       :mod (j / just)\n                       :part (y2 / you))))", "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you)\n            :ARG1 (ii / it)\n            :manner (u / use-01\n                       :ARG0 y\n                       :ARG1 (e / eye\n                                :mod (j / just)\n                                :part (y2 / you)))))"], "smus": ["General Motors' concept car unveiled.", "The unveiling took place at an event in Shanghai.", "General Motors unveiled their concept car.", "General Motors' concept car unveiled at an event in Shanghai.", "General Motors unveiled its concept car at an event in Shanghai.", "General Motors' concept car unveiled.", "General Motors unveiled their concept car.", "It's self driving.", "The front chairs swivel round.", "The front chairs can swivel round.", "using iris recognition software.", "using just your eyes.", "You are using IRIS recognition software.", "You're using just your eyes.", "You'll start it using just your eyes.", "You can start it using just your eyes."]}, {"instance_id": "realsumm-25", "summary": "<t> Candidate Lynne Abraham says she suffered a momentary drop in blood pressure and that it 's never happened before . </t> <t> While a doctor kept her from returning to the debate , the 74-year - old former district attorney says she will not let the incident affect her campaign . </t>", "summary_trees": ["# ::snt  Candidate Lynne Abraham says she suffered a momentary drop in blood pressure and that it 's never happened before . \n(s / say-01\n      :ARG0 (c / candidate\n            :name (n / name\n                  :op1 \"Lynne\"\n                  :op2 \"Abraham\"))\n      :ARG1 (a / and\n            :op1 (s2 / suffer-01\n                  :ARG0 c\n                  :ARG1 (d / drop-01\n                        :ARG1 (p / pressure\n                              :mod (b / blood))\n                        :mod (m / momentary)))\n            :op2 (h / have-polarity-91\n                  :ARG1 d\n                  :ARG2 -\n                  :time (e / ever)\n                  :time (b2 / before))))", "# ::snt  While a doctor kept her from returning to the debate , the 74-year - old former district attorney says she will not let the incident affect her campaign . \n(s / say-01\n      :ARG0 (a / attorney\n            :mod (d / district)\n            :time (f / former)\n            :age (t / temporal-quantity\n                  :quant 74\n                  :unit (y / year)))\n      :ARG1 (l / let-01\n            :polarity -\n            :ARG0 a\n            :ARG1 (a2 / affect-01\n                  :ARG0 (ii / incident)\n                  :ARG1 (c / campaign-01\n                        :ARG0 a)))\n      :concession (k / keep-04\n            :ARG0 (d2 / doctor)\n            :ARG1 a\n            :ARG2 (r / return-01\n                  :ARG1 a\n                  :ARG4 (d3 / debate-01))))"], "tree": ["(d / drop-01\n   :ARG1 (p / pressure\n            :mod (b / blood)))", "(h / have-polarity-91\n   :time (e / ever)\n   :time (b2 / before))", "(h / have-polarity-91\n   :ARG1 (d / drop-01)\n   :ARG2 -\n   :time (e / ever)\n   :time (b2 / before))", "(d / drop-01\n   :ARG1 (p / pressure\n            :mod (b / blood))\n   :mod (m / momentary))", "(s2 / suffer-01\n    :ARG0 (c / candidate :name (n / name :op1 \"Lynne\" :op2 \"Abraham\"))\n    :ARG1 (d / drop-01\n             :ARG1 (p / pressure\n                      :mod (b / blood))\n             :mod (m / momentary)))", "(s / say-01\n   :ARG0 (c / candidate\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\"))\n   :ARG1 (h / have-polarity-91\n            :ARG1 (d / drop-01)\n            :ARG2 -\n            :time (e / ever)\n            :time (b2 / before)))", "(l / let-01\n   :polarity -\n   :ARG0 (a / attorney)\n   :ARG1 (a2 / affect-01\n             :ARG0 (ii / incident)\n             :ARG1 (c / campaign-01\n                      :ARG0 a)))", "(s / say-01\n   :ARG0 (a / attorney\n            :mod (d / district)\n            :time (f / former)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year)))\n   :ARG1 (l / let-01\n            :polarity -\n            :ARG0 a\n            :ARG1 (a2 / affect-01\n                      :ARG0 (ii / incident)\n                      :ARG1 (c / campaign-01\n                               :ARG0 a))))"], "smus": ["Drop in blood pressure", "Never before.", "The drop never happened before.", "Momentary drop in blood pressure", "Candide Lynne Abraham suffered a momentary drop in blood pressure.", "\"There has never been a drop before,\" says Candide Lynne Abraham.", "The attorney didn't let the incident affect his campaign.", "A former 74-year-old district attorney says he won't let the incident have an effect on his campaign."]}, {"instance_id": "realsumm-26", "summary": "<t> Bundles of notes spilled onto Interstate 20 in Albilene , Texas , on Friday . </t> <t> Passenger door of vehicle flung open - releasing the money onto the road . </t> <t> Motorists pulled over and abandoned their vehicles to pick up the cash . </t> <t> Police have warned anyone caught with the money will be arrested . </t>", "summary_trees": ["# ::snt  Bundles of notes spilled onto Interstate 20 in Albilene , Texas , on Friday . \n(s / spill-over-02\n      :ARG1 (b / bundle\n            :consist-of (n / note))\n      :ARG2 (r / road\n            :name (n2 / name\n                  :op1 \"Interstate\"\n                  :op2 20)\n            :location (c / city\n                  :name (n3 / name\n                        :op1 \"Alilene\")\n                  :location (s2 / state\n                        :name (n4 / name\n                              :op1 \"Texas\"))))\n      :time (d / date-entity\n            :weekday (f / friday)))", "# ::snt  Passenger door of vehicle flung open - releasing the money onto the road . \n(o / open-01\n      :ARG1 (d / door\n            :part-of (v / vehicle)\n            :mod (p / passenger))\n      :ARG0-of (r / release-01\n            :ARG1 (m / money)\n            :ARG2 (r2 / road)))", "# ::snt  Motorists pulled over and abandoned their vehicles to pick up the cash . \n(a / and\n      :op1 (p / pull-over-05\n            :ARG1 (m / motorist))\n      :op2 (a2 / abandon-01\n            :ARG0 m\n            :ARG1 (v / vehicle\n                  :poss m))\n      :purpose (p2 / pick-up-04\n            :ARG0 m\n            :ARG1 (c / cash)))", "# ::snt  Police have warned anyone caught with the money will be arrested . \n(w / warn-01\n      :ARG0 (p / police)\n      :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                  :ARG1-of (c / catch-02\n                        :ARG2 (h / have-03\n                              :ARG0 a2\n                              :ARG1 (m / money))))))"], "tree": ["(s / spill-over-02\n   :time (d / date-entity\n            :weekday (f / friday)))", "(r / release-01\n   :ARG1 (m / money)\n   :ARG2 (r2 / road))", "(o / open-01\n   :ARG1 (d / door\n            :part (v / vehicle)\n            :mod (p / passenger)))", "(o / open-01\n   :ARG1 (d / door\n            :part (v / vehicle)\n            :mod (p / passenger))\n   :ARG0 (r / release-01\n            :ARG1 (m / money)\n            :ARG2 (r2 / road)))", "(r / release-01\n   :ARG1 (m / money)\n   :ARG2 (r2 / road))", "(p2 / pick-up-04\n    :ARG0 (m / motorist)\n    :ARG1 (c / cash))", "(a2 / abandon-01\n    :ARG1 (v / vehicle\n             :poss (m / motorist)))", "(a2 / abandon-01\n    :ARG0 (m / motorist)\n    :ARG1 (v / vehicle\n             :poss m))", "(c / catch-02\n   :ARG2 (h / have-03\n            :ARG0 (a2 / anyone)\n            :ARG1 (m / money)))", "(a / arrest-01\n   :ARG1 (a2 / anyone\n             :ARG1 (c / catch-02\n                      :ARG2 (h / have-03\n                               :ARG0 a2\n                               :ARG1 (m / money)))))", "(w / warn-01\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (h / have-03\n                                        :ARG0 a2\n                                        :ARG1 (m / money))))))", "(w / warn-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1 (c / catch-02\n                               :ARG2 (h / have-03\n                                        :ARG0 a2\n                                        :ARG1 (m / money))))))"], "smus": ["spilled over Friday.", "releasing money on the road.", "The passenger door of the vehicle opened.", "The passenger door of the vehicle opened, releasing money from the road.", "releasing money on the road.", "The motorists will pick up cash.", "The vehicles of motorists are abandoned.", "The motorists abandoned their vehicles.", "if anyone have money, they get caught.", "Anyone caught with money will be arrested.", "Anyone caught with money will be warned to be arrested.", "Police have warned that anyone caught with money will be arrested."]}, {"instance_id": "realsumm-27", "summary": "<t> Godfrey Elfwick recruited via Twitter to appear on World Have Your Say . </t> <t> Came after claims he had never seen the Star Wars franchise before . </t> <t> On the show he described the films as both anti - women and anti - gay . </t> <t> Also said that Darth Vader was a black man and a ' really bad racial stereotype ' . </t>", "summary_trees": ["# ::snt  Godfrey Elfwick recruited via Twitter to appear on World Have Your Say . \n(r / recruit-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Godfrey\"\n                  :op2 \"Elfwick\"))\n      :ARG2 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                  :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))\n      :medium (p2 / publication\n            :name (n3 / name\n                  :op1 \"Twitter\")))", "# ::snt  Came after claims he had never seen the Star Wars franchise before . \n(b / be-temporally-at-91\n      :ARG1 (e / event)\n      :ARG2 (a / after\n            :op1 (c / claim-01\n                  :ARG0 (h / he)\n                  :ARG1 (s / see-01\n                        :polarity -\n                        :ARG0 h\n                        :ARG1 (f / franchise\n                              :name (n / name\n                                    :op1 \"Star\"\n                                    :op2 \"Wars\"))\n                        :time (e2 / ever)\n                        :time (b2 / before)))))", "# ::snt  On the show he described the films as both anti - women and anti - gay . \n(d / describe-01\n      :ARG0 (h / he)\n      :ARG1 (f / film)\n      :ARG2 (a / and\n            :op1 (o / oppose-01\n                  :ARG0 f\n                  :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                  :ARG0 f\n                  :ARG1 (g / gay-01)))\n      :time (s / show-04))", "# ::snt  Also said that Darth Vader was a black man and a ' really bad racial stereotype ' . \n(s / say-01\n      :ARG1 (a / and\n            :op1 (m / man\n                  :ARG1-of (b / black-05)\n                  :domain (p / person\n                        :name (n / name\n                              :op1 \"Darth\"\n                              :op2 \"Vader\")))\n            :op2 (s2 / stereotype-01\n                  :ARG2 p\n                  :mod (r / race)\n                  :ARG1-of (b2 / bad-07\n                        :degree (r2 / really))))\n      :mod (a2 / also))"], "tree": ["(r / recruit-01\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))", "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\")))", "(a / appear-01\n   :medium (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(a / appear-01\n   :ARG1 (p / person :name (n / name :op1 \"Godfrey\" :op2 \"Elfwick\"))\n   :medium (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))", "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\"))))", "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\")))\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))", "(s / see-01\n   :polarity -\n   :time (e2 / ever)\n   :time (b2 / before))", "(s / see-01\n   :ARG1 (f / franchise\n            :name (n / name\n                     :op1 \"Star\"\n                     :op2 \"Wars\")))", "(s / see-01\n   :polarity -\n   :ARG0 (h / he)\n   :ARG1 (f / franchise\n            :name (n / name\n                     :op1 \"Star\"\n                     :op2 \"Wars\"))\n   :time (e2 / ever)\n   :time (b2 / before))", "(c / claim-01\n   :ARG1 (s / see-01\n            :polarity -\n            :ARG0 (h / he)\n            :ARG1 (f / franchise\n                     :name (n / name\n                              :op1 \"Star\"\n                              :op2 \"Wars\"))\n            :time (e2 / ever)\n            :time (b2 / before)))", "(c / claim-01\n   :ARG0 (h / he)\n   :ARG1 (s / see-01\n            :polarity -\n            :ARG0 h\n            :ARG1 (f / franchise\n                     :name (n / name\n                              :op1 \"Star\"\n                              :op2 \"Wars\"))\n            :time (e2 / ever)\n            :time (b2 / before)))", "(b / be-temporally-at-91\n   :ARG2 (a / after\n            :op1 (c / claim-01\n                    :ARG0 (h / he)\n                    :ARG1 (s / see-01\n                             :polarity -\n                             :ARG0 h\n                             :ARG1 (f / franchise\n                                      :name (n / name\n                                               :op1 \"Star\"\n                                               :op2 \"Wars\"))\n                             :time (e2 / ever)\n                             :time (b2 / before)))))", "(o2 / oppose-01\n    :ARG0 (f / film)\n    :ARG1 (g / gay-01))", "(o / oppose-01\n   :ARG0 (f / film)\n   :ARG1 (w / woman))", "(d / describe-01\n   :ARG0 (h / he)\n   :ARG1 (f / film))", "(d / describe-01\n   :ARG0 (h / he)\n   :ARG1 (f / film)\n   :ARG2 (o / oppose-01\n            :ARG0 f\n            :ARG1 (w / woman)))", "(d / describe-01\n   :ARG0 (h / he)\n   :ARG1 (f / film)\n   :ARG2 (o2 / oppose-01\n             :ARG0 f\n             :ARG1 (g / gay-01)))", "(d / describe-01\n   :ARG0 (h / he)\n   :ARG1 (f / film)\n   :ARG2 (o / oppose-01\n            :ARG0 f\n            :ARG1 (w / woman))\n   :time (s / show-04))", "(s2 / stereotype-01\n    :ARG2 (p / person :name (n / name :op1 \"Darth\" :op2 \"Vader\"))\n    :mod (r / race)\n    :ARG1 (b2 / bad-07\n              :degree (r2 / really)))", "(s / say-01\n   :ARG1 (s2 / stereotype-01\n             :ARG2 (p / person :name (n / name :op1 \"Darth\" :op2 \"Vader\"))\n             :mod (r / race)\n             :ARG1 (b2 / bad-07\n                       :degree (r2 / really)))\n   :mod (a2 / also)\n   :mod a2)", "(s / say-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG1 (b / black-05)\n                    :domain (p / person\n                               :name (n / name\n                                        :op1 \"Darth\"\n                                        :op2 \"Vader\")))\n            :op2 (s2 / stereotype-01\n                     :ARG2 p\n                     :mod (r / race)\n                     :ARG1 (b2 / bad-07\n                               :degree (r2 / really))))\n   :mod (a2 / also))"], "smus": ["Recruited on Twitter.", "Godfrey Elfwick was recruited.", "appeared on World Have Your Say.", "Godfrey Elfwick will appear on World Have Your Say.", "Godfrey Elfwick was recruited to appear on World Have Your Say.", "Godfrey Elfwick was recruited to appear on World Have Your Say on Twitter.", "Never seen before.", "Star Wars is seen.", "He has never seen the Star Wars franchise before.", "He has never seen the Star Wars franchise before, according to claims.", "He claims he has never seen the Star Wars franchise before.", "After he claims he has never seen the Star Wars franchise before.", "The films are anti-gay.", "The films are anti-women.", "He described the films.", "He described the films as anti-women.", "He described the films as anti-gay.", "During the show, he described the films as anti-woman.", "Thearth Vader racial stereotype is really bad.", "Also, the racial stereotype of Darth Vader is really bad, he said.", "Also, Darth Vader was said to be a black man and that racial stereotypes are really bad."]}, {"instance_id": "realsumm-28", "summary": "<t> Cuban - born Kathy Ferreiro 's curves have attracted fans on social media . </t> <t> Bikini - loving beach babe says photos of her booty are all natural . </t> <t> Miami - based party girl is hoping to become next Kim Kardashian . </t> <t> Has a huge following in Colombia and other Latin American countries . </t>", "summary_trees": ["# ::snt  Cuban - born Kathy Ferreiro 's curves have attracted fans on social media . \n(a / attract-01\n      :ARG0 (c / curve\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Kathy\"\n                        :op2 \"Ferreiro\")\n                  :ARG1-of (b / bear-02\n                        :location (c2 / country\n                              :name (n2 / name\n                                    :op1 \"Cuba\")))))\n      :ARG1 (f / fan)\n      :medium (m / media\n            :mod (s / social)))", "# ::snt  Bikini - loving beach babe says photos of her booty are all natural . \n(s / say-01\n      :ARG0 (b / babe\n            :ARG0-of (l / love-01\n                  :ARG1 (b2 / bikini))\n            :location (b3 / beach)\n            :part (b4 / booty))\n      :ARG1 (n / natural-03\n            :ARG1 (p / photograph-01\n                  :ARG1 b4)\n            :mod (a / all)))", "# ::snt  Miami - based party girl is hoping to become next Kim Kardashian . \n(h / hope-01\n      :ARG0 (g / girl\n            :mod (p / party)\n            :ARG1-of (b / base-01\n                  :location (c / city\n                        :name (n / name\n                              :op1 \"Miami\"))))\n      :ARG1 (b2 / become-01\n            :ARG1 g\n            :ARG2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")\n                  :mod (n3 / next))))", "# ::snt  Has a huge following in Colombia and other Latin American countries . \n(f / follow-02\n      :ARG1 (ii / it)\n      :mod (h / huge)\n      :location (a / and\n            :op1 (c / country\n                  :name (n / name\n                        :op1 \"Colombia\"))\n            :op2 (c2 / country\n                  :location (w / world-region\n                        :name (n2 / name\n                              :op1 \"Latin\"\n                              :op2 \"America\"))\n                  :mod (o / other))))"], "tree": ["(b / bear-02\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Cuba\")))", "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\"))))))", "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\")))))\n   :ARG1 (f / fan))", "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1 (b / bear-02\n                              :location (c2 / country\n                                            :name (n2 / name\n                                                      :op1 \"Cuba\")))))\n   :ARG1 (f / fan)\n   :medium (m / media\n              :mod (s / social)))", "(n / natural-03\n   :ARG1 (p / photograph-01\n            :ARG1 (b4 / booty)))", "(n / natural-03\n   :ARG1 (p / photograph-01\n            :ARG1 (b4 / booty))\n   :mod (a / all))", "(b / base-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Miami\")))", "(f / follow-02\n   :mod (h / huge)\n   :location (c / country\n                :name (n / name\n                         :op1 \"Colombia\")))", "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge)\n   :location (c / country\n                :name (n / name\n                         :op1 \"Colombia\")))", "(f / follow-02\n   :mod (h / huge)\n   :location (c2 / country\n                 :location (w / world-region\n                              :name (n2 / name\n                                        :op1 \"Latin\"\n                                        :op2 \"America\"))\n                 :mod (o / other)))", "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge)\n   :location (c2 / country\n                 :location (w / world-region\n                              :name (n2 / name\n                                        :op1 \"Latin\"\n                                        :op2 \"America\"))\n                 :mod (o / other)))", "(f / follow-02\n   :mod (h / huge)\n   :location (a / and\n                :op1 (c / country\n                        :name (n / name\n                                 :op1 \"Colombia\"))\n                :op2 (c2 / country\n                         :location (w / world-region\n                                      :name (n2 / name\n                                                :op1 \"Latin\"\n                                                :op2 \"America\"))\n                         :mod (o / other))))", "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge)\n   :location (a / and\n                :op1 (c / country\n                        :name (n / name\n                                 :op1 \"Colombia\"))\n                :op2 (c2 / country\n                         :location (w / world-region\n                                      :name (n2 / name\n                                                :op1 \"Latin\"\n                                                :op2 \"America\"))\n                         :mod (o / other))))"], "smus": ["Born in Cuba.", "Kathy Ferreiro's curves of being born in Cuba have attracted :", "Kathy Ferreiro's Cuban birth curves have attracted fans.", "Kathy Ferreiro's Cuban birth curves have attracted fans through social media.", "The photos of the booty are natural.", "The photos of the booty are all natural.", "Based in Miami.", "Huge follow-up in Colombia.", "It is a huge follower in Colombia.", "There is huge follow-up in other Latin American countries.", "It's a huge follower in other Latin American countries.", "There is huge follow in Colombia and other Latin American countries.", "It has been a huge follower in Colombia and other Latin American countries."]}, {"instance_id": "realsumm-29", "summary": "<t> Thousands of accounts vanished from the social network last week . </t> <t> Twitter said it had received numerous reports about terror - promoting users . </t> <t> Decided to suspend 10,000 accounts for making threats of violence . </t> <t> Suspensions were almost certainly linked to a campaign by ' hacktavist ' collective Anonymous targeting online jihadis . </t>", "summary_trees": ["# ::snt  Thousands of accounts vanished from the social network last week . \n(v / vanish-01\n      :ARG1 (a / account\n            :quant (m / multiple\n                  :op1 1000))\n      :location (n / network\n            :ARG1-of (s / social-03))\n      :time (w / week\n            :mod (l / last)))", "# ::snt  Twitter said it had received numerous reports about terror - promoting users . \n(s / say-01\n      :ARG0 (p / publication\n            :name (n / name\n                  :op1 \"Twitter\"))\n      :ARG1 (r / receive-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                  :ARG1 (p2 / person\n                        :ARG0-of (u / use-01)\n                        :ARG0-of (p3 / promote-02\n                              :ARG1 (t / terror)))\n                  :quant (n2 / numerous))))", "# ::snt  Decided to suspend 10,000 accounts for making threats of violence . \n(d / decide-01\n      :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                  :quant 10000)\n            :ARG1-of (c / cause-01\n                  :ARG0 (t / threaten-01\n                        :ARG1 (v / violence)))))", "# ::snt  Suspensions were almost certainly linked to a campaign by ' hacktavist ' collective Anonymous targeting online jihadis . \n(l / link-01\n      :ARG1 (s / suspend-01)\n      :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                  :name (n / name\n                        :op1 \"Anonymous\")\n                  :mod (h / hacktavist))\n            :ARG0-of (t / target-01\n                  :ARG1 (j / jihadi\n                        :mod (o / online))))\n      :mod (c3 / certain\n            :mod (a / almost)))"], "tree": ["(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000))\n   :location (n / network\n                :ARG1 (s / social-03))\n   :time (w / week\n            :mod (l / last)))", "(r2 / report-01\n    :ARG1 (p2 / person\n              :ARG0 (u / use-01)\n              :ARG0 (p3 / promote-02\n                        :ARG1 (t / terror))))", "(r2 / report-01\n    :ARG1 (p2 / person\n              :ARG0 (u / use-01)\n              :ARG0 (p3 / promote-02\n                        :ARG1 (t / terror)))\n    :quant (n2 / numerous))", "(r / receive-01\n   :ARG0 (p / publication :name (n / name :op1 \"Twitter\"))\n   :ARG1 (r2 / report-01\n             :ARG1 (p2 / person\n                       :ARG0 (u / use-01)\n                       :ARG0 (p3 / promote-02\n                                 :ARG1 (t / terror)))\n             :quant (n2 / numerous)))", "(s / say-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"Twitter\"))\n   :ARG1 (r / receive-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                      :ARG1 (p2 / person\n                                :ARG0 (u / use-01)\n                                :ARG0 (p3 / promote-02\n                                          :ARG1 (t / terror)))\n                      :quant (n2 / numerous))))", "(r2 / report-01\n    :ARG1 (p2 / person\n              :ARG0 (u / use-01)\n              :ARG0 (p3 / promote-02\n                        :ARG1 (t / terror))))", "(s / suspend-01\n   :ARG1 (a / account\n            :quant 10000))", "(c / cause-01\n   :ARG0 (t / threaten-01\n            :ARG1 (v / violence)))", "(s / suspend-01\n   :ARG1 (a / account\n            :quant 10000)\n   :ARG1 (c / cause-01\n            :ARG0 (t / threaten-01\n                     :ARG1 (v / violence))))", "(d / decide-01\n   :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                     :quant 10000)\n            :ARG1 (c / cause-01\n                     :ARG0 (t / threaten-01\n                              :ARG1 (v / violence)))))", "(t / target-01\n   :ARG1 (j / jihadi\n            :mod (o / online)))", "(l / link-01\n   :mod (c3 / certain\n            :mod (a / almost)))", "(c / campaign-01\n   :ARG0 (c2 / collective\n             :name (n / name\n                      :op1 \"Anonymous\")\n             :mod (h / hacktavist)))", "(c / campaign-01\n   :ARG0 (c2 / collective\n             :name (n / name\n                      :op1 \"Anonymous\")\n             :mod (h / hacktavist))\n   :ARG0 (t / target-01\n            :ARG1 (j / jihadi\n                     :mod (o / online))))", "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")\n                      :mod (h / hacktavist))\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online)))))", "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")\n                      :mod (h / hacktavist))\n            :ARG0 (t / target-01\n                     :ARG1 (j / jihadi\n                              :mod (o / online))))\n   :mod (c3 / certain\n            :mod (a / almost)))"], "smus": ["Thousands of accounts vanished from the social network last week.", "Reports of users promoting terror", "There have been numerous reports of users promoting terror.", "Twitter has received numerous reports of users promoting terror.", "Twitter said it had received numerous reports of users promoting terror.", "Reports of users promoting terror", "Suspend 10,000 accounts.", "Because of threats of violence.", "10000 accounts suspended over threats of violence", "10000 accounts were decided to suspend over threats of violence.", "Online jihadis are targeted.", "Almost certainly linked.", "Anonymous is a hacktavist collective campaign.", "Anonymous is a hacktavist collective campaign targeting online jihadis.", "The suspensions were linked to an anonymous hacktavist collective's campaign targeting online jihadis.", "The suspensions are almost certainly linked to an anonymous hacktavist collective's campaign targeting online jihadis."]}, {"instance_id": "realsumm-30", "summary": "<t> Locals say power cuts the weekend before raid could be linked to heist . </t> <t> They also tell of suspicious ' drilling ' noises on evening of Good Friday . </t> <t> Group seen returning to scene on Saturday - a day after initial break - in . </t> <t> Police admit they did n't respond after alarm went off early on Friday . </t>", "summary_trees": ["# ::snt  Locals say power cuts the weekend before raid could be linked to heist . \n(s / say-01\n      :ARG0 (p / person\n            :ARG1-of (l / local-02))\n      :ARG1 (p2 / possible-01\n            :ARG1 (l2 / link-01\n                  :ARG1 (c / cut-02\n                        :ARG1 (p3 / power)\n                        :time (w / weekend)\n                        :time (b / before\n                              :op1 (r / raid-01)))\n                  :ARG2 (h / heist))))", "# ::snt  They also tell of suspicious ' drilling ' noises on evening of Good Friday . \n(t / tell-01\n      :ARG0 (t2 / they)\n      :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1-of (s / suspicious-03)\n            :time (d2 / date-entity\n                  :weekday (f / friday)\n                  :dayperiod (e / evening)))\n      :mod (a / also))", "# ::snt  Group seen returning to scene on Saturday - a day after initial break - in . \n(s / see-01\n      :ARG1 (r / return-01\n            :ARG1 (g / group)\n            :ARG4 (s2 / scene)\n            :time (d / date-entity\n                  :weekday (s3 / saturday))\n            :time (a / after\n                  :op1 (b / break-02\n                        :mod (ii / initial))\n                  :quant (t / temporal-quantity\n                        :quant 1\n                        :unit (d2 / day)))))", "# ::snt  Police admit they did n't respond after alarm went off early on Friday . \n(a / admit-01\n      :ARG0 (p / police)\n      :ARG1 (r / respond-01\n            :polarity -\n            :ARG0 p\n            :time (a2 / after\n                  :op1 (g / go-off-16\n                        :ARG1 (a3 / alarm-01)\n                        :time (e / early\n                              :op1 (d / date-entity\n                                    :weekday (f / friday)))))))"], "tree": ["(c / cut-02\n   :time (w / weekend)\n   :time (b / before\n            :op1 (r / raid-01)))", "(c / cut-02\n   :ARG1 (p3 / power)\n   :time (w / weekend)\n   :time (b / before\n            :op1 (r / raid-01)))", "(l2 / link-01\n    :ARG1 (c / cut-02\n             :ARG1 (p3 / power)\n             :time (w / weekend)\n             :time (b / before\n                      :op1 (r / raid-01)))\n    :ARG2 (h / heist))", "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG1 (c / cut-02\n                       :ARG1 (p3 / power)\n                       :time (w / weekend)\n                       :time (b / before\n                                :op1 (r / raid-01)))\n              :ARG2 (h / heist)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG1 (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :ARG1 (p3 / power)\n                                :time (w / weekend)\n                                :time (b / before\n                                         :op1 (r / raid-01)))\n                       :ARG2 (h / heist))))", "(t / tell-01\n   :ARG0 (t2 / they)\n   :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1 (s / suspicious-03)\n            :time (d2 / date-entity\n                      :weekday (f / friday)\n                      :dayperiod (e / evening))))", "(t / tell-01\n   :ARG0 (t2 / they)\n   :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1 (s / suspicious-03)\n            :time (d2 / date-entity\n                      :weekday (f / friday)\n                      :dayperiod (e / evening)))\n   :mod (a / also))", "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene))", "(r / return-01\n   :time (d / date-entity\n            :weekday (s3 / saturday)))", "(r / return-01\n   :ARG1 (g / group)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))", "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))", "(r / return-01\n   :time (d / date-entity\n            :weekday (s3 / saturday))\n   :time (a / after\n            :op1 (b / break-02\n                    :mod (ii / initial))\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (d2 / day))))", "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene)\n   :time (d / date-entity\n            :weekday (s3 / saturday))\n   :time (a / after\n            :op1 (b / break-02\n                    :mod (ii / initial))\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (d2 / day))))", "(g / go-off-16\n   :time (e / early\n            :op1 (d / date-entity\n                    :weekday (f / friday))))", "(g / go-off-16\n   :ARG1 (a3 / alarm-01)\n   :time (e / early\n            :op1 (d / date-entity\n                    :weekday (f / friday))))", "(r / respond-01\n   :polarity -\n   :time (a2 / after\n             :op1 (g / go-off-16\n                     :time (e / early\n                              :op1 (d / date-entity\n                                      :weekday (f / friday))))))", "(r / respond-01\n   :polarity -\n   :ARG0 (p / police)\n   :time (a2 / after\n             :op1 (g / go-off-16\n                     :ARG1 (a3 / alarm-01)\n                     :time (e / early\n                              :op1 (d / date-entity\n                                      :weekday (f / friday))))))", "(a / admit-01\n   :ARG0 (p / police)\n   :ARG1 (r / respond-01\n            :polarity -\n            :ARG0 p\n            :time (a2 / after\n                      :op1 (g / go-off-16\n                              :ARG1 (a3 / alarm-01)\n                              :time (e / early\n                                       :op1 (d / date-entity\n                                               :weekday (f / friday)))))))"], "smus": ["Cuts over the weekend before the raid.", "Power cuts over the weekend before raid", "Power cuts over the weekend before the raid were linked to the heist.", "Power cuts over the weekend before the raid could have been linked to the heist.", "Locals say power cuts over the weekend before the raid could have been linked to the heist.", "They tell of the suspicious drill noises Friday evening.", "They also tell of the suspicious drill noises Friday evening.", "The Group is returning to the scene.", "Returning Saturday.", "Group will be returning Saturday.", "The Group will be returning to the scene Saturday.", "The return will take place Saturday, a day after the initial break.", "The Group was returning to the scene Saturday, a day after the initial break.", "The go-off was early Friday.", "The alarm went off early Friday.", "After the early going off didn't respond.", "Police didn't respond after the alarm went off early Friday.", "Police admit they didn't respond after the alarm went off early Friday."]}, {"instance_id": "realsumm-31", "summary": "<t> Shiraz Nawaz felt lucky to be alive after the flames shot out the manhole . </t> <t> The fire erupted just moments after he walked over it in the busy street . </t> <t> Incredibly no - one was hurt in the incident after Nawaz evacuated the area . </t>", "summary_trees": ["# ::snt  Shiraz Nawaz felt lucky to be alive after the flames shot out the manhole . \n(f / feel-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Shiraz\"\n                  :op2 \"Nawaz\"))\n      :ARG1 (l / lucky\n            :domain p\n            :ARG1-of (c / cause-01\n                  :ARG0 (l2 / live-01\n                        :ARG0 p)))\n      :time (a / after\n            :op1 (s / shoot-02\n                  :ARG0 (f2 / flame)\n                  :ARG3 (m / manhole))))", "# ::snt  The fire erupted just moments after he walked over it in the busy street . \n(e / erupt-01\n      :ARG1 (f / fire)\n      :time (a / after\n            :op1 (w / walk-01\n                  :ARG0 (h / he)\n                  :ARG2 (o / over\n                        :op1 f)\n                  :location (s / street\n                        :ARG1-of (b / busy-02)))\n            :quant (m / moment\n                  :mod (j / just))))", "# ::snt  Incredibly no - one was hurt in the incident after Nawaz evacuated the area . \n(h / hurt-01\n      :ARG1 (n / no-one)\n      :manner (ii / incredible)\n      :time (ii2 / incident)\n      :time (a / after\n            :op1 (e / evacuate-01\n                  :ARG0 (p / person\n                        :name (n2 / name\n                              :op1 \"Nawaz\"))\n                  :ARG1 (a2 / area))))"], "tree": ["(c / cause-01\n   :ARG0 (l2 / live-01\n             :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\"))))", "(s / shoot-02\n   :ARG0 (f2 / flame)\n   :ARG3 (m / manhole))", "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p))))", "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p\n            :ARG1 (c / cause-01\n                     :ARG0 (l2 / live-01\n                               :ARG0 p)))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame)\n                    :ARG3 (m / manhole))))", "(w / walk-01\n   :ARG0 (h / he)\n   :ARG2 (o / over\n            :op1 (f / fire))\n   :location (s / street\n                :ARG1 (b / busy-02)))", "(e / erupt-01\n   :time (a / after\n            :op1 (w / walk-01\n                    :location (s / street))\n            :quant (m / moment\n                      :mod (j / just))))", "(e / erupt-01\n   :ARG1 (f / fire)\n   :time (a / after\n            :op1 (w / walk-01\n                    :ARG0 (h / he)\n                    :ARG2 (o / over\n                             :op1 f)\n                    :location (s / street\n                                 :ARG1 (b / busy-02)))\n            :quant (m / moment\n                      :mod (j / just))))", "(e / evacuate-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Nawaz\"))\n   :ARG1 (a2 / area))", "(h / hurt-01\n   :ARG1 (n / no-one)\n   :manner (ii / incredible)\n   :time (ii2 / incident)\n   :time (a / after\n            :op1 (e / evacuate-01\n                    :ARG0 (p / person\n                             :name (n2 / name\n                                       :op1 \"Nawaz\"))\n                    :ARG1 (a2 / area))))"], "smus": ["Because Shiraz Nawabs lives.", "Flames shot through the manhole.", "Shiraz Nawza felt lucky to have lived.", "After flames shot through the manhole Shiraz Nawza felt lucky to have lived.", "He walked over a fire on a busy street.", "Just moments after the street was walked on, an eruption erupted.", "The fire erupted just moments after he walked over it on a busy street.", "Nawabs evacuated the area.", "No one was hurt incredibly in the incident after Nawabs evacuated the area."]}, {"instance_id": "realsumm-32", "summary": "<t> Ao Nang Princess 5 ferry was in Andaman Sea on way from resort of Krabi . </t> <t> Was five miles from the coast travelling to Phuket when engine exploded . </t> <t> 35-metre - long boat caught fire around 3.30pm before sinking around 6 pm . </t> <t> Passengers seen throwing themselves overboard before being rescued . </t> <t> No injuries reported but search will continue into tomorrow for missing girl . </t>", "summary_trees": ["# ::snt  Ao Nang Princess 5 ferry was in Andaman Sea on way from resort of Krabi . \n(b / be-located-at-91\n      :ARG1 (f / ferry\n            :name (n / name\n                  :op1 \"Ao\"\n                  :op2 \"Nang\"\n                  :op3 \"Princess\"\n                  :op4 5))\n      :ARG2 (s / sea\n            :name (n2 / name\n                  :op1 \"Andaman\"\n                  :op2 \"Sea\"))\n      :time (w / way\n            :direction (r / resort\n                  :name (n3 / name\n                        :op1 \"Krabi\"))))", "# ::snt  Was five miles from the coast travelling to Phuket when engine exploded . \n(t / travel-01\n      :ARG0 (ii / i)\n      :ARG1 (ii2 / island\n            :name (n / name\n                  :op1 \"Phuket\"))\n      :time (e / explode-01\n            :ARG1 (e2 / engine))\n      :extent (d / distance-quantity\n            :quant 5\n            :unit (m / mile)\n            :location (f / from\n                  :op1 (c / coast))))", "# ::snt  35-metre - long boat caught fire around 3.30pm before sinking around 6 pm . \n(a / and\n      :op1 (c / catch-on-fire-09\n            :ARG1 (b / boat\n                  :ARG1-of (l / long-03\n                        :ARG2 (d / distance-quantity\n                              :quant 35\n                              :unit (m / meter))))\n            :time (a2 / around\n                  :op1 (d2 / date-entity\n                        :time \"15:30\")))\n      :op2 (s / sink-01\n            :ARG1 b\n            :time (a3 / around\n                  :op1 (d3 / date-entity\n                        :time \"18:00\"))))", "# ::snt  Passengers seen throwing themselves overboard before being rescued . \n(s / see-01\n      :ARG1 (t / throw-01\n            :ARG0 (p / passenger)\n            :ARG1 p\n            :ARG2 (o / overboard)\n            :time (b / before\n                  :op1 (r / rescue-01\n                        :ARG1 p))))", "# ::snt  No injuries reported but search will continue into tomorrow for missing girl . \n(h / have-concession-91\n      :ARG1 (c / continue-01\n            :ARG1 (s / search-01\n                  :ARG2 (g / girl\n                        :ARG1-of (m / miss-01)))\n            :time (ii / into\n                  :op1 (t / tomorrow)))\n      :ARG2 (r / report-01\n            :polarity -\n            :ARG1 (ii2 / injure-01)))"], "tree": ["(b / be-located-at-91\n   :ARG1 (f / ferry\n            :name (n / name\n                     :op1 \"Ao\"\n                     :op2 \"Nang\"\n                     :op3 \"Princess\"\n                     :op4 5))\n   :ARG2 (s / sea\n            :name (n2 / name\n                      :op1 \"Andaman\"\n                      :op2 \"Sea\")))", "(b / be-located-at-91\n   :ARG1 (f / ferry\n            :name (n / name\n                     :op1 \"Ao\"\n                     :op2 \"Nang\"\n                     :op3 \"Princess\"\n                     :op4 5))\n   :ARG2 (s / sea\n            :name (n2 / name\n                      :op1 \"Andaman\"\n                      :op2 \"Sea\"))\n   :time (w / way\n            :direction (r / resort\n                          :name (n3 / name\n                                    :op1 \"Krabi\"))))", "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\")))", "(t / travel-01\n   :time (e / explode-01)\n   :extent (d / distance-quantity\n              :quant 5\n              :unit (m / mile)\n              :location (f / from\n                           :op1 (c / coast))))", "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine))\n   :extent (d / distance-quantity\n              :quant 5\n              :unit (m / mile)\n              :location (f / from\n                           :op1 (c / coast))))", "(l / long-03\n   :ARG2 (d / distance-quantity\n            :quant 35\n            :unit (m / meter)))", "(c / catch-on-fire-09\n   :ARG1 (b / boat\n            :ARG1 (l / long-03\n                     :ARG2 (d / distance-quantity\n                              :quant 35\n                              :unit (m / meter))))\n   :time (a2 / around\n             :op1 (d2 / date-entity\n                      :time \"15:30\")))", "(t / throw-01\n   :ARG0 (p / passenger\n            :ARG1-of t))", "(t / throw-01\n   :ARG1 (p / passenger)\n   :ARG2 (o / overboard))", "(t / throw-01\n   :ARG0 (p / passenger\n            :ARG1-of t)\n   :ARG2 (o / overboard))", "(t / throw-01\n   :ARG0 (p / passenger\n            :ARG1-of t)\n   :ARG2 (o / overboard)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 p)))", "(s / see-01\n   :ARG1 (t / throw-01\n            :ARG0 (p / passenger\n                     :ARG1-of t)\n            :ARG2 (o / overboard)\n            :time (b / before\n                     :op1 (r / rescue-01\n                             :ARG1 p))))", "(r / report-01\n   :polarity -\n   :ARG1 (ii2 / injure-01))", "(s / search-01\n   :ARG2 (g / girl\n            :ARG1 (m / miss-01)))", "(c / continue-01\n   :time (ii / into\n             :op1 (t / tomorrow)))", "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1 (m / miss-01))))", "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1 (m / miss-01)))\n   :time (ii / into\n             :op1 (t / tomorrow)))", "(h / have-concession-91\n   :ARG1 (c / continue-01\n            :ARG1 (s / search-01\n                     :ARG2 (g / girl\n                              :ARG1 (m / miss-01)))\n            :time (ii / into\n                      :op1 (t / tomorrow))))"], "smus": ["The Ao Nang Princess 5 ferry is on the Andaman Sea.", "On the way to the resort of Rabi, the Ao Nam Princess 5 ferry is on the Andaman Sea.", "I'm traveling to Phuket.", "The explosion was traveling five miles from the coast.", "I was traveling 5 miles from the coast to Phuket when the engine exploded.", "35 meters (40 feet) long.", "The 35-meter-long boat caught fire around 3:30 p.m.", "The passengers were throwing.", "Throwing passengers overboard.", "The passengers were throwing overboard.", "The passengers were throwing overboard before being rescued.", "The passengers were seen throwing overboard before being rescued.", "No injuries were reported.", "Search for missing girl", "Continue into tomorrow.", "Search continues for missing girl", "The search for the missing girl will continue into tomorrow.", "The search for the missing girl will continue into tomorrow, though."]}, {"instance_id": "realsumm-33", "summary": "<t> The worker was caught on camera by a member of the public . </t> <t> Field owner TH Clements & Son was alerted and the man was sacked . </t> <t> Passer - by who used mobile phone to snap photo branded act ' disgusting ' Tesco : Vegetables undergo ' extensive assessment ' before hitting shelves . </t>", "summary_trees": ["# ::snt  The worker was caught on camera by a member of the public . \n(c / catch-03\n      :ARG0 (m / member\n            :part-of (p / public))\n      :ARG1 (p2 / person\n            :ARG0-of (w / work-01))\n      :ARG2 (c2 / camera))", "# ::snt  Field owner TH Clements & Son was alerted and the man was sacked . \n(a / and\n      :op1 (a2 / alert-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"TH\"\n                        :op2 \"Clements\"\n                        :op3 \"&\"\n                        :op4 \"Son\")\n                  :ARG0-of (o / own-01\n                        :ARG1 (f / field))))\n      :op2 (s / sack-01\n            :ARG1 (m / man)))", "# ::snt  Passer - by who used mobile phone to snap photo branded act ' disgusting ' Tesco : Vegetables undergo ' extensive assessment ' before hitting shelves . \n(m / multi-sentence\n      :snt1 (p / person\n            :ARG0-of (p2 / pass-by-17)\n            :ARG0-of (u / use-01\n                  :ARG1 (p3 / phone\n                        :mod (m2 / mobile))\n                  :ARG2 (s / snap-03\n                        :ARG0 p\n                        :ARG1 (a / act-02\n                              :ARG1-of (b / brand-01\n                                    :ARG2 (d / disgust-01))\n                              :mod (p4 / photo))))\n            :mod (c / company\n                  :name (n / name\n                        :op1 \"Tesco\")))\n      :snt2 (u2 / undergo-28\n            :ARG1 (v / vegetable)\n            :ARG2 (a2 / assess-01\n                  :ARG1 v\n                  :ARG1-of (e / extensive-03))\n            :time (b2 / before\n                  :op1 (h / hit-01\n                        :ARG1 (s2 / shelf)))))"], "tree": ["(c / catch-03\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01))\n   :ARG2 (c2 / camera))", "(c / catch-03\n   :ARG0 (m / member\n            :part (p / public))\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01)))", "(c / catch-03\n   :ARG0 (m / member\n            :part (p / public))\n   :ARG1 (p2 / person\n             :ARG0 (w / work-01))\n   :ARG2 (c2 / camera))", "(a2 / alert-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"TH\"\n                      :op2 \"Clements\"\n                      :op3 \"&\"\n                      :op4 \"Son\")\n             :ARG0 (o / own-01\n                      :ARG1 (f / field))))", "(a2 / assess-01\n    :ARG1 (v / vegetable)\n    :ARG1 (e / extensive-03))", "(a / act-02\n   :ARG1 (b / brand-01\n            :ARG2 (d / disgust-01))\n   :mod (p4 / photo))", "(u2 / undergo-28\n    :ARG1 (v / vegetable)\n    :ARG2 (a2 / assess-01\n              :ARG1 v\n              :ARG1 (e / extensive-03)))", "(u2 / undergo-28\n    :ARG1 (v / vegetable)\n    :ARG2 (a2 / assess-01\n              :ARG1 v\n              :ARG1 (e / extensive-03))\n    :time (b2 / before\n              :op1 (h / hit-01\n                      :ARG1 (s2 / shelf))))"], "smus": ["The worker was caught on camera.", "A member of the public has caught the worker.", "A member of the public has caught the worker on camera.", "Field owner TH Clements & Son was alerted.", "The vegetables have undergone an extensive assessment.", "The photo is an act of being branded disgusting.", "Vegetables undergo an extensive assessment.", "Vegetables undergo extensive assessment before hitting the shelves."]}, {"instance_id": "realsumm-34", "summary": "<t> Tim Stanley : Muhammadu Buhar won Nigeria vote on campaign against corruption . </t> <t> He 's an ex - dictator , but there 's reason for optimism . </t> <t> He says Jonathan administration failed to address corruption , poverty and rise of Boko Haram . </t> <t> Buhar may be tonic to years of misrule . </t>", "summary_trees": ["# ::snt  Tim Stanley : Muhammadu Buhar won Nigeria vote on campaign against corruption . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Tim\"\n                  :op2 \"Stanley\"))\n      :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Muhammadu\"\n                        :op2 \"Buhar\"))\n            :ARG1 (v / vote-01)\n            :ARG2 (c / country\n                  :name (n3 / name\n                        :op1 \"Nigeria\"))\n            :ARG1-of (c2 / cause-01\n                  :ARG0 (c3 / campaign-01\n                        :ARG0 p2\n                        :ARG1 (a / against\n                              :op1 (c4 / corrupt-01))))))", "# ::snt  He 's an ex - dictator , but there 's reason for optimism . \n(h / have-concession-91\n      :ARG1 (r / reason\n            :ARG0-of (c / cause-01\n                  :ARG1 (o / optimism)))\n      :ARG2 (d / dictator\n            :domain (h2 / he)\n            :time (e / ex)))", "# ::snt  He says Jonathan administration failed to address corruption , poverty and rise of Boko Haram . \n(s / say-01\n      :ARG0 (h / he)\n      :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                  :ARG0-of (a / administrate-01)\n                  :mod (p / person\n                        :name (n / name\n                              :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                  :ARG0 g\n                  :ARG1 (a3 / and\n                        :op1 (c / corruption)\n                        :op2 (p2 / poor)\n                        :op3 (r / rise-01\n                              :ARG1 (c2 / criminal-organization\n                                    :name (n2 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))))", "# ::snt  Buhar may be tonic to years of misrule . \n(p / possible-01\n      :ARG1 (t / tonic\n            :beneficiary (m / misrule\n                  :duration (m2 / multiple\n                        :op1 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (y / year))))\n            :domain (p2 / person\n                  :name (n / name\n                        :op1 \"Buhar\"))))"], "tree": ["(c3 / campaign-01\n    :ARG1 (a / against\n             :op1 (c4 / corrupt-01)))", "(c3 / campaign-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))\n    :ARG1 (a / against\n             :op1 (c4 / corrupt-01)))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\")))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG1 (v / vote-01))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG2 (c / country\n            :name (n3 / name\n                      :op1 \"Nigeria\")))", "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG1 (v / vote-01)\n   :ARG2 (c / country\n            :name (n3 / name\n                      :op1 \"Nigeria\")))", "(h / have-concession-91\n   :ARG1 (r / reason\n            :ARG0 (c / cause-01\n                     :ARG1 (o / optimism))))", "(h / have-concession-91\n   :ARG1 (r / reason\n            :ARG0 (c / cause-01\n                     :ARG1 (o / optimism)))\n   :ARG2 (d / dictator\n            :domain (h2 / he)\n            :time (e / ex)))", "(r / rise-01\n   :ARG1 (c2 / criminal-organization\n             :name (n2 / name\n                       :op1 \"Boko\"\n                       :op2 \"Hararma\")))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\"))))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (c / corruption)))", "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0 (a / administrate-01)\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (p2 / poor)))", "(s / say-01\n   :ARG0 (h / he)\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p / person\n                             :name (n / name\n                                      :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (c / corruption))))", "(s / say-01\n   :ARG0 (h / he)\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0 (a / administrate-01)\n                     :mod (p / person\n                             :name (n / name\n                                      :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (p2 / poor))))", "(p / possible-01\n   :ARG1 (t / tonic\n            :beneficiary (m / misrule\n                            :duration (m2 / multiple\n                                          :op1 (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y / year))))\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"Buhar\"))))"], "smus": ["Campaign against corruption.", "Muhammadu Buhar is a campaign against corruption.", "Muhammadu Buhar won.", "Muhammadu Buhar won the vote.", "Muhammadu Buhar won Nigeria.", "Muhammadu Buhar won the vote for Nigeria.", "There is reason to be optimistic though.", "The reason for optimism is that he was an ex-dictator.", "The rise of the Boko Hararma.", "Jonathan's administration failed.", "Jonathan's administration failed to address corruption.", "Jonathan's administration failed to address poverty.", "He says the Jonathan administration failed to address corruption.", "He says the Jonathan administration failed to address poverty.", "Buhar may have been a tonic for years of misrule."]}, {"instance_id": "realsumm-35", "summary": "<t> Bulgaria 's Black Sea resorts cheaper than hotspots in Italy , Spain and Turkey . </t> <t> Researchers found cheapest destination using ' imaginary shopping basket ' Cheap prices are driven by low exchange rates and country 's high inflation . </t> <t> Its most popular resort of Sunny Beach copies those of Spain and Greece . </t>", "summary_trees": ["# ::snt  Bulgaria 's Black Sea resorts cheaper than hotspots in Italy , Spain and Turkey . \n(h / have-degree-91\n      :ARG1 (r / resort\n            :location (s / sea\n                  :name (n / name\n                        :op1 \"Black\"\n                        :op2 \"Sea\"))\n            :poss (c / country\n                  :name (n2 / name\n                        :op1 \"Bulgaria\")))\n      :ARG2 (c2 / cheap-02\n            :ARG1 r)\n      :ARG3 (m / more)\n      :ARG4 (h2 / hotspot\n            :location (a / and\n                  :op1 (c3 / country\n                        :name (n3 / name\n                              :op1 \"Italy\"))\n                  :op2 (c4 / country\n                        :name (n4 / name\n                              :op1 \"Spain\"))\n                  :op3 (c5 / country\n                        :name (n5 / name\n                              :op1 \"Turkey\")))))", "# ::snt  Researchers found cheapest destination using ' imaginary shopping basket ' Cheap prices are driven by low exchange rates and country 's high inflation . \n(m / multi-sentence\n      :snt1 (f / find-01\n            :ARG0 (p / person\n                  :ARG0-of (r / research-01))\n            :ARG1 (d / destination\n                  :ARG1-of (h / have-degree-91\n                        :ARG2 (c / cheap-02\n                              :ARG1 d)\n                        :ARG3 (m2 / most)))\n            :manner (u / use-01\n                  :ARG0 p\n                  :ARG1 (b / basket\n                        :mod (s / shop-01)\n                        :mod (ii / imaginary))))\n      :snt2 (d2 / drive-02\n            :ARG0 (a / and\n                  :op1 (r2 / rate\n                        :ARG1-of (l / low-04)\n                        :mod (e / exchange-01))\n                  :op2 (ii2 / inflate-01\n                        :ARG1 (c2 / country)\n                        :ARG1-of (h2 / high-02)))\n            :ARG1 (p2 / price-01\n                  :ARG1-of (c3 / cheap-02))))", "# ::snt  Its most popular resort of Sunny Beach copies those of Spain and Greece . \n(c / copy-01\n      :ARG1 (r / resort\n            :name (n / name\n                  :op1 \"Sunny\"\n                  :op2 \"Beach\")\n            :poss (ii / it)\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (p / popular-02\n                        :ARG1 r)\n                  :ARG3 (m / most)\n                  :ARG5 (r2 / resort\n                        :poss (a / and\n                              :op1 (c2 / country\n                                    :name (n2 / name\n                                          :op1 \"Spain\"))\n                              :op2 (c3 / country\n                                    :name (n3 / name\n                                          :op1 \"Greece\")))))))"], "tree": ["(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (c3 / country\n                           :name (n3 / name\n                                     :op1 \"Italy\"))))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (c4 / country\n                           :name (n4 / name\n                                     :op1 \"Spain\"))))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (c5 / country\n                           :name (n5 / name\n                                     :op1 \"Turkey\"))))", "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (a / and\n                          :op1 (c3 / country\n                                   :name (n3 / name\n                                             :op1 \"Italy\"))\n                          :op2 (c4 / country\n                                   :name (n4 / name\n                                             :op1 \"Spain\"))\n                          :op3 (c5 / country\n                                   :name (n5 / name\n                                             :op1 \"Turkey\")))))", "(ii2 / inflate-01\n     :ARG1 (c2 / country)\n     :ARG1 (h2 / high-02))", "(h / have-degree-91\n   :ARG2 (c / cheap-02\n            :ARG1 (d / destination))\n   :ARG3 (m2 / most))", "(u / use-01\n   :ARG0 (p / person)\n   :ARG1 (b / basket\n            :mod (s / shop-01)\n            :mod (ii / imaginary)))", "(d2 / drive-02\n    :ARG0 (ii2 / inflate-01\n               :ARG1 (c2 / country)\n               :ARG1 (h2 / high-02))\n    :ARG1 (p2 / price-01\n              :ARG1 (c3 / cheap-02))\n    :ARG1 p2)", "(d2 / drive-02\n    :ARG0 (a / and\n             :op1 (r2 / rate\n                      :ARG1 (l / low-04)\n                      :mod (e / exchange-01))\n             :op2 (ii2 / inflate-01\n                       :ARG1 (c2 / country)\n                       :ARG1 (h2 / high-02)))\n    :ARG1 (p2 / price-01\n              :ARG1 (c3 / cheap-02)))", "(f / find-01\n   :ARG0 (p / person\n            :ARG0 (r / research-01))\n   :ARG1 (d / destination\n            :ARG1 (h / have-degree-91\n                     :ARG2 (c / cheap-02\n                              :ARG1 d)\n                     :ARG3 (m2 / most)))\n   :manner (u / use-01\n              :ARG0 p\n              :ARG1 (b / basket\n                       :mod (s / shop-01)\n                       :mod (ii / imaginary))))", "(c / copy-01\n   :ARG1 (r / resort\n            :name (n / name\n                     :op1 \"Sunny\"\n                     :op2 \"Beach\")\n            :poss (ii / it)\n            :ARG1 (h / have-degree-91\n                     :ARG2 (p / popular-02\n                              :ARG1 r)\n                     :ARG3 (m / most)\n                     :ARG5 (r2 / resort\n                               :poss (a / and\n                                        :op1 (c2 / country\n                                                 :name (n2 / name\n                                                           :op1 \"Spain\"))\n                                        :op2 (c3 / country\n                                                 :name (n3 / name\n                                                           :op1 \"Greece\")))))))"], "smus": ["Bulgaria's Black Sea resorts are cheaper.", "Bulgaria's Black Sea resorts are cheaper than Italy's hotspots.", "Bulgaria's Black Sea resorts are cheaper than Spain's hotspots.", "Bulgaria's Black Sea resorts are cheaper than Turkey's hotspots.", "Bulgaria's Black Sea resorts are cheaper than hotspots in Italy, Spain and Turkey.", "The country is in high inflation.", "The cheapest destination", "People are using an imaginary shopping basket.", "High inflation in the country has driven up prices for goods.", "Low exchange rates and high inflation in the country have driven up prices for cheap.", "The researchers found the cheapest destination using an imaginary shopping basket.", "It copies its Sunny Beach resort as the most popular of Spain and Greece."]}, {"instance_id": "realsumm-36", "summary": "<t> WARNING : GRAPHIC CONTENT . </t> <t> Series of photos appear to show the beheading of a man in Hama in Syria . </t> <t> Man is handcuffed and blindfolded as he is led from a van to area of land . </t> <t> He is surrounded by men with guns and executioner with a meat cleaver . </t> <t> It is claimed the man was beheaded because he is an alleged ' blasphemer ' </t>", "summary_trees": ["# ::snt  WARNING : GRAPHIC CONTENT . \n(w / warn-01\n      :ARG1 (c / content\n            :mod (g / graphic)))", "# ::snt  Series of photos appear to show the beheading of a man in Hama in Syria . \n(a / appear-02\n      :ARG1 (s / show-01\n            :ARG0 (s2 / series\n                  :consist-of (p / photo))\n            :ARG1 (b / behead-01\n                  :ARG1 (m / man)\n                  :location (c / city\n                        :name (n / name\n                              :op1 \"Hama\")\n                        :location (c2 / country\n                              :name (n2 / name\n                                    :op1 \"Syria\"))))))", "# ::snt  Man is handcuffed and blindfolded as he is led from a van to area of land . \n(a / and\n      :op1 (h / handcuff-01\n            :ARG1 (m / man))\n      :op2 (b / blindfold-01\n            :ARG1 m)\n      :time (l / lead-01\n            :ARG1 m\n            :ARG3 (v / van)\n            :ARG4 (a2 / area\n                  :mod (l2 / land))))", "# ::snt  He is surrounded by men with guns and executioner with a meat cleaver . \n(s / surround-01\n      :ARG1 (a / and\n            :op1 (m / man\n                  :ARG0-of (h / have-03\n                        :ARG1 (g / gun)))\n            :op2 (p / person\n                  :ARG0-of (e / execute-01)\n                  :ARG0-of (h2 / have-03\n                        :ARG1 (c / cleaver\n                              :purpose (m2 / meat)))))\n      :ARG2 (h3 / he))", "# ::snt  It is claimed the man was beheaded because he is an alleged ' blasphemer ' \n(c / claim-01\n      :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :ARG1-of (c2 / cause-01\n                  :ARG0 (b2 / blaspheme-01\n                        :ARG0 m\n                        :ARG1-of (a / allege-01)))))"], "tree": ["(w / warn-01\n   :ARG1 (c / content\n            :mod (g / graphic)))", "(b / behead-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Hama\")\n                :location (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Syria\"))))", "(b / behead-01\n   :ARG1 (m / man)\n   :location (c / city\n                :name (n / name\n                         :op1 \"Hama\")\n                :location (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Syria\"))))", "(s / show-01\n   :ARG0 (s2 / series\n             :consist-of (p / photo))\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Hama\")\n                         :location (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"Syria\")))))", "(a / appear-02\n   :ARG1 (s / show-01\n            :ARG0 (s2 / series\n                      :consist-of (p / photo))\n            :ARG1 (b / behead-01\n                     :ARG1 (m / man)\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Hama\")\n                                  :location (c2 / country\n                                                :name (n2 / name\n                                                          :op1 \"Syria\"))))))", "(l / lead-01\n   :ARG1 (m / man)\n   :ARG3 (v / van)\n   :ARG4 (a2 / area\n             :mod (l2 / land)))", "(h2 / have-03\n    :ARG1 (c / cleaver\n             :purpose (m2 / meat)))", "(s / surround-01\n   :ARG1 (m / man\n            :ARG0 (h / have-03\n                     :ARG1 (g / gun))))", "(s / surround-01\n   :ARG1 (m / man\n            :ARG0 (h / have-03\n                     :ARG1 (g / gun)))\n   :ARG2 (h3 / he))", "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (e / execute-01)\n            :ARG0 (h2 / have-03\n                      :ARG1 (c / cleaver\n                               :purpose (m2 / meat)))))", "(s / surround-01\n   :ARG1 (p / person\n            :ARG0 (e / execute-01)\n            :ARG0 (h2 / have-03\n                      :ARG1 (c / cleaver\n                               :purpose (m2 / meat))))\n   :ARG2 (h3 / he)\n   :ARG2 h3)", "(s / surround-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG0 (h / have-03\n                             :ARG1 (g / gun)))\n            :op2 (p / person\n                    :ARG0 (e / execute-01)\n                    :ARG0 (h2 / have-03\n                              :ARG1 (c / cleaver\n                                       :purpose (m2 / meat))))))", "(b / behead-01\n   :ARG1 (m / man)\n   :ARG1 (c2 / cause-01\n             :ARG0 (b2 / blaspheme-01\n                       :ARG0 m\n                       :ARG1 (a / allege-01))))", "(c / claim-01\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :ARG1 (c2 / cause-01\n                      :ARG0 (b2 / blaspheme-01\n                                :ARG0 m\n                                :ARG1 (a / allege-01)))))"], "smus": ["Graphic Content Warning:", "The beheading took place in Hama, Syria.", "The man was beheaded in Hama, Syria.", "The photo series will show the beheading of a man in Hama, Syria.", "The photo series appear to show a man being beheaded in Hama, Syria.", "The man was led by a van to a land area.", "has a meat cleaver.", "The men were surrounded by men with guns.", "He was surrounded by men with guns.", "The executioner was surrounded by a meat cleaver.", "He was surrounded by an executioner with a meat cleaver.", "The men were surrounded by guns and the executioner was a meat cleaver.", "The man was beheaded because of his alleged blasphemy.", "The man was claimed to have been beheaded because of his alleged blasphemy."]}, {"instance_id": "realsumm-37", "summary": "<t> Denise and Glen Higgs thought they 'd never have children . </t> <t> He was made infertile due to cancer treatment , but they tried IVF . </t> <t> Couple from of Braunton , Devon , had Mazy , born three years ago . </t> <t> Tried again using the same batch and had twins Carter & Carson last week . </t>", "summary_trees": ["# ::snt  Denise and Glen Higgs thought they 'd never have children . \n(t / think-01\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Denise\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Glenn\"\n                        :op2 \"Higgs\")))\n      :ARG1 (h / have-05\n            :polarity -\n            :ARG0 a\n            :ARG1 (c / child)\n            :time (e / ever)))", "# ::snt  He was made infertile due to cancer treatment , but they tried IVF . \n(c / contrast-01\n      :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                  :ARG1 (h / he)\n                  :ARG2 (d / disease\n                        :name (n / name\n                              :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                  :domain h))\n      :ARG2 (t2 / try-01\n            :ARG0 (t3 / they)\n            :ARG1 (f / fertilize-01\n                  :mod (m2 / multiple))))", "# ::snt  Couple from of Braunton , Devon , had Mazy , born three years ago . \n(h / have-05\n      :ARG0 (c / couple\n            :source (c2 / city\n                  :name (n / name\n                        :op1 \"Braunton\")\n                  :location (c3 / county\n                        :name (n2 / name\n                              :op1 \"Devon\"))))\n      :ARG1 (p / person\n            :name (n3 / name\n                  :op1 \"Mazy\")\n            :ARG1-of (b / bear-02\n                  :time (b2 / before\n                        :op1 (n4 / now)\n                        :quant (t / temporal-quantity\n                              :quant 3\n                              :unit (y / year))))))", "# ::snt  Tried again using the same batch and had twins Carter & Carson last week . \n(a / and\n      :op1 (t / try-01\n            :ARG0 (ii / i)\n            :mod (a2 / again)\n            :manner (u / use-01\n                  :ARG0 ii\n                  :ARG1 (b / batch\n                        :ARG1-of (s / same-01))))\n      :op2 (h / have-05\n            :ARG0 ii\n            :ARG1 (a3 / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Carter\"))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Carson\"))\n                  :mod (t2 / twin))\n            :time (w / week\n                  :mod (l / last))))"], "tree": ["(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Denise\"))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 p\n            :ARG1 (c / child)\n            :time (e / ever)))", "(t / think-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Glenn\"\n                       :op2 \"Higgs\"))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 p2\n            :ARG1 (c / child)\n            :time (e / ever))\n   :ARG1 h)", "(t / think-01\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Denise\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Glenn\"\n                               :op2 \"Higgs\")))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 a\n            :ARG1 (c / child)\n            :time (e / ever)))", "(t2 / try-01\n    :ARG0 (t3 / they)\n    :ARG1 (f / fertilize-01\n             :mod (m2 / multiple)))", "(t / treat-03\n   :ARG1 (h / he)\n   :ARG2 (d / disease\n            :name (n / name\n                     :op1 \"cancer\")))", "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG1 (h / he)\n            :ARG2 (d / disease\n                     :name (n / name\n                              :op1 \"cancer\")))\n   :ARG1 (ii / infertile\n             :domain h))", "(b / bear-02\n   :time (b2 / before\n             :op1 (n4 / now)\n             :quant (t / temporal-quantity\n                       :quant 3\n                       :unit (y / year))))", "(u / use-01\n   :ARG1 (b / batch\n            :ARG1 (s / same-01)))", "(h / have-05\n   :time (w / week\n            :mod (l / last)))", "(t / try-01\n   :mod (a2 / again)\n   :manner (u / use-01))", "(u / use-01\n   :ARG0 (ii / i)\n   :ARG1 (b / batch\n            :ARG1 (s / same-01)))", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carter\")))", "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carson\")\n             :mod (t2 / twin)))"], "smus": ["Denise thought she would never have children.", "Glenn Higgs thought he would never have children.", "Denise and Glenn Higgs thought they would never have children.", "The tried multiple fertilization.", "He was on cancer treatment.", "His cancer treatment has made him infertile.", "Born three years ago", "using the same batch.", "Had last week.", "Trying again using.", "I'm using the same batch.", "I had Carter.", "I had the Carson twins."]}, {"instance_id": "realsumm-38", "summary": "<t> Speed camera discovered pointing at house in Handsworth , Birmingham . </t> <t> Fixed cameras switched off across the West Midlands in Spring of 2013 . </t> <t> Site is not going to be part of a new trial using digital technology . </t> <t> Obsolete camera may now be taken down after engineers examine device . </t>", "summary_trees": ["# ::snt  Speed camera discovered pointing at house in Handsworth , Birmingham . \n(d / discover-01\n      :ARG1 (c / camera\n            :mod (s / speed)\n            :ARG0-of (p / point-01\n                  :ARG2 (h / house\n                        :location (c2 / city-district\n                              :name (n / name\n                                    :op1 \"Handsworth\")\n                              :part-of (c3 / city\n                                    :name (n2 / name\n                                          :op1 \"Birmingham\")))))))", "# ::snt  Fixed cameras switched off across the West Midlands in Spring of 2013 . \n(s / switch-off-04\n      :ARG1 (c / camera\n            :ARG1-of (f / fix-03))\n      :location (a / across\n            :op1 (c2 / country-region\n                  :name (n / name\n                        :op1 \"West\"\n                        :op2 \"Midlands\")))\n      :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))", "# ::snt  Site is not going to be part of a new trial using digital technology . \n(h / have-part-91\n      :polarity -\n      :ARG1 (t / try-02\n            :ARG1-of (n / new-01)\n            :ARG0-of (u / use-01\n                  :ARG1 (t2 / technology\n                        :mod (d / digit))))\n      :ARG2 (s / site))", "# ::snt  Obsolete camera may now be taken down after engineers examine device . \n(p / possible-01\n      :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                  :mod (o / obsolete))\n            :time (a / after\n                  :op1 (e / examine-01\n                        :ARG0 (p2 / person\n                              :ARG0-of (e2 / engineer-01))\n                        :ARG1 (d / device))))\n      :time (n / now))"], "tree": ["(p / point-01\n   :ARG2 (h / house\n            :location (c2 / city-district\n                          :name (n / name\n                                   :op1 \"Handsworth\")\n                          :part (c3 / city\n                                    :name (n2 / name\n                                              :op1 \"Birmingham\")))))", "(d / discover-01\n   :ARG1 (c / camera\n            :mod (s / speed)\n            :ARG0 (p / point-01\n                     :ARG2 (h / house\n                              :location (c2 / city-district\n                                            :name (n / name\n                                                     :op1 \"Handsworth\")\n                                            :part (c3 / city\n                                                      :name (n2 / name\n                                                                :op1 \"Birmingham\")))))))", "(s / switch-off-04\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))", "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1 (f / fix-03))\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\")))\n   :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))", "(u / use-01\n   :ARG1 (t2 / technology\n             :mod (d / digit)))", "(h / have-part-91\n   :polarity -\n   :ARG1 (t / try-02\n            :ARG1 (n / new-01)\n            :ARG0 (u / use-01\n                     :ARG1 (t2 / technology\n                               :mod (d / digit))))\n   :ARG2 (s / site))", "(t / take-down-22\n   :time (a / after\n            :op1 (e / examine-01)))", "(e / examine-01\n   :ARG0 (p2 / person\n             :ARG0 (e2 / engineer-01))\n   :ARG1 (d / device))", "(p / possible-01\n   :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                     :mod (o / obsolete))\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG0 (p2 / person\n                                       :ARG0 (e2 / engineer-01))\n                             :ARG1 (d / device))))\n   :time (n / now))"], "smus": ["Point to a house in Handsworth, Birmingham.", "A speed camera was discovered pointing at a house in Handsworth, Birmingham.", "Switched off across the West Midlands in spring 2013.", "Fixed cameras switched off across the West Midlands in spring 2013.", "using digital technology", "The site is not part of a new trial of using digitized technology.", "taken down after examination.", "Engineers examine the device.", "Now the obsolete camera can be taken down after engineers examine the device."]}, {"instance_id": "realsumm-39", "summary": "<t> Charles Terreni , 18 , was found dead March 18 at a frat house in Columbia . </t> <t> Terreni was a USC freshman and a member of the Pi Kappa Alpha house . </t> <t> Coroner identified cause of death as alcohol poisoning . </t> <t> Toxicology tests showed he had a blood alcohol of .375 . </t> <t> Neighbors said there was a large party ; a beer keg was still visible outside . </t>", "summary_trees": ["# ::snt  Charles Terreni , 18 , was found dead March 18 at a frat house in Columbia . \n(f / find-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Charles\"\n                  :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                  :quant 18\n                  :unit (y / year)))\n      :ARG2 (d / die-01\n            :ARG1 p)\n      :time (d2 / date-entity\n            :day 18\n            :month 3)\n      :location (h / house\n            :mod (f2 / frat)\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Columbia\"))))", "# ::snt  Terreni was a USC freshman and a member of the Pi Kappa Alpha house . \n(a / and\n      :op1 (f / freshman\n            :domain (p / person\n                  :name (n / name\n                        :op1 \"Terreni\"))\n            :location (u / university\n                  :name (n2 / name\n                        :op1 \"USC\")))\n      :op2 (h / have-org-role-91\n            :ARG0 p\n            :ARG1 (h2 / house\n                  :name (n3 / name\n                        :op1 \"Pi\"\n                        :op2 \"Kappa\"\n                        :op3 \"Alpha\"))\n            :ARG2 (m / member)))", "# ::snt  Coroner identified cause of death as alcohol poisoning . \n(ii / identify-01\n      :ARG0 (c / coroner)\n      :ARG1 (c2 / cause-01\n            :ARG1 (d / die-01))\n      :ARG2 (p / poison-02\n            :ARG1 (a / alcohol)))", "# ::snt  Toxicology tests showed he had a blood alcohol of .375 . \n(s / show-01\n      :ARG0 (t / test-01\n            :ARG2 (t2 / toxicology))\n      :ARG1 (h / have-03\n            :ARG0 (h2 / he)\n            :ARG1 (a / alcohol\n                  :quant (c / concentration-quantity\n                        :quant.375 (f / fluid-ounce))\n                  :mod (b / blood))))", "# ::snt  Neighbors said there was a large party ; a beer keg was still visible outside . \n(a / and\n      :op1 (s / say-01\n            :ARG0 (n / neighbor)\n            :ARG1 (p / party-01\n                  :mod (l / large)))\n      :op2 (s2 / see-01\n            :ARG1 (k / keg\n                  :mod (b / beer))\n            :mod (s3 / still)\n            :location (o / outside)))"], "tree": ["(f / find-01\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year))))", "(f / find-01\n   :time (d2 / date-entity)\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year)))\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18\n             :month 3)\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))", "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Terreni\"))\n   :ARG2 (m / member))", "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Terreni\"))\n   :ARG1 (h2 / house\n             :name (n3 / name\n                       :op1 \"Pi\"\n                       :op2 \"Kappa\"\n                       :op3 \"Alpha\"))\n   :ARG2 (m / member))", "(ii / identify-01\n    :ARG0 (c / coroner)\n    :ARG1 (c2 / cause-01\n              :ARG1 (d / die-01))\n    :ARG2 (p / poison-02\n             :ARG1 (a / alcohol)))", "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer)))", "(s2 / see-01\n    :mod (s3 / still)\n    :location (o / outside))", "(s / say-01\n   :ARG0 (n / neighbor)\n   :ARG1 (p / party-01\n            :mod (l / large)))", "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer))\n    :location (o / outside))", "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer))\n    :mod (s3 / still)\n    :location (o / outside))"], "smus": ["Found in a frat house in Columbia.", "Charles Terreni, 18, was found.", "Found in a frat house in Columbia.", "Charles Terreni, 18, was found in a frat house in Columbia.", "Charles Terreni, 18, was found dead March 18 in a frat house in Columbia.", "Terreni is a member.", "Terreni is a member of the Pi Kappa Alpha house.", "The coroner identified the cause of death as alcohol poisoning.", "See beer keg.", "Still visible outside.", "The neighbors said it was a large party.", "There was a beer keg seen outside.", "Still seeing a beer keg outside."]}, {"instance_id": "realsumm-40", "summary": "<t> Air strikes were launched by Saudi forces a month ago against rebels . </t> <t> Saudi forces have focused on beating back Shiite Houthi rebels in Yemen . </t> <t> Prince Alwaleed Bin Talal pledged Bentleys for pilots involved in bombings . </t> <t> He made pledge on Wednesday after bombing raids appeared to resume , despite an official announcement that they would be halted last night . </t>", "summary_trees": ["# ::snt  Air strikes were launched by Saudi forces a month ago against rebels . \n(l / launch-01\n      :ARG0 (f / force\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Saudi\"\n                        :op2 \"Arabia\")))\n      :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                  :ARG0-of (r / rebel-01))\n            :path (a / air))\n      :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                  :quant 1\n                  :unit (m / month))))", "# ::snt  Saudi forces have focused on beating back Shiite Houthi rebels in Yemen . \n(f / focus-01\n      :ARG0 (f2 / force\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Saudi\"\n                        :op2 \"Arabia\")))\n      :ARG2 (b / beat-back-05\n            :ARG0 f2\n            :ARG1 (p / person\n                  :mod (r / religious-group\n                        :name (n2 / name\n                              :op1 \"Shiite\"\n                              :op2 \"Hathi\"))\n                  :location (c2 / country\n                        :name (n3 / name\n                              :op1 \"Yemen\"))\n                  :ARG0-of (r2 / rebel-01))))", "# ::snt  Prince Alwaleed Bin Talal pledged Bentleys for pilots involved in bombings . \n(p / pledge-01\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Alwaleed\"\n                  :op2 \"Bin\"\n                  :op3 \"Talal\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (p3 / prince)))\n      :ARG2 (c / car-make\n            :name (n2 / name\n                  :op1 \"Bentley\"))\n      :beneficiary (p4 / person\n            :ARG0-of (p5 / pilot-01)\n            :ARG1-of (ii / involve-01\n                  :ARG2 (b / bomb-01))))", "# ::snt  He made pledge on Wednesday after bombing raids appeared to resume , despite an official announcement that they would be halted last night . \n(p / pledge-01\n      :ARG0 (h / he)\n      :time (d / date-entity\n            :weekday (w / wednesday))\n      :time (a / after\n            :op1 (a2 / appear-02\n                  :ARG1 (r / resume-01\n                        :ARG1 (r2 / raid-01\n                              :manner (b / bomb-01)))))\n      :concession (a3 / announce-01\n            :ARG1 (h2 / halt-01\n                  :ARG1 r2\n                  :time (d2 / date-entity\n                        :dayperiod (n / night)\n                        :mod (y / yesterday)))\n            :mod (o / official)))"], "tree": ["(s / strike-01\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01)))", "(s / strike-01\n   :ARG0 (f / force)\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01)))", "(s / strike-01\n   :ARG0 (f / force)\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01))\n   :path (a / air))", "(l / launch-01\n   :ARG1 (s / strike-01\n            :ARG0 (f / force)\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))\n            :path (a / air)))", "(l / launch-01\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))", "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                     :ARG0 (r / rebel-01))\n            :path (a / air)))", "(s / strike-01\n   :ARG0 (f / force)\n   :ARG1 (p / person\n            :ARG0 (r / rebel-01)))", "(b / beat-back-05\n   :ARG0 (f2 / force)\n   :ARG1 (p / person\n            :mod (r / religious-group\n                    :name (n2 / name\n                              :op1 \"Shiite\"\n                              :op2 \"Hathi\"))\n            :location (c2 / country\n                          :name (n3 / name\n                                    :op1 \"Yemen\"))\n            :ARG0 (r2 / rebel-01)))", "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\")))\n   :ARG2 (b / beat-back-05\n            :ARG0 f2\n            :ARG1 (p / person\n                     :mod (r / religious-group\n                             :name (n2 / name\n                                       :op1 \"Shiite\"\n                                       :op2 \"Hathi\"))\n                     :location (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"Yemen\"))\n                     :ARG0 (r2 / rebel-01))))", "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\")\n             :ARG0 (h / have-org-role-91\n                      :ARG2 (p3 / prince)))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG0 (p5 / pilot-01)\n                    :ARG1 (ii / involve-01\n                              :ARG2 (b / bomb-01))))", "(r / resume-01\n   :ARG1 (r2 / raid-01\n             :manner (b / bomb-01)))", "(a2 / appear-02\n    :ARG1 (r / resume-01\n             :ARG1 (r2 / raid-01\n                       :manner (b / bomb-01))))", "(h2 / halt-01\n    :time (d2 / date-entity\n              :dayperiod (n / night)\n              :mod (y / yesterday)))", "(a3 / announce-01\n    :ARG1 (h2 / halt-01\n              :ARG1 (r2 / raid-01)\n              :time (d2 / date-entity\n                        :dayperiod (n / night)\n                        :mod (y / yesterday)))\n    :mod (o / official))", "(p / pledge-01\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :time (a / after\n            :op1 (a2 / appear-02))\n   :concession (a3 / announce-01\n                   :mod (o / official)))", "(p / pledge-01\n   :ARG0 (h / he)\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :time (a / after\n            :op1 (a2 / appear-02\n                     :ARG1 (r / resume-01\n                              :ARG1 (r2 / raid-01\n                                        :manner (b / bomb-01)))))\n   :concession (a3 / announce-01\n                   :ARG1 (h2 / halt-01\n                             :ARG1 r2\n                             :time (d2 / date-entity\n                                       :dayperiod (n / night)\n                                       :mod (y / yesterday)))\n                   :mod (o / official)))"], "smus": ["Rebel strikes", "Forces strike rebels", "Forces launched airstrikes on rebels.", "Forces launched air strikes on rebels.", "The launch was a month ago.", "Saudi forces have launched airstrikes on rebels.", "Forces strike rebels", "Forces beating back Yemeni Shiite Hathi rebels", "Saudi forces have focused on beating back rebels against Shiite Hathi in Yemen.", "Prince Alwaleed Bin Talal pledged a Bentley to pilots involved in the bombs.", "Bomb raids to resume", "The bomb raids appeared to resume.", "The halt came last night.", "The official announcement comes as the raids were halted last night.", "The pledge was made Wednesday after it appeared despite the official announcement.", "He made the pledge Wednesday, after the bomb raids appeared to resume, despite an official announcement that the raids had halted last night."]}, {"instance_id": "realsumm-41", "summary": "<t> Brawl at Spring Gardens station in Philadelphia was captured on CCTV . </t> <t> Fight involved students from nearby Benjamin Franklin High School . </t> <t> At one point an attacker falls onto the tracks , but manages to get back up . </t> <t> After the confrontation , the victims and attackers walk onto the same train . </t>", "summary_trees": ["# ::snt  Brawl at Spring Gardens station in Philadelphia was captured on CCTV . \n(c / capture-01\n      :ARG0 (p / publication\n            :name (n / name\n                  :op1 \"CCTV\"))\n      :ARG1 (b / brawl-01\n            :location (s / station\n                  :name (n2 / name\n                        :op1 \"Spring\"\n                        :op2 \"Gardens\")\n                  :location (c2 / city\n                        :name (n3 / name\n                              :op1 \"Philadelphia\")))))", "# ::snt  Fight involved students from nearby Benjamin Franklin High School . \n(ii / involve-01\n      :ARG1 (p / person\n            :ARG0-of (s / study-01)\n            :source (h / high-school\n                  :name (n / name\n                        :op1 \"Benjamin\"\n                        :op2 \"Franklin\"\n                        :op3 \"High\"\n                        :op4 \"School\")\n                  :location (n2 / nearby)))\n      :ARG2 (f / fight-01))", "# ::snt  At one point an attacker falls onto the tracks , but manages to get back up . \n(c / contrast-01\n      :ARG1 (f / fall-01\n            :ARG1 (p / person\n                  :ARG0-of (a / attack-01))\n            :ARG4 (t / track))\n      :ARG2 (m / manage-01\n            :ARG0 p\n            :ARG1 (g / get-back-10\n                  :ARG1 p\n                  :ARG2 t))\n      :time (p2 / point\n            :quant 1))", "# ::snt  After the confrontation , the victims and attackers walk onto the same train . \n(w / walk-01\n      :ARG0 (a / and\n            :op1 (v / victim)\n            :op2 (p / person\n                  :ARG0-of (a2 / attack-01)))\n      :destination (t / train\n            :ARG1-of (s / same-01))\n      :time (a3 / after\n            :op1 (c / confront-01)))"], "tree": ["(b / brawl-01\n   :location (s / station\n                :name (n2 / name\n                          :op1 \"Spring\"\n                          :op2 \"Gardens\")\n                :location (c2 / city\n                              :name (n3 / name\n                                        :op1 \"Philadelphia\"))))", "(c / capture-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"CCTV\"))\n   :ARG1 (b / brawl-01\n            :location (s / station\n                         :name (n2 / name\n                                   :op1 \"Spring\"\n                                   :op2 \"Gardens\")\n                         :location (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Philadelphia\")))))", "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0 (s / study-01)\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\")\n                        :location (n2 / nearby))))", "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0 (s / study-01)\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\")\n                        :location (n2 / nearby)))\n    :ARG2 (f / fight-01))", "(c / contrast-01\n   :time (p2 / point\n             :quant 1))", "(f / fall-01\n   :ARG1 (p / person\n            :ARG0 (a / attack-01)))", "(m / manage-01\n   :ARG0 (p / person)\n   :ARG1 (g / get-back-10\n            :ARG1 p\n            :ARG2 (t / track)))", "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a / attack-01))\n            :ARG4 (t / track))\n   :ARG2 (m / manage-01\n            :ARG0 p\n            :ARG1 (g / get-back-10\n                     :ARG1 p\n                     :ARG2 t)))", "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a / attack-01))\n            :ARG4 (t / track))\n   :ARG2 (m / manage-01\n            :ARG0 p\n            :ARG1 (g / get-back-10\n                     :ARG1 p\n                     :ARG2 t))\n   :time (p2 / point\n             :quant 1))", "(c / contrast-01\n   :time (p2 / point\n             :quant 1))", "(w / walk-01\n   :ARG0 (p / person\n            :ARG0 (a2 / attack-01)))", "(w / walk-01\n   :destination (t / train)\n   :time (a3 / after\n             :op1 (c / confront-01)))", "(w / walk-01\n   :ARG0 (a / and\n            :op1 (v / victim)\n            :op2 (p / person\n                    :ARG0 (a2 / attack-01))))", "(w / walk-01\n   :ARG0 (v / victim)\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :time (a3 / after\n             :op1 (c / confront-01)))", "(w / walk-01\n   :ARG0 (p / person\n            :ARG0 (a2 / attack-01))\n   :destination (t / train\n                   :ARG1 (s / same-01))\n   :destination t\n   :time (a3 / after\n             :op1 (c / confront-01)))"], "smus": ["Brawl at Spring Gardens in Philadelphia", "The brawl at the Spring Gardens station in Philadelphia was captured by CCTV.", "The students involved were from nearby Benjamin Franklin High School.", "The fight involved students from nearby Benjamin Franklin High School.", "But at one point.", "The attacker falls.", "People manage to get back on track.", "The attacker falls off the tracks but manages to get back on.", "At one point the attacker falls off the tracks but manages to get back on the tracks.", "But at one point.", "The attackers walk.", "After the confrontation, walk to the train.", "Victims and attackers walk.", "Victims walk to the same train after the confrontation.", "The attackers walk to the same train after the confrontation."]}, {"instance_id": "realsumm-42", "summary": "<t> Paul and Laura Elliott met half way round at St Katharine Docks . </t> <t> Ceremony was witnessed by 80 guests . </t> <t> Pair ran across finish line under a shower of confetti . </t> <t> Returned to scene of ceremony for party later on . </t> <t> Raised \u00a3 7,000 for Cancer Research in honour of Paul 's father . </t>", "summary_trees": ["# ::snt  Paul and Laura Elliott met half way round at St Katharine Docks . \n(m / meet-03\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Paul\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Laura\"\n                        :op2 \"Elliott\")))\n      :location (r / round-03\n            :extent (h / half-way)\n            :location (p3 / port\n                  :name (n3 / name\n                        :op1 \"St\"\n                        :op2 \"Katharine\"\n                        :op3 \"Docks\"))))", "# ::snt  Ceremony was witnessed by 80 guests . \n(w / witness-01\n      :ARG0 (g / guest\n            :quant 80)\n      :ARG1 (c / ceremony))", "# ::snt  Pair ran across finish line under a shower of confetti . \n(r / run-02\n      :ARG0 (p / pair)\n      :path (a / across\n            :op1 (l / line\n                  :mod (f / finish-01)))\n      :time (s / shower-01\n            :ARG1 (c / confetti)))", "# ::snt  Returned to scene of ceremony for party later on . \n(r / return-01\n      :ARG4 (s / scene\n            :location-of (c / ceremony\n                  :purpose (p / party-01)))\n      :time (a / after))", "# ::snt  Raised \u00a3 7,000 for Cancer Research in honour of Paul 's father . \n(r / raise-02\n      :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound))\n      :purpose (r2 / research-01\n            :ARG1 (c / cancer))\n      :manner (h / honor-01\n            :ARG1 (p2 / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG1 (p3 / person\n                              :name (n / name\n                                    :op1 \"Paul\"))\n                        :ARG2 (f / father)))))"], "tree": ["(r / round-03\n   :extent (h / half-way)\n   :location (p3 / port\n                 :name (n3 / name\n                           :op1 \"St\"\n                           :op2 \"Katharine\"\n                           :op3 \"Docks\")))", "(m / meet-03\n   :location (r / round-03\n                :extent (h / half-way)\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\"))))", "(m / meet-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\"))\n   :location (r / round-03\n                :extent (h / half-way)\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\"))))", "(m / meet-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Laura\"\n                       :op2 \"Elliott\"))\n   :location (r / round-03\n                :extent (h / half-way)\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\")))\n   :location r)", "(m / meet-03\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Paul\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Laura\"\n                               :op2 \"Elliott\")))\n   :location (r / round-03\n                :extent (h / half-way)\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\"))))", "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80))", "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80)\n   :ARG1 (c / ceremony))", "(r / run-02\n   :ARG0 (p / pair)\n   :time (s / shower-01\n            :ARG1 (c / confetti)))", "(r / run-02\n   :ARG0 (p / pair)\n   :path (a / across\n            :op1 (l / line\n                    :mod (f / finish-01)))\n   :time (s / shower-01\n            :ARG1 (c / confetti)))", "(r / return-01\n   :ARG4 (s / scene\n            :location (c / ceremony\n                         :purpose (p / party-01)))\n   :time (a / after))", "(r / raise-02\n   :purpose (r2 / research-01)\n   :manner (h / honor-01))", "(h2 / have-rel-role-91\n    :ARG1 (p3 / person\n              :name (n / name\n                       :op1 \"Paul\"))\n    :ARG2 (f / father))", "(h / honor-01\n   :ARG1 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG1 (p3 / person\n                                 :name (n / name\n                                          :op1 \"Paul\"))\n                       :ARG2 (f / father))))", "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound))\n   :purpose (r2 / research-01\n                :ARG1 (c / cancer))\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0 (h2 / have-rel-role-91\n                                  :ARG1 (p3 / person\n                                            :name (n / name\n                                                     :op1 \"Paul\"))\n                                  :ARG2 (f / father)))))"], "smus": ["Rounding half way at St Katharine Docks.", "The meeting took place half way round the St Katharine Docks.", "Paul met half way round the St Katharine Docks.", "Laura Elliott met at the St. Katharine Docks half way round.", "Paul and Laura Elliot met half way round St Katharine Docks.", "80 guests were witnessed.", "The Ceremony was witnessed by 80 guests.", "The pair ran in the confetti shower.", "The pair ran across the finish line in a confetti shower.", "The scene of the party ceremony was later returned.", "Raised in honor of Research", "Paul's father.", "Honor to Paul's father.", "7,000 pounds were raised for Cancer Research in honour of Paul's father."]}, {"instance_id": "realsumm-43", "summary": "<t> Nasr Bitar spotted Google Street View car driving around last autumn . </t> <t> Decided it was ' his time to shine ' with it so followed in his car to get a selfie . </t> <t> Sensing the perfect moment , he got out and took the snap in Mississauga . </t> <t> Picture of Nasr 's selfie and the Street View image shared 2.9million times . </t>", "summary_trees": ["# ::snt  Nasr Bitar spotted Google Street View car driving around last autumn . \n(s / spot-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nasr\"\n                  :op2 \"Bitar\"))\n      :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                  :name (n2 / name\n                        :op1 \"Google\"\n                        :op2 \"Street\"\n                        :op3 \"View\"))\n            :ARG1 (a / around))\n      :time (d2 / date-entity\n            :season (a2 / autumn\n                  :mod (l / last))))", "# ::snt  Decided it was ' his time to shine ' with it so followed in his car to get a selfie . \n(c / cause-01\n      :ARG0 (d / decide-01\n            :ARG1 (s / shine-01\n                  :ARG0 (ii / it)\n                  :ARG1 (h / he)\n                  :instrument ii))\n      :ARG1 (f / follow-01\n            :ARG1 (ii2 / i)\n            :ARG4 (c2 / car\n                  :poss h)\n            :purpose (g / get-01\n                  :ARG0 ii2\n                  :ARG1 (p / photograph-01\n                        :ARG0 ii2\n                        :ARG1 ii2))))", "# ::snt  Sensing the perfect moment , he got out and took the snap in Mississauga . \n(a / and\n      :op1 (g / get-05\n            :ARG1 (h / he)\n            :ARG2 (o / out))\n      :op2 (s / snap-01\n            :ARG0 h\n            :location (c / city\n                  :name (n / name\n                        :op1 \"Mississauga\")))\n      :ARG1-of (c2 / cause-01\n            :ARG0 (r / realize-01\n                  :ARG0 h\n                  :ARG1 (m / moment\n                        :ARG1-of (p / perfect-02)))))", "# ::snt  Picture of Nasr 's selfie and the Street View image shared 2.9million times . \n(a / and\n      :op1 (p / picture\n            :poss (p2 / person\n                  :name (n / name\n                        :op1 \"Nasr\")))\n      :op2 (ii / image\n            :mod (p3 / product\n                  :name (n2 / name\n                        :op1 \"Street\"\n                        :op2 \"View\"))\n            :ARG1-of (s / share-01\n                  :ARG3 (t / times\n                        :quant 2900000))))"], "tree": ["(s / spot-01\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))", "(d / drive-01\n   :ARG0 (c / car-make\n            :name (n2 / name\n                      :op1 \"Google\"\n                      :op2 \"Street\"\n                      :op3 \"View\")))", "(d / drive-01\n   :ARG0 (c / car-make\n            :name (n2 / name\n                      :op1 \"Google\"\n                      :op2 \"Street\"\n                      :op3 \"View\"))\n   :ARG1 (a / around))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around)))", "(s / spot-01\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))", "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))", "(s / shine-01\n   :ARG0 (ii / it)\n   :ARG1 (h / he)\n   :instrument ii)", "(c / cause-01\n   :ARG0 (d / decide-01\n            :ARG1 (s / shine-01\n                     :ARG0 (ii / it)\n                     :ARG1 (h / he)\n                     :instrument ii))\n   :ARG1 (f / follow-01\n            :ARG1 (ii2 / i)\n            :ARG4 (c2 / car\n                      :poss h)\n            :purpose (g / get-01\n                        :ARG0 ii2\n                        :ARG1 (p / photograph-01\n                                 :ARG0 ii2\n                                 :ARG1 ii2))))", "(g / get-05\n   :ARG1 (h / he)\n   :ARG2 (o / out))", "(r / realize-01\n   :ARG0 (h / he)\n   :ARG1 (m / moment\n            :ARG1 (p / perfect-02)))", "(s / snap-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Mississauga\")))", "(s / snap-01\n   :ARG0 (h / he)\n   :location (c / city\n                :name (n / name\n                         :op1 \"Mississauga\")))", "(c2 / cause-01\n    :ARG0 (r / realize-01\n             :ARG0 (h / he)\n             :ARG1 (m / moment\n                      :ARG1 (p / perfect-02))))"], "smus": ["Spotted last autumn.", "Driving a Google Street View.", "Google Street View is driving around.", "Nasr Balitar spotted a Google Street View driving around.", "Last autumn, a Google Street View spotted around.", "Last autumn Nasr Balitar spotted a Google Street View car driving around.", "It will shine on him with it.", "I followed him in his car to get a photo, it decided to shine on him.", "He got out.", "He was aware that there was a perfect moment.", "Snap in Mississauga", "He took a snap in Mississauga.", "Because he was aware of the perfect moment."]}, {"instance_id": "realsumm-44", "summary": "<t> Rory McIlroy bidding to win his first Masters title this week at Augusta . </t> <t> The Northern Irishman finished tied for eighth place last year in his best finish in Georgia . </t> <t> McIlroy looking for third straight major victory after winning The Open and USPGA Championship last year . </t> <t> One Direction star Niall Horan caddied for McIlroy in Wednesday 's Par-3 Contest . </t>", "summary_trees": ["# ::snt  Rory McIlroy bidding to win his first Masters title this week at Augusta . \n(b / bid-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :ARG1 (t / title\n                  :mod (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\"))\n                  :ord (o / ordinal-entity\n                        :value 1))\n            :time (w2 / week\n                  :mod (t2 / this))\n            :location (f / facility\n                  :name (n3 / name\n                        :op1 \"Augusta\"))))", "# ::snt  The Northern Irishman finished tied for eighth place last year in his best finish in Georgia . \n(f / finish-07\n      :ARG0 (m / man\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Northern\"\n                        :op2 \"Ireland\")))\n      :ARG2 (t / tie-01\n            :ARG1 m\n            :ARG3 (p / place\n                  :ord (o / ordinal-entity\n                        :value 8)))\n      :time (y / year\n            :mod (l / last))\n      :subevent-of (f2 / finish-07\n            :ARG0 m\n            :location (c2 / country\n                  :name (n2 / name\n                        :op1 \"Georgia\"))\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (g / good-03\n                        :ARG1 f2)\n                  :ARG3 (m2 / most))))", "# ::snt  McIlroy looking for third straight major victory after winning The Open and USPGA Championship last year . \n(l / look-04\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McIlroy\"))\n      :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                  :value 3\n                  :range (s / straight)))\n      :time (a / after\n            :op1 (w2 / win-01\n                  :ARG0 p\n                  :ARG2 (a2 / and\n                        :op1 (e / event\n                              :name (n2 / name\n                                    :op1 \"The\"\n                                    :op2 \"Open\"))\n                        :op2 (e2 / event\n                              :name (n3 / name\n                                    :op1 \"USPGA\"\n                                    :op2 \"Championship\")))\n                  :time (y / year\n                        :mod (l2 / last)))))", "# ::snt  One Direction star Niall Horan caddied for McIlroy in Wednesday 's Par-3 Contest . \n(c / caddie-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Niall\"\n                  :op2 \"Horan\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"One\"\n                              :op2 \"Direction\"))\n                  :ARG2 (s / star)))\n      :ARG1 (p2 / person\n            :name (n3 / name\n                  :op1 \"McIlroy\"))\n      :subevent-of (c2 / contest-02\n            :name (n4 / name\n                  :op1 \"Par-3\")\n            :time (d / date-entity\n                  :weekday (w / wednesday))))"], "tree": ["(w / win-01\n   :time (w2 / week\n             :mod (t2 / this)))", "(w / win-01\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))", "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\")))", "(w / win-01\n   :time (w2 / week\n             :mod (t2 / this))\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))", "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :ARG1 (t / title\n                     :mod (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\"))\n                     :ord (o / ordinal-entity\n                             :value 1))\n            :time (w2 / week\n                      :mod (t2 / this))\n            :location (f / facility\n                         :name (n3 / name\n                                   :op1 \"Augusta\"))))", "(f / finish-07\n   :time (y / year\n            :mod (l / last)))", "(h / have-degree-91\n   :ARG2 (g / good-03\n            :ARG1 (f2 / finish-07))\n   :ARG3 (m2 / most))", "(f2 / finish-07\n    :location (c2 / country\n                  :name (n2 / name\n                            :op1 \"Georgia\")))", "(t / tie-01\n   :ARG1 (m / man)\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 8)))", "(f2 / finish-07\n    :ARG0 (m / man)\n    :location (c2 / country\n                  :name (n2 / name\n                            :op1 \"Georgia\"))\n    :ARG1 (h / have-degree-91\n             :ARG2 (g / good-03\n                      :ARG1 f2)\n             :ARG3 (m2 / most)))", "(f / finish-07\n   :ARG0 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 m\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 8)))\n   :time (y / year\n            :mod (l / last)))", "(w2 / win-01\n    :time (y / year\n             :mod (l2 / last)))", "(l / look-04\n   :time (a / after\n            :op1 (w2 / win-01)))", "(w / win-01\n   :mod (m / major)\n   :ord (o / ordinal-entity\n           :value 3\n           :range (s / straight)))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n    :ARG2 (e / event\n             :name (n2 / name\n                       :op1 \"The\"\n                       :op2 \"Open\")))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n    :ARG2 (e2 / event\n              :name (n3 / name\n                        :op1 \"USPGA\"\n                        :op2 \"Championship\")))", "(w2 / win-01\n    :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n    :ARG2 (e / event\n             :name (n2 / name\n                       :op1 \"The\"\n                       :op2 \"Open\"))\n    :time (y / year\n             :mod (l2 / last)))", "(c2 / contest-02\n    :name (n4 / name\n              :op1 \"Par-3\")\n    :time (d / date-entity\n             :weekday (w / wednesday)))", "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"One\"\n                      :op2 \"Direction\"))\n   :ARG2 (s / star))", "(c / caddie-01\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))", "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\")\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n2 / name\n                                        :op1 \"One\"\n                                        :op2 \"Direction\"))\n                     :ARG2 (s / star)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent (c2 / contest-02\n                 :name (n4 / name\n                           :op1 \"Par-3\")\n                 :time (d / date-entity\n                          :weekday (w / wednesday))))"], "smus": ["Win this week.", "Win at Augusta.", "Roy McIlroy is bidding.", "Win this week at Augusta.", "Ryder McIlroy is bidding to win the first Masters title this week at Augusta.", "Finish of last year", "Best finish.", "Finish in Georgia", "The man was tied to the eighth place.", "Best finish for a man in Georgia.", "The Northern Irish man finished in eighth place last year.", "Winning last year.", "Looking after winning.", "A major third straight victory.", "McIlroy is winning the Open.", "McIlroy is winning the USPGA Championship.", "McIlroy won the Open last year.", "Par-3 Contest Wednesday", "One Direction star.", "Caddied in the Par-3 Contest Wednesday.", "One Direction star Niall Horan caddied for McIlroy in the Par-3 contest Wednesday."]}, {"instance_id": "realsumm-45", "summary": "<t> Danny Higginbotham covers his time under Roy Keane in his new book . </t> <t> He played for Keane 's Sunderland during the 2007 - 08 season . </t> <t> Keane told his players ' basically you 're s * * * ' before a game with Aston Villa . </t> <t> He also told one player he was ' not f * * * * * * good enough ' to play for the club . </t>", "summary_trees": ["# ::snt  Danny Higginbotham covers his time under Roy Keane in his new book . \n(c / cover-03\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Danny\"\n                  :op2 \"Higginbotham\"))\n      :ARG1 (t / time\n            :poss p\n            :prep-under (p2 / person\n                  :name (n2 / name\n                        :op1 \"Roy\"\n                        :op2 \"Keane\")))\n      :medium (b / book\n            :ARG1-of (n3 / new-01)\n            :poss p))", "# ::snt  He played for Keane 's Sunderland during the 2007 - 08 season . \n(p / play-01\n      :ARG0 (h / he)\n      :ARG2 (t / team\n            :name (n / name\n                  :op1 \"Sunderland\")\n            :ARG1-of (h2 / have-org-role-91\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Keane\"))))\n      :time (d / date-entity\n            :year 2007\n            :year2 2008\n            :season (s / season)))", "# ::snt  Keane told his players ' basically you 're s * * * ' before a game with Aston Villa . \n(t / tell-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Keane\"))\n      :ARG1 (s / shit\n            :mode expressive\n            :domain (p2 / person\n                  :ARG0-of (p3 / play-01)\n                  :poss p)\n            :mod (b / basic))\n      :ARG2 p2\n      :time (b2 / before\n            :op1 (g / game\n                  :mod (t2 / team\n                        :name (n2 / name\n                              :op1 \"Aston\"\n                              :op2 \"Villa\")))))", "# ::snt  He also told one player he was ' not f * * * * * * good enough ' to play for the club . \n(t / tell-01\n      :ARG0 (h / he)\n      :ARG1 (h2 / have-degree-91\n            :polarity -\n            :ARG1 (p / play-01\n                  :ARG0 (p2 / person\n                        :quant 1\n                        :ARG0-of (p3 / play-01)))\n            :ARG2 (g / good-03\n                  :ARG1 p)\n            :ARG3 (e / enough)\n            :ARG6 (p4 / play-01\n                  :ARG0 p2\n                  :ARG3 (c / club)))\n      :ARG2 p2\n      :mod (a / also))"], "tree": ["(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\")))", "(c / cover-03\n   :ARG1 (t / time\n            :poss (p / person :name (n / name :op1 \"Danny\" :op2 \"Higginbotham\"))\n            :prep-under (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\"))))", "(c / cover-03\n   :ARG1 (t / time\n            :poss (p / person :name (n / name :op1 \"Danny\" :op2 \"Higginbotham\"))\n            :prep-under (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\"))))", "(h2 / have-org-role-91\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Keane\")))", "(p / play-01\n   :time (d / date-entity\n            :year 2007\n            :year2 2008\n            :season (s / season)))", "(p / play-01\n   :ARG0 (h / he)\n   :ARG2 (t / team\n            :name (n / name\n                     :op1 \"Sunderland\")\n            :ARG1 (h2 / have-org-role-91\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Keane\")))))", "(p / play-01\n   :ARG0 (h / he)\n   :ARG2 (t / team\n            :name (n / name\n                     :op1 \"Sunderland\")\n            :ARG1 (h2 / have-org-role-91\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Keane\"))))\n   :time (d / date-entity\n            :year 2007\n            :year2 2008\n            :season (s / season)))", "(h2 / have-org-role-91\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Keane\")))", "(p4 / play-01\n    :ARG0 (p2 / person)\n    :ARG3 (c / club))", "(h2 / have-degree-91\n    :polarity -\n    :ARG1 (p / play-01\n             :ARG0 (p2 / person\n                       :quant 1\n                       :ARG0 (p3 / play-01)))\n    :ARG2 (g / good-03\n             :ARG1 p)\n    :ARG3 (e / enough)\n    :ARG6 (p4 / play-01\n              :ARG0 p2\n              :ARG3 (c / club)))", "(t / tell-01\n   :ARG0 (h / he)\n   :ARG1 (h2 / have-degree-91\n             :polarity -\n             :ARG1 (p / play-01\n                      :ARG0 (p2 / person\n                                :quant 1\n                                :ARG0 (p3 / play-01)))\n             :ARG2 (g / good-03\n                      :ARG1 p)\n             :ARG3 (e / enough)\n             :ARG6 (p4 / play-01\n                       :ARG0 p2\n                       :ARG3 (c / club)))\n   :ARG2 p2\n   :mod (a / also))"], "smus": ["Danny Higginbotham covers.", "Covers Danny Higginbotham's time under Roy Keane.", "Covers Danny Higginbotham's time under Roy Keane.", "-Keane", "Played in the 2007-2008 season.", "He played for Sunderland with Keane.", "He played for Sunderland under Kevin in the 2007-08 season.", "-Keane", "People playing in clubs.", "One player does not play good enough to play for a club.", "He also told one player that he did not have played good enough to play for a club."]}, {"instance_id": "realsumm-46", "summary": "<t> Four - poster bed dumped in a hotel car park and sold at auction for \u00a3 2,200 . </t> <t> Owner suspected it had historic value and experts have been investigating . </t> <t> Historian now claims DNA from the timber proves it belonged to Henry VII . </t> <t> Ornate bed , now on display , was made for King and wife Elizabeth of York . </t>", "summary_trees": ["# ::snt  Four - poster bed dumped in a hotel car park and sold at auction for \u00a3 2,200 . \n(a / and\n      :op1 (d / dump-01\n            :ARG1 (b / bed\n                  :mod (p / poster\n                        :quant 4))\n            :location (p2 / park\n                  :mod (c / car)\n                  :mod (h / hotel)))\n      :op2 (s / sell-01\n            :ARG1 b\n            :ARG3 (m / monetary-quantity\n                  :quant 2100\n                  :unit (p3 / pound))\n            :time (a2 / auction-off-01)))", "# ::snt  Owner suspected it had historic value and experts have been investigating . \n(a / and\n      :op1 (s / suspect-01\n            :ARG0 (p / person\n                  :ARG0-of (o / own-01\n                        :ARG1 (ii / it)))\n            :ARG1 (v / value-01\n                  :ARG1 ii\n                  :mod (h / history)))\n      :op2 (ii2 / investigate-01\n            :ARG0 (p2 / person\n                  :ARG1-of (e / expert-01))))", "# ::snt  Historian now claims DNA from the timber proves it belonged to Henry VII . \n(c / claim-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (h2 / historian)))\n      :ARG1 (p2 / prove-01\n            :ARG0 (n / nucleic-acid\n                  :name (n2 / name\n                        :op1 \"DNA\")\n                  :part-of (t / timber))\n            :ARG1 (b / belong-01\n                  :ARG0 t\n                  :ARG1 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Henry\"\n                              :op2 \"VII\"))))\n      :time (n4 / now))", "# ::snt  Ornate bed , now on display , was made for King and wife Elizabeth of York . \n(m / make-01\n      :ARG1 (b / bed\n            :mod (o / ornate)\n            :ARG1-of (d / display-01\n                  :time (n / now)))\n      :ARG3 (p / person\n            :name (n2 / name\n                  :op1 \"Elizabeth\"\n                  :op2 \"of\"\n                  :op3 \"York\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (k / king))\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG2 (w / wife))))"], "tree": ["(d / dump-01\n   :location (p2 / park\n                 :mod (c / car)\n                 :mod (h / hotel)))", "(d / dump-01\n   :ARG1 (b / bed\n            :mod (p / poster\n                    :quant 4))\n   :location (p2 / park\n                 :mod (c / car)\n                 :mod (h / hotel)))", "(ii2 / investigate-01\n     :ARG0 (p2 / person\n               :ARG1 (e / expert-01)))", "(s / suspect-01\n   :ARG1 (v / value-01\n            :ARG1 (ii / it)\n            :mod (h / history)))", "(s / suspect-01\n   :ARG0 (p / person\n            :ARG0 (o / own-01\n                     :ARG1 (ii / it)))\n   :ARG1 (v / value-01\n            :ARG1 ii\n            :mod (h / history)))", "(s / suspect-01\n   :ARG1 (v / value-01\n            :ARG1 (ii / it)\n            :mod (h / history)))", "(c / claim-01\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\"))))", "(c / claim-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\"))))", "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate)\n            :ARG1 (d / display-01\n                     :time (n / now))))"], "smus": ["Dumped in hotel car park.", "4 poster bed dumped in hotel car park.", "Experts are investigating.", "It was suspected of historical value.", "The owners of it suspected it had historical value.", "It was suspected of historical value.", "claims DNA proves.", "The historian claims DNA proves it.", "The ornate bed is made for the display now."]}, {"instance_id": "realsumm-47", "summary": "<t> Attorney : Robert Bates assumed the gun was a Taser because he saw a laser sight on it . </t> <t> Harris family lawyers say there are stark differences between the gun and Taser used . </t> <t> In 2009 , an officer in California also said he mistakenly used his gun instead of a Taser . </t>", "summary_trees": ["# ::snt  Attorney : Robert Bates assumed the gun was a Taser because he saw a laser sight on it . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Robert\"\n                  :op2 \"Bates\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (a / attorney)))\n      :ARG1 (a2 / assume-02\n            :ARG0 p\n            :ARG1 (t / taser\n                  :domain (g / gun))\n            :ARG1-of (c / cause-01\n                  :ARG0 (s2 / see-01\n                        :ARG0 p\n                        :ARG1 (s3 / sight\n                              :mod (l / laser))\n                        :location g))))", "# ::snt  Harris family lawyers say there are stark differences between the gun and Taser used . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (f / family\n                        :name (n / name\n                              :op1 \"Harris\"))\n                  :ARG2 (l / lawyer)))\n      :ARG1 (d / differ-02\n            :ARG1 (g / gun)\n            :ARG2 (t / taser\n                  :ARG1-of (u / use-01))\n            :mod (s2 / stark)))", "# ::snt  In 2009 , an officer in California also said he mistakenly used his gun instead of a Taser . \n(s / say-01\n      :ARG0 (o / officer\n            :location (s2 / state\n                  :name (n / name\n                        :op1 \"California\")))\n      :ARG1 (u / use-01\n            :ARG0 o\n            :ARG1 (g / gun\n                  :poss o\n                  :ARG1-of (ii / instead-of-91\n                        :ARG2 (t / taser)))\n            :ARG1-of (m / mistake-01\n                  :ARG0 o))\n      :mod (a / also)\n      :time (d / date-entity\n            :year 2009))"], "tree": ["(s2 / see-01\n    :ARG1 (s3 / sight\n              :mod (l / laser)))", "(a2 / assume-02\n    :ARG1 (t / taser\n             :domain (g / gun)))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))\n    :ARG1 (s3 / sight\n              :mod (l / laser)))", "(s2 / see-01\n    :ARG1 (s3 / sight\n              :mod (l / laser))\n    :location (g / gun))", "(a2 / assume-02\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))\n    :ARG1 (t / taser\n             :domain (g / gun)))", "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))\n    :ARG1 (s3 / sight\n              :mod (l / laser))\n    :location (g / gun))", "(h / have-rel-role-91\n   :ARG1 (f / family\n            :name (n / name\n                     :op1 \"Harris\"))\n   :ARG2 (l / lawyer))", "(d / differ-02\n   :ARG1 (g / gun)\n   :ARG2 (t / taser\n            :ARG1 (u / use-01))\n   :mod (s2 / stark))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (f / family\n                              :name (n / name\n                                       :op1 \"Harris\"))\n                     :ARG2 (l / lawyer)))\n   :ARG1 (d / differ-02\n            :ARG1 (g / gun)\n            :ARG2 (t / taser\n                     :ARG1 (u / use-01))\n            :mod (s2 / stark)))", "(u / use-01\n   :ARG0 (o / officer)\n   :ARG1 (g / gun\n            :poss o\n            :ARG1 (ii / instead-of-91\n                      :ARG2 (t / taser))))", "(u / use-01\n   :ARG0 (o / officer)\n   :ARG1 (g / gun\n            :poss o\n            :ARG1 (ii / instead-of-91\n                      :ARG2 (t / taser)))\n   :ARG1 (m / mistake-01\n            :ARG0 o))", "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 o\n            :ARG1 (g / gun\n                     :poss o\n                     :ARG1 (ii / instead-of-91\n                               :ARG2 (t / taser)))\n            :ARG1 (m / mistake-01\n                     :ARG0 o)))"], "smus": ["The laser sight was seen.", "assumed the gun was a Taser.", "Robert Bates saw a laser sight.", "A laser sight was seen in the gun.", "Robert Bates assumed the gun was a taser.", "Robert Bates saw a laser sight in the gun.", "The Harris family lawyers.", "There are stark differences between a gun and the Taser used.", "Harris family lawyers say the gun and taser used are stark differences.", "The officer used his gun instead of a taser.", "The officer used his gun instead of a Taser mistakingly.", "An officer in California said he mistakenly used his gun instead of a Taser."]}, {"instance_id": "realsumm-48", "summary": "<t> Singer arrived at artists ' entrance to gain entry to Drake 's gig . </t> <t> Security told him area was at full capacity and denied admission . </t> <t> A row erupted and a Coachella staffer tried to get Bieber into the gig . </t> <t> But festival security then intervened and put singer in chokehold and removed him from the area . </t>", "summary_trees": ["# ::snt  Singer arrived at artists ' entrance to gain entry to Drake 's gig . \n(a / arrive-01\n      :ARG1 (p / person\n            :ARG0-of (s / sing-01))\n      :ARG4 (e / entrance\n            :poss (a2 / artist))\n      :purpose (g / gain-02\n            :ARG0 p\n            :ARG1 (e2 / enter-01\n                  :ARG0 p\n                  :ARG1 (g2 / gig\n                        :poss (p2 / person\n                              :name (n / name\n                                    :op1 \"Drake\"))))))", "# ::snt  Security told him area was at full capacity and denied admission . \n(a / and\n      :op1 (t / tell-01\n            :ARG0 (s / security)\n            :ARG1 (c / capacity\n                  :ARG1-of (f / full-09)\n                  :domain (a2 / area))\n            :ARG2 (h / he))\n      :op2 (d / deny-01\n            :ARG0 s\n            :ARG1 (a3 / admit-02\n                  :ARG1 h)\n            :ARG2 h))", "# ::snt  A row erupted and a Coachella staffer tried to get Bieber into the gig . \n(a / and\n      :op1 (e / erupt-01\n            :ARG1 (r / row))\n      :op2 (t / try-01\n            :ARG0 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (o / organization\n                              :name (n / name\n                                    :op1 \"Coachella\"))\n                        :ARG2 (s / staffer)))\n            :ARG1 (g / get-05\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Bieber\"))\n                  :ARG2 (g2 / gig))))", "# ::snt  But festival security then intervened and put singer in chokehold and removed him from the area . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (ii / intervene-01\n                  :ARG0 (s / security\n                        :mod (f / festival)))\n            :op2 (p / put-01\n                  :ARG0 s\n                  :ARG1 (p2 / person\n                        :ARG0-of (s2 / sing-01))\n                  :ARG2 (c2 / chokehold))\n            :op3 (r / remove-01\n                  :ARG0 s\n                  :ARG1 p2\n                  :ARG2 (a2 / area))\n            :time (t / then)))"], "tree": ["(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01)))", "(e2 / enter-01\n    :ARG0 (p / person)\n    :ARG1 (g2 / gig\n              :poss (p2 / person\n                        :name (n / name\n                                 :op1 \"Drake\"))))", "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist)))", "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0 (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist))\n   :purpose (g / gain-02\n               :ARG0 p\n               :ARG1 (e2 / enter-01\n                         :ARG0 p\n                         :ARG1 (g2 / gig\n                                   :poss (p2 / person\n                                             :name (n / name\n                                                      :op1 \"Drake\"))))))", "(d / deny-01\n   :ARG1 (a3 / admit-02\n             :ARG1 (h / he)))", "(d / deny-01\n   :ARG0 (s / security)\n   :ARG1 (a3 / admit-02\n             :ARG1 (h / he)))", "(d / deny-01\n   :ARG0 (s / security)\n   :ARG1 (a3 / admit-02\n             :ARG1 (h / he))\n   :ARG2 h)", "(t / tell-01\n   :ARG0 (s / security)\n   :ARG1 (c / capacity\n            :ARG1 (f / full-09)\n            :domain (a2 / area))\n   :ARG2 (h / he))", "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n / name\n                     :op1 \"Coachella\"))\n   :ARG2 (s / staffer))", "(t / try-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (o / organization\n                              :name (n / name\n                                       :op1 \"Coachella\"))\n                     :ARG2 (s / staffer)))\n   :ARG1 (g / get-05\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bieber\"))\n            :ARG2 (g2 / gig)))", "(r / remove-01\n   :ARG1 (p2 / person)\n   :ARG2 (a2 / area))", "(r / remove-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person)\n   :ARG2 (a2 / area))", "(ii / intervene-01\n    :ARG0 (s / security\n             :mod (f / festival)))", "(p / put-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person\n             :ARG0 (s2 / sing-01)))", "(p / put-01\n   :ARG1 (p2 / person\n             :ARG0 (s2 / sing-01))\n   :ARG2 (c2 / chokehold))", "(c / contrast-01\n   :ARG2 (ii / intervene-01\n             :ARG0 (s / security\n                      :mod (f / festival))))"], "smus": ["The Singer arrived.", "People entered Drake's gig.", "The Singer arrived at the artists entrance.", "Singers arrived at the entrances of the artists to gain entry to Drake's gig.", "He was denied admission.", "Security denied him admission.", "Security denied him admission.", "Security told him the area was in full capacity.", "Coachella staffer.", "Coachella staffer tried to get Bieber a gig.", "People were removed from the area.", "Security removed people from the area.", "Festival security intervened.", "Security will put the singer in.", "Put the singer in a chokehold.", "But festival security intervened."]}, {"instance_id": "realsumm-49", "summary": "<t> Sir Philip Carter died at his home on Thursday morning after a short illness . </t> <t> Carter served Everton during three spells after first joining the club in 1977 . </t> <t> Toffees chairman Bill Kenwright pays tribute to a ' great man and leader ' </t>", "summary_trees": ["# ::snt  Sir Philip Carter died at his home on Thursday morning after a short illness . \n(d / die-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Philip\"\n                  :op3 \"Carter\"))\n      :location (h / home\n            :poss p)\n      :time (d2 / date-entity\n            :weekday (t / thursday)\n            :dayperiod (m / morning))\n      :time (a / after\n            :op1 (ii / ill-01\n                  :ARG1 p\n                  :ARG1-of (s / short-07))))", "# ::snt  Carter served Everton during three spells after first joining the club in 1977 . \n(s / serve-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Carter\"))\n      :ARG2 (t / team\n            :name (n2 / name\n                  :op1 \"Everton\"))\n      :duration (s2 / spell\n            :quant 3)\n      :time (a / after\n            :op1 (j / join-04\n                  :ARG0 p\n                  :ARG1 t\n                  :time (d / date-entity\n                        :year 1977)\n                  :ord (o / ordinal-entity\n                        :value 1))))", "# ::snt  Toffees chairman Bill Kenwright pays tribute to a ' great man and leader ' \n(p / pay\n      :ARG0 (p2 / person\n            :name (n / name\n                  :op1 \"Bill\"\n                  :op2 \"Kenwright\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (o / organization\n                        :name (n2 / name\n                              :op1 \"Toffees\"))\n                  :ARG2 (c / chairman)))\n      :ARG1 (a / and\n            :op1 (m / man\n                  :mod (g / great))\n            :op2 (p3 / person\n                  :ARG0-of (l / lead-02))))"], "tree": ["(ii / ill-01\n    :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\"))\n    :ARG1 (s / short-07))", "(d / die-01\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning)))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\")))", "(d / die-01\n   :location (h / home)\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning))\n   :time (a / after\n            :op1 (ii / ill-01)))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning)))", "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :location (h / home\n                :poss p)\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning))\n   :time (a / after\n            :op1 (ii / ill-01\n                     :ARG1 p\n                     :ARG1 (s / short-07))))", "(j / join-04\n   :time (d / date-entity\n            :year 1977))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Carter\"))\n   :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))\n   :time (d / date-entity\n            :year 1977))", "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\")))", "(j / join-04\n   :time (d / date-entity\n            :year 1977)\n   :ord (o / ordinal-entity\n           :value 1))", "(s / serve-01\n   :duration (s2 / spell\n                 :quant 3)\n   :time (a / after\n            :op1 (j / join-04)))", "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Carter\"))\n   :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))\n   :time (d / date-entity\n            :year 1977)\n   :ord (o / ordinal-entity\n           :value 1))", "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\")))"], "smus": ["Sir Philip Carter is short - ill.", "Died Thursday morning.", "Sir Philip Carter died.", "Died at home Thursday morning after illness.", "Sir Philip Carter died Thursday morning.", "Sir Philip Carter died Thursday morning at his home after a short illness.", "Joining in 1977.", "Carter joined Everton in 1977.", "Carter served.", "Joining in 1977 for the first time.", "After joining, served three spells.", "Carter joined Everton in 1977 for the first time.", "Carter served."]}, {"instance_id": "realsumm-50", "summary": "<t> Border collies Ace and Holly were caught on camera performing a gravity - defying feat together . </t> <t> The two pooches stood up on their hind legs while balancing on their owner and trainer Dai Aoki . </t> <t> They have appeared in a number of videos showing off their tricks . </t>", "summary_trees": ["# ::snt  Border collies Ace and Holly were caught on camera performing a gravity - defying feat together . \n(c / catch-03\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Ace\")\n                  :mod (b / border-line))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Holly\")\n                  :mod b))\n      :ARG2 (p3 / perform-01\n            :ARG0 a\n            :ARG1 (f / feat\n                  :mod (d / defy-01\n                        :ARG0 a\n                        :ARG1 (g / gravity)))\n            :manner (t / together))\n      :medium (c2 / camera))", "# ::snt  The two pooches stood up on their hind legs while balancing on their owner and trainer Dai Aoki . \n(s / stand-up-07\n      :ARG1 (p / pooche\n            :quant 2\n            :part (l / leg\n                  :mod (h / hind)))\n      :time (b / balance-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                  :name (n / name\n                        :op1 \"Dai\"\n                        :op2 \"Aoki\")\n                  :ARG0-of (o / own-01\n                        :ARG1 p)\n                  :ARG0-of (t / train-01\n                        :ARG2 p))))", "# ::snt  They have appeared in a number of videos showing off their tricks . \n(a / appear-01\n      :ARG1 (t / they)\n      :medium (v / video\n            :quant (n / number)\n            :ARG0-of (s / show-off-03\n                  :ARG1 (t2 / trick-01\n                        :ARG0 t))))"], "tree": ["(d / defy-01\n   :ARG0 (a / and)\n   :ARG1 (g / gravity))", "(p3 / perform-01\n    :ARG1 (f / feat\n             :mod (d / defy-01\n                     :ARG0 (a / and)\n                     :ARG1 (g / gravity))))", "(p3 / perform-01\n    :ARG0 (a / and)\n    :ARG1 (f / feat\n             :mod (d / defy-01\n                     :ARG0 a\n                     :ARG1 (g / gravity))))", "(p3 / perform-01\n    :ARG0 (a / and)\n    :ARG1 (f / feat\n             :mod (d / defy-01\n                     :ARG0 a\n                     :ARG1 (g / gravity)))\n    :manner (t / together))", "(c / catch-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ace\")\n            :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG0 p\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 p\n                              :ARG1 (g / gravity)))\n             :manner (t / together)))", "(c / catch-03\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Holly\")\n             :mod (b / border-line))\n   :ARG2 (p3 / perform-01\n             :ARG0 p2\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 p2\n                              :ARG1 (g / gravity)))\n             :manner (t / together))\n   :ARG2 p3)", "(s / stand-up-07\n   :ARG1 (p / pooche\n            :quant 2\n            :part (l / leg\n                     :mod (h / hind))))", "(b / balance-01\n   :ARG1 (p / pooche)\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"Dai\"\n                      :op2 \"Aoki\")\n             :ARG0 (o / own-01\n                      :ARG1 p)\n             :ARG0 (t / train-01\n                      :ARG2 p)))", "(s / stand-up-07\n   :ARG1 (p / pooche\n            :quant 2\n            :part (l / leg\n                     :mod (h / hind)))\n   :time (b / balance-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                      :name (n / name\n                               :op1 \"Dai\"\n                               :op2 \"Aoki\")\n                      :ARG0 (o / own-01\n                               :ARG1 p)\n                      :ARG0 (t / train-01\n                               :ARG2 p))))", "(s / show-off-03\n   :ARG1 (t2 / trick-01\n             :ARG0 (t / they)))", "(a / appear-01\n   :medium (v / video\n              :quant (n / number)))", "(a / appear-01\n   :ARG1 (t / they)\n   :medium (v / video\n              :quant (n / number)\n              :ARG0 (s / show-off-03\n                       :ARG1 (t2 / trick-01\n                                 :ARG0 t))))"], "smus": ["The defying of gravity.", "performing a feat of defiance to gravity.", "and performing a feat of defying gravity.", "Together, they are performing a feat of defying gravity.", "Borderline Ace was caught performing a feat of defiance to gravity together.", "Borderline Holly was caught performing a feat of defying gravity together.", "Two pooches on the hind legs stood up.", "Pooches are balancing their owners and their training, Dai Aoki.", "Two pooches stood up, both with hind legs, while balancing with their owner, Dai Aoki, who was training them.", "Showing off their tricks.", "A number of videos have appeared.", "They have appeared in a number of videos showing off their tricks."]}, {"instance_id": "realsumm-51", "summary": "<t> Dayna Dobias , 19 , has created a video in which she dances despite having a disability that makes it difficult for her to walk . </t> <t> She loves TV , film and fashion , and says she \u2019s not happy with how people with disabilities are represented . </t> <t> The teen has created several videos during the past year aimed at changing stereotypes . </t>", "summary_trees": ["# ::snt  Dayna Dobias , 19 , has created a video in which she dances despite having a disability that makes it difficult for her to walk . \n(c / create-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Dayna\"\n                  :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                  :quant 19\n                  :unit (y / year)))\n      :ARG1 (v / video\n            :medium-of (d / dance-01\n                  :ARG0 p))\n      :concession (h / have-03\n            :ARG0 p\n            :ARG1 (d2 / disability\n                  :ARG0-of (m / make-02\n                        :ARG1 (d3 / difficult\n                              :domain (w / walk-01\n                                    :ARG0 p))))))", "# ::snt  She loves TV , film and fashion , and says she \u2019s not happy with how people with disabilities are represented . \n(a / and\n      :op1 (l / love-01\n            :ARG0 (s / she)\n            :ARG1 (a2 / and\n                  :op1 (t / television)\n                  :op2 (f / film)\n                  :op3 (f2 / fashion)))\n      :op2 (s2 / say-01\n            :ARG0 s\n            :ARG1 (h / happy-01\n                  :polarity -\n                  :ARG0 (t2 / thing\n                        :ARG2-of (r / represent-01\n                              :ARG1 (p / person\n                                    :ARG0-of (h2 / have-03\n                                          :ARG1 (d / disability)))))\n                  :ARG1 s)))", "# ::snt  The teen has created several videos during the past year aimed at changing stereotypes . \n(c / create-01\n      :ARG0 (t / teen)\n      :ARG1 (v / video\n            :ARG0-of (a / aim-02\n                  :ARG1 (c2 / change-01\n                        :ARG1 (s / stereotype-01)))\n            :quant (s2 / several))\n      :time (y / year\n            :mod (p / past)))"], "tree": ["(m / make-02\n   :ARG1 (d3 / difficult\n             :domain (w / walk-01\n                        :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))))", "(c / create-01\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))))", "(h / have-03\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n   :ARG1 (d2 / disability\n             :ARG0 (m / make-02\n                      :ARG1 (d3 / difficult\n                                :domain (w / walk-01\n                                           :ARG0 p)))))", "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 p)))", "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium (d / dance-01\n                       :ARG0 p))\n   :concession (h / have-03\n                  :ARG0 p\n                  :ARG1 (d2 / disability\n                            :ARG0 (m / make-02\n                                     :ARG1 (d3 / difficult\n                                               :domain (w / walk-01\n                                                          :ARG0 p))))))", "(l / love-01\n   :ARG0 (s / she)\n   :ARG1 (t / television))", "(l / love-01\n   :ARG0 (s / she)\n   :ARG1 (f / film))", "(l / love-01\n   :ARG0 (s / she)\n   :ARG1 (f2 / fashion))", "(r / represent-01\n   :ARG1 (p / person\n            :ARG0 (h2 / have-03\n                      :ARG1 (d / disability))))", "(l / love-01\n   :ARG1 (a2 / and\n             :op1 (t / television)\n             :op2 (f / film)\n             :op3 (f2 / fashion)))", "(l / love-01\n   :ARG0 (s / she)\n   :ARG1 (a2 / and\n             :op1 (t / television)\n             :op2 (f / film)\n             :op3 (f2 / fashion)))", "(a / aim-02\n   :ARG1 (c2 / change-01\n             :ARG1 (s / stereotype-01)))", "(c / create-01\n   :time (y / year\n            :mod (p / past)))", "(c / create-01\n   :ARG0 (t / teen)\n   :ARG1 (v / video\n            :ARG0 (a / aim-02\n                     :ARG1 (c2 / change-01\n                               :ARG1 (s / stereotype-01)))\n            :quant (s2 / several))\n   :time (y / year\n            :mod (p / past)))"], "smus": ["Makes Dayna Dobias difficult to walk.", "The video in which Dayna Dobias dances was created.", "Dayna Dobias has a disability that makes it difficult for her to walk.", "The video in which Dayna Dobias, 19, creates is a dance video.", "Dayna Dobias, 19, has created a video in which she dances, although she has a disability that makes it difficult for her to walk.", "She loves TV.", "She loves the film.", "She loves fashion.", "representing people with disabilities.", "Loves TV, film and fashion.", "She loves TV, film and fashion.", "aimed at changing stereotypes.", "Created in the past year.", "The teen has created several videos in the past year aimed at changing stereotypes."]}, {"instance_id": "realsumm-52", "summary": "<t> Manchester United take on Manchester City on Sunday . </t> <t> Match will begin at 4 pm local time at United 's Old Trafford home . </t> <t> Police have no objections to kick - off being so late in the afternoon . </t> <t> Last late afternoon weekend kick - off in the Manchester derby saw 34 fans arrested at Wembley in 2011 FA Cup semi - final . </t>", "summary_trees": ["# ::snt  Manchester United take on Manchester City on Sunday . \n(t / take-on-09\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Manchester\"\n                  :op2 \"United\"))\n      :ARG1 (t3 / team\n            :name (n2 / name\n                  :op1 \"Manchester\"\n                  :op2 \"City\"))\n      :time (d / date-entity\n            :weekday (s / sunday)))", "# ::snt  Match will begin at 4 pm local time at United 's Old Trafford home . \n(b / begin-01\n      :ARG1 (m / match-03)\n      :location (h / home\n            :poss (t / team\n                  :name (n / name\n                        :op1 \"United\"))\n            :mod (s / sports-facility\n                  :name n\n                  :op1 \"Old\"\n                  :op2 \" Trafford\"))\n      :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))", "# ::snt  Police have no objections to kick - off being so late in the afternoon . \n(o / object-01\n      :polarity -\n      :ARG0 (p / police)\n      :ARG1 (k / kick-off-04\n            :time (l / late\n                  :op1 (d / date-entity\n                        :dayperiod (a / afternoon))\n                  :degree (s / so))))", "# ::snt  Last late afternoon weekend kick - off in the Manchester derby saw 34 fans arrested at Wembley in 2011 FA Cup semi - final . \n(s / see-01\n      :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                  :mod (c / city\n                        :name (n / name\n                              :op1 \"Manchester\")))\n            :time (w / weekend)\n            :time (d2 / date-entity\n                  :dayperiod (a / afternoon)\n                  :mod (l / late))\n            :mod (l2 / last))\n      :ARG1 (a2 / arrest-01\n            :ARG1 (f / fan\n                  :quant 34)\n            :location (s2 / sports-facility\n                  :name (n2 / name\n                        :op1 \"Wembley\"))\n            :time (f2 / final\n                  :mod (s3 / semi)\n                  :subevent-of (g / game\n                        :name (n3 / name\n                              :op1 \"FA\"\n                              :op2 \"Cup\")\n                        :time (d3 / date-entity\n                              :year 2011)))))"], "tree": ["(t / take-on-09\n   :time (d / date-entity\n            :weekday (s / sunday)))", "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\")))", "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\"))\n   :time (d / date-entity\n            :weekday (s / sunday)))", "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))\n            :degree (s / so)))", "(o / object-01\n   :polarity -\n   :ARG0 (p / police)\n   :ARG1 (k / kick-off-04\n            :time (l / late\n                     :op1 (d / date-entity\n                             :dayperiod (a / afternoon))\n                     :degree (s / so))))", "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))\n            :degree (s / so)))", "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34))", "(k / kick-off-04\n   :ARG1 (d / derby\n            :mod (c / city\n                    :name (n / name\n                             :op1 \"Manchester\")))\n   :time (w / weekend))", "(k / kick-off-04\n   :time (w / weekend)\n   :time (d2 / date-entity\n             :dayperiod (a / afternoon)\n             :mod (l / late))\n   :mod (l2 / last))", "(a2 / arrest-01\n    :time (f2 / final\n              :mod (s3 / semi)\n              :subevent (g / game\n                           :name (n3 / name\n                                     :op1 \"FA\"\n                                     :op2 \"Cup\")\n                           :time (d3 / date-entity\n                                     :year 2011))))", "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34)\n    :time (f2 / final\n              :mod (s3 / semi)\n              :subevent (g / game\n                           :name (n3 / name\n                                     :op1 \"FA\"\n                                     :op2 \"Cup\")\n                           :time (d3 / date-entity\n                                     :year 2011))))"], "smus": ["Take on Sunday.", "Manchester United will take on Manchester City.", "Manchester United will take on Manchester City on Sunday.", "Kicking off so late in the afternoon.", "Police had no objections to the fact that the kickoff was so late in the afternoon.", "Kicking off so late in the afternoon.", "34 fans were arrested.", "The Manchester derby kicks off over the weekend.", "Last weekend's kick off was late afternoon.", "The arrests occurred in the semi-finals of the 2011 FA Cup.", "34 fans were arrested in the semi-finals of the 2011 FA Cup."]}, {"instance_id": "realsumm-53", "summary": "<t> Kamal criticised umpires ' decision to award controversial no - ball against Rohit Sharma in India 's World Cup match with Bangladesh . </t> <t> The Bangladeshi president alleged India had used its influence in the ICC . </t> <t> Governing body asked him to withdraw his statement or apologise . </t> <t> But Kamal confirmed his intention to step down . </t>", "summary_trees": ["# ::snt  Kamal criticised umpires ' decision to award controversial no - ball against Rohit Sharma in India 's World Cup match with Bangladesh . \n(c / criticize-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kamal\"))\n      :ARG1 (d / decide-01\n            :ARG0 (u / umpire)\n            :ARG1 (a / award-01\n                  :ARG0 u\n                  :ARG1 (b / ball\n                        :mod (c2 / controversy))\n                  :ARG2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Rohit\"\n                              :op2 \"Sharma\"))\n                  :time (m / match-03\n                        :ARG0 (c3 / country\n                              :name (n3 / name\n                                    :op1 \"India\"))\n                        :ARG1 (c4 / country\n                              :name (n4 / name\n                                    :op1 \"Bangladesh\"))\n                        :subevent-of (g / game\n                              :name (n5 / name\n                                    :op1 \"World\"\n                                    :op2 \"Cup\"))))))", "# ::snt  The Bangladeshi president alleged India had used its influence in the ICC . \n(a / allege-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (c / country\n                        :name (n / name\n                              :op1 \"Bangladesh\"))\n                  :ARG2 (p2 / president)))\n      :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                  :name (n2 / name\n                        :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                  :ARG0 c2\n                  :ARG1 (o / organization\n                        :name (n3 / name\n                              :op1 \"ICC\")))))", "# ::snt  Governing body asked him to withdraw his statement or apologise . \n(a / ask-02\n      :ARG0 (b / body\n            :ARG0-of (g / govern-01))\n      :ARG1 (o / or\n            :op1 (w / withdraw-01\n                  :ARG0 (h / he)\n                  :ARG1 (s / state-01\n                        :ARG0 h))\n            :op2 (a2 / apologize-01\n                  :ARG0 h))\n      :ARG2 h)", "# ::snt  But Kamal confirmed his intention to step down . \n(c / contrast-01\n      :ARG2 (c2 / confirm-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Kamal\"))\n            :ARG1 (ii / intend-01\n                  :ARG0 p\n                  :ARG1 (s / step-down-04\n                        :ARG0 p))))"], "tree": ["(a / award-01\n   :ARG1 (b / ball\n            :mod (c2 / controversy)))", "(m / match-03\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\")))", "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\")))", "(m / match-03\n   :subevent (g / game\n                :name (n5 / name\n                          :op1 \"World\"\n                          :op2 \"Cup\")))", "(m / match-03\n   :ARG0 (c3 / country\n             :name (n3 / name\n                       :op1 \"India\"))\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\")))", "(m / match-03\n   :ARG0 (c3 / country\n             :name (n3 / name\n                       :op1 \"India\"))\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\"))\n   :subevent (g / game\n                :name (n5 / name\n                          :op1 \"World\"\n                          :op2 \"Cup\")))", "(ii / influence-01\n    :ARG0 (c2 / country :name (n2 / name :op1 \"India\"))\n    :ARG1 (o / organization\n             :name (n3 / name\n                       :op1 \"ICC\")))", "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Bangladesh\"))\n   :ARG2 (p2 / president))", "(a / allege-01\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                      :ARG0 c2\n                      :ARG1 (o / organization\n                               :name (n3 / name\n                                         :op1 \"ICC\")))))", "(a / allege-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (c / country\n                              :name (n / name\n                                       :op1 \"Bangladesh\"))\n                     :ARG2 (p2 / president)))\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                      :ARG0 c2\n                      :ARG1 (o / organization\n                               :name (n3 / name\n                                         :op1 \"ICC\")))))", "(w / withdraw-01\n   :ARG1 (s / state-01\n            :ARG0 (h / he)))", "(a / ask-02\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (h / he)\n                    :ARG1 (s / state-01\n                             :ARG0 h))\n            :op2 (a2 / apologize-01\n                     :ARG0 h))\n   :ARG2 h)", "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (h / he)\n                    :ARG1 (s / state-01\n                             :ARG0 h))\n            :op2 (a2 / apologize-01\n                     :ARG0 h)))", "(a / ask-02\n   :ARG0 (b / body\n            :ARG0 (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (h / he)\n                    :ARG1 (s / state-01\n                             :ARG0 h))\n            :op2 (a2 / apologize-01\n                     :ARG0 h))\n   :ARG2 h)", "(ii / intend-01\n    :ARG1 (s / step-down-04\n             :ARG0 (p / person :name (n / name :op1 \"Kamal\"))))", "(ii / intend-01\n    :ARG0 (p / person :name (n / name :op1 \"Kamal\"))\n    :ARG1 (s / step-down-04\n             :ARG0 p))", "(c2 / confirm-01\n    :ARG1 (ii / intend-01\n              :ARG0 (p / person :name (n / name :op1 \"Kamal\"))\n              :ARG1 (s / step-down-04\n                       :ARG0 p)))", "(c2 / confirm-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Kamal\"))\n    :ARG1 (ii / intend-01\n              :ARG0 p\n              :ARG1 (s / step-down-04\n                       :ARG0 p)))", "(c / contrast-01\n   :ARG2 (c2 / confirm-01\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Kamal\"))\n             :ARG1 (ii / intend-01\n                       :ARG0 p\n                       :ARG1 (s / step-down-04\n                                :ARG0 p))))"], "smus": ["award the controversial ball", "Bangladesh in match", "Kamal criticized.", "The match will be in the World Cup.", "India v Bangladesh match", "India v Bangladesh matchup in World Cup", "India has influence over the ICC.", "Bangladesh's president.", "India allegedly used influence over the ICC.", "Bangladesh's president alleged India had used influence over the ICC.", "withdraw his statement.", "He was asked to withdraw his statement or make an apology.", "The governing body asked him to withdraw his statement or make an apology.", "The governing body asked him to withdraw his statement or make an apology.", "Kamal's intention was to step down.", "Kamal had the intention to step down.", "Kamal confirmed his intention to step down.", "Kamal confirmed his intention to step down.", "But Kamal confirmed his intention to step down."]}, {"instance_id": "realsumm-54", "summary": "<t> Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2 . </t> <t> Joe Calzaghe believes Mayweather 's unbeaten record is a burden . </t> <t> Despite that , the Welshman thinks Mayweather will beat his opponent . </t> <t> READ : Ricky Hatton gives his prediction to Jeff Powell ahead of the fight . </t> <t> READ : Floyd Mayweather vs Manny Pacquiao tickets FINALLY go on sale . </t>", "summary_trees": ["# ::snt  Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2 . \n(f / face-off-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Floyd\"\n                  :op2 \"Mayweather\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Manny\"\n                  :op2 \"Pacquiao\"))\n      :location (c / city\n            :name (n3 / name\n                  :op1 \"Las\"\n                  :op2 \"Vegas\"))\n      :time (d / date-entity\n            :day 2\n            :month 5))", "# ::snt  Joe Calzaghe believes Mayweather 's unbeaten record is a burden . \n(b / believe-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Joe\"\n                  :op2 \"Calzaghe\"))\n      :ARG1 (b2 / burden-01\n            :ARG2 (r / record\n                  :poss (p2 / person\n                        :name (n2 / name\n                              :op1 \"Mayweather\"))\n                  :ARG1-of (b3 / beat-03\n                        :polarity -))))", "# ::snt  Despite that , the Welshman thinks Mayweather will beat his opponent . \n(t / think-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Walesman\"))\n      :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Mayweather\"))\n            :ARG1 (p3 / person\n                  :ARG0-of (o / oppose-01\n                        :ARG1 p2)))\n      :concession (t2 / that))", "# ::snt  READ : Ricky Hatton gives his prediction to Jeff Powell ahead of the fight . \n(r / read-01\n      :mode imperative\n      :ARG0 (y / you)\n      :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                  :name (n / name\n                        :op1 \"Ricky\"\n                        :op2 \"Hatton\"))\n            :ARG2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"Jeff\"\n                        :op2 \"Powell\"))\n            :time (a / ahead\n                  :op1 (f / fight-01))))", "# ::snt  READ : Floyd Mayweather vs Manny Pacquiao tickets FINALLY go on sale . \n(r / read-01\n      :mode imperative\n      :ARG0 (y / you)\n      :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                  :mod (o / oppose-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Floyd\"\n                                    :op2 \"Mayweather\"))\n                        :ARG1 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Manny\"\n                                    :op2 \"Pacquiao\"))))\n            :time (f / final)))"], "tree": ["(f / face-off-02\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\"))\n   :time (d / date-entity\n            :day 2\n            :month 5))", "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\"))\n   :time (d / date-entity\n            :day 2\n            :month 5))", "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\"))\n   :ARG1 (b2 / burden-01\n             :ARG2 (r / record\n                      :poss (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Mayweather\"))\n                      :ARG1 (b3 / beat-03\n                                :polarity -))))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mayweather\"))\n            :ARG1 (p3 / person\n                      :ARG0 (o / oppose-01\n                               :ARG1 p2))))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mayweather\"))\n            :ARG1 (p3 / person\n                      :ARG0 (o / oppose-01\n                               :ARG1 p2)))\n   :concession (t2 / that))", "(p / predict-01\n   :time (a / ahead\n            :op1 (f / fight-01)))", "(p / predict-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Ricky\"\n                      :op2 \"Hatton\"))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jeff\"\n                       :op2 \"Powell\"))\n   :time (a / ahead\n            :op1 (f / fight-01)))", "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Ricky\"\n                               :op2 \"Hatton\"))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Jeff\"\n                                :op2 \"Powell\"))\n            :time (a / ahead\n                     :op1 (f / fight-01))))", "(r / read-01\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Ricky\"\n                               :op2 \"Hatton\"))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Jeff\"\n                                :op2 \"Powell\"))\n            :time (a / ahead\n                     :op1 (f / fight-01))))", "(o / oppose-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))", "(s / sell-01\n   :ARG1 (t / ticket\n            :mod (o / oppose-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Floyd\"\n                                      :op2 \"Mayweather\"))\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Manny\"\n                                        :op2 \"Pacquiao\")))))", "(s / sell-01\n   :ARG1 (t / ticket\n            :mod (o / oppose-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Floyd\"\n                                      :op2 \"Mayweather\"))\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Manny\"\n                                        :op2 \"Pacquiao\"))))\n   :time (f / final))", "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                     :mod (o / oppose-01\n                             :ARG0 (p / person\n                                      :name (n / name\n                                               :op1 \"Floyd\"\n                                               :op2 \"Mayweather\"))\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Manny\"\n                                                 :op2 \"Pacquiao\"))))\n            :time (f / final)))", "(r / read-01\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                     :mod (o / oppose-01\n                             :ARG0 (p / person\n                                      :name (n / name\n                                               :op1 \"Floyd\"\n                                               :op2 \"Mayweather\"))\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Manny\"\n                                                 :op2 \"Pacquiao\"))))\n            :time (f / final)))"], "smus": ["On May 2, face off in Las Vegas.", "Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2.", "Joe Calzaghe believes Mayweather's unbeaten record is a burden.", "Walesman thinks Mayweather will beat his opponent.", "That said, Walesman thinks Mayweather will beat his opponents.", "The prediction ahead of the fight.", "Ricky Hatton predicts Jeff Powell ahead of the fight.", "You've read that Ricky Hatton is predicting Jeff Powell ahead of the fight.", "Read Ricky Hatton's prediction for Jeff Powell ahead of the fight.", "Floyd Mayweather is against Manny Pacquiao.", "Tickets to Floyd Mayweather v. Manny Pacquiao were sold.", "The Floyd Mayweather v. Manny Pacquiao tickets were finally sold.", "You've read that Floyd Mayweather and Manny Pacquiao tickets are finally being sold.", "Read the final sales of Floyd Mayweather v. Manny Pacquiao tickets."]}, {"instance_id": "realsumm-55", "summary": "<t> Winchester Council in Hampshire claimed annual clean - up hit by new rules . </t> <t> But the Health and Safety Executive denied tightening rules and added that councils were \u2018 over - interpreting \u2019 legislation . </t> <t> Poet Laureate Sir Andrew Motion accused town hall bosses and Highways Agency of ruining the countryside by failing to remove rubbish . </t>", "summary_trees": ["# ::snt  Winchester Council in Hampshire claimed annual clean - up hit by new rules . \n(c / claim-01\n      :ARG0 (c2 / council\n            :mod (c3 / city\n                  :name (n / name\n                        :op1 \"Winchester\")\n                  :location (c4 / county\n                        :name (n2 / name\n                              :op1 \"Hampshire\"))))\n      :ARG1 (c5 / clean-up-02\n            :ARG1-of (h / hit-01\n                  :ARG0 (r / rule\n                        :ARG1-of (n3 / new-01)))\n            :frequency (r2 / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                        :quant 1\n                        :unit (y / year)))))", "# ::snt  But the Health and Safety Executive denied tightening rules and added that councils were \u2018 over - interpreting \u2019 legislation . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (d / deny-01\n                  :ARG0 (g / government-organization\n                        :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))\n                  :ARG1 (t / tighten-01\n                        :ARG1 (r / rule)))\n            :op2 (a2 / add-01\n                  :ARG0 g\n                  :ARG1 (ii / interpret-01\n                        :ARG0 (c2 / council)\n                        :ARG1 (l / legislate-01)\n                        :ARG1-of (o / over-03)))))", "# ::snt  Poet Laureate Sir Andrew Motion accused town hall bosses and Highways Agency of ruining the countryside by failing to remove rubbish . \n(a / accuse-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Sir\"\n                  :op2 \"Andrew\"\n                  :op3 \"Motion\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (l / laureate\n                        :mod (p2 / poet))))\n      :ARG1 (a2 / and\n            :op1 (p3 / person\n                  :ARG0-of h\n                  :ARG1 (h2 / hall\n                        :mod (t / town))\n                  :ARG2 (b / boss)))\n      :op2 (g / government-organization\n            :name (n2 / name\n                  :op1 \"Highways\"\n                  :op2 \"Agency\"))\n      :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                  :ARG0 a2\n                  :ARG1 (r2 / remove-01\n                        :ARG0 a2\n                        :ARG1 (r3 / rubbish)))))"], "tree": ["(h / hit-01\n   :ARG0 (r / rule\n            :ARG1 (n3 / new-01)))", "(r2 / rate-entity-91\n    :ARG3 (t / temporal-quantity\n             :quant 1\n             :unit (y / year)))", "(c5 / clean-up-02\n    :ARG1 (h / hit-01\n             :ARG0 (r / rule\n                      :ARG1 (n3 / new-01)))\n    :frequency (r2 / rate-entity-91\n                   :ARG3 (t / temporal-quantity\n                            :quant 1\n                            :unit (y / year))))", "(c / claim-01\n   :ARG1 (c5 / clean-up-02\n             :ARG1 (h / hit-01\n                      :ARG0 (r / rule\n                               :ARG1 (n3 / new-01)))\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1\n                                     :unit (y / year)))))", "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :name (n / name\n                               :op1 \"Winchester\")\n                      :location (c4 / county\n                                    :name (n2 / name\n                                              :op1 \"Hampshire\"))))\n   :ARG1 (c5 / clean-up-02\n             :ARG1 (h / hit-01\n                      :ARG0 (r / rule\n                               :ARG1 (n3 / new-01)))\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1\n                                     :unit (y / year)))))", "(ii / interpret-01\n    :ARG0 (c2 / council)\n    :ARG1 (l / legislate-01))", "(ii / interpret-01\n    :ARG0 (c2 / council)\n    :ARG1 (l / legislate-01)\n    :ARG1 (o / over-03))", "(a2 / add-01\n    :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n    :ARG1 (ii / interpret-01\n              :ARG0 (c2 / council)\n              :ARG1 (l / legislate-01)\n              :ARG1 (o / over-03)))", "(c / contrast-01\n   :ARG2 (a2 / add-01\n             :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n             :ARG1 (ii / interpret-01\n                       :ARG0 (c2 / council)\n                       :ARG1 (l / legislate-01)\n                       :ARG1 (o / over-03))))", "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Health\"\n                     :op2 \"and\"\n                     :op3 \"Safety\"\n                     :op4 \"Executive\"))\n   :ARG1 (t / tighten-01\n            :ARG1 (r / rule)))", "(c / contrast-01\n   :ARG2 (d / deny-01\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"Health\"\n                              :op2 \"and\"\n                              :op3 \"Safety\"\n                              :op4 \"Executive\"))\n            :ARG1 (t / tighten-01\n                     :ARG1 (r / rule))))", "(h / have-org-role-91\n   :ARG2 (l / laureate\n            :mod (p2 / poet)))", "(f / fail-01\n   :ARG1 (r2 / remove-01\n             :ARG0 (a2 / and)\n             :ARG1 (r3 / rubbish)))", "(f / fail-01\n   :ARG0 (a2 / and)\n   :ARG1 (r2 / remove-01\n             :ARG0 a2\n             :ARG1 (r3 / rubbish)))", "(a / accuse-01\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\")))", "(a / accuse-01\n   :ARG1 (a2 / and\n             :op1 (p3 / person\n                      :ARG0 (h / have-org-role-91)\n                      :ARG1 (h2 / hall\n                                :mod (t / town))\n                      :ARG2 (b / boss)))\n   :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                     :ARG0 a2\n                     :ARG1 (r2 / remove-01\n                               :ARG0 a2\n                               :ARG1 (r3 / rubbish)))))", "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\")\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (l / laureate\n                              :mod (p2 / poet))))\n   :ARG1 (a2 / and\n             :op1 (p3 / person\n                      :ARG0-of h\n                      :ARG1 (h2 / hall\n                                :mod (t / town))\n                      :ARG2 (b / boss)))\n   :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                     :ARG0 a2\n                     :ARG1 (r2 / remove-01\n                               :ARG0 a2\n                               :ARG1 (r3 / rubbish)))))"], "smus": ["New rules have hit.", "Every year.", "New rules are hitting the clean-up every year.", "The claim claimed that the new rules have been cleaned up year on year.", "The Winchester, Hampshire, Council claimed the new rules had been \"wiped out\" every year.", "Councils are interpreting legislation.", "Councils are interpreting legislation as over.", "The Health and Safety Executive added that the councils were interpreting the legislation as over.", "But the Health and Safety Executive added that the councils were interpreting the legislation as over.", "The Health and Safety Executive denied tightening the rules.", "But the Health and Safety Executive denied tightening the rules.", "Poetry laureate", "failing to remove the rubbish.", "and failing to remove rubbish.", "accused the Highway Agency of...", "The bosses of the town hall were accused of ruining the countryside by failing to remove rubbish.", "Poetry laureate Sir Andrew Motion accused the bosses of the town hall of ruining the countryside by failing to remove rubbish."]}, {"instance_id": "realsumm-56", "summary": "<t> Simon Wood , 38 , from Oldham won Masterchef last Friday . </t> <t> Father - of - four got cooking skills by feeding culinary creations to his kids . </t> <t> The award - winning chef says one of his favourite meals is a plain omelette . </t>", "summary_trees": ["# ::snt  Simon Wood , 38 , from Oldham won Masterchef last Friday . \n(w / win-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Simon\"\n                  :op2 \"Wood\")\n            :age (t / temporal-quantity\n                  :quant 38\n                  :unit (y / year))\n            :source (c / city\n                  :name (n2 / name\n                        :op1 \"Oldham\")))\n      :ARG1 (a / award\n            :name (n3 / name\n                  :op1 \"Masterchef\"))\n      :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "# ::snt  Father - of - four got cooking skills by feeding culinary creations to his kids . \n(g / get-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 (p2 / person\n                        :quant 4)\n                  :ARG2 (f / father)))\n      :ARG1 (s / skill\n            :topic (c / cook-01))\n      :manner (f2 / feed-01\n            :ARG0 p\n            :ARG1 (t / thing\n                  :ARG1-of (c2 / create-01\n                        :mod (c3 / culinary)))\n            :ARG2 (p3 / person\n                  :ARG0-of (h2 / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (k / kid)))))", "# ::snt  The award - winning chef says one of his favourite meals is a plain omelette . \n(s / say-01\n      :ARG0 (c / chef\n            :ARG0-of (w / win-01\n                  :ARG1 (a / award)))\n      :ARG1 (o / omelette\n            :mod (p / plain)\n            :domain (m / meal\n                  :ARG1-of (ii / include-91\n                        :ARG2 (m2 / meal\n                              :ARG1-of (f / favor-01\n                                    :ARG0 c))))))"], "tree": ["(w / win-01\n   :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\"))))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\")))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\"))\n   :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))", "(h2 / have-rel-role-91\n    :ARG1 (p / person)\n    :ARG2 (k / kid))", "(f2 / feed-01\n    :ARG0 (p / person)\n    :ARG1 (t / thing\n             :ARG1 (c2 / create-01\n                       :mod (c3 / culinary))))", "(f2 / feed-01\n    :ARG0 (p / person)\n    :ARG2 (p3 / person\n              :ARG0 (h2 / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (k / kid))))", "(f2 / feed-01\n    :ARG0 (p / person)\n    :ARG1 (t / thing\n             :ARG1 (c2 / create-01\n                       :mod (c3 / culinary)))\n    :ARG2 (p3 / person\n              :ARG0 (h2 / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (k / kid))))", "(g / get-01\n   :ARG0 (p / person\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (p2 / person\n                               :quant 4)\n                     :ARG2 (f / father)))\n   :ARG1 (s / skill\n            :topic (c / cook-01))\n   :manner (f2 / feed-01\n               :ARG0 p\n               :ARG1 (t / thing\n                        :ARG1 (c2 / create-01\n                                  :mod (c3 / culinary)))\n               :ARG2 (p3 / person\n                         :ARG0 (h2 / have-rel-role-91\n                                   :ARG1 p\n                                   :ARG2 (k / kid)))))", "(f2 / feed-01\n    :ARG0 (p / person)\n    :ARG1 (t / thing\n             :ARG1 (c2 / create-01\n                       :mod (c3 / culinary))))", "(ii / include-91\n    :ARG2 (m2 / meal\n              :ARG1 (f / favor-01\n                       :ARG0 (c / chef))))", "(s / say-01\n   :ARG0 (c / chef\n            :ARG0 (w / win-01\n                     :ARG1 (a / award)))\n   :ARG1 (o / omelette\n            :mod (p / plain)\n            :domain (m / meal\n                       :ARG1 (ii / include-91\n                                 :ARG2 (m2 / meal\n                                           :ARG1 (f / favor-01\n                                                    :ARG0 c))))))"], "smus": ["The last Friday, the winner was", "Simon Wood, 38, of Oldham won.", "Simon Wood, 38, of Oldham won the Masterchef.", "Simon Wood, 38, of Oldham, won the Masterchef last Friday.", "Kids.", "People are feeding off of culinary creations.", "People feeding their kids.", "People feeding their kids culinary creations.", "The 4 Fathers got cooking skills by feeding their kids culinary creations.", "People are feeding off of culinary creations.", "One of the chef's favorite meals.", "\"Meals are plain omelettes, one of my favorite,\" says the award-winner chef."]}, {"instance_id": "realsumm-57", "summary": "<t> Swansea 's Gerhard Tremmel in goal behind the Free Agents ' 4 - 4 - 2 . </t> <t> Glen Johnson , Kolo Toure , Ron Vlaar and Luke Garbutt at the back . </t> <t> James Milner , Mikel Arteta , Tom Cleverley and Jonas Gutierrez in midfield . </t> <t> Burnley 's Danny Ings and Manchester United 's James Wilson up front . </t>", "summary_trees": ["# ::snt  Swansea 's Gerhard Tremmel in goal behind the Free Agents ' 4 - 4 - 2 . \n(b / be-located-at-91\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Gerhard\"\n                  :op2 \"Tremmel\")\n            :poss (t / team\n                  :name (n2 / name\n                        :op1 \"Swansea\")))\n      :ARG2 (g / goal)\n      :location (b2 / behind\n            :op1 (t2 / team\n                  :ARG1-of (f / free-04)\n                  :quant (s / score-entity\n                        :op1 4\n                        :op2 4\n                        :op3 2))))", "# ::snt  Glen Johnson , Kolo Toure , Ron Vlaar and Luke Garbutt at the back . \n(b / be-located-at-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Glen\"\n                        :op2 \"Johnson\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Kolo\"\n                        :op2 \"Toure\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Ron\"\n                        :op2 \"Vlaar\"))\n            :op4 (p4 / person\n                  :name (n4 / name\n                        :op1 \"Luke\"\n                        :op2 \"Garbutt\")))\n      :ARG2 (b2 / back))", "# ::snt  James Milner , Mikel Arteta , Tom Cleverley and Jonas Gutierrez in midfield . \n(b / be-located-at-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"Milner\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Mikel\"\n                        :op2 \"Arteta\"))\n            :op3 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Tom\"\n                        :op2 \"Cleverley\"))\n            :op4 (p4 / person\n                  :name (n4 / name\n                        :op1 \"Jonas\"\n                        :op2 \"Gutierrez\")))\n      :ARG2 (m / midfield))", "# ::snt  Burnley 's Danny Ings and Manchester United 's James Wilson up front . \n(a / and\n      :op1 (p / person\n            :name (n / name\n                  :op1 \"Danny\"\n                  :op2 \"Ingers\")\n            :poss (t / team\n                  :name (n2 / name\n                        :op1 \"Burnley\")))\n      :op2 (p2 / person\n            :name (n3 / name\n                  :op1 \"James\"\n                  :op2 \"Wilson\")\n            :poss (t2 / team\n                  :name (n4 / name\n                        :op1 \"Manchester\"\n                        :op2 \"United\")))\n      :location (u / up-front))"], "tree": ["(b / be-located-at-91\n   :location (b2 / behind\n                 :op1 (t2 / team\n                          :quant (s / score-entity\n                                    :op1 4\n                                    :op2 4\n                                    :op3 2))))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Gerhard\"\n                     :op2 \"Tremmel\")\n            :poss (t / team\n                     :name (n2 / name\n                               :op1 \"Swansea\")))\n   :ARG2 (g / goal))", "(b / be-located-at-91\n   :ARG1 (p4 / person\n             :name (n4 / name\n                       :op1 \"Luke\"\n                       :op2 \"Garbutt\"))\n   :ARG2 (b2 / back)\n   :ARG2 b2)", "(b / be-located-at-91\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Glen\"\n                             :op2 \"Johnson\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Kolo\"\n                               :op2 \"Toure\"))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Ron\"\n                               :op2 \"Vlaar\"))\n            :op4 (p4 / person\n                     :name (n4 / name\n                               :op1 \"Luke\"\n                               :op2 \"Garbutt\")))\n   :ARG2 (b2 / back))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"James\"\n                     :op2 \"Milner\"))\n   :ARG2 (m / midfield))", "(b / be-located-at-91\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mikel\"\n                       :op2 \"Arteta\"))\n   :ARG2 (m / midfield))", "(b / be-located-at-91\n   :ARG1 (p4 / person\n             :name (n4 / name\n                       :op1 \"Jonas\"\n                       :op2 \"Gutierrez\"))\n   :ARG2 (m / midfield)\n   :ARG2 m)", "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Danny\"\n                    :op2 \"Ingers\")\n           :poss (t / team\n                    :name (n2 / name\n                              :op1 \"Burnley\")))\n   :op2 (p2 / person\n            :name (n3 / name\n                      :op1 \"James\"\n                      :op2 \"Wilson\")\n            :poss (t2 / team\n                      :name (n4 / name\n                                :op1 \"Manchester\"\n                                :op2 \"United\")))\n   :location (u / up-front))"], "smus": ["behind 4-4 and 2 teams.", "Swansea's Gerhard Tremmel is in goal.", "Luke Garbutt is back at the back.", "Glen Johnson, Kolo Toure, Ron Vaar and Luke Garbutt are back.", "James Milner is in midfield.", "Mikkel Arteta is in midfield.", "Jonas Gutierrez is in midfield.", "Burton's Danny Ingers and Manchester United's James Wilson were up front."]}, {"instance_id": "realsumm-58", "summary": "<t> Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome , made plans to go to their junior prom together last year . </t> <t> For their prom picture , the pair held up a sign which read : ' Real friends do n't count chromosomes ' . </t> <t> The sign references the fact that people with Down syndrome have an extra copy of chromosome 21 . </t>", "summary_trees": ["# ::snt  Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome , made plans to go to their junior prom together last year . \n(p / plan-01\n      :ARG0 (a / and\n            :op1 (p2 / person\n                  :name (n / name\n                        :op1 \"Mikenzy\"\n                        :op2 \"Snell\")\n                  :ARG0-of (s / study-01\n                        :location (h / high-school\n                              :location (s2 / state\n                                    :name (n2 / name\n                                          :op1 \"Michigan\")))))\n            :op2 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Matt\"\n                        :op2 \"Pliska\")\n                  :ARG0-of (h2 / have-03\n                        :ARG1 (m / medical-condition\n                              :name (n4 / name\n                                    :op1 \"Down\"\n                                    :op2 \"Syndrome\")))))\n      :ARG1 (g / go-02\n            :ARG0 a\n            :ARG4 (p4 / prom\n                  :mod (j / junior)\n                  :poss a)\n            :manner (t / together))\n      :time (y / year\n            :mod (l / last)))", "# ::snt  For their prom picture , the pair held up a sign which read : ' Real friends do n't count chromosomes ' . \n(h / hold-up-10\n      :ARG0 (p / pair)\n      :ARG1 (s / sign\n            :ARG1-of (r / read-01\n                  :ARG3 (c / count-01\n                        :polarity -\n                        :ARG0 (p2 / person\n                              :ARG0-of (h2 / have-rel-role-91\n                                    :ARG2 (f / friend\n                                          :ARG1-of (r2 / real-04))))\n                        :ARG1 (c2 / chromosome))))\n      :purpose (p3 / picture-01\n            :ARG1 p\n            :mod (p4 / prom)))", "# ::snt  The sign references the fact that people with Down syndrome have an extra copy of chromosome 21 . \n(r / reference-04\n      :ARG0 (s / sign)\n      :ARG1 (h / have-03\n            :ARG0 (p / person\n                  :ARG1 (m / medical-condition\n                        :name (n / name\n                              :op1 \"Down\"\n                              :op2 \"Syndrome\")))\n            :ARG0 p)\n      :ARG1 (c / copy-01\n            :ARG1 (c2 / chromosome\n                  :mod 21)\n            :mod (e / extra)))"], "tree": ["(p / plan-01\n   :time (y / year\n            :mod (l / last)))", "(h2 / have-03\n    :ARG1 (m / medical-condition\n             :name (n4 / name\n                       :op1 \"Down\"\n                       :op2 \"Syndrome\")))", "(g / go-02\n   :ARG0 (a / and)\n   :ARG4 (p4 / prom\n             :mod (j / junior)\n             :poss a))", "(s / study-01\n   :location (h / high-school\n                :location (s2 / state\n                              :name (n2 / name\n                                        :op1 \"Michigan\"))))", "(g / go-02\n   :ARG0 (a / and)\n   :ARG4 (p4 / prom\n             :mod (j / junior)\n             :poss a)\n   :manner (t / together))", "(p / plan-01\n   :ARG1 (g / go-02\n            :ARG0 (a / and)\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :poss a)\n            :manner (t / together)))", "(p3 / picture-01\n    :ARG1 (p / pair)\n    :mod (p4 / prom))", "(h2 / have-rel-role-91\n    :ARG2 (f / friend\n             :ARG1 (r2 / real-04)))", "(c / count-01\n   :polarity -\n   :ARG0 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG2 (f / friend\n                                :ARG1 (r2 / real-04))))\n   :ARG1 (c2 / chromosome))", "(r / read-01\n   :ARG3 (c / count-01\n            :polarity -\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG2 (f / friend\n                                         :ARG1 (r2 / real-04))))\n            :ARG1 (c2 / chromosome)))", "(h / hold-up-10\n   :ARG0 (p / pair)\n   :ARG1 (s / sign\n            :ARG1 (r / read-01\n                     :ARG3 (c / count-01\n                              :polarity -\n                              :ARG0 (p2 / person\n                                        :ARG0 (h2 / have-rel-role-91\n                                                  :ARG2 (f / friend\n                                                           :ARG1 (r2 / real-04))))\n                              :ARG1 (c2 / chromosome))))\n   :purpose (p3 / picture-01\n                :ARG1 p\n                :mod (p4 / prom)))", "(c / copy-01\n   :ARG1 (c2 / chromosome\n             :mod 21))", "(c / copy-01\n   :ARG1 (c2 / chromosome\n             :mod 21)\n   :mod (e / extra))", "(h / have-03\n   :ARG0 (p / person\n            :ARG1 (m / medical-condition\n                     :name (n / name\n                              :op1 \"Down\"\n                              :op2 \"Syndrome\")))\n   :ARG0 p)", "(r / reference-04\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))\n            :ARG0 p))", "(r / reference-04\n   :ARG0 (s / sign)\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))\n            :ARG0 p))", "(r / reference-04\n   :ARG0 (s / sign)\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))\n            :ARG0 p)\n   :ARG1 (c / copy-01\n            :ARG1 (c2 / chromosome\n                      :mod 21)\n            :mod (e / extra)))"], "smus": ["Plans from last year", "has Down syndrome.", "and go to their junior prom.", "Studying in high school in Michigan.", "and go to their junior prom together.", "Plans are to go together to their junior prom.", "a pair of prom pictures", "Real friends.", "Real friends don't count chromosomes.", "Read: Real friends don't count chromosomes.", "The pair held up a sign for a prom picture that read \"real friends don't count chromosomes.\"", "a copy of chromosome 21", "An extra copy of chromosome 21.", "People with Down syndrome have it.", "Refers to people with Down Syndrome.", "The sign references people with Down Syndrome.", "The sign references people with Down Syndrome who have an extra copy of chromosome 21."]}, {"instance_id": "realsumm-59", "summary": "<t> Police say Michael Scott Shemansky came to their attention after he failed to appear for a supervised visit with his son Saturday . </t> <t> That same day mother Sandra Shemansky , 57 , was found dead at the home they shared in Winter Garden , Florida . </t> <t> Michael Shemansky was going through a difficult divorce and neighbors believe the stress may have caused him to snap . </t>", "summary_trees": ["# ::snt  Police say Michael Scott Shemansky came to their attention after he failed to appear for a supervised visit with his son Saturday . \n(s / say-01\n      :ARG0 (p / police)\n      :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                  :name (n / name\n                        :op1 \"Michael\"\n                        :op2 \"Scott\"\n                        :op3 \"Shemansky\"))\n            :ARG4 (a / attend-02\n                  :ARG0 p\n                  :ARG1 p2\n                  :time (a2 / after\n                        :op1 (f / fail-01\n                              :ARG1 p2\n                              :ARG2 (a3 / appear-01\n                                    :ARG1 p2\n                                    :purpose (v / visit-01\n                                          :ARG0 p2\n                                          :ARG1 (p3 / person\n                                                :ARG0-of (h / have-rel-role-91\n                                                      :ARG1 p2\n                                                      :ARG2 (s2 / son)))\n                                          :ARG1-of (s3 / supervise-01))\n                                    :time (d / date-entity\n                                          :weekday (s4 / saturday))))))))", "# ::snt  That same day mother Sandra Shemansky , 57 , was found dead at the home they shared in Winter Garden , Florida . \n(f / find-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Sandra\"\n                  :op2 \"Shemansky\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                  :quant 57\n                  :unit (y / year)))\n      :ARG2 (d / die-01\n            :ARG1 p)\n      :time (d2 / day\n            :ARG1-of (s / same-01)\n            :mod (t2 / that))\n      :location (h2 / home\n            :ARG1-of (s2 / share-01\n                  :ARG0 p\n                  :ARG2 p)\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Winter\"\n                        :op2 \"Garden\")\n                  :location (s3 / state\n                        :name (n3 / name\n                              :op1 \"Florida\")))))", "# ::snt  Michael Shemansky was going through a difficult divorce and neighbors believe the stress may have caused him to snap . \n(a / and\n      :op1 (g / go-through-20\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Michael\"\n                        :op2 \"Shemansky\"))\n            :ARG1 (d / divorce-01\n                  :ARG0 p\n                  :mod (d2 / difficult)))\n      :op2 (b / believe-01\n            :ARG0 (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 p\n                        :ARG2 (n2 / neighbor)))\n            :ARG1 (p3 / possible-01\n                  :ARG1 (c / cause-01\n                        :ARG0 (s / stress-02)\n                        :ARG1 (s2 / snap-04\n                              :ARG1 p)))))"], "tree": ["(a / attend-02\n   :time (a2 / after\n             :op1 (f / fail-01)))", "(f / fail-01\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG2 (a3 / appear-01\n             :ARG1 p2\n             :purpose (v / visit-01\n                         :ARG0 p2\n                         :ARG1 (p3 / person\n                                   :ARG0 (h / have-rel-role-91\n                                            :ARG1 p2\n                                            :ARG2 (s2 / son)))\n                         :ARG1 (s3 / supervise-01))\n             :time (d / date-entity\n                      :weekday (s4 / saturday))))", "(a / attend-02\n   :ARG0 (p / police)\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2\n                               :purpose (v / visit-01\n                                           :ARG0 p2\n                                           :ARG1 (p3 / person\n                                                     :ARG0 (h / have-rel-role-91\n                                                              :ARG1 p2\n                                                              :ARG2 (s2 / son)))\n                                           :ARG1 (s3 / supervise-01))\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))", "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police)\n            :ARG1 p2\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG1 p2\n                              :ARG2 (a3 / appear-01\n                                        :ARG1 p2\n                                        :purpose (v / visit-01\n                                                    :ARG0 p2\n                                                    :ARG1 (p3 / person\n                                                              :ARG0 (h / have-rel-role-91\n                                                                       :ARG1 p2\n                                                                       :ARG2 (s2 / son)))\n                                                    :ARG1 (s3 / supervise-01))\n                                        :time (d / date-entity\n                                                 :weekday (s4 / saturday)))))))", "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Michael\"\n                               :op2 \"Scott\"\n                               :op3 \"Shemansky\"))\n            :ARG4 (a / attend-02\n                     :ARG0 p\n                     :ARG1 p2\n                     :time (a2 / after\n                               :op1 (f / fail-01\n                                       :ARG1 p2\n                                       :ARG2 (a3 / appear-01\n                                                 :ARG1 p2\n                                                 :purpose (v / visit-01\n                                                             :ARG0 p2\n                                                             :ARG1 (p3 / person\n                                                                       :ARG0 (h / have-rel-role-91\n                                                                                :ARG1 p2\n                                                                                :ARG2 (s2 / son)))\n                                                             :ARG1 (s3 / supervise-01))\n                                                 :time (d / date-entity\n                                                          :weekday (s4 / saturday))))))))", "(f / find-01\n   :location (h2 / home\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Winter\"\n                                        :op2 \"Garden\")\n                              :location (s3 / state\n                                            :name (n3 / name\n                                                      :op1 \"Florida\")))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                    :quant 57\n                    :unit (y / year))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                    :quant 57\n                    :unit (y / year)))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 p\n                           :ARG2 p)\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Winter\"\n                                        :op2 \"Garden\")\n                              :location (s3 / state\n                                            :name (n3 / name\n                                                      :op1 \"Florida\")))))", "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                    :quant 57\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1 (s / same-01)\n             :mod (t2 / that))\n   :location (h2 / home\n                 :ARG1 (s2 / share-01\n                           :ARG0 p\n                           :ARG2 p)\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Winter\"\n                                        :op2 \"Garden\")\n                              :location (s3 / state\n                                            :name (n3 / name\n                                                      :op1 \"Florida\")))))", "(d / divorce-01\n   :ARG0 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))\n   :mod (d2 / difficult))", "(p3 / possible-01\n    :ARG1 (c / cause-01\n             :ARG0 (s / stress-02)\n             :ARG1 (s2 / snap-04\n                       :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\")))))", "(g / go-through-20\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Shemansky\"))\n   :ARG1 (d / divorce-01\n            :ARG0 p\n            :mod (d2 / difficult)))", "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))\n                      :ARG2 (n2 / neighbor)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG0 (s / stress-02)\n                      :ARG1 (s2 / snap-04\n                                :ARG1 p))))"], "smus": ["Attention after the failed.", "Michael Scott Shemansky failed to appear Saturday for a supervised visit to his son.", "Police paid attention to Michael Scott Shemansky after he failed to appear for a surveillance visit to his son Saturday.", "Michael Scott Shemansky came under police attention after he failed to appear for a surveillance visit to his son Saturday.", "Police say Michael Scott Shemansky came under attention after he failed to appear for a surveillance visit to his son Saturday.", "Home found in Florida's Winter Garden", "Sandra Shemansky, mother, was found at age 57.", "Sandra Shemansky, 57, was found in a shared home in Winter Garden, Florida.", "On that same day, 57-year-old mother Sandra Shemansky was found dead in her shared home in Winter Garden, Florida.", "Michael Shemansky had a difficult divorce.", "The stress could have caused Michael Shemansky to snap.", "Michael Shemansky went through a difficult divorce.", "Michael Shemansky's neighbors believe stress may have caused him to snap."]}, {"instance_id": "realsumm-60", "summary": "<t> Bayern Munich beat Porto 6 - 1 in the Champions League on Tuesday . </t> <t> Pep Guardiola 's side progressed 7 - 4 on aggregate to reach semi - finals . </t> <t> Thomas Muller scored 27th Champions League goal to pass Mario Gomez . </t> <t> Muller is now the leading German scorer in the competition . </t> <t> After game Muller led the celebrations with supporters using a megaphone . </t>", "summary_trees": ["# ::snt  Bayern Munich beat Porto 6 - 1 in the Champions League on Tuesday . \n(b / beat-03\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Bayern\"\n                  :op2 \"Munich\"))\n      :ARG1 (t2 / team\n            :name (n2 / name\n                  :op1 \"Porto\"))\n      :ARG2 (g / game\n            :name (n3 / name\n                  :op1 \"Champions\"\n                  :op2 \"League\"))\n      :time (d / date-entity\n            :weekday (t3 / tuesday))\n      :quant (s / score-entity\n            :op1 6\n            :op2 1))", "# ::snt  Pep Guardiola 's side progressed 7 - 4 on aggregate to reach semi - finals . \n(p / progress-01\n      :ARG1 (s / side\n            :poss (p2 / person\n                  :name (n / name\n                        :op1 \"Pep\"\n                        :op2 \"Guardiola\")))\n      :ARG4 (r / reach-01\n            :ARG0 s\n            :ARG1 (f / final\n                  :mod (s2 / semi)))\n      :manner (s3 / score-entity\n            :op1 7\n            :op2 4)\n      :ARG4-of (a / aggregate-01))", "# ::snt  Thomas Muller scored 27th Champions League goal to pass Mario Gomez . \n(s / score-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Thomas\"\n                  :op2 \"Muller\"))\n      :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                  :value 27)\n            :mod (g2 / game\n                  :name (n2 / name\n                        :op1 \"Champions\"\n                        :op2 \"League\")))\n      :ARG2-of (p2 / pass-03\n            :ARG0 p\n            :ARG1 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\"))))", "# ::snt  Muller is now the leading German scorer in the competition . \n(p / person\n      :name (n / name\n            :op1 \"Muller\")\n      :ARG0-of (s / score-01\n            :ARG2 (p2 / person\n                  :ARG0-of (c / compete-01))\n            :ARG3 (l / lead-01\n                  :ARG0 p\n                  :ARG1 p2))\n      :mod (c2 / country\n            :name (n2 / name\n                  :op1 \"Germany\"))\n      :time (n3 / now))", "# ::snt  After game Muller led the celebrations with supporters using a megaphone . \n(l / lead-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Muller\"))\n      :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                  :ARG0-of (s / support-01)\n                  :ARG0-of (u / use-01\n                        :ARG1 (m / megaphone))))\n      :time (a / after\n            :op1 (g / game)))"], "tree": ["(b / beat-03\n   :time (d / date-entity\n            :weekday (t3 / tuesday))\n   :quant (s / score-entity\n             :op1 6\n             :op2 1))", "(p / progress-01\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))", "(r / reach-01\n   :ARG0 (s / side)\n   :ARG1 (f / final\n            :mod (s2 / semi)))", "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\"))))", "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :ARG4 (r / reach-01\n            :ARG0 s\n            :ARG1 (f / final\n                     :mod (s2 / semi)))\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4)\n   :ARG4 (a / aggregate-01))", "(p2 / pass-03\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\")))", "(p2 / pass-03\n    :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\")))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\"))))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2 (p2 / pass-03\n             :ARG0 p\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Mario\"\n                                 :op2 \"Gomez\"))))", "(s / score-01\n   :ARG2 (p2 / person\n             :ARG0 (c / compete-01)))", "(l / lead-01\n   :ARG0 (p :mod (c2 / country\n                     :name (n2 / name\n                               :op1 \"Germany\"))\n            :time (n3 / now))\n   :ARG1 p2)", "(s / score-01\n   :ARG2 (p2 / person\n             :ARG0 (c / compete-01))\n   :ARG3 (l / lead-01\n            :ARG0 (p :mod (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Germany\"))\n                     :time (n3 / now))\n            :ARG1 p2))", "(l / lead-02\n   :time (a / after\n            :op1 (g / game)))", "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\")))", "(c / celebrate-02\n   :accompanier (p2 / person\n                    :ARG0 (s / support-01)\n                    :ARG0 (u / use-01\n                             :ARG1 (m / megaphone))))", "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (s / support-01)\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone)))))", "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0 (s / support-01)\n                             :ARG0 (u / use-01\n                                      :ARG1 (m / megaphone))))\n   :time (a / after\n            :op1 (g / game)))"], "smus": ["Tuesday beat, 6-1", "Progressed 7-4.", "The side will reach the semi-finals.", "Pep Guardiola's side progressed.", "Pep Guardiola's side progressed to reach the semi-finals with a 7-4 aggregate.", "Pass Mario Gomez.", "Thomas Muller will pass Mario Gomez.", "Thomas Muller scored the 27th goal in the Champions League.", "Thomas Muller scored the 27th goal in the Champions League to pass Mario Gomez.", "Score for the competitor", "The Germans are now leading.", "The competition's score is the Germans are now leading the way.", "Lead after the game.", "Muller led.", "Celebrations with supporters using the megaphone", "Muller led celebrations with supporters using the megaphone.", "After the game, Muller led celebrations with supporters using the megaphone."]}, {"instance_id": "realsumm-61", "summary": "<t> Domenico Rancadore given a seven - year sentence by Italian court in 1999 . </t> <t> He was convicted for role as a ' man of honour ' , taking bribes from builders . </t> <t> In February the Sicilian Mafia fugitive lost battle against extradition to Italy . </t> <t> Today it emerged that the 65-year - old 's case expired in October last year . </t>", "summary_trees": ["# ::snt  Domenico Rancadore given a seven - year sentence by Italian court in 1999 . \n(s / sentence-01\n      :ARG0 (c / court\n            :mod (c2 / country\n                  :name (n / name\n                        :op1 \"Italy\")))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Domenico\"\n                  :op2 \"Rancadore\"))\n      :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year))\n      :time (d / date-entity\n            :year 1999))", "# ::snt  He was convicted for role as a ' man of honour ' , taking bribes from builders . \n(c / convict-01\n      :ARG1 (h / he)\n      :ARG2 (a / and\n            :op1 (r / role\n                  :mod (m / man\n                        :mod (h2 / honor))\n                  :domain h)\n            :op2 (b / bribe-01\n                  :ARG0 h\n                  :ARG1 (p / person\n                        :ARG0-of (b2 / build-01)))))", "# ::snt  In February the Sicilian Mafia fugitive lost battle against extradition to Italy . \n(l / lose-03\n      :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                  :name (n / name\n                        :op1 \"Mafia\"))\n            :mod (ii / island\n                  :name (n2 / name\n                        :op1 \"Sicily\")))\n      :ARG1 (b / battle-01\n            :ARG0 f\n            :ARG1 (e / extradite-01\n                  :ARG1 f\n                  :ARG3 (c2 / country\n                        :name (n3 / name\n                              :op1 \"Italy\"))))\n      :time (d / date-entity\n            :month 2))", "# ::snt  Today it emerged that the 65-year - old 's case expired in October last year . \n(e / emerge-02\n      :ARG1 (e2 / expire-01\n            :ARG1 (c / case-03\n                  :ARG2 (p / person\n                        :age (t / temporal-quantity\n                              :quant 65\n                              :unit (y / year))))\n            :time (d / date-entity\n                  :month 10\n                  :mod (y2 / year\n                        :mod (l / last))))\n      :time (t2 / today))"], "tree": ["(s / sentence-01\n   :time (d / date-entity\n            :year 1999))", "(s / sentence-01\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year)))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\")))", "(s / sentence-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year)))", "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year))\n   :time (d / date-entity\n            :year 1999))", "(b / bribe-01\n   :ARG0 (h / he)\n   :ARG1 (p / person\n            :ARG0 (b2 / build-01)))", "(c / convict-01\n   :ARG1 (h / he)\n   :ARG2 (r / role\n            :mod (m / man\n                    :mod (h2 / honor))\n            :domain h))", "(c / convict-01\n   :ARG1 (h / he)\n   :ARG2 (b / bribe-01\n            :ARG0 h\n            :ARG1 (p / person\n                     :ARG0 (b2 / build-01))))", "(c / convict-01\n   :ARG1 (h / he)\n   :ARG2 (a / and\n            :op1 (r / role\n                    :mod (m / man\n                            :mod (h2 / honor))\n                    :domain h)\n            :op2 (b / bribe-01\n                    :ARG0 h\n                    :ARG1 (p / person\n                             :ARG0 (b2 / build-01)))))", "(l / lose-03\n   :time (d / date-entity\n            :month 2))", "(e / extradite-01\n   :ARG1 (f / fugitive)\n   :ARG3 (c2 / country\n             :name (n3 / name\n                       :op1 \"Italy\")))", "(b / battle-01\n   :ARG0 (f / fugitive)\n   :ARG1 (e / extradite-01\n            :ARG1 f\n            :ARG3 (c2 / country\n                      :name (n3 / name\n                                :op1 \"Italy\"))))", "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\"))\n            :mod (ii / island\n                     :name (n2 / name\n                               :op1 \"Sicily\"))))", "(c / case-03\n   :ARG2 (p / person\n            :age (t / temporal-quantity\n                    :quant 65\n                    :unit (y / year))))", "(e2 / expire-01\n    :time (d / date-entity\n             :month 10\n             :mod (y2 / year\n                      :mod (l / last))))", "(e2 / expire-01\n    :ARG1 (c / case-03\n             :ARG2 (p / person\n                      :age (t / temporal-quantity\n                              :quant 65\n                              :unit (y / year)))))", "(e2 / expire-01\n    :ARG1 (c / case-03\n             :ARG2 (p / person\n                      :age (t / temporal-quantity\n                              :quant 65\n                              :unit (y / year))))\n    :time (d / date-entity\n             :month 10\n             :mod (y2 / year\n                      :mod (l / last))))", "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c / case-03\n                      :ARG2 (p / person\n                               :age (t / temporal-quantity\n                                       :quant 65\n                                       :unit (y / year))))\n             :time (d / date-entity\n                      :month 10\n                      :mod (y2 / year\n                               :mod (l / last)))))", "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c / case-03\n                      :ARG2 (p / person\n                               :age (t / temporal-quantity\n                                       :quant 65\n                                       :unit (y / year))))\n             :time (d / date-entity\n                      :month 10\n                      :mod (y2 / year\n                               :mod (l / last))))\n   :time (t2 / today))"], "smus": ["The sentence was in 1999.", "The sentence is a seven year sentence.", "The sentence was given to Domenico Rancadore.", "Domenico Rancadore received a 7 year sentence.", "In 1999 an Italian court sentenced Domenico Rancadore to seven years.", "He bribes builders.", "He was convicted of the role of an honorable man.", "He was convicted of bribing builders.", "He was convicted of a role of honor man and bribery to builders.", "Losed in February.", "The fugitive was extradited to Italy.", "The fugitive is in battle over extradition to Italy.", "The fugitive Mafia of Sicily lost.", "In the case of the 65 year old.", "expired in October of last year.", "The case of the 65 year old has expired.", "The case of the 65 year old expired in October of last year.", "The case of the 65 year old emerged in October of last year.", "Today it emerged that the case of the 65 year old was expired in October of last year."]}, {"instance_id": "realsumm-62", "summary": "<t> Baron the German Shepard was filmed as he helped get the dishes done at home in California . </t> <t> The pup was professionally trained at the Hill Country K9 school . </t> <t> To date the clip of Baron dishwashing has been watched over 27,000 times . </t> <t> Many viewers have deemed the dog 's cleaning antics ' cute ' and adorable ' </t>", "summary_trees": ["# ::snt  Baron the German Shepard was filmed as he helped get the dishes done at home in California . \n(f / film-01\n      :ARG1 (a / animal\n            :name (n / name\n                  :op1 \"Baron\"\n                  :op2 \"the\"\n                  :op3 \"German\"\n                  :op4 \"Shepard\"))\n      :time (h / help-01\n            :ARG0 a\n            :ARG1 (d / do-02\n                  :ARG1 (d2 / dish)\n                  :location (h2 / home\n                        :location (s / state\n                              :name (n2 / name\n                                    :op1 \"California\"))))))", "# ::snt  The pup was professionally trained at the Hill Country K9 school . \n(t / train-01\n      :ARG0 (s / school\n            :name (n / name\n                  :op1 \"Hill\"\n                  :op2 \"Country\"\n                  :op3 \"K9\"))\n      :ARG2 (p / pup)\n      :manner (p2 / professional))", "# ::snt  To date the clip of Baron dishwashing has been watched over 27,000 times . \n(w / watch-01\n      :ARG1 (c / clip\n            :topic (w2 / wash-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Baron\"))\n                  :ARG1 (d / dish)))\n      :time (t / to-date)\n      :quant (o / over\n            :op1 27000))", "# ::snt  Many viewers have deemed the dog 's cleaning antics ' cute ' and adorable ' \n(d / deem-01\n      :ARG0 (p / person\n            :ARG0-of (v / view-01)\n            :quant (m / many))\n      :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                  :topic (c2 / clean-01\n                        :ARG0 (d2 / dog)))))"], "tree": ["(d / do-02\n   :location (h2 / home\n                 :location (s / state\n                              :name (n2 / name\n                                        :op1 \"California\"))))", "(f / film-01\n   :ARG1 (a / animal\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\")))", "(d / do-02\n   :ARG1 (d2 / dish)\n   :location (h2 / home\n                 :location (s / state\n                              :name (n2 / name\n                                        :op1 \"California\"))))", "(h / help-01\n   :ARG0 (a / animal :name (n / name :op1 \"Baron\" :op2 \"the\" :op3 \"German\" :op4 \"Shepard\"))\n   :ARG1 (d / do-02\n            :ARG1 (d2 / dish)\n            :location (h2 / home\n                          :location (s / state\n                                       :name (n2 / name\n                                                 :op1 \"California\")))))", "(f / film-01\n   :ARG1 (a / animal\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\"))\n   :time (h / help-01\n            :ARG0 a\n            :ARG1 (d / do-02\n                     :ARG1 (d2 / dish)\n                     :location (h2 / home\n                                   :location (s / state\n                                                :name (n2 / name\n                                                          :op1 \"California\"))))))", "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\")))", "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\"))\n   :ARG2 (p / pup)\n   :manner (p2 / professional))", "(w2 / wash-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Baron\")))", "(w / watch-01\n   :time (t / to-date)\n   :quant (o / over\n             :op1 27000))", "(w2 / wash-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Baron\"))\n    :ARG1 (d / dish))", "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))\n                       :ARG1 (d / dish))))", "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))\n                       :ARG1 (d / dish)))\n   :time (t / to-date)\n   :quant (o / over\n             :op1 27000))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (c / cute))", "(d / deem-01\n   :ARG1 (a2 / adorable\n             :domain (a3 / antics\n                         :topic (c2 / clean-01\n                                    :ARG0 (d2 / dog)))))", "(d / deem-01\n   :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                        :topic (c2 / clean-01\n                                   :ARG0 (d2 / dog)))))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (a2 / adorable\n             :domain (a3 / antics\n                         :topic (c2 / clean-01\n                                    :ARG0 (d2 / dog)))))", "(d / deem-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (m / many))\n   :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                        :topic (c2 / clean-01\n                                   :ARG0 (d2 / dog)))))"], "smus": ["done at home in California.", "Baron the German Shepard was filmed.", "The dishes are done in a home in California.", "Baron the German Shepard helped do the dishes at his California home.", "Baron the German Shepard was filmed as he helped do the dishes at his California home.", "The Hill Country K9 school was trained.", "The Hill Country K9 school has professionally trained the pup.", "Baron washed.", "Over 27,000 watched to date.", "Baron washed the dish.", "Watched the clip of Baron washing the dish.", "To date, over 27,000 people have watched the clip of Baron washing the dish.", "Many viewers have deemed it cute.", "The dog cleaning antics are deemed adorable.", "The dog cleaning antics are deemed cute and adorable.", "The dog cleaning antics are deemed adorable by many viewers.", "Many viewers have deemed the dog's cleaning antics cute and adorable."]}, {"instance_id": "realsumm-63", "summary": "<t> Jihadis face fines , whipping or even jail time for wearing Nike products . </t> <t> Ban is also partly due to the brand sharing its name with a Greek Goddess . </t> <t> Commanders say the name also sounds like sexual slang words in Arabic . </t> <t> Those living under ISIS are already banned from wearing jeans or items of clothing carrying provocative language or swear words . </t>", "summary_trees": ["# ::snt  Jihadis face fines , whipping or even jail time for wearing Nike products . \n(f / face-01\n      :ARG0 (j / jihadi)\n      :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (j2 / jail-01\n                  :mod (e / even)))\n      :ARG1-of (c / cause-01\n            :ARG0 (w2 / wear-01\n                  :ARG0 j\n                  :ARG1 (p / product\n                        :mod (c2 / company\n                              :name (n / name\n                                    :op1 \"Nike\"))))))", "# ::snt  Ban is also partly due to the brand sharing its name with a Greek Goddess . \n(c / cause-01\n      :ARG0 (s / share-01\n            :ARG0 (b / brand)\n            :ARG1 (n / name\n                  :poss b)\n            :ARG2 (p / person\n                  :name (n2 / name\n                        :op1 \"Goddess\")\n                  :mod (c2 / country\n                        :name (n3 / name\n                              :op1 \"Greece\"))))\n      :ARG1 (b2 / ban-01)\n      :degree (p2 / part)\n      :mod (a / also))", "# ::snt  Commanders say the name also sounds like sexual slang words in Arabic . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG2 (c / commander)))\n      :ARG1 (s2 / sound-01\n            :ARG1 (n / name)\n            :ARG2 (w / word\n                  :mod (s3 / slang\n                        :mod (s4 / sex))\n                  :medium (l / language\n                        :name (n2 / name\n                              :op1 \"Arabic\")))\n            :mod (a / also)))", "# ::snt  Those living under ISIS are already banned from wearing jeans or items of clothing carrying provocative language or swear words . \n(b / ban-01\n      :ARG1 (w / wear-01\n            :ARG0 (p / person\n                  :mod (t / that)\n                  :ARG0-of (l / live-01\n                        :location (u / under\n                              :op1 (c / criminal-organization\n                                    :name (n / name\n                                          :op1 \"ISIS\")))))\n            :ARG1 (o / or\n                  :op1 (j / jeans)\n                  :op2 (ii / item\n                        :ARG2-of (c2 / clothe-01))\n                  :ARG0-of (c3 / carry-01\n                        :ARG1 (o2 / or\n                              :op1 (l2 / language\n                                    :ARG0-of (p2 / provoke-01))\n                              :op2 (w2 / word\n                                    :ARG1-of (s / swear-01))))))\n      :ARG2 p\n      :time (a / already))"], "tree": ["(w2 / wear-01\n    :ARG1 (p / product\n             :mod (c2 / company\n                      :name (n / name\n                               :op1 \"Nike\"))))", "(w2 / wear-01\n    :ARG0 (j / jihadi)\n    :ARG1 (p / product\n             :mod (c2 / company\n                      :name (n / name\n                               :op1 \"Nike\"))))", "(c / cause-01\n   :ARG0 (w2 / wear-01\n             :ARG0 (j / jihadi)\n             :ARG1 (p / product\n                      :mod (c2 / company\n                               :name (n / name\n                                        :op1 \"Nike\")))))", "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (j2 / jail-01\n                     :mod (e / even))))", "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (j2 / jail-01\n                     :mod (e / even)))\n   :ARG1 (c / cause-01\n            :ARG0 (w2 / wear-01\n                      :ARG0 j\n                      :ARG1 (p / product\n                               :mod (c2 / company\n                                        :name (n / name\n                                                 :op1 \"Nike\"))))))", "(s / share-01\n   :ARG1 (n / name\n            :poss (b / brand)))", "(c / cause-01\n   :degree (p2 / part)\n   :mod (a / also))", "(s / share-01\n   :ARG0 (b / brand)\n   :ARG1 (n / name\n            :poss b))", "(s / share-01\n   :ARG1 (n / name\n            :poss (b / brand))\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Goddess\")\n            :mod (c2 / country\n                     :name (n3 / name\n                               :op1 \"Greece\"))))", "(s / share-01\n   :ARG0 (b / brand)\n   :ARG1 (n / name\n            :poss b)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Goddess\")\n            :mod (c2 / country\n                     :name (n3 / name\n                               :op1 \"Greece\"))))", "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (b / brand)\n            :ARG1 (n / name\n                     :poss b)\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Goddess\")\n                     :mod (c2 / country\n                              :name (n3 / name\n                                        :op1 \"Greece\"))))\n   :ARG1 (b2 / ban-01)\n   :degree (p2 / part)\n   :mod (a / also))", "(s2 / sound-01\n    :ARG1 (n / name)\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\"))))", "(s2 / sound-01\n    :ARG1 (n / name)\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\")))\n    :mod (a / also))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG2 (c / commander)))\n   :ARG1 (s2 / sound-01\n             :ARG1 (n / name)\n             :ARG2 (w / word\n                      :mod (s3 / slang\n                               :mod (s4 / sex))\n                      :medium (l / language\n                                 :name (n2 / name\n                                           :op1 \"Arabic\")))\n             :mod (a / also)))", "(l / live-01\n   :location (u / under\n                :op1 (c / criminal-organization\n                        :name (n / name\n                                 :op1 \"ISIS\"))))", "(c3 / carry-01\n    :ARG1 (o2 / or\n              :op1 (l2 / language\n                       :ARG0 (p2 / provoke-01))\n              :op2 (w2 / word\n                       :ARG1 (s / swear-01))))", "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :mod (t / that)\n                     :ARG0 (l / live-01\n                              :location (u / under\n                                           :op1 (c / criminal-organization\n                                                   :name (n / name\n                                                            :op1 \"ISIS\")))))\n            :ARG1 (o / or\n                     :op1 (j / jeans)\n                     :op2 (ii / item\n                              :ARG2 (c2 / clothe-01))\n                     :ARG0 (c3 / carry-01\n                               :ARG1 (o2 / or\n                                         :op1 (l2 / language\n                                                  :ARG0 (p2 / provoke-01))\n                                         :op2 (w2 / word\n                                                  :ARG1 (s / swear-01))))))\n   :ARG2 p\n   :time (a / already))"], "smus": ["Wearing Nike products.", "Jihadi was wearing Nike products.", "Because Jihadis are wearing Nike products.", "Jihadis face fines, whipping or even jail.", "Jihadis face fines, whipping or even jail for wearing Nike products.", "Sharing the brand name.", "Also partly because...", "The brand is sharing its name.", "Sharing the brand name with the Goddess of Greece.", "The brand is sharing its name with the Goddess of Greece.", "The ban is also partially due to the brand sharing its name with the Greek goddess.", "The name sounds like sex slang words in Arabic.", "The name also sounds like sex slang words in Arabic.", "Commanders say the name also sounds like sex slang words in Arabic.", "Living under ISIS.", "carrying provocative language or swearing wor.", "Those living under ISIS are already banned from wearing jeans or other clothing items carrying provocative language or swearing wors."]}, {"instance_id": "realsumm-64", "summary": "<t> Lorraine Bracco was asked by The Sopranos creator to be Carmela . </t> <t> The actress turned him down because she played a mobster 's wife in Martin Scorsese 's Goodfellas in 1990 . </t> <t> Convinced showrunner David Chase to let her play the role of Dr. Jennifer Melfi . </t>", "summary_trees": ["# ::snt  Lorraine Bracco was asked by The Sopranos creator to be Carmela . \n(a / ask-02\n      :ARG0 (p / person\n            :ARG0-of (c / create-01\n                  :ARG1 (b / broadcast-program\n                        :name (n / name\n                              :op1 \"The\"\n                              :op2 \"Sopranos\"))))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Carmela\")\n            :domain (p3 / person\n                  :name (n3 / name\n                        :op1 \"Lorraine\"\n                        :op2 \"Bracco\")))\n      :ARG2 p3)", "# ::snt  The actress turned him down because she played a mobster 's wife in Martin Scorsese 's Goodfellas in 1990 . \n(t / turn-down-05\n      :ARG0 (p / person\n            :ARG0-of (a / act-01))\n      :ARG1 (h / he)\n      :ARG1-of (c / cause-01\n            :ARG0 (p2 / play-02\n                  :ARG0 p\n                  :ARG1 (p3 / person\n                        :ARG0-of (h2 / have-rel-role-91\n                              :ARG1 (m / mobster)\n                              :ARG2 (w / wife)))\n                  :time (w2 / work-of-art\n                        :name (n / name\n                              :op1 \"Goodfellas\")\n                        :poss (p4 / person\n                              :name (n2 / name\n                                    :op1 \"Martin\"\n                                    :op2 \"Scorsese\"))\n                        :time (d / date-entity\n                              :year 1990)))))", "# ::snt  Convinced showrunner David Chase to let her play the role of Dr. Jennifer Melfi . \n(c / convince-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Chase\")\n            :ARG0-of (r / run-01\n                  :ARG1 (s / show)))\n      :ARG2 (l / let-01\n            :ARG0 p\n            :ARG1 (p2 / play-02\n                  :ARG0 (s2 / she)\n                  :ARG1 (p3 / person\n                        :name (n2 / name\n                              :op1 \"Dr.\"\n                              :op2 \"Jennifer\"\n                              :op3 \"Melfi\")))))"], "tree": ["(c / create-01\n   :ARG1 (b / broadcast-program\n            :name (n / name\n                     :op1 \"The\"\n                     :op2 \"Sopranos\")))", "(a / ask-02\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\")))\n   :ARG2 p3)", "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\"))))", "(a / ask-02\n   :ARG0 (p / person\n            :ARG0 (c / create-01\n                     :ARG1 (b / broadcast-program\n                              :name (n / name\n                                       :op1 \"The\"\n                                       :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\")))\n   :ARG2 p3)", "(h2 / have-rel-role-91\n    :ARG1 (m / mobster)\n    :ARG2 (w / wife))", "(t / turn-down-05\n   :ARG0 (p / person\n            :ARG0 (a / act-01))\n   :ARG1 (h / he))", "(p2 / play-02\n    :ARG0 (p / person)\n    :ARG1 (p3 / person\n              :ARG0 (h2 / have-rel-role-91\n                        :ARG1 (m / mobster)\n                        :ARG2 (w / wife))))", "(p2 / play-02\n    :time (w2 / work-of-art\n              :name (n / name\n                       :op1 \"Goodfellas\")\n              :poss (p4 / person\n                        :name (n2 / name\n                                  :op1 \"Martin\"\n                                  :op2 \"Scorsese\"))\n              :time (d / date-entity\n                       :year 1990)))", "(p2 / play-02\n    :ARG0 (p / person)\n    :ARG1 (p3 / person\n              :ARG0 (h2 / have-rel-role-91\n                        :ARG1 (m / mobster)\n                        :ARG2 (w / wife)))\n    :time (w2 / work-of-art\n              :name (n / name\n                       :op1 \"Goodfellas\")\n              :poss (p4 / person\n                        :name (n2 / name\n                                  :op1 \"Martin\"\n                                  :op2 \"Scorsese\"))\n              :time (d / date-entity\n                       :year 1990)))", "(c / cause-01\n   :ARG0 (p2 / play-02\n             :ARG0 (p / person)\n             :ARG1 (p3 / person\n                       :ARG0 (h2 / have-rel-role-91\n                                 :ARG1 (m / mobster)\n                                 :ARG2 (w / wife)))\n             :time (w2 / work-of-art\n                       :name (n / name\n                                :op1 \"Goodfellas\")\n                       :poss (p4 / person\n                                 :name (n2 / name\n                                           :op1 \"Martin\"\n                                           :op2 \"Scorsese\"))\n                       :time (d / date-entity\n                                :year 1990))))", "(l / let-01\n   :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Chase\")))\n   :ARG1 (p2 / play-02\n             :ARG0 (s2 / she)\n             :ARG1 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Dr.\"\n                                 :op2 \"Jennifer\"\n                                 :op3 \"Melfi\"))))", "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\")\n            :ARG0 (r / run-01\n                     :ARG1 (s / show)))\n   :ARG2 (l / let-01\n            :ARG0 p\n            :ARG1 (p2 / play-02\n                      :ARG0 (s2 / she)\n                      :ARG1 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Dr.\"\n                                          :op2 \"Jennifer\"\n                                          :op3 \"Melfi\")))))"], "smus": ["The Sopranos was a creation.", "Lorraine Bracco was asked to be Carmela.", "The creators of The Sopranos have asked, \"Lorraine Bracco is Carmela.\"", "The creators of The Sopranos have asked her to be Carmela Lorraine Bracco.", "The mobster's wife.", "The actors turned him down.", "People played the wife of a mobster.", "Played in Martin Scorsese's Goodfellas in 1990.", "In Martin Scorsese's Goodfellas (1990), people played the wife of a mobster.", "Because in Martin Scorsese's Goodfellas in 1990, people played the wife of a mobster.", "David Chase will let her play Dr. Jennifer Melfi.", "David Chase, the show's showrunner, was convinced to let her play Dr. Jennifer Melfi."]}, {"instance_id": "realsumm-65", "summary": "<t> Kevin Carr set off on his epic journey from Haytor , Dartmoor in July 2013 . </t> <t> He is now less than 24 hours away from completing his epic trip . </t> <t> Mr Carr ran around the world unsupported - taking his own tent with him . </t> <t> He is set to break the previous record held by an Australian by 24 hours . </t>", "summary_trees": ["# ::snt  Kevin Carr set off on his epic journey from Haytor , Dartmoor in July 2013 . \n(s / set-off-06\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Kevin\"\n                  :op2 \"Carr\"))\n      :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic))\n      :source (l / location\n            :name (n2 / name\n                  :op1 \"Haytor\")\n            :part-of (ii / island\n                  :name (n3 / name\n                        :op1 \"Dartmoor\")))\n      :time (d / date-entity\n            :month 7\n            :year 2013))", "# ::snt  He is now less than 24 hours away from completing his epic trip . \n(b / be-temporally-at-91\n      :ARG1 (h / he)\n      :ARG2 (a / away\n            :op1 (c / complete-01\n                  :ARG0 h\n                  :ARG1 (t / trip-03\n                        :ARG0 h\n                        :mod (e / epic)))\n            :quant (l / less-than\n                  :op1 (t2 / temporal-quantity\n                        :quant 24\n                        :unit (h2 / hour))))\n      :time (n / now))", "# ::snt  Mr Carr ran around the world unsupported - taking his own tent with him . \n(r / run-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Mr\"\n                  :op2 \"Carr\"))\n      :ARG1 (a / around\n            :op1 (w / world))\n      :manner (s / support-01\n            :polarity -\n            :ARG1 p)\n      :manner (t / take-01\n            :ARG0 p\n            :ARG1 (t2 / tent\n                  :poss p)\n            :accompanier w))", "# ::snt  He is set to break the previous record held by an Australian by 24 hours . \n(s / set-08\n      :ARG1 (h / he)\n      :ARG2 (b / break-02\n            :ARG0 h\n            :ARG1 (r / record\n                  :time (p / previous)\n                  :ARG1-of (h2 / hold-01\n                        :ARG0 (p2 / person\n                              :mod (c / country\n                                    :name (n / name\n                                          :op1 \"Australia\")))))\n            :extent (t / temporal-quantity\n                  :quant 24\n                  :unit (h3 / hour))))"], "tree": ["(j / journey-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :mod (e / epic))", "(s / set-off-06\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7\n            :year 2013))", "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")\n              :part (ii / island\n                        :name (n3 / name\n                                  :op1 \"Dartmoor\")))\n   :time (d / date-entity\n            :month 7\n            :year 2013))", "(t / trip-03\n   :ARG0 (h / he)\n   :mod (e / epic))", "(c / complete-01\n   :ARG1 (t / trip-03\n            :ARG0 (h / he)\n            :mod (e / epic)))", "(b / be-temporally-at-91\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 (h / he)\n                    :ARG1 (t / trip-03\n                             :ARG0 h\n                             :mod (e / epic)))\n            :quant (l / less-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 24\n                               :unit (h2 / hour)))))", "(b / be-temporally-at-91\n   :ARG1 (h / he)\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 h\n                    :ARG1 (t / trip-03\n                             :ARG0 h\n                             :mod (e / epic)))\n            :quant (l / less-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 24\n                               :unit (h2 / hour)))))", "(b / be-temporally-at-91\n   :ARG1 (h / he)\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 h\n                    :ARG1 (t / trip-03\n                             :ARG0 h\n                             :mod (e / epic)))\n            :quant (l / less-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 24\n                               :unit (h2 / hour))))\n   :time (n / now))", "(t / take-01\n   :ARG1 (t2 / tent\n             :poss (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))\n   :ARG1 (t2 / tent\n             :poss p))", "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))\n   :ARG1 (t2 / tent\n             :poss p)\n   :accompanier (w / world))", "(r / run-02\n   :manner (s / support-01\n              :polarity -)\n   :manner (t / take-01))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\")))", "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\"))\n   :ARG1 (a / around\n            :op1 (w / world)))", "(b / break-02\n   :extent (t / temporal-quantity\n              :quant 24\n              :unit (h3 / hour)))", "(b / break-02\n   :ARG0 (h / he)\n   :ARG1 (r / record\n            :time (p / previous)\n            :ARG1 (h2 / hold-01\n                      :ARG0 (p2 / person\n                                :mod (c / country\n                                        :name (n / name\n                                                 :op1 \"Australia\"))))))", "(b / break-02\n   :ARG0 (h / he)\n   :ARG1 (r / record\n            :time (p / previous)\n            :ARG1 (h2 / hold-01\n                      :ARG0 (p2 / person\n                                :mod (c / country\n                                        :name (n / name\n                                                 :op1 \"Australia\")))))\n   :extent (t / temporal-quantity\n              :quant 24\n              :unit (h3 / hour)))"], "smus": ["Kevin Carr's journey has been epic.", "Set off from Haytor on Dartmoor in July 2013.", "Kevin Carr set off on an epic journey from Haytor, Dartmoor, in July 2013.", "He had an epic trip.", "Completing his epic trip.", "less than 24 hours away from completing his epic trip.", "He was less than 24 hours away from completing his epic trip.", "He is now less than 24 hours away from completing his epic trip.", "Mr Carr's tent was taken.", "Mr Carr took his tent.", "Mr Carr took his tent with the world.", "The run was taken without support.", "Mr Carr ran.", "Mr Carr ran around the world.", "Break for 24 hours.", "He will break the previous record held by the Australians.", "He will break the previous Australian record held in 24 hours."]}, {"instance_id": "realsumm-66", "summary": "<t> David Axelrod masterminded two Obama presidential election victories . </t> <t> He was hired by Labour leader Ed Miliband amid great fanfare last year . </t> <t> Revealed at a book launch that he is not resident for tax purposes in UK . </t> <t> Labour confirms it pays Mr Axelrod in dollars through consultancy firm . </t>", "summary_trees": ["# ::snt  David Axelrod masterminded two Obama presidential election victories . \n(m / mastermind-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"David\"\n                  :op2 \"Axelrod\"))\n      :ARG1 (w / win-01\n            :quant 2\n            :ARG1 (e / elect-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Obama\"))\n                  :ARG2 (p3 / president))))", "# ::snt  He was hired by Labour leader Ed Miliband amid great fanfare last year . \n(h / hire-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Ed\"\n                  :op2 \"Miliband\")\n            :ARG0-of (l / lead-02\n                  :ARG1 (p2 / political-party\n                        :name (n2 / name\n                              :op1 \"Labour\"))))\n      :ARG1 (h2 / he)\n      :time (y / year\n            :mod (l2 / last))\n      :manner (f / fanfare\n            :mod (g / great)))", "# ::snt  Revealed at a book launch that he is not resident for tax purposes in UK . \n(r / reveal-01\n      :ARG1 (r2 / reside-01\n            :polarity -\n            :ARG0 (h / he)\n            :ARG1 (c / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :purpose (t / tax-01))\n      :location (l / launch-01\n            :ARG1 (b / book)))", "# ::snt  Labour confirms it pays Mr Axelrod in dollars through consultancy firm . \n(c / confirm-01\n      :ARG0 (p / political-party\n            :name (n / name\n                  :op1 \"Labour\"))\n      :ARG1 (p2 / pay-01\n            :ARG0 p\n            :ARG2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\"))\n            :manner (d / dollar)\n            :instrument (f / firm\n                  :ARG0-of (c2 / consult-01))))"], "tree": ["(e / elect-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Obama\")))", "(e / elect-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Obama\"))\n   :ARG2 (p3 / president))", "(w / win-01\n   :quant 2\n   :ARG1 (e / elect-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Obama\"))\n            :ARG2 (p3 / president)))", "(m / mastermind-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Axelrod\"))\n   :ARG1 (w / win-01\n            :quant 2\n            :ARG1 (e / elect-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Obama\"))\n                     :ARG2 (p3 / president))))", "(l / lead-02\n   :ARG1 (p2 / political-party\n             :name (n2 / name\n                       :op1 \"Labour\")))", "(h / hire-01\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))", "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\")\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (h2 / he))", "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\")\n            :ARG0 (l / lead-02\n                     :ARG1 (p2 / political-party\n                               :name (n2 / name\n                                         :op1 \"Labour\"))))\n   :ARG1 (h2 / he)\n   :time (y / year\n            :mod (l2 / last))\n   :manner (f / fanfare\n              :mod (g / great)))", "(r2 / reside-01\n    :polarity -\n    :purpose (t / tax-01))", "(r2 / reside-01\n    :polarity -\n    :ARG0 (h / he)\n    :ARG1 (c / country\n             :name (n / name\n                      :op1 \"UK\"))\n    :purpose (t / tax-01))", "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -\n             :ARG0 (h / he)\n             :ARG1 (c / country\n                      :name (n / name\n                               :op1 \"UK\"))\n             :purpose (t / tax-01)))", "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -\n             :ARG0 (h / he)\n             :ARG1 (c / country\n                      :name (n / name\n                               :op1 \"UK\"))\n             :purpose (t / tax-01))\n   :location (l / launch-01\n                :ARG1 (b / book)))", "(p2 / pay-01\n    :manner (d / dollar)\n    :instrument (f / firm))", "(p2 / pay-01\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\")))", "(p2 / pay-01\n    :ARG0 (p / political-party :name (n / name :op1 \"Labour\"))\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\"))\n    :manner (d / dollar)\n    :instrument (f / firm\n                   :ARG0 (c2 / consult-01)))", "(c / confirm-01\n   :ARG1 (p2 / pay-01\n             :ARG0 (p / political-party :name (n / name :op1 \"Labour\"))\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Mr\"\n                                 :op2 \"Axelrod\"))\n             :manner (d / dollar)\n             :instrument (f / firm\n                            :ARG0 (c2 / consult-01))))", "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :ARG0 p\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Mr\"\n                                 :op2 \"Axelrod\"))\n             :manner (d / dollar)\n             :instrument (f / firm\n                            :ARG0 (c2 / consult-01))))"], "smus": ["Obama's election", "Obama's presidential election", "Obama's presidential election has won 2", "David Axelrod masterminded two victories in Obama's presidential election.", "Labour leadership", "Hired last year with great fanfare.", "Labour leader Ed Miliband has hired him.", "Labour leader Ed Miliband hired him last year with great fanfare.", "Not residential for tax purposes.", "He is not resident in the UK for tax purposes.", "It was revealed that he was not resident in the UK for tax purposes.", "At the book launch, it was revealed that he was not residing in the UK for tax purposes.", "The firm pays by dollars.", "Mr Axelrod pays.", "Labour pays Mr Axelrod dollars through a consulting firm.", "The confirmation is that Labour pays Mr Axelrod dollars through a consulting firm.", "Labour confirms it pays Mr Axelrod with dollars through a consulting firm."]}, {"instance_id": "realsumm-67", "summary": "<t> HBO is the US network behind Game of Thrones and the Sopranos . </t> <t> Service is available on Apple TV and iOS exclusively for three months . </t> <t> Apple has also cut the price of Apple TV system from $ 99 ( \u00a3 65 ) to $ 69 . </t>", "summary_trees": ["# ::snt  HBO is the US network behind Game of Thrones and the Sopranos . \n(n / network\n      :domain (b / broadcast-program\n            :name (n2 / name\n                  :op1 \"HBO\"))\n      :mod (c / country\n            :name (n3 / name\n                  :op1 \"US\"))\n      :location (b2 / behind\n            :op1 (a / and\n                  :op1 (b3 / broadcast-program\n                        :name (n4 / name\n                              :op1 \"Game\"\n                              :op2 \"of\"\n                              :op3 \"Thrones\"))\n                  :op2 (b4 / broadcast-program\n                        :name (n5 / name\n                              :op1 \"The\"\n                              :op2 \"Sapranos\")))))", "# ::snt  Service is available on Apple TV and iOS exclusively for three months . \n(a / available-02\n      :ARG2 (s / service)\n      :location (a2 / and\n            :op1 (p / product\n                  :name (n / name\n                        :op1 \"Apple\"\n                        :op2 \"TV\"))\n            :op2 (p2 / product\n                  :name (n2 / name\n                        :op1 \"iOS\")))\n      :duration (t / temporal-quantity\n            :quant 3\n            :unit (m / month)\n            :ARG0-of (e / exclusive-02)))", "# ::snt  Apple has also cut the price of Apple TV system from $ 99 ( \u00a3 65 ) to $ 69 . \n(c / cut-02\n      :ARG0 (c2 / company\n            :name (n / name\n                  :op1 \"Apple\"))\n      :ARG1 (p / price-01\n            :ARG1 (s / system\n                  :mod (p2 / product\n                        :name (n2 / name\n                              :op1 \"Apple\"\n                              :op2 \"TV\"))))\n      :ARG3 (m / monetary-quantity\n            :quant 99\n            :unit (d / dollar))\n      :ARG4 (m2 / monetary-quantity\n            :quant 69\n            :unit (d2 / dollar))\n      :mod (a / also))"], "tree": ["(n / network\n   :domain (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"HBO\"))\n   :mod (c / country\n           :name (n3 / name\n                     :op1 \"US\"))\n   :location (b2 / behind\n                 :op1 (a / and\n                         :op1 (b3 / broadcast-program\n                                  :name (n4 / name\n                                            :op1 \"Game\"\n                                            :op2 \"of\"\n                                            :op3 \"Thrones\"))\n                         :op2 (b4 / broadcast-program\n                                  :name (n5 / name\n                                            :op1 \"The\"\n                                            :op2 \"Sapranos\")))))", "(a / available-02\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\")))", "(a / available-02\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\")))", "(a / available-02\n   :ARG2 (s / service)\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\")))", "(a / available-02\n   :ARG2 (s / service)\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\")))", "(a / available-02\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\"))\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month))\n   :duration t)", "(a / available-02\n   :location (a2 / and\n                 :op1 (p / product\n                         :name (n / name\n                                  :op1 \"Apple\"\n                                  :op2 \"TV\"))\n                 :op2 (p2 / product\n                          :name (n2 / name\n                                    :op1 \"iOS\"))))", "(a / available-02\n   :location (p2 / product\n                 :name (n2 / name\n                           :op1 \"iOS\")))", "(a / available-02\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\")))", "(a / available-02\n   :ARG2 (s / service)\n   :location (p / product\n                :name (n / name\n                         :op1 \"Apple\"\n                         :op2 \"TV\")))", "(c / cut-02\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\")))))", "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\")))))", "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :ARG3 (m / monetary-quantity\n            :quant 99\n            :unit (d / dollar))\n   :ARG4 (m2 / monetary-quantity\n             :quant 69\n             :unit (d2 / dollar))\n   :mod (a / also))"], "smus": ["HBO is the US network behind Game of Thrones and The Sapranos.", "available on ios", "available on Apple TV.", "Service is available on iOS.", "Service is available on Apple TV.", "For three months, it will be available on iOS.", "Available on Apple TV and iOS.", "available on ios", "available on Apple TV.", "Service is available on Apple TV.", "Price cut for Apple TV system", "Apple has cut the price of the Apple TV system.", "Apple has also cut the price of the Apple TV system from $99 to $69."]}, {"instance_id": "realsumm-68", "summary": "<t> Huma Abedin came under fire for not tipping at Chipotle in Iowa . </t> <t> She is Hillary Clinton 's most trusted aide for the 2016 campaign . </t> <t> On Saturday , she and husband Anthony Weiner went for Mexican lunch . </t> <t> It is one of their final weekends before the campaign gets into swing . </t>", "summary_trees": ["# ::snt  Huma Abedin came under fire for not tipping at Chipotle in Iowa . \n(f / fire-02\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Huma\"\n                  :op2 \"Abedin\"))\n      :ARG2 (t / tip-02\n            :polarity -\n            :ARG0 p\n            :location (c / company\n                  :name (n2 / name\n                        :op1 \"Chipotle\")\n                  :location (s / state\n                        :name (n3 / name\n                              :op1 \"Iowa\")))))", "# ::snt  She is Hillary Clinton 's most trusted aide for the 2016 campaign . \n(h / have-org-role-91\n      :ARG0 (s / she)\n      :ARG1 (c / campaign-01\n            :time (d / date-entity\n                  :year 2016))\n      :ARG2 (a / aide\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Hillary\"\n                        :op2 \"Clinton\"))\n            :ARG1-of (t / trust-02\n                  :ARG2-of (h2 / have-degree-91\n                        :ARG1 a\n                        :ARG3 (m / most)))))", "# ::snt  On Saturday , she and husband Anthony Weiner went for Mexican lunch . \n(g / go-02\n      :ARG0 (a / and\n            :op1 (s / she)\n            :op2 (p / person\n                  :name (n / name\n                        :op1 \"Anthony\"\n                        :op2 \"Weiner\")\n                  :ARG0-of (h / have-rel-role-91\n                        :ARG1 s\n                        :ARG2 (h2 / husband))))\n      :ARG4 (l / lunch\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Mexico\")))\n      :time (d / date-entity\n            :weekday (s2 / saturday)))", "# ::snt  It is one of their final weekends before the campaign gets into swing . \n(w / weekend\n      :ARG1-of (ii / include-91\n            :ARG2 (w2 / weekend\n                  :poss (t / they)\n                  :mod (f / final)\n                  :time (b / before\n                        :op1 (s / swing-06\n                              :ARG1 (c / campaign-01)))))\n      :domain (ii2 / it))"], "tree": ["(t / tip-02\n   :polarity -\n   :location (c / company\n                :name (n2 / name\n                          :op1 \"Chipotle\")\n                :location (s / state\n                             :name (n3 / name\n                                       :op1 \"Iowa\"))))", "(t / tip-02\n   :polarity -\n   :ARG0 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n   :location (c / company\n                :name (n2 / name\n                          :op1 \"Chipotle\")\n                :location (s / state\n                             :name (n3 / name\n                                       :op1 \"Iowa\"))))", "(h2 / have-degree-91\n    :ARG1 (a / aide)\n    :ARG3 (m / most))", "(c / campaign-01\n   :time (d / date-entity\n            :year 2016))", "(t / trust-02\n   :ARG2 (h2 / have-degree-91\n             :ARG1 (a / aide)\n             :ARG3 (m / most)))", "(h / have-org-role-91\n   :ARG0 (s / she)\n   :ARG2 (a / aide\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\"))))", "(h / have-org-role-91\n   :ARG0 (s / she)\n   :ARG1 (c / campaign-01\n            :time (d / date-entity\n                     :year 2016))\n   :ARG2 (a / aide\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\"))))", "(g / go-02\n   :time (d / date-entity\n            :weekday (s2 / saturday)))", "(g / go-02\n   :ARG0 (s / she)\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Mexico\"))))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anthony\"\n                     :op2 \"Weiner\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (s / she)\n                     :ARG2 (h2 / husband))))", "(g / go-02\n   :ARG0 (s / she)\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Mexico\")))\n   :time (d / date-entity\n            :weekday (s2 / saturday)))", "(g / go-02\n   :ARG0 (a / and\n            :op1 (s / she)\n            :op2 (p / person\n                    :name (n / name\n                             :op1 \"Anthony\"\n                             :op2 \"Weiner\")\n                    :ARG0 (h / have-rel-role-91\n                             :ARG1 s\n                             :ARG2 (h2 / husband)))))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anthony\"\n                     :op2 \"Weiner\")\n            :ARG0 (h / have-rel-role-91\n                     :ARG1 (s / she)\n                     :ARG2 (h2 / husband)))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Mexico\")))\n   :ARG4 l)", "(ii / include-91\n    :ARG2 (w2 / weekend\n              :poss (t / they)\n              :mod (f / final)\n              :time (b / before\n                       :op1 (s / swing-06\n                               :ARG1 (c / campaign-01)))))"], "smus": ["Not tipping at Chipotle in Iowa.", "Huma Abedin was not tipping at Chipotle in Iowa.", "the aide was the most.", "The campaign is in 2016.", "The aide was trusted most.", "She was Hillary Clinton's aide.", "She was Hillary Clinton's aide in the 2016 campaign.", "Saturday went.", "She went to a Mexican lunch.", "Anthony Weiner went with her husband.", "She went to a Mexican lunch Saturday.", "She and her husband, Anthony Weiner, went.", "Her husband Anthony Weiner went to a Mexican lunch.", "One of their final weekends before the campaign swings in."]}, {"instance_id": "realsumm-69", "summary": "<t> Gary fell from 147th most popular British name in 1996 to 1,001st in 2013 . </t> <t> Reached height of its popularity in 1964 , when it was ranked 16th . </t> <t> Meanwhile , names including Dexter and Jenson are now in the top 100 . </t>", "summary_trees": ["# ::snt  Gary fell from 147th most popular British name in 1996 to 1,001st in 2013 . \n(f / fall-01\n      :ARG1 (n / name\n            :name (n2 / name\n                  :op1 \"Gary\"))\n      :ARG3 (r / rank-01\n            :ARG2 147\n            :ARG1 n\n            :ARG1-of (h / have-degree-91\n                  :ARG2 (p / popular-02\n                        :ARG1 n)\n                  :ARG3 (m / most)\n                  :ARG5 (n3 / name\n                        :mod (c / country\n                              :name (n4 / name\n                                    :op1 \"Britain\"))))\n            :time (d / date-entity\n                  :year 1996))\n      :ARG4 (r2 / rank-01\n            :ARG2 1091\n            :ARG1 n\n            :time (d2 / date-entity\n                  :year 2013)))", "# ::snt  Reached height of its popularity in 1964 , when it was ranked 16th . \n(r / reach-01\n      :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                  :poss (ii / it)))\n      :time (d / date-entity\n            :year 1964\n            :time-of (r2 / rank-01\n                  :ARG1 ii\n                  :ARG2 16)))", "# ::snt  Meanwhile , names including Dexter and Jenson are now in the top 100 . \n(b / be-located-at-91\n      :ARG1 (n / name\n            :ARG2-of (ii / include-01\n                  :ARG1 (a / and\n                        :op1 (p / person\n                              :name (n2 / name\n                                    :op1 \"Dexter\"))\n                        :op2 (p2 / person\n                              :name (n3 / name\n                                    :op1 \"Jenson\")))))\n      :ARG2 (t / top\n            :ord (o / ordinal-entity\n                  :value 100))\n      :time (n4 / now)\n      :time (m / meanwhile))"], "tree": ["(r2 / rank-01\n    :time (d2 / date-entity\n              :year 2013))", "(r / rank-01\n   :time (d / date-entity\n            :year 1996))", "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\")))", "(r / rank-01\n   :ARG2 147\n   :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))\n   :ARG1 (h / have-degree-91\n            :ARG2 (p / popular-02\n                     :ARG1 n)\n            :ARG3 (m / most)\n            :ARG5 (n3 / name\n                      :mod (c / country\n                              :name (n4 / name\n                                        :op1 \"Britain\"))))\n   :time (d / date-entity\n            :year 1996))", "(r / reach-01\n   :time (d / date-entity\n            :year 1964\n            :time (r2 / rank-01)))", "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :poss (ii / it)))\n   :time (d / date-entity\n            :year 1964\n            :time (r2 / rank-01\n                      :ARG1 ii\n                      :ARG2 16)))", "(b / be-located-at-91\n   :time (n4 / now)\n   :time (m / meanwhile))", "(ii / include-01\n    :ARG1 (p / person\n             :name (n2 / name\n                       :op1 \"Dexter\")))", "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p / person\n                               :name (n2 / name\n                                         :op1 \"Dexter\")))))", "(ii / include-01\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n2 / name\n                               :op1 \"Dexter\"))\n             :op2 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jenson\"))))", "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Jenson\"))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100)))", "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2 (ii / include-01\n                      :ARG1 (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Jenson\"))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100))\n   :time (n4 / now)\n   :time (m / meanwhile))"], "smus": ["2013 rankings", "In 1996, the rank was", "The name Gary fell.", "Gary was ranked 147th most popular British name in 1996.", "Reached in 1964 when ranked.", "It reached a high in popularitie in 1964 when it was ranked 16th.", "Meanwhile, there's now.", "including Dexter.", "In the names including Dexter.", "including Dexter and Johnson.", "Names including Johnson are in the top 100.", "Meanwhile, names including Johnson are now in the top 100."]}, {"instance_id": "realsumm-70", "summary": "<t> Leanne Mitchell has been dropped by her label and sings at a holiday camp . </t> <t> Andrea Begley and Jermain Jackman are yet to become household names . </t> <t> Will 2015 winner Stevie become a chart success or another Voice flop ? </t> <t> . </t>", "summary_trees": ["# ::snt  Leanne Mitchell has been dropped by her label and sings at a holiday camp . \n(a / and\n      :op1 (d / drop-05\n            :ARG0 (l / label\n                  :poss (p / person\n                        :name (n / name\n                              :op1 \"Leanne\"\n                              :op2 \"Mitchell\")))\n            :ARG1 p)\n      :op2 (s / sing-01\n            :ARG0 p\n            :location (c / camp\n                  :mod (h / holiday))))", "# ::snt  Andrea Begley and Jermain Jackman are yet to become household names . \n(h / have-11\n      :ARG0 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Andrea\"\n                        :op2 \"Begley\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Jermain\"\n                        :op2 \"Jackman\")))\n      :ARG1 (y / yet)\n      :ARG2 (b / become-01\n            :ARG1 a\n            :ARG2 (n3 / name\n                  :mod (h2 / household))))", "# ::snt  Will 2015 winner Stevie become a chart success or another Voice flop ? \n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Stevie\")\n            :ARG0-of (w / win-01\n                  :time (d / date-entity\n                        :year 2015)))\n      :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                  :ARG0 p\n                  :ARG1 (c / chart-01))\n            :op2 (f / flop-01\n                  :ARG1 p\n                  :mod (v / voice-01)\n                  :mod (a2 / another))))", "# ::snt  . \n(a / amr-empty)"], "tree": ["(s / sing-01\n   :location (c / camp\n                :mod (h / holiday)))", "(s / sing-01\n   :ARG0 (p / person :name (n / name :op1 \"Leanne\" :op2 \"Mitchell\"))\n   :location (c / camp\n                :mod (h / holiday)))", "(d / drop-05\n   :ARG0 (l / label\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Leanne\"\n                              :op2 \"Mitchell\")))\n   :ARG1 p)", "(h / have-11\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrea\"\n                     :op2 \"Begley\"))\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 p\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(h / have-11\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jermain\"\n                       :op2 \"Jackman\"))\n   :ARG1 (y / yet)\n   :ARG1 y\n   :ARG2 (b / become-01\n            :ARG1 p2\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))", "(w / win-01\n   :time (d / date-entity\n            :year 2015))", "(f / flop-01\n   :mod (v / voice-01)\n   :mod (a2 / another))", "(f / flop-01\n   :ARG1 (p / person :name (n / name :op1 \"Stevie\")))\n   :mod (v / voice-01)\n   :mod (a2 / another))", "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\")\n            :ARG0 (w / win-01\n                     :time (d / date-entity\n                              :year 2015)))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG0 p\n                    :ARG1 (c / chart-01))\n            :op2 (f / flop-01\n                    :ARG1 p\n                    :mod (v / voice-01)\n                    :mod (a2 / another))))"], "smus": ["sings in a holiday camp.", "Leanne Mitchell sings at a holiday camp.", "Leanne Mitchell's label has dropped her.", "Andrea Begley has yet to become a household name.", "Jermain Jackson has yet to become a household name.", "The win in 2015", "Another Voice Flop.", "Another Steve Voice Flop.", "Steve's 2015 win became either a chart success or another Voice flop."]}, {"instance_id": "realsumm-71", "summary": "<t> Romanian - born Alexandra Harra , 28 , has become an Instagram star . </t> <t> Model , who 's posed for Playboy , posts selfies with inspirational messages . </t> <t> After dyeing locks black , being hailed as a rival to Kim Kardashian . </t>", "summary_trees": ["# ::snt  Romanian - born Alexandra Harra , 28 , has become an Instagram star . \n(b / become-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Alexandra\"\n                  :op2 \"Harra\")\n            :ARG1-of (b2 / bear-02\n                  :location (c / country\n                        :name (n2 / name\n                              :op1 \"Romania\")))\n            :age (t / temporal-quantity\n                  :quant 28\n                  :unit (y / year)))\n      :ARG2 (s / star\n            :mod (p2 / publication\n                  :name (n3 / name\n                        :op1 \"Instagram\"))))", "# ::snt  Model , who 's posed for Playboy , posts selfies with inspirational messages . \n(p / post-01\n      :ARG0 (m / model\n            :ARG0-of (p2 / pose-01\n                  :ARG2 (m2 / magazine\n                        :name (n / name\n                              :op1 \"Playboy\"))))\n      :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                  :ARG0-of (ii / inspire-01))))", "# ::snt  After dyeing locks black , being hailed as a rival to Kim Kardashian . \n(h / hail-02\n      :ARG1 (r / rival-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")))\n      :time (a / after\n            :op1 (d / dye-01\n                  :ARG1 (l / lock)\n                  :ARG2 (b / black-04\n                        :ARG1 l))))"], "tree": ["(b2 / bear-02\n    :location (c / country\n                 :name (n2 / name\n                           :op1 \"Romania\")))", "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Alexandra\"\n                     :op2 \"Harra\")\n            :ARG1 (b2 / bear-02\n                      :location (c / country\n                                   :name (n2 / name\n                                             :op1 \"Romania\")))\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))", "(p2 / pose-01\n    :ARG2 (m2 / magazine\n              :name (n / name\n                       :op1 \"Playboy\")))", "(p / post-01\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0 (ii / inspire-01))))", "(p / post-01\n   :ARG0 (m / model\n            :ARG0 (p2 / pose-01\n                      :ARG2 (m2 / magazine\n                                :name (n / name\n                                         :op1 \"Playboy\")))))", "(p / post-01\n   :ARG0 (m / model\n            :ARG0 (p2 / pose-01\n                      :ARG2 (m2 / magazine\n                                :name (n / name\n                                         :op1 \"Playboy\"))))\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0 (ii / inspire-01))))", "(h / hail-02\n   :time (a / after\n            :op1 (d / dye-01)))", "(d / dye-01\n   :ARG1 (l / lock)\n   :ARG2 (b / black-04\n            :ARG1 l))", "(h / hail-02\n   :ARG1 (r / rival-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"\n                              :op2 \"Kardinez\")))\n   :time (a / after\n            :op1 (d / dye-01\n                    :ARG1 (l / lock)\n                    :ARG2 (b / black-04\n                             :ARG1 l))))"], "smus": ["Born in Romania.", "Alexandra Harra, 28, a Romanian-born star on Instagram, has become a star.", "Posing for Playboy.", "Posts selfies with inspiring messages", "Posts by Model Posing for Playboy", "Model posed for Playboy posts selfies with inspirational messages", "Hail after dyeing.", "The locks were dyed black.", "Kim Kardinez's rivalry was hailed after the locks were dyed black."]}, {"instance_id": "realsumm-72", "summary": "<t> Nadir Ciftci celebrated by blowing a kiss at rival goalkeeper Scott Bain . </t> <t> However , Ciftci was left blushing as rivals earned impressive victory . </t> <t> Win gave hosts Dundee their first derby win in more than a decade . </t> <t> Goals from Greg Stewart , Jake McPake and Paul Heffernen secured win . </t>", "summary_trees": ["# ::snt  Nadir Ciftci celebrated by blowing a kiss at rival goalkeeper Scott Bain . \n(c / celebrate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nadir\"\n                  :op2 \"Ciftci\"))\n      :manner (b / blow-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                  :ARG0 p\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Scott\"\n                              :op2 \"Bain\")\n                        :ARG0-of (g / goalkeeper-01)\n                        :ARG0-of (r / rival-01\n                              :ARG1 p)))))", "# ::snt  However , Ciftci was left blushing as rivals earned impressive victory . \n(c / contrast-01\n      :ARG2 (l / leave-13\n            :ARG0 (e / earn-01\n                  :ARG0 (r / rival)\n                  :ARG1 (w / win-01\n                        :ARG0 r\n                        :ARG0-of (ii / impress-01)))\n            :ARG1 (b / blush-01\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Ciftci\")))))", "# ::snt  Win gave hosts Dundee their first derby win in more than a decade . \n(g / give-01\n      :ARG0 (w / win-01)\n      :ARG1 (w2 / win-01\n            :ARG0 (t / team\n                  :name (n / name\n                        :op1 \"Dundee\")\n                  :ARG0-of (h / host-01))\n            :mod (d / derby)\n            :ord (o / ordinal-entity\n                  :value 1\n                  :range (m / more-than\n                        :op1 (t2 / temporal-quantity\n                              :quant 1\n                              :unit (d2 / decade)))))\n      :ARG2 t)", "# ::snt  Goals from Greg Stewart , Jake McPake and Paul Heffernen secured win . \n(s / secure-02\n      :ARG0 (g / goal\n            :source (a / and\n                  :op1 (p / person\n                        :name (n / name\n                              :op1 \"Greg\"\n                              :op2 \"Stewart\"))\n                  :op2 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Jake\"\n                              :op2 \"McPake\"))\n                  :op3 (p3 / person\n                        :name (n3 / name\n                              :op1 \"Paul\"\n                              :op2 \"Heffernen\"))))\n      :ARG1 (w / win-01))"], "tree": ["(k / kiss-01\n   :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Scott\"\n                       :op2 \"Bain\")\n             :ARG0 (g / goalkeeper-01)\n             :ARG0 (r / rival-01\n                      :ARG1 p)))", "(b / blow-01\n   :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))\n   :ARG1 (k / kiss-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Scott\"\n                                :op2 \"Bain\")\n                      :ARG0 (g / goalkeeper-01)\n                      :ARG0 (r / rival-01\n                               :ARG1 p))))", "(c / celebrate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nadir\"\n                     :op2 \"Ciftci\"))\n   :manner (b / blow-01\n              :ARG0 p\n              :ARG1 (k / kiss-01\n                       :ARG0 p\n                       :ARG1 (p2 / person\n                                 :name (n2 / name\n                                           :op1 \"Scott\"\n                                           :op2 \"Bain\")\n                                 :ARG0 (g / goalkeeper-01)\n                                 :ARG0 (r / rival-01\n                                          :ARG1 p)))))", "(w / win-01\n   :ARG0 (r / rival)\n   :ARG0 (ii / impress-01))", "(b / blush-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ciftci\")))", "(e / earn-01\n   :ARG0 (r / rival)\n   :ARG1 (w / win-01\n            :ARG0 r\n            :ARG0 (ii / impress-01)))", "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG0 (r / rival)\n            :ARG1 (w / win-01\n                     :ARG0 r\n                     :ARG0 (ii / impress-01)))\n   :ARG1 (b / blush-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Ciftci\"))))", "(c / contrast-01\n   :ARG2 (l / leave-13\n            :ARG0 (e / earn-01\n                     :ARG0 (r / rival)\n                     :ARG1 (w / win-01\n                              :ARG0 r\n                              :ARG0 (ii / impress-01)))\n            :ARG1 (b / blush-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Ciftci\")))))", "(w2 / win-01\n    :ARG0 (t / team\n             :name (n / name\n                      :op1 \"Dundee\")\n             :ARG0 (h / host-01)))", "(w2 / win-01\n    :mod (d / derby)\n    :ord (o / ordinal-entity\n            :value 1\n            :range (m / more-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 1\n                               :unit (d2 / decade)))))", "(w2 / win-01\n    :ARG0 (t / team\n             :name (n / name\n                      :op1 \"Dundee\")\n             :ARG0 (h / host-01))\n    :mod (d / derby)\n    :ord (o / ordinal-entity\n            :value 1\n            :range (m / more-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 1\n                               :unit (d2 / decade)))))", "(g / give-01\n   :ARG1 (w2 / win-01\n             :ARG0 (t / team\n                      :name (n / name\n                               :op1 \"Dundee\")\n                      :ARG0 (h / host-01))\n             :mod (d / derby)\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :quant 1\n                                        :unit (d2 / decade))))))", "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :ARG0 (t / team\n                      :name (n / name\n                               :op1 \"Dundee\")\n                      :ARG0 (h / host-01))\n             :mod (d / derby)\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :quant 1\n                                        :unit (d2 / decade))))))", "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :ARG0 (t / team\n                      :name (n / name\n                               :op1 \"Dundee\")\n                      :ARG0 (h / host-01))\n             :mod (d / derby)\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :quant 1\n                                        :unit (d2 / decade)))))\n   :ARG2 t)", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p / person\n                       :name (n / name\n                                :op1 \"Greg\"\n                                :op2 \"Stewart\"))))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Jake\"\n                                  :op2 \"McPake\"))))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (p3 / person\n                        :name (n3 / name\n                                  :op1 \"Paul\"\n                                  :op2 \"Heffernen\")))\n   :ARG1 (w / win-01))", "(s / secure-02\n   :ARG0 (g / goal\n            :source (a / and\n                       :op1 (p / person\n                               :name (n / name\n                                        :op1 \"Greg\"\n                                        :op2 \"Stewart\"))\n                       :op2 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Jake\"\n                                          :op2 \"McPake\"))\n                       :op3 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Paul\"\n                                          :op2 \"Heffernen\"))))\n   :ARG1 (w / win-01))"], "smus": ["Nadir ciftci kisses rival goalkeeper Scott Bain.", "Nadir ciftci was blowing a kiss from rival goalkeeper Scott Bain.", "Nadir ciftci was celebrated by blowing a kiss to rival goalkeeper Scott Bain.", "The rivals won by an impressive margin.", "Ciftci is blushing.", "The rivals earned an impressive victory.", "The fact that rivals earned an impressive victory has left Ciftci blushing.", "But the fact that rivals earned an impressive victory has left Ciftci blushing.", "Dundee hosts win", "The derby victory is the first in more than a decade.", "Dundee's first derby win in more than a decade.", "The derby victory over the hosts gave the Dundees their first in more than a decade.", "The win gave the hosts their first derby win in more than a decade.", "The win gave Dundee their first derby win in more than a decade.", "Greg Stewart's goals are secure.", "Jake McPake's goals are secure.", "Paul Heffernen's goals secured the victory.", "The goals of Greg Stewart, Jake McPake and Paul Heffernen secured the victory."]}, {"instance_id": "realsumm-73", "summary": "<t> Mercedes - Benz Fashion Week Australia 2015 came to a close on Thursday night in Sydney . </t> <t> Stand - out shows included Maticevski , Romance Was Born , Tome , Steven Khalil and Johanna Johnson . </t> <t> Sheer and metallic fabrics and slouchy and voluminous silhouettes were recurring trends . </t>", "summary_trees": ["# ::snt  Mercedes - Benz Fashion Week Australia 2015 came to a close on Thursday night in Sydney . \n(c / close-01\n      :ARG1 (e / event\n            :name (n / name\n                  :op1 \"Mercedes-Benz\"\n                  :op2 \"Fashion\"\n                  :op3 \"Week\"\n                  :op4 \"Australia\")\n            :time (d / date-entity\n                  :year 2015\n                  :weekday (t / thursday)\n                  :dayperiod (n2 / night))\n            :location (c2 / city\n                  :name (n3 / name\n                        :op1 \"Sydney\"))))", "# ::snt  Stand - out shows included Maticevski , Romance Was Born , Tome , Steven Khalil and Johanna Johnson . \n(ii / include-91\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Maticevski\"))\n            :op2 (w / work-of-art\n                  :name (n2 / name\n                        :op1 \"Romance\"\n                        :op2 \"Was\"\n                        :op3 \"Born\"))\n            :op3 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Tome\"))\n            :op4 (p3 / person\n                  :name (n4 / name\n                        :op1 \"Steven\"\n                        :op2 \"Khalil\"))\n            :op5 (p4 / person\n                  :name (n5 / name\n                        :op1 \"Johanna\"\n                        :op2 \"Johnson\")))\n      :ARG2 (s / show-04\n            :ARG1-of (s2 / stand-out-06)))", "# ::snt  Sheer and metallic fabrics and slouchy and voluminous silhouettes were recurring trends . \n(t / trend\n      :ARG1-of (r / repeat-01)\n      :domain (a / and\n            :op1 (f / fabric\n                  :mod (s / sheer)\n                  :mod (m / metallic))\n            :op2 (s2 / silhouette\n                  :mod (s3 / slouchy)\n                  :mod (v / voluminous))))"], "tree": ["(c / close-01\n   :ARG1 (e / event\n            :name (n / name\n                     :op1 \"Mercedes-Benz\"\n                     :op2 \"Fashion\"\n                     :op3 \"Week\"\n                     :op4 \"Australia\")\n            :time (d / date-entity\n                     :year 2015\n                     :weekday (t / thursday)\n                     :dayperiod (n2 / night))\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"Sydney\"))))", "(ii / include-91\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Maticevski\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (p2 / person\n              :name (n3 / name\n                        :op1 \"Tome\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (p3 / person\n              :name (n4 / name\n                        :op1 \"Steven\"\n                        :op2 \"Khalil\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (w / work-of-art\n             :name (n2 / name\n                       :op1 \"Romance\"\n                       :op2 \"Was\"\n                       :op3 \"Born\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(ii / include-91\n    :ARG1 (p4 / person\n              :name (n5 / name\n                        :op1 \"Johanna\"\n                        :op2 \"Johnson\"))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06))\n    :ARG2 s)", "(ii / include-91\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Maticevski\"))\n             :op2 (w / work-of-art\n                     :name (n2 / name\n                               :op1 \"Romance\"\n                               :op2 \"Was\"\n                               :op3 \"Born\"))\n             :op3 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Tome\"))\n             :op4 (p3 / person\n                      :name (n4 / name\n                                :op1 \"Steven\"\n                                :op2 \"Khalil\"))\n             :op5 (p4 / person\n                      :name (n5 / name\n                                :op1 \"Johanna\"\n                                :op2 \"Johnson\")))\n    :ARG2 (s / show-04\n             :ARG1 (s2 / stand-out-06)))", "(t / trend\n   :ARG1-of (r / repeat-01)\n   :domain (a / and\n              :op1 (f / fabric\n                      :mod (s / sheer)\n                      :mod (m / metallic))\n              :op2 (s2 / silhouette\n                       :mod (s3 / slouchy)\n                       :mod (v / voluminous))))"], "smus": ["Mercedes-Benz Fashion Week Australia will close in Sydney on Thursday night, 2015", "Among the standout shows was Matias Kaczynski.", "Tome was one of the stand out shows.", "Steven Khalil was one of the stand out shows.", "Romance Was Born was one of the standout shows.", "The stand out shows included Johanna Johnson.", "Shows that stood out included Mariuszki, Romance Was Born, Tome, Steven Halil and Johanna Johnson.", "Metallic sheer fabrics and voluminous slouchy silhouettes are repeat trends."]}, {"instance_id": "realsumm-74", "summary": "<t> Lindsay Sandiford fears she will be next to face the firing squad . </t> <t> Andrew Chan and Myuran Sukumaran killed after a final KFC bucket meal . </t> <t> The 58-year - old has been on death row in Bali since 2012 . </t> <t> She was convicted of attempting to smuggle \u00a3 1.6million of cocaine in 2012 . </t>", "summary_trees": ["# ::snt  Lindsay Sandiford fears she will be next to face the firing squad . \n(f / fear-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Lindsay\"\n                  :op2 \"Sandiford\"))\n      :ARG1 (n2 / next\n            :domain p\n            :location-of (f2 / face-01\n                  :ARG0 p\n                  :ARG1 (s / squad\n                        :ARG0-of (f3 / fire-01)))))", "# ::snt  Andrew Chan and Myuran Sukumaran killed after a final KFC bucket meal . \n(k / kill-01\n      :ARG1 (a / and\n            :op1 (p / person\n                  :name (n / name\n                        :op1 \"Andrew\"\n                        :op2 \"Chan\"))\n            :op2 (p2 / person\n                  :name (n2 / name\n                        :op1 \"Myuran\"\n                        :op2 \"Sukumaran\")))\n      :time (a2 / after\n            :op1 (m / meal\n                  :mod (b / bucket)\n                  :mod (c / company\n                        :name (n3 / name\n                              :op1 \"KFC\"))\n                  :mod (f / final))))", "# ::snt  The 58-year - old has been on death row in Bali since 2012 . \n(b / be-located-at-91\n      :ARG1 (p / person\n            :age (t / temporal-quantity\n                  :quant 58\n                  :unit (y / year)))\n      :ARG2 (r / row\n            :mod (d / die-01))\n      :location (ii / island\n            :name (n / name\n                  :op1 \"Bali\"))\n      :time (s / since\n            :op1 (d2 / date-entity\n                  :year 2012)))", "# ::snt  She was convicted of attempting to smuggle \u00a3 1.6million of cocaine in 2012 . \n(c / convict-01\n      :ARG1 (s / she)\n      :ARG2 (a / attempt-01\n            :ARG0 s\n            :ARG1 (s2 / smuggle-01\n                  :ARG0 s\n                  :ARG1 (c2 / cocaine\n                        :quant (m / monetary-quantity\n                              :quant 1600000\n                              :unit (p / pound))))\n            :time (d / date-entity\n                  :year 2012)))"], "tree": ["(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG1 (n2 / next\n             :domain p\n             :location (f2 / face-01\n                           :ARG0 p\n                           :ARG1 (s / squad\n                                    :ARG0 (f3 / fire-01)))))", "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\")))", "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\")))", "(k / kill-01\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final))))", "(k / kill-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrew\"\n                             :op2 \"Chan\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Myuran\"\n                               :op2 \"Sukumaran\"))))", "(k / kill-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Chan\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final))))", "(k / kill-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Myuran\"\n                       :op2 \"Sukumaran\"))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final)))\n   :time a2)", "(b / be-located-at-91\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 58\n                    :unit (y / year)))\n   :ARG2 (r / row\n            :mod (d / die-01)))", "(b / be-located-at-91\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 58\n                    :unit (y / year)))\n   :ARG2 (r / row\n            :mod (d / die-01))\n   :location (ii / island\n                 :name (n / name\n                          :op1 \"Bali\"))\n   :time (s / since\n            :op1 (d2 / date-entity\n                     :year 2012)))", "(a / attempt-01\n   :time (d / date-entity\n            :year 2012))"], "smus": ["Lindsay Sandiford fears she will be the next to face a firing squad.", "Andrew Chan killed.", "Myuran Sukumaran killed.", "Killed after the final bucket meal at KFC.", "Andrew Chan and Myuran Susumaran killed.", "Andrew Chan killed after the final bucket meal at KFC.", "Myuran Sukumaran killed at the time after the final bucket meal at KFC.", "58 year old on death row", "A 58-year-old has been on death row in Bali since 2012.", "Attempting in 2012."]}, {"instance_id": "realsumm-75", "summary": "<t> Abby Bishop took in her two - day - old niece Zala in August 2013 . </t> <t> Now Zala is 20 months old and she follows Bishop as she travels the world playing for professional basketball teams . </t> <t> Bishop said it was a big decision but she would n't change anything . </t> <t> Zala will go with her when she starts playing in the U.S. WNBA in May. </t>", "summary_trees": ["# ::snt  Abby Bishop took in her two - day - old niece Zala in August 2013 . \n(t / take-in-06\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Abby\"\n                  :op2 \"Bishop\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Zala\")\n            :ARG0-of (h / have-rel-role-91\n                  :ARG1 p\n                  :ARG2 (n3 / niece))\n            :age (t2 / temporal-quantity\n                  :quant 2\n                  :unit (d / day)))\n      :time (d2 / date-entity\n            :month 8\n            :year 2013))", "# ::snt  Now Zala is 20 months old and she follows Bishop as she travels the world playing for professional basketball teams . \n(a / and\n      :op1 (a2 / age-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Zala\"))\n            :ARG2 (t / temporal-quantity\n                  :quant 20\n                  :unit (m / month))\n            :time (n2 / now))\n      :op2 (f / follow-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Bishop\"))\n            :time (t2 / travel-01\n                  :ARG0 p\n                  :ARG1 (w / world)\n                  :manner (p3 / play-01\n                        :ARG0 p\n                        :ARG2 (t3 / team\n                              :mod (b / basketball)\n                              :mod (p4 / professional))))))", "# ::snt  Bishop said it was a big decision but she would n't change anything . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Bishop\"))\n      :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                  :ARG1 (ii / it)\n                  :mod (b / big))\n            :ARG2 (c2 / change-01\n                  :polarity -\n                  :ARG0 p\n                  :ARG1 (a / anything))))", "# ::snt  Zala will go with her when she starts playing in the U.S. WNBA in May. \n(g / go-02\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Zala\"))\n      :accompanier (s / she)\n      :time (s2 / start-01\n            :ARG0 s\n            :ARG1 (p2 / play-01\n                  :ARG0 s\n                  :ARG3 (l / league\n                        :name (n2 / name\n                              :op1 \"WNBA\")\n                        :mod (c / country\n                              :name (n3 / name\n                                    :op1 \"U.S.\"))))\n            :time (d / date-entity\n                  :month 5)))"], "tree": ["(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Zala\")\n             :ARG0 (h / have-rel-role-91\n                      :ARG1 p\n                      :ARG2 (n3 / niece))\n             :age (t2 / temporal-quantity\n                      :quant 2\n                      :unit (d / day)))\n   :time (d2 / date-entity\n             :month 8\n             :year 2013))", "(t2 / travel-01\n    :ARG0 (p / person :name (n / name :op1 \"Zala\"))\n    :ARG1 (w / world))", "(f / follow-01\n   :ARG1 (p / person :name (n / name :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Bishop\")))", "(p3 / play-01\n    :ARG0 (p / person :name (n / name :op1 \"Zala\"))\n    :ARG2 (t3 / team\n              :mod (b / basketball)\n              :mod (p4 / professional)))", "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\"))\n    :ARG2 (t / temporal-quantity\n             :quant 20\n             :unit (m / month)))", "(t2 / travel-01\n    :ARG0 (p / person :name (n / name :op1 \"Zala\"))\n    :ARG1 (w / world)\n    :manner (p3 / play-01\n                :ARG0 p\n                :ARG2 (t3 / team\n                          :mod (b / basketball)\n                          :mod (p4 / professional))))", "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\"))\n    :ARG2 (t / temporal-quantity\n             :quant 20\n             :unit (m / month))\n    :time (n2 / now))", "(c2 / change-01\n    :polarity -\n    :ARG0 (p / person :name (n / name :op1 \"Bishop\"))\n    :ARG1 (a / anything))", "(d / decide-01\n   :ARG1 (ii / it)\n   :mod (b / big))", "(c / contrast-01\n   :ARG1 (d / decide-01\n            :ARG1 (ii / it)\n            :mod (b / big))\n   :ARG2 (c2 / change-01\n             :polarity -\n             :ARG0 (p / person :name (n / name :op1 \"Bishop\"))\n             :ARG1 (a / anything)))", "(s2 / start-01\n    :time (d / date-entity\n             :month 5))", "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Zala\")))", "(g / go-02\n   :accompanier (s / she)\n   :time (s2 / start-01\n             :time (d / date-entity\n                      :month 5)))", "(p2 / play-01\n    :ARG0 (s / she)\n    :ARG3 (l / league\n             :name (n2 / name\n                       :op1 \"WNBA\")\n             :mod (c / country\n                     :name (n3 / name\n                               :op1 \"U.S.\"))))", "(s2 / start-01\n    :ARG1 (p2 / play-01\n              :ARG0 (s / she)\n              :ARG3 (l / league\n                       :name (n2 / name\n                                 :op1 \"WNBA\")\n                       :mod (c / country\n                               :name (n3 / name\n                                         :op1 \"U.S.\")))))", "(s2 / start-01\n    :ARG0 (s / she)\n    :ARG1 (p2 / play-01\n              :ARG0 s\n              :ARG3 (l / league\n                       :name (n2 / name\n                                 :op1 \"WNBA\")\n                       :mod (c / country\n                               :name (n3 / name\n                                         :op1 \"U.S.\")))))"], "smus": ["Abby Bishop took in her two-day-old niece, Zala, in August.", "Sala travels the world.", "Sala follows Bishop.", "Sala is playing for professional basketball teams.", "Sala is 20 months old.", "Sala travels the world playing for professional basketball teams.", "Sala is now 20 months old.", "Bishop didn't change anything.", "It's a big decision.", "It was a big decision, but Bishop didn't change anything.", "Starts May", "Sala will go.", "She will go with her when May starts.", "She's playing in the U.S. WNBA.", "She starts playing in the U.S. WNBA.", "She starts playing in the U.S. WNBA."]}, {"instance_id": "realsumm-76", "summary": "<t> ONE Pro Cycling preparing to take on Team Sky and Sir Bradley Wiggins . </t> <t> Tour de Yorkshire runs over three stages starting in Bridlington on May 1 . </t> <t> Prior 's team and Yorkshire race inspired by Tour de France Grand Depart . </t>", "summary_trees": ["# ::snt  ONE Pro Cycling preparing to take on Team Sky and Sir Bradley Wiggins . \n(p / prepare-02\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 \"One\"\n                  :op2 \"Pro\"\n                  :op3 \"Cycling\"))\n      :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (a / and\n                  :op1 (t2 / team\n                        :name (n2 / name\n                              :op1 \"Team\"\n                              :op2 \"Sky\"))\n                  :op2 (p2 / person\n                        :name (n3 / name\n                              :op1 \"Sir\"\n                              :op2 \"Bradley\"\n                              :op3 \"Wiggins\")))))", "# ::snt  Tour de Yorkshire runs over three stages starting in Bridlington on May 1 . \n(r / run-over-04\n      :ARG1 (t / tour\n            :name (n / name\n                  :op1 \"Tour\"\n                  :op2 \"de\"\n                  :op3 \"Yorkshire\"))\n      :ARG2 (s / stage\n            :quant 3)\n      :ARG1-of (s2 / start-01\n            :location (c / city\n                  :name (n2 / name\n                        :op1 \"Bridlington\"))\n            :time (d / date-entity\n                  :day 1\n                  :month 5)))", "# ::snt  Prior 's team and Yorkshire race inspired by Tour de France Grand Depart . \n(ii / inspire-01\n      :ARG0 (t / tour\n            :name (n / name\n                  :op1 \"Tour\"\n                  :op2 \"de\"\n                  :op3 \"France\"\n                  :op4 \"Grand\"\n                  :op5 \"Depart\"))\n      :ARG1 (a / and\n            :op1 (t2 / team\n                  :poss (p / person\n                        :name (n2 / name\n                              :op1 \"Prior\")))\n            :op2 (r / race-02\n                  :ARG0 p\n                  :location (c / county\n                        :name (n3 / name\n                              :op1 \"Yorkshire\")))))"], "tree": ["(t / take-on-21\n   :ARG0 (o / organization :name (n / name :op1 \"One\" :op2 \"Pro\" :op3 \"Cycling\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Team\"\n                       :op2 \"Sky\")))", "(t / take-on-21\n   :ARG0 (o / organization :name (n / name :op1 \"One\" :op2 \"Pro\" :op3 \"Cycling\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Sir\"\n                       :op2 \"Bradley\"\n                       :op3 \"Wiggins\")))", "(t / take-on-21\n   :ARG0 (o / organization :name (n / name :op1 \"One\" :op2 \"Pro\" :op3 \"Cycling\"))\n   :ARG1 (a / and\n            :op1 (t2 / team\n                     :name (n2 / name\n                               :op1 \"Team\"\n                               :op2 \"Sky\"))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Sir\"\n                               :op2 \"Bradley\"\n                               :op3 \"Wiggins\"))))", "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Team\"\n                                :op2 \"Sky\"))))", "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Sir\"\n                                :op2 \"Bradley\"\n                                :op3 \"Wiggins\"))))", "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (a / and\n                     :op1 (t2 / team\n                              :name (n2 / name\n                                        :op1 \"Team\"\n                                        :op2 \"Sky\"))\n                     :op2 (p2 / person\n                              :name (n3 / name\n                                        :op1 \"Sir\"\n                                        :op2 \"Bradley\"\n                                        :op3 \"Wiggins\")))))", "(r / run-over-04\n   :ARG1 (t / tour\n            :name (n / name\n                     :op1 \"Tour\"\n                     :op2 \"de\"\n                     :op3 \"Yorkshire\"))\n   :ARG2 (s / stage\n            :quant 3)\n   :ARG1 (s2 / start-01\n             :location (c / city\n                          :name (n2 / name\n                                    :op1 \"Bridlington\"))\n             :time (d / date-entity\n                      :day 1\n                      :month 5)))", "(r / race-02\n   :location (c / county\n                :name (n3 / name\n                          :op1 \"Yorkshire\")))", "(r / race-02\n   :ARG0 (p / person :name (n2 / name :op1 \"Prior\"))\n   :location (c / county\n                :name (n3 / name\n                          :op1 \"Yorkshire\")))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\")))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (t2 / team\n              :poss (p / person\n                       :name (n2 / name\n                                 :op1 \"Prior\"))))", "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (a / and\n             :op1 (t2 / team\n                      :poss (p / person\n                               :name (n2 / name\n                                         :op1 \"Prior\")))\n             :op2 (r / race-02\n                     :ARG0 p\n                     :location (c / county\n                                  :name (n3 / name\n                                            :op1 \"Yorkshire\")))))"], "smus": ["One Pro Cycling will take on Team Sky.", "One Pro Cycling will take on Sir Bradley Wiggins.", "One Pro Cycling will take on Team Sky and Sir Bradley Wiggins.", "One Pro Cycling is preparing to take on Team Sky.", "One Pro Cycling is preparing to take on Sir Bradley Wiggins.", "One Pro Cycling is preparing to take on Team Sky and Sir Bradley Wiggins.", "Tour de Yorkshire has run over three stages starting May 1 in Bridlington.", "The race is in Yorkshire.", "Prior is in the race in Yorkshire.", "Inspired by Tour de France Grand D\u00e9part.", "The Tour de France Grand D\u00e9part has inspired the team of Prior.", "The Tour de France Grand D\u00e9part has inspired the team of Prior and his race in Yorkshire."]}, {"instance_id": "realsumm-77", "summary": "<t> Woman reported ' someone ' had been run over , but victim was a squirrel . </t> <t> Another man dialled 999 to say he dropped a burger which was ' bleeding ' East of England ambulance service warned hoax calls can cost lives . </t>", "summary_trees": ["# ::snt  Woman reported ' someone ' had been run over , but victim was a squirrel . \n(c / contrast-01\n      :ARG1 (r / report-01\n            :ARG0 (w / woman)\n            :ARG1 (r2 / run-over-12\n                  :ARG1 (s / someone)))\n      :ARG2 (s2 / squirrel\n            :domain (v / victim)))", "# ::snt  Another man dialled 999 to say he dropped a burger which was ' bleeding ' East of England ambulance service warned hoax calls can cost lives . \n(m / multi-sentence\n      :snt1 (d / dial-01\n            :ARG0 (m2 / man\n                  :mod (a / another))\n            :ARG1 (p / phone-number-entity\n                  :value 999)\n            :purpose (s / say-01\n                  :ARG0 m2\n                  :ARG1 (d2 / drop-01\n                        :ARG0 m2\n                        :ARG1 (b / burger\n                              :ARG1-of (b2 / bleed-01)))))\n      :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                  :mod (a2 / ambulance)\n                  :mod (c / country-region\n                        :name (n / name\n                              :op1 \"East\"\n                              :op2 \"of\"\n                              :op3 \"England\")))\n            :ARG1 (p2 / possible-01\n                  :ARG1 (c2 / cost-01\n                        :ARG1 (c3 / call-02\n                              :mod (h / hoax-01))\n                        :ARG2 (l / live-01)))))"], "tree": ["(r / report-01\n   :ARG0 (w / woman)\n   :ARG1 (r2 / run-over-12\n             :ARG1 (s / someone)))", "(c / contrast-01\n   :ARG1 (r / report-01\n            :ARG0 (w / woman)\n            :ARG1 (r2 / run-over-12\n                      :ARG1 (s / someone)))\n   :ARG2 (s2 / squirrel\n             :domain (v / victim)))", "(d2 / drop-01\n    :ARG0 (m2 / man)\n    :ARG1 (b / burger\n             :ARG1 (b2 / bleed-01)))", "(p2 / possible-01\n    :ARG1 (c2 / cost-01\n              :ARG1 (c3 / call-02\n                        :mod (h / hoax-01))\n              :ARG2 (l / live-01)))", "(s / say-01\n   :ARG0 (m2 / man)\n   :ARG1 (d2 / drop-01\n             :ARG0 m2\n             :ARG1 (b / burger\n                      :ARG1 (b2 / bleed-01))))", "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :ARG1 (p / phone-number-entity\n            :value 999)\n   :purpose (s / say-01\n               :ARG0 m2\n               :ARG1 (d2 / drop-01\n                         :ARG0 m2\n                         :ARG1 (b / burger\n                                  :ARG1 (b2 / bleed-01)))))", "(w / warn-01\n   :ARG0 (s2 / service\n             :mod (a2 / ambulance)\n             :mod (c / country-region\n                     :name (n / name\n                              :op1 \"East\"\n                              :op2 \"of\"\n                              :op3 \"England\")))\n   :ARG1 (p2 / possible-01\n             :ARG1 (c2 / cost-01\n                       :ARG1 (c3 / call-02\n                                 :mod (h / hoax-01))\n                       :ARG2 (l / live-01))))"], "smus": ["The woman reported someone being run over.", "The woman reported someone being run over but the victim was a squirrel.", "The man dropped a bleeding burger.", "Hoax calls can cost lives.", "The man did say he dropped a bleeding burger.", "Another man dialled 999 to say he dropped a bleeding burger.", "The East of England ambulance service warned that hoax calls could cost lives."]}, {"instance_id": "realsumm-78", "summary": "<t> Ben Flower returned from his six - month ban on Thursday night . </t> <t> Wales forward made first appearance since he punched St Helens ' Lance Hohaia in the opening moments of last season 's Grand Final . </t> <t> 27-year - old received a brilliant reception during 's Wigan 's 30 - 20 victory against Warrington . </t>", "summary_trees": ["# ::snt  Ben Flower returned from his six - month ban on Thursday night . \n(r / return-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Ben\"\n                  :op2 \"Flower\"))\n      :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                  :quant 6\n                  :unit (m / month)))\n      :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "# ::snt  Wales forward made first appearance since he punched St Helens ' Lance Hohaia in the opening moments of last season 's Grand Final . \n(a / appear-01\n      :ARG1 (f / forward\n            :part-of (t / team\n                  :name (n / name\n                        :op1 \"Wales\")))\n      :ord (o / ordinal-entity\n            :value 1\n            :range (s / since\n                  :op1 (p / punch-01\n                        :ARG0 f\n                        :ARG1 (p2 / person\n                              :name (n2 / name\n                                    :op1 \"Lance\"\n                                    :op2 \"Hohaia\")\n                              :part-of (t2 / team\n                                    :name (n3 / name\n                                          :op1 \"St\"\n                                          :op2 \"Helens\")))\n                        :time (m / moment\n                              :ARG0-of (o2 / open-02\n                                    :ARG1 (g / game\n                                          :name (n4 / name\n                                                :op1 \"Grand\"\n                                                :op2 \"Final\")\n                                          :time (s2 / season\n                                                :mod (l / last)))))))))", "# ::snt  27-year - old received a brilliant reception during 's Wigan 's 30 - 20 victory against Warrington . \n(r / receive-01\n      :ARG0 (p / person\n            :age (t / temporal-quantity\n                  :quant 27\n                  :unit (y / year)))\n      :ARG1 (r2 / reception\n            :ARG1-of (b / brilliant-01))\n      :time (w / win-01\n            :ARG0 (t2 / team\n                  :name (n / name\n                        :op1 \"Wigan\"))\n            :ARG4 (t3 / team\n                  :name (n2 / name\n                        :op1 \"Warrington\"))\n            :manner (s / score-entity\n                  :op1 30\n                  :op2 20)))"], "tree": ["(b / ban-01\n   :duration (t / temporal-quantity\n                :quant 6\n                :unit (m / month)))", "(b / ban-01\n   :ARG2 (p / person :name (n / name :op1 \"Ben\" :op2 \"Flower\"))\n   :duration (t / temporal-quantity\n                :quant 6\n                :unit (m / month)))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\")))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                         :quant 6\n                         :unit (m / month))))", "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                         :quant 6\n                         :unit (m / month)))\n   :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))", "(a / appear-01\n   :ARG1 (f / forward\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\"))))", "(a / appear-01\n   :ord (o / ordinal-entity\n           :value 1\n           :range (s / since\n                     :op1 (p / punch-01))))", "(o2 / open-02\n    :ARG1 (g / game\n             :name (n4 / name\n                       :op1 \"Grand\"\n                       :op2 \"Final\")\n             :time (s2 / season\n                       :mod (l / last))))", "(a / appear-01\n   :ARG1 (f / forward\n            :part (t / team\n                     :name (n / name\n                              :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1\n           :range (s / since\n                     :op1 (p / punch-01\n                             :ARG0 f\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Lance\"\n                                                 :op2 \"Hohaia\")\n                                       :part (t2 / team\n                                                 :name (n3 / name\n                                                           :op1 \"St\"\n                                                           :op2 \"Helens\")))\n                             :time (m / moment\n                                      :ARG0 (o2 / open-02\n                                                :ARG1 (g / game\n                                                         :name (n4 / name\n                                                                   :op1 \"Grand\"\n                                                                   :op2 \"Final\")\n                                                         :time (s2 / season\n                                                                   :mod (l / last)))))))))", "(w / win-01\n   :manner (s / score-entity\n              :op1 30\n              :op2 20))", "(w / win-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Wigan\")))", "(r / receive-01\n   :time (w / win-01\n            :manner (s / score-entity\n                       :op1 30\n                       :op2 20)))", "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (r2 / reception\n             :ARG1 (b / brilliant-01)))", "(w / win-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Wigan\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Warrington\"))\n   :manner (s / score-entity\n              :op1 30\n              :op2 20))"], "smus": ["The six-month ban.", "Ben Flower has been banned for 6 months.", "Ben Flower returned.", "Ben Flower returned Thursday night.", "Ben Flower returned from a six-month ban.", "Ben Flower returned Thursday night from a six-month ban.", "Wales forward appearance", "First appearance since the punch.", "The Grand Final of last season is open.", "Wales' forward appearance is the first since punching St Helens' Lance Hohaia at the moments of the opening game of last season's Grand Final.", "30-20 win.", "Wigan won", "Received when the win was 30-20.", "The 27 year old received a brilliant reception.", "Wigan beat Warrington 30-20"]}, {"instance_id": "realsumm-79", "summary": "<t> Inspired by the aesthetic of the Belle Epoque era , the Jacques Garcia designed hotel is both opulent and edgy . </t> <t> A mix of Arabian and Napoleon III decor , the Pigalle haunt harkens back to the city 's pleasure houses of yesteryear . </t> <t> Also available for guest use : a charming conservatory , library bar and celestial spa available for private rental . </t>", "summary_trees": ["# ::snt  Inspired by the aesthetic of the Belle Epoque era , the Jacques Garcia designed hotel is both opulent and edgy . \n(a / and\n      :op1 (o / opulent\n            :domain (h / hotel\n                  :ARG1-of (d / design-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Jacques\"\n                                    :op2 \"Garcia\")))))\n      :op2 (e / edgy\n            :domain h)\n      :ARG1-of (ii / inspire-01\n            :ARG0 (a2 / aesthetic\n                  :poss (e2 / era\n                        :name (n2 / name\n                              :op1 \"Belle\"\n                              :op2 \"Epoque\")))))", "# ::snt  A mix of Arabian and Napoleon III decor , the Pigalle haunt harkens back to the city 's pleasure houses of yesteryear . \n(h / harken-01\n      :ARG0 (h2 / haunt-01\n            :location (c / city-district\n                  :name (n / name\n                        :op1 \"Pigalle\"))\n            :ARG2-of (m / mix-01\n                  :ARG1 (d / decor\n                        :mod (w / world-region\n                              :name (n2 / name\n                                    :op1 \"Arabia\")))\n                  :ARG3 (d2 / decor\n                        :mod (p / person\n                              :name (n3 / name\n                                    :op1 \"Napoleon\"\n                                    :op2 \"III\")))))\n      :ARG1 (h3 / house\n            :mod (p2 / pleasure)\n            :poss c\n            :time (y / yesteryear))\n      :direction (b / back))", "# ::snt  Also available for guest use : a charming conservatory , library bar and celestial spa available for private rental . \n(a / available-02\n      :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (a2 / and\n                  :op1 (c / conservatory\n                        :ARG0-of (c2 / charm-01))\n                  :op2 (b / bar\n                        :mod (l / library))\n                  :op3 (s / spa\n                        :mod (c3 / celestial))\n                  :ARG2-of (a3 / available-02\n                        :ARG2 (r / rent-01\n                              :ARG1 a2\n                              :ARG1-of (p / private-03)))))\n      :mod (a4 / also))"], "tree": ["(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jacques\"\n                     :op2 \"Garcia\")))", "(ii / inspire-01\n    :ARG0 (a2 / aesthetic\n              :poss (e2 / era\n                        :name (n2 / name\n                                  :op1 \"Belle\"\n                                  :op2 \"Epoque\"))))", "(h2 / haunt-01\n    :location (c / city-district\n                 :name (n / name\n                          :op1 \"Pigalle\")))", "(m / mix-01\n   :ARG1 (d / decor\n            :mod (w / world-region\n                    :name (n2 / name\n                              :op1 \"Arabia\"))))", "(m / mix-01\n   :ARG1 (d / decor\n            :mod (w / world-region\n                    :name (n2 / name\n                              :op1 \"Arabia\")))\n   :ARG3 (d2 / decor\n             :mod (p / person\n                     :name (n3 / name\n                               :op1 \"Napoleon\"\n                               :op2 \"III\"))))", "(h2 / haunt-01\n    :location (c / city-district\n                 :name (n / name\n                          :op1 \"Pigalle\"))\n    :ARG2 (m / mix-01\n             :ARG1 (d / decor\n                      :mod (w / world-region\n                              :name (n2 / name\n                                        :op1 \"Arabia\")))\n             :ARG3 (d2 / decor\n                       :mod (p / person\n                               :name (n3 / name\n                                         :op1 \"Napoleon\"\n                                         :op2 \"III\")))))", "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\"))\n             :ARG2 (m / mix-01\n                      :ARG1 (d / decor\n                               :mod (w / world-region\n                                       :name (n2 / name\n                                                 :op1 \"Arabia\")))\n                      :ARG3 (d2 / decor\n                                :mod (p / person\n                                        :name (n3 / name\n                                                  :op1 \"Napoleon\"\n                                                  :op2 \"III\")))))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure)\n             :poss c\n             :time (y / yesteryear))\n   :direction (b / back))", "(r / rent-01\n   :ARG1 (a2 / and)\n   :ARG1 (p / private-03))", "(a3 / available-02\n    :ARG2 (r / rent-01\n             :ARG1 (a2 / and)\n             :ARG1 (p / private-03)))", "(u / use-01\n   :ARG0 (g / guest)\n   :ARG1 (b / bar\n            :mod (l / library)))", "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (c / conservatory\n                     :ARG0 (c2 / charm-01))))", "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (b / bar\n                     :mod (l / library))))", "(u / use-01\n   :ARG0 (g / guest)\n   :ARG1 (s / spa\n            :mod (c3 / celestial)\n            :ARG2 (a3 / available-02\n                      :ARG2 (r / rent-01\n                               :ARG1 s\n                               :ARG1 (p / private-03)))))"], "smus": ["Jacques Garcia designed.", "The aesthetic of the Belle Epoque era is inspired.", "Pigalle Haunted", "The Arab decor is a mix.", "Arab decor mixed with Napoleon III decor", "In Pigalle, the decor is a mix of Arab and Napoleonic.", "Pigalle's haunt harkens back to its yesteryear pleasure houses, a mix of Arab and Napoleonic decor.", "Private rental.", "Private rental is available.", "Guest use of Library bar.", "The charming conservatory is available for guest use.", "The Library bar is available for guest use.", "The guest will use the celestial spa which is available for private rent."]}, {"instance_id": "realsumm-80", "summary": "<t> Steven Finn was left out of the England squad for the West Indies tour . </t> <t> The Middlesex quick bowler has regained form after a tough 12 months . </t> <t> Finn said he 's back to bowling like he was as ' a carefree 21-year - old ' His last of 23 Test caps came for England back in 2013 . </t>", "summary_trees": ["# ::snt  Steven Finn was left out of the England squad for the West Indies tour . \n(l / leave-out-03\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Steven\"\n                  :op2 \"Finn\"))\n      :ARG2 (s / squad\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"England\"))\n            :subevent-of (t / tour-01\n                  :ARG0 c\n                  :ARG1 (c2 / country\n                        :name (n3 / name\n                              :op1 \"West\"\n                              :op2 \"Indies\")))))", "# ::snt  The Middlesex quick bowler has regained form after a tough 12 months . \n(r / regain-01\n      :ARG0 (b / bowler\n            :ARG1-of (q / quick-02)\n            :mod (t / team\n                  :name (n / name\n                        :op1 \"Middlesex\")))\n      :ARG1 (f / form)\n      :time (a / after\n            :op1 (t2 / temporal-quantity\n                  :quant 12\n                  :unit (m / month)\n                  :ARG1-of (t3 / tough-02))))", "# ::snt  Finn said he 's back to bowling like he was as ' a carefree 21-year - old ' His last of 23 Test caps came for England back in 2013 . \n(m / multi-sentence\n      :snt1 (s / say-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Finn\"))\n            :ARG1 (g / go-back-19\n                  :ARG1 p\n                  :ARG2 (b / bowl-01\n                        :ARG0 p\n                        :ARG1-of (r / resemble-01\n                              :ARG2 (b2 / bowl-01\n                                    :ARG0 p\n                                    :time (p2 / person\n                                          :age (t / temporal-quantity\n                                                :quant 21\n                                                :unit (y / year))\n                                          :ARG1-of (c / care-free-03)))))))\n      :snt2 (c2 / come-01\n            :ARG1 (c3 / cap\n                  :mod (l / last)\n                  :ARG1-of (ii / include-91\n                        :ARG2 (c4 / cap\n                              :quant 23\n                              :mod (t2 / test)))\n                  :poss (c5 / country\n                        :name (n2 / name\n                              :op1 \"England\")))\n            :time (d / date-entity\n                  :year 2013\n                  :mod (b3 / back))))"], "tree": ["(t / tour-01\n   :ARG0 (c / country :name (n2 / name :op1 \"England\"))\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"West\"\n                       :op2 \"Indies\")))", "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG2 (s / squad\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))\n            :subevent (t / tour-01\n                         :ARG0 c\n                         :ARG1 (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"West\"\n                                             :op2 \"Indies\")))))", "(r / regain-01\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :quant 12\n                     :unit (m / month))))", "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02)\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :ARG1 (f / form))", "(r / regain-01\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :quant 12\n                     :unit (m / month)\n                     :ARG1 (t3 / tough-02))))", "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1 (q / quick-02)\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :quant 12\n                     :unit (m / month)\n                     :ARG1 (t3 / tough-02))))", "(ii / include-91\n    :ARG2 (c4 / cap\n              :quant 23\n              :mod (t2 / test)))", "(c2 / come-01\n    :time (d / date-entity\n             :year 2013\n             :mod (b3 / back)))", "(b2 / bowl-01\n    :time (p2 / person\n              :age (t / temporal-quantity\n                      :quant 21\n                      :unit (y / year))))", "(b2 / bowl-01\n    :ARG0 (p / person :name (n / name :op1 \"Finn\"))\n    :time (p2 / person\n              :age (t / temporal-quantity\n                      :quant 21\n                      :unit (y / year))\n              :ARG1 (c / care-free-03)))", "(r / resemble-01\n   :ARG2 (b2 / bowl-01\n             :ARG0 (p / person :name (n / name :op1 \"Finn\"))\n             :time (p2 / person\n                       :age (t / temporal-quantity\n                               :quant 21\n                               :unit (y / year))\n                       :ARG1 (c / care-free-03))))", "(b / bowl-01\n   :ARG0 (p / person :name (n / name :op1 \"Finn\"))\n   :ARG1 (r / resemble-01\n            :ARG2 (b2 / bowl-01\n                      :ARG0 p\n                      :time (p2 / person\n                                :age (t / temporal-quantity\n                                        :quant 21\n                                        :unit (y / year))\n                                :ARG1 (c / care-free-03)))))"], "smus": ["England on tour of West Indies", "Steven Finn was left out of the England squad for the West Indies tour.", "Recovered after 12 months.", "Middlesex's quick bowler has regained form.", "After 12 months of tough, form has regained.", "Middlesex's quick bowler has regained form after 12 months of tough.", "23 of the test caps.", "It came back in 2013.", "Bowling when 21 year old.", "Finn bowled when 21 years old, carefree.", "Like Finn bowled when 21 years old, carefree.", "Finn bowled like a carefree 21 year old."]}, {"instance_id": "realsumm-81", "summary": "<t> Paul Armstrong flew to Cyprus to celebrate new job as IT project manager . </t> <t> Was stopped at airport with stun gun , baton and knuckle duster in his bag . </t> <t> Pleaded guilty to possession of a firearm and lost his job before starting it . </t> <t> 26-year - old was sentenced to eight months in jail , suspended for two years . </t>", "summary_trees": ["# ::snt  Paul Armstrong flew to Cyprus to celebrate new job as IT project manager . \n(f / fly-01\n      :ARG1 (p / person\n            :name (n / name\n                  :op1 \"Paul\"\n                  :op2 \"Armstrong\"))\n      :destination (c / country\n            :name (n2 / name\n                  :op1 \"Cyprus\"))\n      :purpose (c2 / celebrate-01\n            :ARG0 p\n            :ARG1 (j / job\n                  :ARG1-of (n3 / new-01)\n                  :topic (p2 / person\n                        :ARG0-of (m / manage-01\n                              :ARG1 (p3 / project\n                                    :mod (t / technology\n                                          :mod (ii / information))))))))", "# ::snt  Was stopped at airport with stun gun , baton and knuckle duster in his bag . \n(s / stop-01\n      :ARG1 (h / he)\n      :location (a / airport)\n      :instrument (a2 / and\n            :op1 (g / gun\n                  :ARG2-of (s2 / stun-01))\n            :op2 (b / baton)\n            :op3 (d / duster\n                  :mod (k / knuckle))\n            :location (b2 / bag\n                  :poss h)))", "# ::snt  Pleaded guilty to possession of a firearm and lost his job before starting it . \n(a / and\n      :op1 (p / plead-02\n            :ARG1 (g / guilty-01\n                  :ARG1 (h / he)\n                  :ARG2 (p2 / possess-01\n                        :ARG0 h\n                        :ARG1 (f / firearm))))\n      :op2 (l / lose-02\n            :ARG0 h\n            :ARG1 (j / job\n                  :poss h)\n            :time (b / before\n                  :op1 (s / start-01\n                        :ARG0 h\n                        :ARG1 (ii / it)))))", "# ::snt  26-year - old was sentenced to eight months in jail , suspended for two years . \n(s / sentence-01\n      :ARG1 (p / person\n            :age (t / temporal-quantity\n                  :quant 26\n                  :unit (y / year)))\n      :ARG2 (a / and\n            :op1 (t2 / temporal-quantity\n                  :quant 8\n                  :unit (m / month)\n                  :location (j / jail))\n            :op2 (s2 / suspend-01\n                  :ARG1 t2\n                  :duration (t3 / temporal-quantity\n                        :quant 2\n                        :unit (y2 / year)))))"], "tree": ["(m / manage-01\n   :ARG1 (p3 / project\n             :mod (t / technology\n                     :mod (ii / information))))", "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\")))", "(f / fly-01\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\"))\n   :purpose (c2 / celebrate-01))", "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\")))", "(c2 / celebrate-01\n    :ARG1 (j / job\n             :ARG1 (n3 / new-01)\n             :topic (p2 / person\n                        :ARG0 (m / manage-01\n                                 :ARG1 (p3 / project\n                                           :mod (t / technology\n                                                   :mod (ii / information)))))))", "(c2 / celebrate-01\n    :ARG0 (p / person :name (n / name :op1 \"Paul\" :op2 \"Armstrong\"))\n    :ARG1 (j / job\n             :ARG1 (n3 / new-01)\n             :topic (p2 / person\n                        :ARG0 (m / manage-01\n                                 :ARG1 (p3 / project\n                                           :mod (t / technology\n                                                   :mod (ii / information)))))))", "(s / stop-01\n   :location (a / airport)\n   :instrument (g / gun))", "(s / stop-01\n   :location (a / airport)\n   :instrument (b / baton))", "(s / stop-01\n   :ARG1 (h / he)\n   :location (a / airport)\n   :instrument (b / baton))", "(s / stop-01\n   :ARG1 (h / he)\n   :location (a / airport)\n   :instrument (g / gun\n                  :ARG2 (s2 / stun-01)))", "(s / stop-01\n   :location (a / airport)\n   :instrument (d / duster\n                  :mod (k / knuckle)\n                  :location (b2 / bag)))", "(s / stop-01\n   :ARG1 (h / he)\n   :location (a / airport)\n   :instrument (d / duster\n                  :mod (k / knuckle)\n                  :location (b2 / bag\n                                :poss h)))", "(p2 / possess-01\n    :ARG0 (h / he)\n    :ARG1 (f / firearm))", "(l / lose-02\n   :ARG1 (j / job\n            :poss (h / he)))", "(l / lose-02\n   :ARG0 (h / he)\n   :ARG1 (j / job\n            :poss h))", "(l / lose-02\n   :time (b / before\n            :op1 (s / start-01)))", "(g / guilty-01\n   :ARG1 (h / he)\n   :ARG2 (p2 / possess-01\n             :ARG0 h\n             :ARG1 (f / firearm)))", "(p / plead-02\n   :ARG1 (g / guilty-01\n            :ARG1 (h / he)\n            :ARG2 (p2 / possess-01\n                      :ARG0 h\n                      :ARG1 (f / firearm))))", "(s2 / suspend-01\n    :duration (t3 / temporal-quantity\n                  :quant 2\n                  :unit (y2 / year)))", "(s2 / suspend-01\n    :ARG1 (t2 / temporal-quantity)\n    :duration (t3 / temporal-quantity\n                  :quant 2\n                  :unit (y2 / year)))", "(s / sentence-01\n   :ARG2 (t2 / temporal-quantity\n             :quant 8\n             :unit (m / month)\n             :location (j / jail)))", "(s / sentence-01\n   :ARG2 (s2 / suspend-01\n             :ARG1 (t2 / temporal-quantity)\n             :duration (t3 / temporal-quantity\n                           :quant 2\n                           :unit (y2 / year))))", "(s / sentence-01\n   :ARG2 (a / and\n            :op1 (t2 / temporal-quantity\n                     :quant 8\n                     :unit (m / month)\n                     :location (j / jail))\n            :op2 (s2 / suspend-01\n                     :ARG1 t2\n                     :duration (t3 / temporal-quantity\n                                   :quant 2\n                                   :unit (y2 / year)))))", "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 26\n                    :unit (y / year)))\n   :ARG2 (a / and\n            :op1 (t2 / temporal-quantity\n                     :quant 8\n                     :unit (m / month)\n                     :location (j / jail))\n            :op2 (s2 / suspend-01\n                     :ARG1 t2\n                     :duration (t3 / temporal-quantity\n                                   :quant 2\n                                   :unit (y2 / year)))))"], "smus": ["Management of an information technology project.", "Paul Armstrong flew.", "Flights flew to Cyprus to celebrate.", "Paul Armstrong flew to Cyprus.", "Celebrate the new job of IT project manager.", "Paul Armstrong will celebrate the new job as IT project manager.", "The gun was stopped at the airport.", "The airport was stopped by baton.", "He was stopped at the airport with a baton.", "He was stopped at the airport with a stun gun.", "The airport was stopped with a knuckle duster in the bag.", "He was stopped at the airport with a knuckle duster in his bag.", "He was in possession of a firearm.", "He lost his job.", "He lost his job.", "Lost before starting.", "He was guilty of possession of a firearm.", "He pleaded guilty to possession of a firearm.", "The suspension has been in effect for two years.", "The suspension was for two years.", "sentenced to 8 months in jail.", "sentenced to be suspended for two years.", "sentenced to 8 months in jail and 2 years suspended.", "Two years old, the sentence was eight months in jail suspended for two years."]}, {"instance_id": "realsumm-82", "summary": "<t> Australian fashion designer Alex Perry wo n't show at this year 's MBFWA . </t> <t> The designer is excited to kick back and enjoy the shows from front row . </t> <t> This will be the designer 's second MBFWA he has missed in two decades . </t> <t> Perry is now focusing on global expansion in Asia and Middle East . </t>", "summary_trees": ["# ::snt  Australian fashion designer Alex Perry wo n't show at this year 's MBFWA . \n(s / show-01\n      :polarity -\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Alex\"\n                  :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                  :ARG1 (f / fashion))\n            :mod (c / country\n                  :name (n2 / name\n                        :op1 \"Australia\")))\n      :time (e / event\n            :name (n3 / name\n                  :op1 \"MBFWA\")\n            :mod (y / year\n                  :mod (t / this))))", "# ::snt  The designer is excited to kick back and enjoy the shows from front row . \n(e / excite-01\n      :ARG0 (a / and\n            :op1 (k / kick-01\n                  :ARG0 (p / person\n                        :ARG0-of (d / design-01))\n                  :direction (b / back))\n            :op2 (e2 / enjoy-01\n                  :ARG0 p\n                  :ARG1 (s / show-04)\n                  :location (r / row\n                        :mod (f / front))))\n      :ARG1 p)", "# ::snt  This will be the designer 's second MBFWA he has missed in two decades . \n(m / miss-01\n      :ARG0 (p / person\n            :ARG0-of (d / design-01))\n      :ARG1 (m2 / magazine\n            :name (n / name\n                  :op1 \"MBFWA\"))\n      :ord (o / ordinal-entity\n            :value 2\n            :range (t / temporal-quantity\n                  :quant 2\n                  :unit (d2 / decade)))\n      :domain (t2 / this))", "# ::snt  Perry is now focusing on global expansion in Asia and Middle East . \n(f / focus-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Perry\"))\n      :ARG1 (e / expand-01\n            :ARG1 p\n            :ARG2 (g / globe)\n            :location (a / and\n                  :op1 (c / continent\n                        :name (n2 / name\n                              :op1 \"Asia\"))\n                  :op2 (w / world-region\n                        :name (n3 / name\n                              :op1 \"Middle\"\n                              :op2 \"East\"))))\n      :time (n4 / now))"], "tree": ["(s / show-01\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0 (d / design-01\n                     :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :time (e / event\n            :name (n3 / name\n                      :op1 \"MBFWA\")\n            :mod (y / year\n                    :mod (t / this))))", "(e2 / enjoy-01\n    :location (r / row\n                 :mod (f / front)))", "(k / kick-01\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :direction (b / back))", "(e2 / enjoy-01\n    :ARG0 (p / person)\n    :ARG1 (s / show-04)\n    :location (r / row\n                 :mod (f / front)))", "(e / excite-01\n   :ARG0 (k / kick-01\n            :ARG0 (p / person\n                     :ARG0 (d / design-01))\n            :direction (b / back)))", "(e / excite-01\n   :ARG0 (e2 / enjoy-01\n             :ARG0 (p / person)\n             :ARG1 (s / show-04)\n             :location (r / row\n                          :mod (f / front)))\n   :ARG1 p)", "(e / excite-01\n   :ARG0 (a / and\n            :op1 (k / kick-01\n                    :ARG0 (p / person\n                             :ARG0 (d / design-01))\n                    :direction (b / back))\n            :op2 (e2 / enjoy-01\n                     :ARG0 p\n                     :ARG1 (s / show-04)\n                     :location (r / row\n                                  :mod (f / front)))))", "(m / miss-01\n   :ARG1 (m2 / magazine\n             :name (n / name\n                      :op1 \"MBFWA\")))", "(m / miss-01\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ARG1 (m2 / magazine\n             :name (n / name\n                      :op1 \"MBFWA\")))", "(m / miss-01\n   :ord (o / ordinal-entity\n           :value 2\n           :range (t / temporal-quantity\n                     :quant 2\n                     :unit (d2 / decade)))\n   :domain (t2 / this))", "(m / miss-01\n   :ARG0 (p / person\n            :ARG0 (d / design-01))\n   :ARG1 (m2 / magazine\n             :name (n / name\n                      :op1 \"MBFWA\"))\n   :ord (o / ordinal-entity\n           :value 2\n           :range (t / temporal-quantity\n                     :quant 2\n                     :unit (d2 / decade)))\n   :domain (t2 / this))", "(e / expand-01\n   :ARG1 (p / person :name (n / name :op1 \"Perry\"))\n   :ARG2 (g / globe))", "(e / expand-01\n   :location (c / continent\n                :name (n2 / name\n                          :op1 \"Asia\")))", "(e / expand-01\n   :location (w / world-region\n                :name (n3 / name\n                          :op1 \"Middle\"\n                          :op2 \"East\")))", "(e / expand-01\n   :ARG1 (p / person :name (n / name :op1 \"Perry\"))\n   :ARG2 (g / globe)\n   :location (c / continent\n                :name (n2 / name\n                          :op1 \"Asia\")))", "(e / expand-01\n   :ARG1 (p / person :name (n / name :op1 \"Perry\"))\n   :ARG2 (g / globe)\n   :location (w / world-region\n                :name (n3 / name\n                          :op1 \"Middle\"\n                          :op2 \"East\")))", "(f / focus-01\n   :ARG1 (e / expand-01\n            :ARG1 (p / person :name (n / name :op1 \"Perry\"))\n            :ARG2 (g / globe)\n            :location (c / continent\n                         :name (n2 / name\n                                   :op1 \"Asia\"))))"], "smus": ["Australian fashion designer Alex Perry didn't show at this year's MBFWA.", "Enjoy in front row.", "The designer was going to kick back.", "People will enjoy the shows in front row.", "Exciting to see a designer kick back.", "People are excited to enjoy shows in front row.", "Exciting is that the designer will kick back and enjoy the shows in the front row.", "MBFWA is missing.", "The designer has missed MBFWA.", "This is the second time in two decades that this has been missed.", "This is the second time in two decades that the designer has missed MBFWA.", "Perry's expansion is global.", "expansion in Asia", "Expansion in the Middle East", "Perry's global expansion in Asia is.", "Perry's global expansion in the Middle East.", "Focusing on Perry's global expansion in Asia."]}, {"instance_id": "realsumm-83", "summary": "<t> An Indiana public school performance of American Pie ended in tragedy Wednesday when a riser buckled just as dozens danced on - stage . </t> <t> More than a dozen people were injured at the Westfield High performance and one student was taken to a hospital in critical condition . </t> <t> Students said there had been no issues when they previously practiced the song on the stage with the same number of people . </t>", "summary_trees": ["# ::snt  An Indiana public school performance of American Pie ended in tragedy Wednesday when a riser buckled just as dozens danced on - stage . \n(e / end-01\n      :ARG1 (p / perform-01\n            :ARG0 (s / school\n                  :location (s2 / state\n                        :name (n / name\n                              :op1 \"Indiana\"))\n                  :ARG1-of (p2 / public-02))\n            :ARG1 (m / music\n                  :name (n2 / name\n                        :op1 \"American\"\n                        :op2 \"Pie\")))\n      :ARG2 (t / tragedy)\n      :time (d / date-entity\n            :weekday (w / wednesday))\n      :time (b / buckle-01\n            :ARG1 (p3 / person\n                  :ARG0-of (r / rise-01))\n            :time (d2 / dance-01\n                  :ARG0 (p4 / person\n                        :quant (m2 / multiple\n                              :op1 12))\n                  :location (s3 / stage))))", "# ::snt  More than a dozen people were injured at the Westfield High performance and one student was taken to a hospital in critical condition . \n(a / and\n      :op1 (ii / injure-01\n            :ARG1 (p / person\n                  :quant (m / more-than\n                        :op1 12))\n            :time (p2 / perform-01\n                  :ARG0 (h / high-school\n                        :name (n / name\n                              :op1 \"Westfield\"\n                              :op2 \"High\"))))\n      :op2 (t / take-01\n            :ARG1 (p3 / person\n                  :quant 1\n                  :ARG0-of (s / study-01))\n            :ARG3 (h2 / hospital)\n            :manner (c / condition\n                  :ARG1-of (c2 / critical-03))))", "# ::snt  Students said there had been no issues when they previously practiced the song on the stage with the same number of people . \n(s / say-01\n      :ARG0 (p / person\n            :ARG0-of (s2 / study-01))\n      :ARG1 (ii / issue-02\n            :polarity -\n            :time (p2 / practice-01\n                  :ARG0 p\n                  :ARG1 (s3 / song)\n                  :location (s4 / stage)\n                  :accompanier (p3 / person\n                        :quant (n / number\n                              :ARG1-of (s5 / same-01)))\n                  :time (p4 / previous))))"], "tree": ["(b / buckle-01\n   :time (d2 / dance-01\n             :location (s3 / stage)))", "(d2 / dance-01\n    :ARG0 (p4 / person\n              :quant (m2 / multiple\n                         :op1 12)))", "(d2 / dance-01\n    :ARG0 (p4 / person\n              :quant (m2 / multiple\n                         :op1 12))\n    :location (s3 / stage))", "(b / buckle-01\n   :ARG1 (p3 / person\n             :ARG0 (r / rise-01))\n   :time (d2 / dance-01\n             :ARG0 (p4 / person\n                       :quant (m2 / multiple\n                                  :op1 12))\n             :location (s3 / stage)))", "(p / perform-01\n   :ARG0 (s / school\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"Indiana\"))\n            :ARG1 (p2 / public-02))\n   :ARG1 (m / music\n            :name (n2 / name\n                      :op1 \"American\"\n                      :op2 \"Pie\")))", "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))\n                     :ARG1 (p2 / public-02))\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :ARG2 (t / tragedy)\n   :time (d / date-entity\n            :weekday (w / wednesday))\n   :time (b / buckle-01\n            :ARG1 (p3 / person\n                      :ARG0 (r / rise-01))\n            :time (d2 / dance-01\n                      :ARG0 (p4 / person\n                                :quant (m2 / multiple\n                                           :op1 12))\n                      :location (s3 / stage))))", "(p2 / perform-01\n    :ARG0 (h / high-school\n             :name (n / name\n                      :op1 \"Westfield\"\n                      :op2 \"High\")))", "(t / take-01\n   :ARG1 (p3 / person\n             :quant 1\n             :ARG0 (s / study-01))\n   :ARG3 (h2 / hospital)\n   :manner (c / condition\n              :ARG1 (c2 / critical-03)))", "(ii / injure-01\n    :ARG1 (p / person\n             :quant (m / more-than\n                       :op1 12))\n    :time (p2 / perform-01\n              :ARG0 (h / high-school\n                       :name (n / name\n                                :op1 \"Westfield\"\n                                :op2 \"High\"))))", "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (s3 / song))", "(p2 / practice-01\n    :location (s4 / stage)\n    :accompanier (p3 / person\n                     :quant (n / number))\n    :time (p4 / previous))", "(ii / issue-02\n    :polarity -\n    :time (p2 / practice-01\n              :location (s4 / stage)\n              :accompanier (p3 / person\n                               :quant (n / number))\n              :time (p4 / previous)))", "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (s3 / song)\n    :location (s4 / stage)\n    :accompanier (p3 / person\n                     :quant (n / number\n                               :ARG1 (s5 / same-01)))\n    :time (p4 / previous))", "(ii / issue-02\n    :polarity -\n    :time (p2 / practice-01\n              :ARG0 (p / person)\n              :ARG1 (s3 / song)\n              :location (s4 / stage)\n              :accompanier (p3 / person\n                               :quant (n / number\n                                         :ARG1 (s5 / same-01)))\n              :time (p4 / previous)))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (s2 / study-01))\n   :ARG1 (ii / issue-02\n             :polarity -\n             :time (p2 / practice-01\n                       :ARG0 p\n                       :ARG1 (s3 / song)\n                       :location (s4 / stage)\n                       :accompanier (p3 / person\n                                        :quant (n / number\n                                                  :ARG1 (s5 / same-01)))\n                       :time (p4 / previous))))"], "smus": ["Blown as the dancers danced on stage.", "Dozens danced.", "Dozens danced on stage.", "The riser buckled as dozens danced on stage.", "A public school in Indiana performs American Pie.", "The Indiana public school's performance of American Pie ended in tragedy Wednesday, as the riser buckled as dozens danced on stage.", "Westfield High School's performance", "One student was taken to a hospital in critical condition.", "More than one person was injured during Westfield High's performance.", "People practice the song.", "There has previously been practice on stage with a number of people.", "There were no issues previously in practice with a number of people on stage.", "People have previously practiced the song on stage with the same number of people.", "There were no issues when people had previously practiced a song on stage with the same number of people.", "Students said there were no issues when they had previously practiced the song on stage with the same number of people."]}, {"instance_id": "realsumm-84", "summary": "<t> Manchester City have been linked with summer move for Raheem Sterling . </t> <t> Sterling has two years left on his contract and is stalling on a new deal . </t> <t> Brendan Rodgers says a move to City would not be step up for Sterling . </t> <t> Indicating it will take the Manchester club 20 years to eclipse Liverpool . </t>", "summary_trees": ["# ::snt  Manchester City have been linked with summer move for Raheem Sterling . \n(l / link-01\n      :ARG1 (m / move-03\n            :ARG0 (t / team\n                  :name (n / name\n                        :op1 \"Manchester\"\n                        :op2 \"City\"))\n            :ARG1 (p / person\n                  :name (n2 / name\n                        :op1 \"Raheem\"\n                        :op2 \"Sterling\"))\n            :time (d / date-entity\n                  :season (s / summer))))", "# ::snt  Sterling has two years left on his contract and is stalling on a new deal . \n(a / and\n      :op1 (l / leave-17\n            :ARG1 (c / contract\n                  :poss (p / person\n                        :name (n / name\n                              :op1 \"Sterling\")))\n            :ARG2 (t / temporal-quantity\n                  :quant 2\n                  :unit (y / year)))\n      :op2 (s / stall-01\n            :ARG1 p\n            :ARG2 (d / deal\n                  :ARG1-of (n2 / new-01))))", "# ::snt  Brendan Rodgers says a move to City would not be step up for Sterling . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Brendan\"\n                  :op2 \"Rodgers\"))\n      :ARG1 (s2 / step-01\n            :polarity -\n            :ARG4 (m / move-01\n                  :ARG0 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Sterling\"))\n                  :ARG2 (c / city))\n            :direction (u / up)))", "# ::snt  Indicating it will take the Manchester club 20 years to eclipse Liverpool . \n(ii / indicate-01\n      :ARG1 (t / take-10\n            :ARG0 (e / eclipse-01\n                  :ARG0 (c / club\n                        :name (n / name\n                              :op1 \"Manchester\"))\n                  :ARG1 (t2 / team\n                        :name (n2 / name\n                              :op1 \"Liverpool\")))\n            :ARG1 (t3 / temporal-quantity\n                  :quant 20\n                  :unit (y / year))\n            :ARG2 c))"], "tree": ["(m / move-03\n   :time (d / date-entity\n            :season (s / summer)))", "(l / link-01\n   :ARG1 (m / move-03\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Manchester\"\n                              :op2 \"City\"))\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Raheem\"\n                               :op2 \"Sterling\"))\n            :time (d / date-entity\n                     :season (s / summer))))", "(s / stall-01\n   :ARG1 (p / person :name (n / name :op1 \"Sterling\"))\n   :ARG2 (d / deal\n            :ARG1 (n2 / new-01)))", "(l / leave-17\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Sterling\")))\n   :ARG2 (t / temporal-quantity\n            :quant 2\n            :unit (y / year)))", "(s2 / step-01\n    :polarity -\n    :direction (u / up))", "(s2 / step-01\n    :polarity -\n    :ARG4 (m / move-01\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sterling\"))\n             :ARG2 (c / city))\n    :direction (u / up))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brendan\"\n                     :op2 \"Rodgers\"))\n   :ARG1 (s2 / step-01\n             :polarity -\n             :ARG4 (m / move-01\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Sterling\"))\n                      :ARG2 (c / city))\n             :direction (u / up)))", "(e / eclipse-01\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Manchester\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Liverpool\")))", "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG0 (c / club\n                     :name (n / name\n                              :op1 \"Manchester\"))\n            :ARG1 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Liverpool\")))\n   :ARG1 (t3 / temporal-quantity\n             :quant 20\n             :unit (y / year))\n   :ARG2 c)", "(ii / indicate-01\n    :ARG1 (t / take-10\n             :ARG0 (e / eclipse-01\n                      :ARG0 (c / club\n                               :name (n / name\n                                        :op1 \"Manchester\"))\n                      :ARG1 (t2 / team\n                                :name (n2 / name\n                                          :op1 \"Liverpool\")))\n             :ARG1 (t3 / temporal-quantity\n                       :quant 20\n                       :unit (y / year))\n             :ARG2 c))"], "smus": ["The move was in the summer.", "The Manchester City move to Raheem Sterling in the summer was linked with the move.", "Sternling is stalling the new deal.", "Sternling's contract was left for 2 years.", "Not a step up.", "Sternling's move to the city was not a step up.", "\"Sterling's move up to the City is not a step up,\" Brenda Rodgers says.", "Manchester club to eclipse liverpool", "It will take Manchester 20 years to eclipse Liverpool.", "indicating that it will take Manchester 20 years to eclipse liverpool."]}, {"instance_id": "realsumm-85", "summary": "<t> Up to one in five Chinese eateries could be selling soup using illegal meat . </t> <t> Charity says it is often disguised on menu or only offered if requested . </t> <t> Loophole lets people bring 20 kg of meat into UK for personal consumption . </t>", "summary_trees": ["# ::snt  Up to one in five Chinese eateries could be selling soup using illegal meat . \n(p / possible-01\n      :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                  :mod (c / country\n                        :name (n / name\n                              :op1 \"China\"))\n                  :ARG1-of (ii / include-91\n                        :ARG2 (p2 / person\n                              :ARG0-of (e / eat-01))\n                        :ARG3 (u / up-to\n                              :op1 \"1/5\")))\n            :ARG1 (s2 / soup\n                  :ARG1-of (u2 / use-01\n                        :ARG0 r\n                        :ARG2 (m / meat\n                              :ARG1-of (l / legal-02\n                                    :polarity -))))))", "# ::snt  Charity says it is often disguised on menu or only offered if requested . \n(s / say-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 \"Charity\"))\n      :ARG1 (o2 / or\n            :op1 (d / disguise-01\n                  :ARG1 (ii / it)\n                  :location (m / menu)\n                  :frequency (o3 / often))\n            :op2 (o4 / offer-01\n                  :ARG1 ii\n                  :mod (o5 / only)\n                  :condition (r / request-01\n                        :ARG1 ii))))", "# ::snt  Loophole lets people bring 20 kg of meat into UK for personal consumption . \n(l / let-01\n      :ARG0 (l2 / loophole)\n      :ARG1 (b / bring-01\n            :ARG0 (p / person)\n            :ARG1 (m / meat\n                  :quant (m2 / mass-quantity\n                        :quant 20\n                        :unit (k / kilogram)))\n            :ARG2 (c / country\n                  :name (n / name\n                        :op1 \"UK\"))\n            :purpose (c2 / consume-01\n                  :ARG0 p\n                  :ARG1 m\n                  :ARG1-of (p2 / personal-02))))"], "tree": ["(u2 / use-01\n    :ARG0 (r / restaurant)\n    :ARG2 (m / meat\n             :ARG1 (l / legal-02\n                      :polarity -)))", "(p / possible-01\n   :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"China\"))\n                     :ARG1 (ii / include-91\n                               :ARG2 (p2 / person\n                                         :ARG0 (e / eat-01))\n                               :ARG3 (u / up-to\n                                        :op1 \"1/5\")))\n            :ARG1 (s2 / soup\n                      :ARG1 (u2 / use-01\n                                :ARG0 r\n                                :ARG2 (m / meat\n                                         :ARG1 (l / legal-02\n                                                  :polarity -))))))", "(o4 / offer-01\n    :mod (o5 / only)\n    :condition (r / request-01))", "(d / disguise-01\n   :location (m / menu)\n   :frequency (o3 / often))", "(o4 / offer-01\n    :ARG1 (ii / it)\n    :mod (o5 / only)\n    :condition (r / request-01\n                  :ARG1 ii))", "(d / disguise-01\n   :ARG1 (ii / it)\n   :location (m / menu)\n   :frequency (o3 / often))", "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op1 (d / disguise-01\n                     :ARG1 (ii / it)\n                     :location (m / menu)\n                     :frequency (o3 / often))\n             :op2 (o4 / offer-01\n                      :ARG1 ii\n                      :mod (o5 / only)\n                      :condition (r / request-01\n                                    :ARG1 ii))))", "(c2 / consume-01\n    :ARG0 (p / person)\n    :ARG1 (m / meat)\n    :ARG1 (p2 / personal-02))", "(b / bring-01\n   :ARG0 (p / person)\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :quant 20\n                       :unit (k / kilogram)))\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"UK\")))", "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :ARG0 (p / person)\n            :ARG1 (m / meat\n                     :quant (m2 / mass-quantity\n                                :quant 20\n                                :unit (k / kilogram)))\n            :ARG2 (c / country\n                     :name (n / name\n                              :op1 \"UK\"))\n            :purpose (c2 / consume-01\n                         :ARG0 p\n                         :ARG1 m\n                         :ARG1 (p2 / personal-02))))"], "smus": ["Restaurants using illegal meat.", "Chinese restaurants can be selling soup using illegal meat to up to one fifth of the eaters.", "Only offered when requested.", "often disguised in the menu.", "It was only offered upon request.", "It is often disguised in the menu.", "\"It is often disguised in the menu or offered only when requested,\" Charit or \"It is a 'Charit' or \"It is a Charit.\"", "People consume meat as a person.", "People would bring 20 kilograms of meat to the UK.", "The Loophole lets people bring 20kg of meat into the UK for consumption by the person."]}, {"instance_id": "realsumm-86", "summary": "<t> Two types of cereal in an Easter egg with marshmallows and brownies . </t> <t> Served at Black Milk cafe in Manchester 's Northern Quarter . ' </t> <t> Easter is less about what is used to mean , ' cafe owner Olly Taylor said . </t>", "summary_trees": ["# ::snt  Two types of cereal in an Easter egg with marshmallows and brownies . \n(c / cereal\n      :mod (t / type\n            :quant 2)\n      :location (e / egg\n            :mod (f / festival\n                  :name (n / name\n                        :op1 \"Easter\")))\n      :accompanier (a / and\n            :op1 (m / marshmallow)\n            :op2 (b / brownie)))", "# ::snt  Served at Black Milk cafe in Manchester 's Northern Quarter . ' \n(s / serve-01\n      :location (c / cafe\n            :name (n / name\n                  :op1 \"Black\"\n                  :op2 \"Milk\")\n            :location (q / quarter\n                  :name (n2 / name\n                        :op1 \"Northern\"\n                        :op2 \"Quarter\")\n                  :part-of (c2 / city\n                        :name (n3 / name\n                              :op1 \"Manchester\")))))", "# ::snt  Easter is less about what is used to mean , ' cafe owner Olly Taylor said . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Olly\"\n                  :op2 \"Taylor\")\n            :ARG0-of (o / own-01\n                  :ARG1 (c / cafe)))\n      :ARG1 (c2 / concern-02\n            :ARG0 (f / festival\n                  :name (n2 / name\n                        :op1 \"Easter\"))\n            :ARG1 (t / thing\n                  :ARG2-of (m / mean-01\n                        :ARG1 f\n                        :time (u / use-03)))\n            :mod (l / less)))"], "tree": ["(c / cereal\n   :mod (t / type\n           :quant 2)\n   :location (e / egg\n                :mod (f / festival\n                        :name (n / name\n                                 :op1 \"Easter\")))\n   :accompanier (a / and\n                   :op1 (m / marshmallow)\n                   :op2 (b / brownie)))", "(s / serve-01\n   :location (c / cafe\n                :name (n / name\n                         :op1 \"Black\"\n                         :op2 \"Milk\")\n                :location (q / quarter\n                             :name (n2 / name\n                                       :op1 \"Northern\"\n                                       :op2 \"Quarter\")\n                             :part (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Manchester\")))))", "(m / mean-01\n   :ARG1 (f / festival :name (n2 / name :op1 \"Easter\"))\n   :time (u / use-03))", "(c2 / concern-02\n    :ARG0 (f / festival\n             :name (n2 / name\n                       :op1 \"Easter\"))\n    :ARG1 (t / thing\n             :ARG2 (m / mean-01\n                      :ARG1 f\n                      :time (u / use-03)))\n    :mod (l / less))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Olly\"\n                     :op2 \"Taylor\")\n            :ARG0 (o / own-01\n                     :ARG1 (c / cafe)))\n   :ARG1 (c2 / concern-02\n             :ARG0 (f / festival\n                      :name (n2 / name\n                                :op1 \"Easter\"))\n             :ARG1 (t / thing\n                      :ARG2 (m / mean-01\n                               :ARG1 f\n                               :time (u / use-03)))\n             :mod (l / less)))"], "smus": ["There are two types of cereal in an Easter egg with marshmallows and brownies.", "Serving at the Black Milk cafe in Manchester's Northern Quarter.", "used to mean Easter.", "There is less concern about what Easter used to mean.", "\"Easter is less about what it used to mean,\" said Ollie Taylor, the owner of the cafe."]}, {"instance_id": "realsumm-87", "summary": "<t> The European Union will accuse Google of illegally abusing its supremacy . </t> <t> It could fine Google more than \u00a3 4 billion - 10 per cent of its annual revenue . </t> <t> Brussels to say it uses search engine to divert traffic to its own services . </t> <t> Google boasts a 90 per cent share in Europe 's search engine market . </t>", "summary_trees": ["# ::snt  The European Union will accuse Google of illegally abusing its supremacy . \n(a / accuse-01\n      :ARG0 (o / organization\n            :name (n / name\n                  :op1 \"European\"\n                  :op2 \"Union\"))\n      :ARG1 (c / company\n            :name (n2 / name\n                  :op1 \"Google\"))\n      :ARG2 (a2 / abuse-02\n            :ARG0 c\n            :ARG1 (s / supremacy\n                  :poss c)\n            :manner (l / law\n                  :polarity -)))", "# ::snt  It could fine Google more than \u00a3 4 billion - 10 per cent of its annual revenue . \n(p / possible-01\n      :ARG1 (f / fine-01\n            :ARG0 (ii / it)\n            :ARG1 (m / more-than\n                  :op1 (m2 / monetary-quantity\n                        :quant 4000000000\n                        :unit (p2 / pound)\n                        :ARG1-of (m3 / mean-01\n                              :ARG2 (p3 / percentage-entity\n                                    :value 10\n                                    :ARG3-of (ii2 / include-91\n                                          :ARG2 (r / revenue\n                                                :poss (c / company\n                                                      :name (n / name\n                                                            :op1 \"Google\"))\n                                                :frequency (r2 / rate-entity-91\n                                                      :ARG3 (t / temporal-quantity\n                                                            :quant 1\n                                                            :unit (y / year)))))))))\n            :ARG2 c))", "# ::snt  Brussels to say it uses search engine to divert traffic to its own services . \n(s / say-01\n      :ARG0 (c / city\n            :name (n / name\n                  :op1 \"Brussels\"))\n      :ARG1 (u / use-01\n            :ARG0 c\n            :ARG1 (s2 / search-engine)\n            :ARG2 (d / divert-01\n                  :ARG0 c\n                  :ARG1 (t / traffic)\n                  :ARG3 (s3 / service\n                        :poss c))))", "# ::snt  Google boasts a 90 per cent share in Europe 's search engine market . \n(b / boast-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Google\"))\n      :ARG1 (s / share-01\n            :ARG1 (m / market\n                  :mod (s2 / search-engine)\n                  :location (c2 / continent\n                        :name (n2 / name\n                              :op1 \"Europe\")))\n            :ARG2 c\n            :quant (p / percentage-entity\n                  :value 90)))"], "tree": ["(a2 / abuse-02\n    :ARG1 (s / supremacy\n             :poss (c / company :name (n2 / name :op1 \"Google\"))))", "(a2 / abuse-02\n    :manner (l / law\n               :polarity -))", "(a2 / abuse-02\n    :ARG0 (c / company :name (n2 / name :op1 \"Google\"))\n    :ARG1 (s / supremacy\n             :poss c)\n    :manner (l / law\n               :polarity -))", "(a / accuse-01\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c\n             :ARG1 (s / supremacy\n                      :poss c)\n             :manner (l / law\n                        :polarity -)))", "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c\n             :ARG1 (s / supremacy\n                      :poss c)\n             :manner (l / law\n                        :polarity -)))", "(m3 / mean-01\n    :ARG2 (p3 / percentage-entity\n              :value 10\n              :ARG3 (ii2 / include-91\n                         :ARG2 (r / revenue\n                                  :poss (c / company\n                                           :name (n / name\n                                                    :op1 \"Google\"))\n                                  :frequency (r2 / rate-entity-91\n                                                 :ARG3 (t / temporal-quantity\n                                                          :quant 1\n                                                          :unit (y / year)))))))", "(u / use-01\n   :ARG0 (c / city :name (n / name :op1 \"Brussels\"))\n   :ARG1 (s2 / search-engine))", "(d / divert-01\n   :ARG0 (c / city :name (n / name :op1 \"Brussels\"))\n   :ARG1 (t / traffic)\n   :ARG3 (s3 / service\n             :poss c))", "(u / use-01\n   :ARG0 (c / city :name (n / name :op1 \"Brussels\"))\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG0 c\n            :ARG1 (t / traffic)\n            :ARG3 (s3 / service\n                      :poss c)))", "(s / say-01\n   :ARG0 (c / city\n            :name (n / name\n                     :op1 \"Brussels\"))\n   :ARG1 (u / use-01\n            :ARG0 c\n            :ARG1 (s2 / search-engine)\n            :ARG2 (d / divert-01\n                     :ARG0 c\n                     :ARG1 (t / traffic)\n                     :ARG3 (s3 / service\n                               :poss c))))", "(s / share-01\n   :quant (p / percentage-entity\n             :value 90))", "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\"))))", "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\")))\n   :ARG2 (c / company :name (n / name :op1 \"Google\")))", "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\")))\n   :ARG2 (c / company :name (n / name :op1 \"Google\"))\n   :quant (p / percentage-entity\n             :value 90))", "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :mod (s2 / search-engine)\n                     :location (c2 / continent\n                                   :name (n2 / name\n                                             :op1 \"Europe\")))\n            :ARG2 c\n            :quant (p / percentage-entity\n                      :value 90)))"], "smus": ["Abusing Google's supremacy.", "Abusing illegally.", "Google is illegally abusing its supremacy.", "Google is to accuse of illegally abusing its supremacy.", "The European Union will accuse Google of illegally abusing its supremacy.", "10% of Google's annual revenue =", "Brussels uses a search engine.", "Brussels will divert traffic to its services.", "Brussels uses a search engine to divert traffic to its services.", "Brussels says it uses a search engine to divert traffic to its services.", "90% share", "Share of European search engine market", "Google has a share of the European search engine market.", "Google has a 90 percent share of the European search engine market.", "Google boasts a 90 percent share of the European search engine market."]}, {"instance_id": "realsumm-88", "summary": "<t> Phil Smith , 25 , forgot his keys and scaled fence to try to get in his flat . </t> <t> But teaching assistant fell and hit his head while climbing through window . </t> <t> He fractured his skull and suffered a bleed on the brain and a blood clot . </t> <t> Parents paid tribute to ' lovely son ' who worked at special needs school . </t>", "summary_trees": ["# ::snt  Phil Smith , 25 , forgot his keys and scaled fence to try to get in his flat . \n(f / forget-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Phil\"\n                  :op2 \"Smith\")\n            :age (t / temporal-quantity\n                  :quant 25\n                  :unit (y / year)))\n      :ARG1 (a / and\n            :op1 (k / key\n                  :poss p)\n            :op2 (s / scale-01\n                  :ARG0 p\n                  :ARG1 (f2 / fence)\n                  :purpose (t2 / try-01\n                        :ARG0 p\n                        :ARG1 (g / get-05\n                              :ARG1 p\n                              :ARG2 (f3 / flat\n                                    :poss p))))))", "# ::snt  But teaching assistant fell and hit his head while climbing through window . \n(c / contrast-01\n      :ARG2 (a / and\n            :op1 (f / fall-01\n                  :ARG1 (p / person\n                        :ARG0-of (a2 / assist-01\n                              :ARG1 (t / teach-01))\n                        :part (h / head)))\n            :op2 (h2 / hit-01\n                  :ARG1 h)\n            :time (c2 / climb-01\n                  :ARG0 p\n                  :path (t2 / through\n                        :op1 (w / window)))))", "# ::snt  He fractured his skull and suffered a bleed on the brain and a blood clot . \n(a / and\n      :op1 (f / fracture-01\n            :ARG0 (h / he\n                  :part (s / skull))\n            :ARG1 s)\n      :op2 (s2 / suffer-01\n            :ARG0 h\n            :ARG1 (a2 / and\n                  :op1 (b / bleed-01\n                        :ARG1 (b2 / brain))\n                  :op2 (c / clot\n                        :mod (b3 / blood)))))", "# ::snt  Parents paid tribute to ' lovely son ' who worked at special needs school . \n(p / pay-01\n      :ARG0 (p2 / person\n            :ARG0-of (h / have-rel-role-91\n                  :ARG2 (p3 / parent)))\n      :ARG1 (t / tribute)\n      :ARG2 (p4 / person\n            :ARG0-of (h2 / have-rel-role-91\n                  :ARG2 (s / son))\n            :mod (l / lovely)\n            :ARG0-of (w / work-01\n                  :ARG2 (s2 / school\n                        :ARG1-of (n / need-01\n                              :ARG1-of (s3 / special-02))))))"], "tree": ["(f / forget-01\n   :ARG1 (k / key\n            :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))))", "(t2 / try-01\n    :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n    :ARG1 (g / get-05\n             :ARG1 p\n             :ARG2 (f3 / flat\n                       :poss p)))", "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\")\n            :age (t / temporal-quantity\n                    :quant 25\n                    :unit (y / year))))", "(s / scale-01\n   :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n   :ARG1 (f2 / fence)\n   :purpose (t2 / try-01\n                :ARG0 p\n                :ARG1 (g / get-05\n                         :ARG1 p\n                         :ARG2 (f3 / flat\n                                   :poss p))))", "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\")\n            :age (t / temporal-quantity\n                    :quant 25\n                    :unit (y / year)))\n   :ARG1 (k / key\n            :poss p))", "(f / forget-01\n   :ARG1 (a / and\n            :op1 (k / key\n                    :poss p)\n            :op2 (s / scale-01\n                    :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n                    :ARG1 (f2 / fence)\n                    :purpose (t2 / try-01\n                                 :ARG0 p\n                                 :ARG1 (g / get-05\n                                          :ARG1 p\n                                          :ARG2 (f3 / flat\n                                                    :poss p))))))", "(c2 / climb-01\n    :path (t2 / through\n              :op1 (w / window)))", "(c2 / climb-01\n    :ARG0 (p / person)\n    :path (t2 / through\n              :op1 (w / window)))", "(c / contrast-01\n   :ARG2 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0 (a2 / assist-01\n                               :ARG1 (t / teach-01))\n                     :part (h / head))))", "(c / contrast-01\n   :ARG2 (h2 / hit-01\n             :ARG1 (h / head)\n             :time (c2 / climb-01\n                       :ARG0 (p / person)\n                       :path (t2 / through\n                                 :op1 (w / window)))))", "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (f / fall-01\n                    :ARG1 (p / person\n                             :ARG0 (a2 / assist-01\n                                       :ARG1 (t / teach-01))\n                             :part (h / head)))\n            :op2 (h2 / hit-01\n                     :ARG1 h)\n            :time (c2 / climb-01\n                      :ARG0 p\n                      :path (t2 / through\n                                :op1 (w / window)))))", "(f / fracture-01\n   :ARG0 (h / he\n            :part (s / skull\n                     :ARG1-of f)))", "(s2 / suffer-01\n    :ARG0 (h / he)\n    :ARG1 (b / bleed-01\n             :ARG1 (b2 / brain)))", "(s2 / suffer-01\n    :ARG0 (h / he)\n    :ARG1 (c / clot\n             :mod (b3 / blood)))", "(s2 / suffer-01\n    :ARG0 (h / he)\n    :ARG1 (a2 / and\n              :op1 (b / bleed-01\n                      :ARG1 (b2 / brain))\n              :op2 (c / clot\n                      :mod (b3 / blood))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG1 (t / tribute))", "(p / pay-01\n   :ARG1 (t / tribute)\n   :ARG2 (p4 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG2 (s / son))\n             :mod (l / lovely)\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / school))))", "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0 (h / have-rel-role-91\n                      :ARG2 (p3 / parent)))\n   :ARG1 (t / tribute)\n   :ARG2 (p4 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG2 (s / son))\n             :mod (l / lovely)\n             :ARG0 (w / work-01\n                      :ARG2 (s2 / school))))"], "smus": ["Phil Smith's keys were forgotten.", "Phil Smith will try to get flat.", "Phil Smith, 25, forgot.", "Phil Smith has scaled the fence to try and get flat.", "Phil Smith, 25, forgot his keys.", "forgot his keys and Phil Smith had scaled the fence to try and get flat.", "Climbing through the window.", "People climbing through the window.", "But the teaching assistant's head fell.", "But when people were climbing through the window, the head hit.", "But the teaching assistant fell and hit while climbing through the window.", "He fractured his skull.", "He suffered a brain bleed.", "He suffered from a blood clot.", "He suffered a brain bleed and a blood clot.", "Parents paid.", "Parents paid tribute.", "The tribute was paid to the lovely son who worked in the school.", "Parents paid tribute to the lovely son who worked in school."]}, {"instance_id": "realsumm-89", "summary": "<t> Emmanuel Adebayor 's current Tottenham contract runs out in 2016 . </t> <t> The striker is unwilling to take anything less than his current \u00a3 5.2million salary before accepting a move out of White Hart Lane . </t> <t> Togolese forward has made just nine league starts this season . </t>", "summary_trees": ["# ::snt  Emmanuel Adebayor 's current Tottenham contract runs out in 2016 . \n(r / run-out-05\n      :ARG1 (c / contract\n            :poss (p / person\n                  :name (n / name\n                        :op1 \"Emmanuel\"\n                        :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                  :name (n2 / name\n                        :op1 \"Tottenham\")))\n      :time (d / date-entity\n            :year 2016))", "# ::snt  The striker is unwilling to take anything less than his current \u00a3 5.2million salary before accepting a move out of White Hart Lane . \n(w / will-02\n      :polarity -\n      :ARG0 (p / person\n            :ARG0-of (s / strike-02))\n      :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                  :ARG1-of (h / have-quant-91\n                        :ARG3 (l / less)\n                        :ARG4 (s2 / salary\n                              :mod (m / monetary-quantity\n                                    :quant 5500000\n                                    :unit (p2 / pound))\n                              :poss p\n                              :time (c / current)))))\n      :time (b / before\n            :op1 (a2 / accept-01\n                  :ARG0 p\n                  :ARG1 (m2 / move-01\n                        :ARG0 p\n                        :ARG2 (r / road\n                              :name (n / name\n                                    :op1 \"White\"\n                                    :op2 \"Hart\"\n                                    :op3 \"Lane\"))))))", "# ::snt  Togolese forward has made just nine league starts this season . \n(s / start-01\n      :ARG0 (f / forward\n            :mod (c / country\n                  :name (n / name\n                        :op1 \"Togolese\")))\n      :mod (l / league)\n      :quant (j / just\n            :op1 9)\n      :time (s2 / season\n            :mod (t / this)))"], "tree": ["(r / run-out-05\n   :time (d / date-entity\n            :year 2016))", "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\"))))", "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\")))\n   :time (d / date-entity\n            :year 2016))", "(w / will-02\n   :polarity -\n   :time (b / before\n            :op1 (a2 / accept-01)))", "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\"))))", "(s / start-01\n   :mod (l / league)\n   :quant (j / just\n             :op1 9)\n   :time (s2 / season\n             :mod (t / this)))", "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :mod (l / league)\n   :quant (j / just\n             :op1 9)\n   :time (s2 / season\n             :mod (t / this)))"], "smus": ["Run out in 2016.", "Emmanuel Adebayor's current Tottenham contract is running out.", "Emmanuel Adebayor's current Tottenham contract runs out in 2016.", "Not willing before accepting.", "The Togolese forwards starts.", "Just 9 league starts this season.", "The Togolese forward starts just 9 league starts this season."]}, {"instance_id": "realsumm-90", "summary": "<t> John Helm was commentating on the game the day the fire broke out . </t> <t> He gives his insight into what cause the blaze 30 years ago . ' </t> <t> From everything I have been told there is n\u2019t a jot of evidence to suggest the blaze was caused deliberately , ' says Helm . </t>", "summary_trees": ["# ::snt  John Helm was commentating on the game the day the fire broke out . \n(c / commentate-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"John\"\n                  :op2 \"Helm\"))\n      :ARG3 (g / game)\n      :time (b / break-out-30\n            :ARG1 (f / fire)))", "# ::snt  He gives his insight into what cause the blaze 30 years ago . ' \n(g / give-01\n      :ARG0 (h / he)\n      :ARG1 (ii / insight\n            :poss h\n            :topic (t / thing\n                  :ARG0-of (c / cause-01\n                        :ARG1 (b / blaze-01\n                              :time (b2 / before\n                                    :op1 (n / now)\n                                    :quant (t2 / temporal-quantity\n                                          :quant 30\n                                          :unit (y / year))))))))", "# ::snt  From everything I have been told there is n\u2019t a jot of evidence to suggest the blaze was caused deliberately , ' says Helm . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Helm\"))\n      :ARG1 (e / evidence-01\n            :polarity -\n            :quant (j / jot)\n            :ARG0-of (s2 / suggest-01\n                  :ARG1 (c / cause-01\n                        :ARG1 (b / blaze-01)\n                        :manner (d / deliberate)))\n            :source (e2 / everything\n                  :ARG1-of (t / tell-01\n                        :ARG2 (ii / i)))))"], "tree": ["(c / commentate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG3 (g / game)\n   :time (b / break-out-30\n            :ARG1 (f / fire)))", "(b / blaze-01\n   :time (b2 / before\n             :op1 (n / now)\n             :quant (t2 / temporal-quantity\n                        :quant 30\n                        :unit (y / year))))", "(c / cause-01\n   :ARG1 (b / blaze-01\n            :time (b2 / before\n                      :op1 (n / now)\n                      :quant (t2 / temporal-quantity\n                                 :quant 30\n                                 :unit (y / year)))))", "(g / give-01\n   :ARG0 (h / he)\n   :ARG1 (ii / insight\n             :poss h\n             :topic (t / thing\n                       :ARG0 (c / cause-01\n                                :ARG1 (b / blaze-01\n                                         :time (b2 / before\n                                                   :op1 (n / now)\n                                                   :quant (t2 / temporal-quantity\n                                                              :quant 30\n                                                              :unit (y / year))))))))", "(e / evidence-01\n   :polarity -\n   :quant (j / jot)\n   :source (e2 / everything))"], "smus": ["John Hell was commentating on the game when the fire broke out.", "30 years ago, there was a blaze.", "The cause of the blaze has been 30 years ago.", "He gives his own insight into the cause of the blaze of the past 30 years.", "Not a jot of evi from everythi."]}, {"instance_id": "realsumm-91", "summary": "<t> Rory McIlroy faced with Fifty Shades of Grey 's Jamie Dornan . </t> <t> McIlroy and Dornan took part in the first Circular Soccer Showdown of 2015 . </t> <t> McIlroy finished strongly to finish an impressive fourth at the Masters . </t> <t> READ : It wo n't be too long before McIlroy wins a Masters . </t>", "summary_trees": ["# ::snt  Rory McIlroy faced with Fifty Shades of Grey 's Jamie Dornan . \n(f / face-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Rory\"\n                  :op2 \"McIlroy\"))\n      :ARG1 (p2 / person\n            :name (n2 / name\n                  :op1 \"Jamie\"\n                  :op2 \"Dornan\")\n            :ARG0-of (h / have-org-role-91\n                  :ARG1 (b / book\n                        :name (n3 / name\n                              :op1 \"Fifty\"\n                              :op2 \" Shades\"\n                              :op3 \"of\"\n                              :op4 \"Grey\")))))", "# ::snt  McIlroy and Dornan took part in the first Circular Soccer Showdown of 2015 . \n(p / participate-01\n      :ARG0 (a / and\n            :op1 (p2 / person\n                  :name (n / name\n                        :op1 \"McIlroy\"))\n            :op2 (p3 / person\n                  :name (n2 / name\n                        :op1 \"Dornan\")))\n      :ARG1 (g / game\n            :name (n3 / name\n                  :op1 \"Circular\"\n                  :op2 \"Soccer\"\n                  :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                  :value 1)\n            :time (d / date-entity\n                  :year 2015)))", "# ::snt  McIlroy finished strongly to finish an impressive fourth at the Masters . \n(f / finish-07\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"McIlroy\"))\n      :ARG1-of (s / strong-02)\n      :purpose (f2 / finish-07\n            :ARG0 p\n            :ARG2 (f3 / fourth\n                  :ARG0-of (ii / impress-01))\n            :location (g / game\n                  :name (n2 / name\n                        :op1 \"Masters\"))))", "# ::snt  READ : It wo n't be too long before McIlroy wins a Masters . \n(r / read-01\n      :mode imperative\n      :ARG0 (y / you)\n      :ARG1 (b / before\n            :op1 (w / win-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"McIlroy\"))\n                  :ARG1 (g / game\n                        :name (n2 / name\n                              :op1 \"Masters\")))\n            :ARG1-of (l / long-03\n                  :polarity -\n                  :ARG2-of (h / have-degree-91\n                        :ARG1 b\n                        :ARG3 (t / too)))))"], "tree": ["(h / have-org-role-91\n   :ARG1 (b / book\n            :name (n3 / name\n                      :op1 \"Fifty\"\n                      :op2 \" Shades\"\n                      :op3 \"of\"\n                      :op4 \"Grey\")))", "(f / face-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (b / book\n                               :name (n3 / name\n                                         :op1 \"Fifty\"\n                                         :op2 \" Shades\"\n                                         :op3 \"of\"\n                                         :op4 \"Grey\")))))", "(p / participate-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"McIlroy\")))", "(p / participate-01\n   :ARG0 (p3 / person\n             :name (n2 / name\n                       :op1 \"Dornan\")))", "(p / participate-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"McIlroy\"))\n            :op2 (p3 / person\n                     :name (n2 / name\n                               :op1 \"Dornan\"))))", "(p / participate-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"McIlroy\")))", "(f2 / finish-07\n    :location (g / game\n                 :name (n2 / name\n                           :op1 \"Masters\")))", "(f2 / finish-07\n    :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n    :ARG2 (f3 / fourth\n              :ARG0 (ii / impress-01))\n    :location (g / game\n                 :name (n2 / name\n                           :op1 \"Masters\")))", "(p / participate-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"McIlroy\")))", "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\")))", "(l / long-03\n   :polarity -\n   :ARG2 (h / have-degree-91\n            :ARG1 (b / before)\n            :ARG3 (t / too)))", "(r / read-01\n   :ARG1 (b / before\n            :op1 (w / win-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"McIlroy\"))\n                    :ARG1 (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\")))))", "(r / read-01\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (b / before\n            :op1 (w / win-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"McIlroy\"))\n                    :ARG1 (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\")))))"], "smus": ["fifty shades of grey", "-Rory McIlroy faced Jamie Dornan of fifty shades of grey.", "McIlroy was a participant.", "Dornan was a participant.", "McIlroy and Dunnan were in attendance.", "McIlroy was a participant.", "Finish the Masters.", "McIlroy will finish fourth in the Masters with an impressive performance.", "McIlroy was a participant.", "McIlroy wins.", "Not too long before.", "Read before McIlroy wins the Masters.", "Read before McIlroy wins the Masters."]}, {"instance_id": "realsumm-92", "summary": "<t> Chris Christie appeared on The Tonight Show and called out Jimmy Fallon for his weight jokes about the governor . </t> <t> Later in the program he hoarded a pint of ice cream Fallon brought out for the two to share . </t> <t> When asked if he would run for president , Christie said ; ' I \u2019ve got a day job which keeps me busy ' . </t>", "summary_trees": ["# ::snt  Chris Christie appeared on The Tonight Show and called out Jimmy Fallon for his weight jokes about the governor . \n(a / and\n      :op1 (a2 / appear-01\n            :ARG1 (p / person\n                  :name (n / name\n                        :op1 \"Chris\"\n                        :op2 \"Christie\"))\n            :location (b / broadcast-program\n                  :name (n2 / name\n                        :op1 \"The\"\n                        :op2 \"Tonight\"\n                        :op3 \"Show\")))\n      :op2 (c / call-out-15\n            :ARG0 p\n            :ARG1 (p2 / person\n                  :name (n3 / name\n                        :op1 \"Jimmy\"\n                        :op2 \"Fallon\"))\n            :ARG2 (j / joke-01\n                  :ARG0 p2\n                  :ARG2 (w / weight)\n                  :topic (p3 / person\n                        :ARG0-of (h / have-org-role-91\n                              :ARG2 (g / governor))))))", "# ::snt  Later in the program he hoarded a pint of ice cream Fallon brought out for the two to share . \n(h / hoard-01\n      :ARG0 (h2 / he)\n      :ARG1 (ii / ice-cream\n            :quant (p / pint)\n            :ARG1-of (b / bring-01\n                  :ARG0 (p2 / person\n                        :name (n / name\n                              :op1 \"Fallon\"))\n                  :ARG2 (o / out)\n                  :purpose (s / share-01\n                        :ARG0 (t / two))))\n      :time (l / late\n            :op1 (p3 / program)\n            :degree (s2 / somewhat)))", "# ::snt  When asked if he would run for president , Christie said ; ' I \u2019ve got a day job which keeps me busy ' . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Christie\"))\n      :ARG1 (h / have-03\n            :ARG0 p\n            :ARG1 (j / job\n                  :mod (d / day)\n                  :ARG0-of (k / keep-02\n                        :ARG1 (b / busy-01\n                              :ARG1 p))))\n      :time (a / ask-01\n            :ARG1 (t / truth-value\n                  :polarity-of (r / run-02\n                        :ARG0 p\n                        :ARG1 (p2 / person\n                              :ARG0-of (h2 / have-org-role-91\n                                    :ARG2 (p3 / president)))))\n            :ARG2 p))"], "tree": ["(j / joke-01\n   :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\"))\n   :ARG2 (w / weight))", "(a2 / appear-01\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))", "(j / joke-01\n   :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\"))\n   :ARG2 (w / weight)\n   :topic (p3 / person\n              :ARG0 (h / have-org-role-91\n                       :ARG2 (g / governor))))", "(a2 / appear-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Chris\"\n                      :op2 \"Christie\"))\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))", "(c / call-out-15\n   :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jimmy\"\n                       :op2 \"Fallon\"))\n   :ARG2 (j / joke-01\n            :ARG0 p2\n            :ARG2 (w / weight)\n            :topic (p3 / person\n                       :ARG0 (h / have-org-role-91\n                                :ARG2 (g / governor)))))", "(a2 / appear-01\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))", "(h / hoard-01\n   :time (l / late\n            :op1 (p3 / program)\n            :degree (s2 / somewhat)))", "(b / bring-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Fallon\"))\n   :ARG2 (o / out)\n   :purpose (s / share-01\n               :ARG0 (t / two)))", "(h / hoard-01\n   :ARG1 (ii / ice-cream\n             :quant (p / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p2 / person\n                                :name (n / name\n                                         :op1 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 (t / two)))))", "(h / hoard-01\n   :ARG0 (h2 / he)\n   :ARG1 (ii / ice-cream\n             :quant (p / pint)\n             :ARG1 (b / bring-01\n                      :ARG0 (p2 / person\n                                :name (n / name\n                                         :op1 \"Fallon\"))\n                      :ARG2 (o / out)\n                      :purpose (s / share-01\n                                  :ARG0 (t / two))))\n   :time (l / late\n            :op1 (p3 / program)\n            :degree (s2 / somewhat)))", "(k / keep-02\n   :ARG1 (b / busy-01\n            :ARG1 (p / person :name (n / name :op1 \"Christie\"))))", "(h / have-03\n   :ARG0 (p / person :name (n / name :op1 \"Christie\"))\n   :ARG1 (j / job\n            :mod (d / day)\n            :ARG0 (k / keep-02\n                     :ARG1 (b / busy-01\n                              :ARG1 p))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG0 p\n            :ARG1 (j / job\n                     :mod (d / day)\n                     :ARG0 (k / keep-02\n                              :ARG1 (b / busy-01\n                                       :ARG1 p)))))"], "smus": ["Jimmy Fallon jokes about weight.", "appeared on \"The Tonight Show\".", "Jimmy Fallon jokes about the weight of the governor.", "Chris Christie appeared on The Tonight Show.", "Chris Christie called out Jimmy Fallon for his weight jokes about the governor.", "appeared on \"The Tonight Show\".", "Hoarded somewhat late in the program.", "Fallon brought out to share with the two.", "A pint of ice-cream fellon brought out to share was hoarded.", "Later in the program, he hoarded a pint of ice-cream that Fallon brought out to share with the two.", "Christie keeps busy.", "Christie has a day job that keeps her busy.", "Christie said she has a day job that keeps her busy."]}, {"instance_id": "realsumm-93", "summary": "<t> Qantas ' on time rating slipped to 75th out of the 80 airlines using Heathrow . </t> <t> The airline could loose their eight landing strips at the popular airport . </t> <t> They are also facing a fine in excess of $ 38,000 for every flight that 's late . </t> <t> Qantas blamed air congestion at Heathrow and Dubai airports . </t>", "summary_trees": ["# ::snt  Qantas ' on time rating slipped to 75th out of the 80 airlines using Heathrow . \n(s / slip-01\n      :ARG1 (r / rate-01\n            :ARG1 (c / company\n                  :name (n / name\n                        :op1 \"Qantas\"))\n            :ARG3 (o / on-time))\n      :ARG4 (r2 / rank-01\n            :ARG2 75\n            :ARG1 c\n            :ARG5 (a / airline\n                  :quant 80\n                  :ARG0-of (u / use-01\n                        :ARG1 (a2 / airport\n                              :name (n2 / name\n                                    :op1 \"Heathrow\"))))))", "# ::snt  The airline could loose their eight landing strips at the popular airport . \n(p / possible-01\n      :ARG1 (l / loose-02\n            :ARG0 (a / airline)\n            :ARG1 (s / strip\n                  :quant 8\n                  :purpose (l2 / land-01)\n                  :poss a)\n            :location (a2 / airport\n                  :ARG1-of (p2 / popular-02))))", "# ::snt  They are also facing a fine in excess of $ 38,000 for every flight that 's late . \n(f / face-01\n      :ARG0 (t / they)\n      :ARG1 (f2 / fine-01\n            :ARG1 (ii / in-excess-of\n                  :op1 (m / monetary-quantity\n                        :quant 38000\n                        :unit (d / dollar)))\n            :ARG3 (f3 / fly-01\n                  :mod (e / every)\n                  :ARG1-of (l / late-02)))\n      :mod (a / also))", "# ::snt  Qantas blamed air congestion at Heathrow and Dubai airports . \n(b / blame-01\n      :ARG0 (c / company\n            :name (n / name\n                  :op1 \"Qantas\"))\n      :ARG1 (c2 / congest-01\n            :ARG1 (a / air)\n            :location (a2 / and\n                  :op1 (a3 / airport\n                        :name (n2 / name\n                              :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                        :name (n3 / name\n                              :op1 \"Dubai\")))))"], "tree": ["(u / use-01\n   :ARG1 (a2 / airport\n             :name (n2 / name\n                       :op1 \"Heathrow\")))", "(r / rate-01\n   :ARG1 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG3 (o / on-time))", "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\"))\n            :ARG3 (o / on-time)))", "(r2 / rank-01\n    :ARG2 75\n    :ARG1 (c / company :name (n / name :op1 \"Qantas\"))\n    :ARG5 (a / airline\n             :quant 80\n             :ARG0 (u / use-01\n                      :ARG1 (a2 / airport\n                                :name (n2 / name\n                                          :op1 \"Heathrow\")))))", "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\"))\n            :ARG3 (o / on-time))\n   :ARG4 (r2 / rank-01\n             :ARG2 75\n             :ARG1 c\n             :ARG5 (a / airline\n                      :quant 80\n                      :ARG0 (u / use-01\n                               :ARG1 (a2 / airport\n                                         :name (n2 / name\n                                                   :op1 \"Heathrow\"))))))", "(p / possible-01\n   :ARG1 (l / loose-02\n            :ARG0 (a / airline)\n            :ARG1 (s / strip\n                     :quant 8\n                     :purpose (l2 / land-01)\n                     :poss a)\n            :location (a2 / airport\n                          :ARG1 (p2 / popular-02))))", "(f3 / fly-01\n    :mod (e / every)\n    :ARG1 (l / late-02))", "(f2 / fine-01\n    :ARG1 (ii / in-excess-of\n              :op1 (m / monetary-quantity\n                      :quant 38000\n                      :unit (d / dollar))))", "(f2 / fine-01\n    :ARG1 (ii / in-excess-of\n              :op1 (m / monetary-quantity\n                      :quant 38000\n                      :unit (d / dollar)))\n    :ARG3 (f3 / fly-01\n              :mod (e / every)\n              :ARG1 (l / late-02)))", "(f / face-01\n   :ARG0 (t / they)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000\n                               :unit (d / dollar)))\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)\n                       :ARG1 (l / late-02))))", "(f / face-01\n   :ARG0 (t / they)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000\n                               :unit (d / dollar)))\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)\n                       :ARG1 (l / late-02)))\n   :mod (a / also))", "(c2 / congest-01\n    :location (a3 / airport\n                  :name (n2 / name\n                            :op1 \"Heathrow\")))", "(c2 / congest-01\n    :location (a4 / airport\n                  :name (n3 / name\n                            :op1 \"Dubai\")))", "(c2 / congest-01\n    :ARG1 (a / air)\n    :location (a3 / airport\n                  :name (n2 / name\n                            :op1 \"Heathrow\")))", "(c2 / congest-01\n    :ARG1 (a / air)\n    :location (a4 / airport\n                  :name (n3 / name\n                            :op1 \"Dubai\")))", "(c2 / congest-01\n    :location (a2 / and\n                  :op1 (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))", "(c2 / congest-01\n    :ARG1 (a / air)\n    :location (a2 / and\n                  :op1 (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))"], "smus": ["Using Heathrow.", "Qantas is rated on time.", "Qantas's on-time rating slipped.", "Qantas ranks 75th among 80 airlines using Heathrow.", "Qantas's on-time rating slipped to 75th out of 80 airlines using Heathrow.", "The airline may loose 8 of its landing strips at the popular airport.", "Every late flight.", "The fine was in excess of $38,000.", "Every late flight ticket in excess of $38,000 will get a fine.", "They are facing a $38K fine for every late flight.", "They are also facing a $38k fine for every late flight.", "Congestion at Heathrow airport", "Congestion in Dubai airport", "There was air congest at Heathrow.", "Air congest in Dubai", "Congestion at Heathrow and Dubai.", "There was air congest at Heathrow and Dubai."]}, {"instance_id": "realsumm-94", "summary": "<t> Christopher Starrs was spared jail in an ' act of mercy ' by judge in January . </t> <t> But senior judge has now said his colleague took ' his eye off the ball ' . </t> <t> Nicholas Cooke QC said wheelchair - bound Starrs should have been jailed . </t> <t> But added Starrs should thank his lucky stars as sentence allowed to stand . </t>", "summary_trees": ["# ::snt  Christopher Starrs was spared jail in an ' act of mercy ' by judge in January . \n(s / spare-01\n      :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                  :ARG3 (j / judge-01)))\n      :ARG1 (p2 / person\n            :name (n / name\n                  :op1 \"Christopher\"\n                  :op2 \"Starrs\"))\n      :ARG2 (j2 / jail)\n      :manner (a / act-02\n            :ARG0 p\n            :ARG1 (m / mercy))\n      :time (d / date-entity\n            :month 1))", "# ::snt  But senior judge has now said his colleague took ' his eye off the ball ' . \n(c / contrast-01\n      :ARG2 (s / say-01\n            :ARG0 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01)\n                        :mod (s2 / senior)))\n            :ARG1 (t / take-01\n                  :ARG0 (p2 / person\n                        :ARG0-of (h2 / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (c2 / colleague)))\n                  :ARG1 (e / eye\n                        :direction (o / off\n                              :op1 (b / ball))))\n            :time (n / now)))", "# ::snt  Nicholas Cooke QC said wheelchair - bound Starrs should have been jailed . \n(s / say-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Nicholas\"\n                  :op2 \"Cooke\"\n                  :op3 \"Q QC\"))\n      :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Starrs\")\n                        :ARG1-of (b / bind-01\n                              :ARG2 (w / wheelchair))))))", "# ::snt  But added Starrs should thank his lucky stars as sentence allowed to stand . \n(c / contrast-01\n      :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                  :ARG1 (t / thank-01\n                        :ARG0 (p / person\n                              :name (n / name\n                                    :op1 \"Starrs\"))\n                        :ARG1 (s / star\n                              :mod (l / lucky)\n                              :poss p)\n                        :time (a2 / allow-01\n                              :ARG1 (s2 / stand-04\n                                    :ARG1 (s3 / sentence-01)))))))"], "tree": ["(s / spare-01\n   :time (d / date-entity\n            :month 1))", "(s / spare-01\n   :manner (a / act-02)\n   :time (d / date-entity\n            :month 1))", "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\")))", "(s / spare-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail))", "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :time (d / date-entity\n            :month 1))", "(s / spare-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :manner (a / act-02\n              :ARG0 p\n              :ARG1 (m / mercy))\n   :time (d / date-entity\n            :month 1))", "(h2 / have-rel-role-91\n    :ARG1 (p / person)\n    :ARG2 (c2 / colleague))", "(h / have-org-role-91\n   :ARG3 (j / judge-01)\n   :mod (s2 / senior))", "(t / take-01\n   :ARG1 (e / eye\n            :direction (o / off\n                          :op1 (b / ball))))", "(t / take-01\n   :ARG0 (p2 / person\n             :ARG0 (h2 / have-rel-role-91\n                       :ARG1 (p / person)\n                       :ARG2 (c2 / colleague)))\n   :ARG1 (e / eye\n            :direction (o / off\n                          :op1 (b / ball))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)\n                     :mod (s2 / senior)))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p\n                                :ARG2 (c2 / colleague)))\n            :ARG1 (e / eye\n                     :direction (o / off\n                                   :op1 (b / ball)))))", "(s / say-01\n   :ARG0 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG3 (j / judge-01)\n                     :mod (s2 / senior)))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0 (h2 / have-rel-role-91\n                                :ARG1 p\n                                :ARG2 (c2 / colleague)))\n            :ARG1 (e / eye\n                     :direction (o / off\n                                   :op1 (b / ball))))\n   :time (n / now))", "(r / recommend-01\n   :ARG1 (j / jail-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Starrs\")\n                      :ARG1 (b / bind-01\n                               :ARG2 (w / wheelchair)))))", "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nicholas\"\n                     :op2 \"Cooke\"\n                     :op3 \"Q QC\"))\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Starrs\")\n                               :ARG1 (b / bind-01\n                                        :ARG2 (w / wheelchair))))))", "(a2 / allow-01\n    :ARG1 (s2 / stand-04\n              :ARG1 (s3 / sentence-01)))", "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Starrs\"))\n   :ARG1 (s / star\n            :mod (l / lucky)\n            :poss p))", "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Starrs\"))\n   :ARG1 (s / star\n            :mod (l / lucky)\n            :poss p)\n   :time (a2 / allow-01\n             :ARG1 (s2 / stand-04\n                       :ARG1 (s3 / sentence-01))))", "(r / recommend-01\n   :ARG1 (t / thank-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Starrs\"))\n            :ARG1 (s / star\n                     :mod (l / lucky)\n                     :poss p)\n            :time (a2 / allow-01\n                      :ARG1 (s2 / stand-04\n                                :ARG1 (s3 / sentence-01)))))", "(a / add-01\n   :ARG1 (r / recommend-01\n            :ARG1 (t / thank-01\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Starrs\"))\n                     :ARG1 (s / star\n                              :mod (l / lucky)\n                              :poss p)\n                     :time (a2 / allow-01\n                               :ARG1 (s2 / stand-04\n                                         :ARG1 (s3 / sentence-01))))))", "(c / contrast-01\n   :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                     :ARG1 (t / thank-01\n                              :ARG0 (p / person\n                                       :name (n / name\n                                                :op1 \"Starrs\"))\n                              :ARG1 (s / star\n                                       :mod (l / lucky)\n                                       :poss p)\n                              :time (a2 / allow-01\n                                        :ARG1 (s2 / stand-04\n                                                  :ARG1 (s3 / sentence-01)))))))"], "smus": ["Spared in January.", "In January, the action was spared.", "-Christopher Starrs is spared.", "Christopher Starrs was spared jail.", "The Judge spared Christopher Starrs in January.", "In January, a Judge spared Christopher Starrs from jail in an act of mercy.", "colleague", "Senior judge", "took an eye off the ball.", "A colleague took an eye off the ball.", "A senior judge has said his colleague took an eye off the ball.", "A senior judge has now said his colleague took an eye off the ball.", "Starrs should have been jailed for being bound for a wheelchair.", "Nicholas Cooke Q QC said Starrs should have been jailed for being bound by a wheelchair.", "The sentence was allowed to stand.", "Starrs, thank your lucky stars.", "Starrs will thank his lucky stars when the sentence is allowed to stand.", "Starrs should thank his lucky stars when the sentence is allowed to stand.", "Starrs should thank his lucky stars when the sentence is allowed to stand, he was added.", "But it was added that Starrs should thank his lucky stars when the sentence is allowed to stand."]}, {"instance_id": "realsumm-95", "summary": "<t> Real Madrid thrashed Granada 9 - 1 in La Liga at the weekend . </t> <t> Cristiano Ronaldo scored five to take his league tally to 36 for the season . </t> <t> Real travel to Rayo Vallecano in a Madrid derby on Wednesday night . </t> <t> Juventus won 3 - 0 at Fiorentina to reach the Coppa Italia final on Tuesday . </t>", "summary_trees": ["# ::snt  Real Madrid thrashed Granada 9 - 1 in La Liga at the weekend . \n(t / thrash-01\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Real\"\n                  :op2 \"Madrid\"))\n      :ARG1 (t3 / team\n            :name (n2 / name\n                  :op1 \"Granada\"))\n      :time (w / weekend)\n      :quant (s / score-entity\n            :op1 9\n            :op2 1)\n      :location (l / league\n            :name (n3 / name\n                  :op1 \"La\"\n                  :op2 \"Liga\")))", "# ::snt  Cristiano Ronaldo scored five to take his league tally to 36 for the season . \n(s / score-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Cristiano\"\n                  :op2 \"Ronaldo\"))\n      :ARG1 5\n      :ARG0-of (t / take-01\n            :ARG1 (t2 / tally-01\n                  :ARG0 p\n                  :ARG1 (l / league))\n            :ARG3 s\n            :ARG2 36\n            :ARG1 p\n            :ARG3 l\n            :time (s2 / season)))", "# ::snt  Real travel to Rayo Vallecano in a Madrid derby on Wednesday night . \n(t / travel-01\n      :ARG0 (t2 / team\n            :name (n / name\n                  :op1 \"Real\"))\n      :ARG4 (t3 / team\n            :name (n2 / name\n                  :op1 \"Rayo\"\n                  :op2 \"Vallecano\"))\n      :subevent-of (d / derby\n            :mod (c / city\n                  :name (n3 / name\n                        :op1 \"Madrid\")))\n      :time (d2 / date-entity\n            :weekday (w / wednesday)\n            :dayperiod (n4 / night)))", "# ::snt  Juventus won 3 - 0 at Fiorentina to reach the Coppa Italia final on Tuesday . \n(w / win-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"Juventus\"))\n      :ARG2 (t2 / team\n            :name (n2 / name\n                  :op1 \"Fiorentina\"))\n      :ARG4 (s / score-entity\n            :op1 3\n            :op2 0)\n      :purpose (r / reach-01\n            :ARG0 t\n            :ARG1 (f / final\n                  :subevent-of (g / game\n                        :name (n3 / name\n                              :op1 \"Coppa\"\n                              :op2 \"Italia\")))\n            :time (d / date-entity\n                  :weekday (t3 / tuesday))))"], "tree": ["(t / thrash-01\n   :time (w / weekend)\n   :quant (s / score-entity\n             :op1 9\n             :op2 1)\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))", "(t2 / tally-01\n    :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n    :ARG1 (l / league))", "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n             :ARG1 (l / league)))", "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n             :ARG1 (l / league))\n   :ARG2 36)", "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n             :ARG1 (l / league))\n   :ARG3 (s / score-01)\n   :ARG2 36\n   :ARG1 p\n   :ARG3 l\n   :time (s2 / season))", "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cristiano\"\n                     :op2 \"Ronaldo\"))\n   :ARG1 5\n   :ARG0 (t / take-01\n            :ARG1 (t2 / tally-01\n                      :ARG0 p\n                      :ARG1 (l / league))\n            :ARG3 s\n            :ARG2 36\n            :ARG1 p\n            :ARG3 l\n            :time (s2 / season)))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\")))", "(t / travel-01\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\")))", "(t / travel-01\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :subevent (d / derby\n                :mod (c / city\n                        :name (n3 / name\n                                  :op1 \"Madrid\")))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))", "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Juventus\"))\n   :ARG1 (f / final\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Coppa\"\n                                   :op2 \"Italia\"))))", "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Juventus\"))\n   :ARG1 (f / final\n            :subevent (g / game\n                         :name (n3 / name\n                                   :op1 \"Coppa\"\n                                   :op2 \"Italia\")))\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))"], "smus": ["La Liga thrashed by 9-1 at the weekend.", "Cristiano Ronaldo has a league tally.", "Take Cristiano Ronaldo's league tally.", "Take Cristiano Ronaldo's league tally to 36.", "Cristiano Ronaldo's league tally would take him to 36 points this season.", "Cristiano Ronaldo scored five to take his league tally to 36 this season.", "Real travels", "Travel Wednesday night.", "Real will travel to Rayo Vallecano.", "Madrid derby travels Wednesday night.", "Real will travel to Rayo Vallecano on Wednesday night.", "Real will travel to Rayo Vallecano in the Madrid derby on Wednesday night.", "Juventus reached the final in the Coppa Italia.", "Juventus reached the final in the Coppa Italia game on Tuesday."]}, {"instance_id": "realsumm-96", "summary": "<t> Kevin Pietersen was sacked by England 14 months ago after Ashes defeat . </t> <t> Batsman scored 170 on his county cricket return for Surrey last week . </t> <t> Pietersen wants to make a sensational return to the England side this year . </t> <t> But Andrew Flintoff thinks time is running out for him to resurrect career . </t>", "summary_trees": ["# ::snt  Kevin Pietersen was sacked by England 14 months ago after Ashes defeat . \n(s / sack-01\n      :ARG0 (t / team\n            :name (n / name\n                  :op1 \"England\"))\n      :ARG1 (p / person\n            :name (n2 / name\n                  :op1 \"Kevin\"\n                  :op2 \"Pietersen\"))\n      :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                  :quant 14\n                  :unit (m / month)))\n      :time (a / after\n            :op1 (d / defeat-01\n                  :ARG0 t\n                  :ARG2 (g / game\n                        :name (n4 / name\n                              :op1 \"Ashes\")))))", "# ::snt  Batsman scored 170 on his county cricket return for Surrey last week . \n(s / score-01\n      :ARG0 (b / batsman)\n      :ARG1 170\n      :time (w / week\n            :mod (l / last))\n      :time (r / return-01\n            :ARG1 b\n            :ARG4 (c / county\n                  :name (n / name\n                        :op1 \"Surrey\"))\n            :mod (c2 / cricket)))", "# ::snt  Pietersen wants to make a sensational return to the England side this year . \n(w / want-01\n      :ARG0 (p / person\n            :name (n / name\n                  :op1 \"Pietersen\"))\n      :ARG1 (r / return-01\n            :ARG1 p\n            :ARG4 (s / side\n                  :mod (c / country\n                        :name (n2 / name\n                              :op1 \"England\")))\n            :mod (s2 / sensational)\n            :time (y / year\n                  :mod (t / this))))", "# ::snt  But Andrew Flintoff thinks time is running out for him to resurrect career . \n(c / contrast-01\n      :ARG2 (t / think-01\n            :ARG0 (p / person\n                  :name (n / name\n                        :op1 \"Andrew\"\n                        :op2 \"Flintoff\"))\n            :ARG1 (r / run-out-05\n                  :ARG1 (t2 / time)\n                  :ARG2 (r2 / resurrect-01\n                        :ARG0 p\n                        :ARG1 (c2 / career\n                              :poss p)))))"], "tree": ["(s / sack-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\")))", "(s / sack-01\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month))))", "(s / sack-01\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month)))\n   :time (a / after\n            :op1 (d / defeat-01)))", "(s / sack-01\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month))))", "(s / sack-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"England\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month)))\n   :time (a / after\n            :op1 (d / defeat-01\n                    :ARG0 t\n                    :ARG2 (g / game\n                             :name (n4 / name\n                                       :op1 \"Ashes\")))))", "(s / score-01\n   :ARG0 (b / batsman)\n   :ARG1 170)", "(s / score-01\n   :time (w / week\n            :mod (l / last)))", "(r / return-01\n   :ARG1 (b / batsman)\n   :ARG4 (c / county\n            :name (n / name\n                     :op1 \"Surrey\")))", "(s / score-01\n   :time (w / week\n            :mod (l / last))\n   :time (r / return-01))", "(s / score-01\n   :ARG0 (b / batsman)\n   :ARG1 170\n   :time (w / week\n            :mod (l / last)))", "(s / score-01\n   :ARG0 (b / batsman)\n   :ARG1 170\n   :time (w / week\n            :mod (l / last))\n   :time (r / return-01\n            :ARG1 b\n            :ARG4 (c / county\n                     :name (n / name\n                              :op1 \"Surrey\"))\n            :mod (c2 / cricket)))", "(r / return-01\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Pietersen\"))\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :mod (s2 / sensational)\n   :time (y / year\n            :mod (t / this)))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))))", "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\")))\n   :time (y / year\n            :mod (t / this)))", "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :ARG1 p\n            :ARG4 (s / side\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"England\")))\n            :mod (s2 / sensational)\n            :time (y / year\n                     :mod (t / this))))", "(r2 / resurrect-01\n    :ARG1 (c2 / career\n              :poss (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))))", "(r / run-out-05\n   :ARG1 (t2 / time)\n   :ARG2 (r2 / resurrect-01\n             :ARG0 (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))\n             :ARG1 (c2 / career\n                       :poss p)))", "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Flintoff\"))\n   :ARG1 (r / run-out-05\n            :ARG1 (t2 / time)\n            :ARG2 (r2 / resurrect-01\n                      :ARG0 p\n                      :ARG1 (c2 / career\n                                :poss p))))", "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Andrew\"\n                              :op2 \"Flintoff\"))\n            :ARG1 (r / run-out-05\n                     :ARG1 (t2 / time)\n                     :ARG2 (r2 / resurrect-01\n                               :ARG0 p\n                               :ARG1 (c2 / career\n                                         :poss p)))))"], "smus": ["Kevin Pietersen was sacked.", "Sacked 14 months ago.", "Sacked 14 months ago after defeat.", "Kevin Pietersen was sacked 14 months ago.", "England have sacked Kevin Pietersen in 14 months after they defeat the Ashes.", "The batsman scored 170 runs.", "Scored last week.", "Batsman returns to Surrey.", "Last week, scored on return.", "The batsman scored 170 last week.", "On his cricket return to Surrey last week, the batsman scored 170 runs.", "This year's return", "Pietersen's return this year", "A sensational return this year.", "Pietersen's return to the English side.", "Pietersen's return to the English side this year.", "Pietersen wants a sensational return to the English side this year.", "Resurrect Andrew Flintoff's career", "Time is running out for Andrew Flintoff to resurrect his career.", "Andrew Flintoff thinks time is running out to resurrect his career.", "But Andrew Flintoff thinks time is running out to resurrect his career."]}, {"instance_id": "realsumm-97", "summary": "<t> If Carl Froch does n't fight in 2015 I 'm not sure he 'll be back at all . </t> <t> A blockbuster with James DeGale is most likely after Julio Cesar Chavez Jnr defeat - but Anthony Dirrell has made contact . </t> <t> Scott Quigg - Carl Frampton summer fight is dead in the water . </t>", "summary_trees": ["# ::snt  If Carl Froch does n't fight in 2015 I 'm not sure he 'll be back at all . \n(h / have-condition-91\n      :ARG1 (s / sure-02\n            :polarity -\n            :ARG0 (ii / i)\n            :ARG1 (r / return-01\n                  :ARG1 (p / person\n                        :name (n / name\n                              :op1 \"Carl\"\n                              :op2 \"Froch\"))\n                  :mod (a / at-all)))\n      :ARG2 (f / fight-01\n            :polarity -\n            :ARG0 p\n            :time (d / date-entity\n                  :year 2015)))", "# ::snt  A blockbuster with James DeGale is most likely after Julio Cesar Chavez Jnr defeat - but Anthony Dirrell has made contact . \n(l / likely-01\n      :ARG1 (b / blockbuster\n            :mod (p / person\n                  :name (n / name\n                        :op1 \"James\"\n                        :op2 \"DeGale\")))\n      :time (a / after\n            :op1 (d / defeat-01\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Julio\"\n                              :op2 \"Cesar\"\n                              :op3 \"Chavez\"\n                              :op4 \"Jr\"))))\n      :concession (c / contact-01\n            :ARG0 (p3 / person\n                  :name (n3 / name\n                        :op1 \"Anthony\"\n                        :op2 \"Dirrell\")))\n      :ARG2-of (h / have-degree-91\n            :ARG1 b\n            :ARG3 (m / most)))", "# ::snt  Scott Quigg - Carl Frampton summer fight is dead in the water . \n(s / say-01\n      :ARG0 (ii / i)\n      :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                  :ARG0 (p / person\n                        :name (n / name\n                              :op1 \"Scott\"\n                              :op2 \"Quigg\"))\n                  :ARG1 (p2 / person\n                        :name (n2 / name\n                              :op1 \"Carl\"\n                              :op2 \"Frampton\"))\n                  :time (d2 / date-entity\n                        :season (s2 / summer)))\n            :location (w / water))\n      :ARG2 p)"], "tree": ["(s / sure-02\n   :polarity -\n   :ARG0 (ii / i))", "(s / sure-02\n   :polarity -\n   :ARG0 (ii / i)\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Carl\"\n                              :op2 \"Froch\"))\n            :mod (a / at-all)))", "(c / contact-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Dirrell\")))", "(l / likely-01\n   :time (a / after\n            :op1 (d / defeat-01))\n   :concession (c / contact-01))", "(d / defeat-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Julio\"\n                       :op2 \"Cesar\"\n                       :op3 \"Chavez\"\n                       :op4 \"Jr\")))", "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\"))))", "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :time (a / after\n            :op1 (d / defeat-01\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Julio\"\n                                        :op2 \"Cesar\"\n                                        :op3 \"Chavez\"\n                                        :op4 \"Jr\"))))\n   :concession (c / contact-01\n                  :ARG0 (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Anthony\"\n                                      :op2 \"Dirrell\")))\n   :ARG2 (h / have-degree-91\n            :ARG1 b\n            :ARG3 (m / most)))", "(f / fight-01\n   :time (d2 / date-entity\n             :season (s2 / summer)))", "(f / fight-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Scott\"\n                     :op2 \"Quigg\")))", "(f / fight-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carl\"\n                       :op2 \"Frampton\")))", "(f / fight-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Scott\"\n                     :op2 \"Quigg\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carl\"\n                       :op2 \"Frampton\")))", "(f / fight-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Scott\"\n                     :op2 \"Quigg\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carl\"\n                       :op2 \"Frampton\"))\n   :time (d2 / date-entity\n             :season (s2 / summer)))", "(d / die-01\n   :ARG1 (f / fight-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Scott\"\n                              :op2 \"Quigg\"))\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carl\"\n                                :op2 \"Frampton\"))\n            :time (d2 / date-entity\n                      :season (s2 / summer))))"], "smus": ["I'm not sure.", "I'm not sure Carl Froch will return at all.", "Anthony Dirrell is in contact.", "Despite contact, it is likely to happen after defeat.", "defeat Julio Cesar Chavez Jr.", "James DeGale's blockbuster is likely.", "Despite Anthony Dirrell's contact, James DeGale's most likely blockbuster after Julio Cesar Chavez Jr.'s defeat.", "The fights are in the summer.", "Scott Quigg is in a fight.", "The fight with Carl Frampton.", "Scott Quigg vs Carl Frampton:", "Scott Quigg and Carl Frampton had a fight in the summer.", "Scott Quigg's fight with Carl Frampton in the summer was dead."]}, {"instance_id": "realsumm-98", "summary": "<t> Clip shows mysterious black cloud hanging over the village of Shortandy . </t> <t> The perfect hoop shape sat in the air not moving for more than 15 minutes . </t> <t> Eerie video has been viewed tens of thousands of times on Youtube . </t> <t> While some viewers are suggesting the cloud was an alien spacecraft , experts think it could have been caused by nearby factories . </t>", "summary_trees": ["# ::snt  Clip shows mysterious black cloud hanging over the village of Shortandy . \n(s / show-01\n      :ARG0 (c / clip)\n      :ARG1 (c2 / cloud\n            :mod (m / mysterious)\n            :ARG1-of (b / black-04)\n            :ARG1-of (h / hang-01\n                  :ARG2 (o / over\n                        :op1 (v / village\n                              :name (n / name\n                                    :op1 \"Shortandy\"))))))", "# ::snt  The perfect hoop shape sat in the air not moving for more than 15 minutes . \n(s / sit-01\n      :ARG1 (s2 / shape\n            :mod (h / hoop)\n            :ARG1-of (p / perfect-02))\n      :ARG2 (a / air)\n      :manner (m / move-01\n            :polarity -\n            :ARG1 s2\n            :duration (m2 / more-than\n                  :op1 (t / temporal-quantity\n                        :quant 15\n                        :unit (m3 / minute)))))", "# ::snt  Eerie video has been viewed tens of thousands of times on Youtube . \n(v / view-01\n      :ARG1 (v2 / video\n            :mod (e / eerie))\n      :frequency (m / multiple\n            :op1 10000)\n      :medium (p / publication\n            :name (n / name\n                  :op1 \"YouTube\")))", "# ::snt  While some viewers are suggesting the cloud was an alien spacecraft , experts think it could have been caused by nearby factories . \n(c / contrast-01\n      :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                  :ARG0-of (v / view-01)\n                  :quant (s2 / some))\n            :ARG1 (s3 / spacecraft\n                  :mod (a / alien)\n                  :domain (c2 / cloud)))\n      :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                  :ARG1-of (e / expert-01))\n            :ARG1 (p3 / possible-01\n                  :ARG1 (c3 / cause-01\n                        :ARG0 (f / factory\n                              :location (n / nearby))\n                        :ARG1 c2))))"], "tree": ["(h / hang-01\n   :ARG2 (o / over\n            :op1 (v / village\n                    :name (n / name\n                             :op1 \"Shortandy\"))))", "(s / show-01\n   :ARG0 (c / clip)\n   :ARG1 (c2 / cloud\n             :mod (m / mysterious)\n             :ARG1 (b / black-04)\n             :ARG1 (h / hang-01\n                      :ARG2 (o / over\n                               :op1 (v / village\n                                       :name (n / name\n                                                :op1 \"Shortandy\"))))))", "(s / sit-01\n   :manner (m / move-01\n              :polarity -))", "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop)\n             :ARG1 (p / perfect-02))\n   :ARG2 (a / air))", "(m / move-01\n   :polarity -\n   :duration (m2 / more-than\n                 :op1 (t / temporal-quantity\n                         :quant 15\n                         :unit (m3 / minute))))", "(m / move-01\n   :polarity -\n   :ARG1 (s2 / shape)\n   :duration (m2 / more-than\n                 :op1 (t / temporal-quantity\n                         :quant 15\n                         :unit (m3 / minute))))", "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop)\n             :ARG1 (p / perfect-02))\n   :ARG2 (a / air)\n   :manner (m / move-01\n              :polarity -\n              :ARG1 s2\n              :duration (m2 / more-than\n                            :op1 (t / temporal-quantity\n                                    :quant 15\n                                    :unit (m3 / minute)))))", "(v / view-01\n   :ARG1 (v2 / video\n             :mod (e / eerie)))", "(v / view-01\n   :frequency (m / multiple\n                 :op1 10000)\n   :medium (p / publication\n              :name (n / name\n                       :op1 \"YouTube\")))", "(v / view-01\n   :ARG1 (v2 / video\n             :mod (e / eerie))\n   :frequency (m / multiple\n                 :op1 10000)\n   :medium (p / publication\n              :name (n / name\n                       :op1 \"YouTube\")))", "(p3 / possible-01\n    :ARG1 (c3 / cause-01\n              :ARG0 (f / factory\n                       :location (n / nearby))\n              :ARG1 (c2 / cloud)))", "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0 (v / view-01)\n            :quant (s2 / some))\n   :ARG1 (s3 / spacecraft\n             :mod (a / alien)\n             :domain (c2 / cloud)))", "(t / think-01\n   :ARG0 (p2 / person\n             :ARG1 (e / expert-01))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c3 / cause-01\n                       :ARG0 (f / factory\n                                :location (n / nearby))\n                       :ARG1 (c2 / cloud))))", "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0 (v / view-01)\n                     :quant (s2 / some))\n            :ARG1 (s3 / spacecraft\n                      :mod (a / alien)\n                      :domain (c2 / cloud)))\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1 (e / expert-01))\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n / nearby))\n                                :ARG1 c2))))"], "smus": ["Hanging over Shortandy village.", "The clip shows a mysterious black cloud hanging over Shortandy village.", "Sitting without moving.", "The perfect hoop shape sat in the air.", "Not moving for more than 15 minutes.", "The shape was not moving for more than 15 minutes.", "The perfect hoop shape sat in the air, not moving for more than 15 minutes.", "The eerie video was viewed.", "viewed thousands of times on YouTube.", "a href=\"http://www.youtube.com/watch?v=EYEY\">Eerie Video - Views - Thousands on YouTube/a>", "Perhaps nearby factories have caused the cloud.", "Some viewers are suggesting the cloud is an alien spacecraft.", "Experts think nearby factories may have caused the cloud.", "Some viewers are suggesting the cloud is an alien spacecraft while experts think nearby factories may have caused it."]}, {"instance_id": "realsumm-99", "summary": "<t> Incredible images show handcuffed members from the notorious Barrio 18 gang being marched onto buses . </t> <t> In total 1,177 were transferred to a different jail where they will mix with their arch rivals - Mara Salvatrucha . </t> <t> The gang members will now no longer be classified by gang affiliation , but by how dangerous they are . </t>", "summary_trees": ["# ::snt  Incredible images show handcuffed members from the notorious Barrio 18 gang being marched onto buses . \n(s / show-01\n      :ARG0 (ii / image\n            :ARG0-of (a / awe-01))\n      :ARG1 (m / march-01\n            :ARG1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang\n                              :name (n / name\n                                    :op1 \"Barrio\"\n                                    :op2 18)\n                              :ARG1-of (n2 / notorious-01))\n                        :ARG2 (m2 / member))\n                  :ARG1-of (h2 / handcuff-01))\n            :destination (b / bus)))", "# ::snt  In total 1,177 were transferred to a different jail where they will mix with their arch rivals - Mara Salvatrucha . \n(t / transfer-01\n      :ARG1 (p / person\n            :quant 1741\n            :ARG1-of (t2 / total-01))\n      :ARG2 (j / jail\n            :ARG1-of (d / differ-02)\n            :location-of (m / mix-01\n                  :ARG1 p\n                  :ARG2 (o / organization\n                        :name (n / name\n                              :op1 \"Mara\"\n                              :op2 \"Salvatrucha\")\n                        :ARG0-of (r / rival-01\n                              :ARG1 p\n                              :mod (a / arch))))))", "# ::snt  The gang members will now no longer be classified by gang affiliation , but by how dangerous they are . \n(c / contrast-01\n      :ARG1 (c2 / classify-01\n            :ARG1 (p / person\n                  :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang)\n                        :ARG2 (m / member)))\n            :ARG2 (a / affiliate-01\n                  :ARG1 p\n                  :ARG2 (g2 / gang)))\n      :ARG2 (c3 / classify-01\n            :ARG1 p\n            :ARG2 (e / endanger-01\n                  :ARG0 p))\n      :time (n / now)\n      :time (n2 / no-longer))"], "tree": ["(h / have-org-role-91\n   :ARG1 (g / gang\n            :name (n / name\n                     :op1 \"Barrio\"\n                     :op2 18)\n            :ARG1 (n2 / notorious-01))\n   :ARG2 (m2 / member))", "(m / march-01\n   :ARG1 (p / person\n            :ARG0 (h / have-org-role-91\n                     :ARG1 (g / gang\n                              :name (n / name\n                                       :op1 \"Barrio\"\n                                       :op2 18)\n                              :ARG1 (n2 / notorious-01))\n                     :ARG2 (m2 / member))\n            :ARG1 (h2 / handcuff-01))\n   :destination (b / bus))", "(s / show-01\n   :ARG0 (ii / image\n             :ARG0 (a / awe-01))\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG0 (h / have-org-role-91\n                              :ARG1 (g / gang\n                                       :name (n / name\n                                                :op1 \"Barrio\"\n                                                :op2 18)\n                                       :ARG1 (n2 / notorious-01))\n                              :ARG2 (m2 / member))\n                     :ARG1 (h2 / handcuff-01))\n            :destination (b / bus)))", "(r / rival-01\n   :ARG1 (p / person)\n   :mod (a / arch))", "(m / mix-01\n   :ARG1 (p / person)\n   :ARG2 (o / organization\n            :name (n / name\n                     :op1 \"Mara\"\n                     :op2 \"Salvatrucha\")\n            :ARG0 (r / rival-01\n                     :ARG1 p\n                     :mod (a / arch))))", "(t / transfer-01\n   :ARG2 (j / jail\n            :ARG1 (d / differ-02)\n            :location (m / mix-01\n                         :ARG1 (p / person)\n                         :ARG2 (o / organization\n                                  :name (n / name\n                                           :op1 \"Mara\"\n                                           :op2 \"Salvatrucha\")\n                                  :ARG0 (r / rival-01\n                                           :ARG1 p\n                                           :mod (a / arch))))))", "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741\n            :ARG1 (t2 / total-01))\n   :ARG2 (j / jail\n            :ARG1 (d / differ-02)\n            :location (m / mix-01\n                         :ARG1 p\n                         :ARG2 (o / organization\n                                  :name (n / name\n                                           :op1 \"Mara\"\n                                           :op2 \"Salvatrucha\")\n                                  :ARG0 (r / rival-01\n                                           :ARG1 p\n                                           :mod (a / arch))))))", "(a / affiliate-01\n   :ARG1 (p / person)\n   :ARG2 (g2 / gang))", "(c3 / classify-01\n    :ARG1 (p / person)\n    :ARG2 (e / endanger-01\n             :ARG0 p))", "(h / have-org-role-91\n   :ARG1 (g / gang)\n   :ARG2 (m / member))", "(c / contrast-01\n   :time (n / now)\n   :time (n2 / no-longer))", "(c2 / classify-01\n    :ARG1 (p / person\n             :ARG0 (h / have-org-role-91\n                      :ARG1 (g / gang)\n                      :ARG2 (m / member)))\n    :ARG2 (a / affiliate-01\n             :ARG1 p\n             :ARG2 (g2 / gang)))", "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0 (h / have-org-role-91\n                               :ARG1 (g / gang)\n                               :ARG2 (m / member)))\n             :ARG2 (a / affiliate-01\n                      :ARG1 p\n                      :ARG2 (g2 / gang)))\n   :ARG2 (c3 / classify-01\n             :ARG1 p\n             :ARG2 (e / endanger-01\n                      :ARG0 p))\n   :time (n / now)\n   :time (n2 / no-longer))"], "smus": ["The notorious gang, Barrio 18, is made up of members.", "The members of the notorious Barrio 18 gang were marched to buses in handcuffs.", "Amazing images show members of the notorious Barrio 18 gang marching in handcuffs to buses.", "Arch rivalries between people.", "Mix people with their arch rivals, Mara Salvatrucha.", "Transferred to a different jail where people mix with their arch rivals, the Mara Salvatrucha.", "Total: 1741 transferred to a different jail where they would mix with their arch rivals the Mara Salvatrucha.", "People are affiliates of a gang.", "People are classified as \"dangerous\".", "The gang is made up of members.", "But no longer.", "Gang members are classified as affiliated with the gang.", "Now gang members are no longer classified as gang affiliates but as dangerous."]}]