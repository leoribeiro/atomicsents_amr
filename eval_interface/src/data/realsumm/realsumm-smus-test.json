[
  {
    "instance_id": "realsumm-0",
    "summary": "<t> Anuradha Koirala and 425 young women and girls have been sleeping outdoors because of aftershocks . </t> <t> Pushpa Basnet and 45 children she cares for were forced to evacuate their residence . </t> <t> Seven other CNN Heroes and their organizations now assisting in relief efforts . </t>",
    "tree": [
      "(c / cause-01\n   :ARG0 (a / aftershock)\n   :ARG1 (s / sleep-01\n            :ARG0 (a2 / and\n                      :op1 (p / person\n                              :name (n / name\n                                       :op1 \"Anuradha\"\n                                       :op2 \"Koirala\"))\n                      :op2 (w / woman)\n                      :op3 (g / girl)\n                      :quant 425\n                      :mod (y / young))\n            :location (o / outdoors)))",
      "(s / sleep-01\n   :ARG0 (a2 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n             :op2 (w / woman)\n             :op3 (g / girl)\n             :quant 425\n             :mod (y / young)))",
      "(s / sleep-01\n   :ARG0 (a2 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Anuradha\"\n                              :op2 \"Koirala\"))\n             :op2 (w / woman)\n             :op3 (g / girl)\n             :quant 425\n             :mod (y / young))\n   :location (o / outdoors))",
      "(a2 / and\n    :op1 (p / person\n            :name (n / name\n                     :op1 \"Anuradha\"\n                     :op2 \"Koirala\")))",
      "(a2 / and\n    :op2 (w / woman))",
      "(a2 / and\n    :op3 (g / girl))",
      "(a2 / and\n    :quant 425)",
      "(a2 / and\n    :mod (y / young))",
      "(p / person\n   :name (n / name\n            :op1 \"Anuradha\"\n            :op2 \"Koirala\"))",
      "(n / name\n   :op1 \"Anuradha\")",
      "(n / name\n   :op2 \"Koirala\")",
      "(f / force-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Pushpa\"\n                             :op2 \"Basnet\"))\n            :op2 (c / child\n                    :quant 45\n                    :ARG1-of (c2 / care-03\n                                 :ARG0 p)))\n   :ARG2 (e / evacuate-01\n            :ARG1 (t / thing\n                     :ARG1-of (r / reside-01\n                                 :ARG0 a))\n            :ARG2 a))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Pushpa\"\n                    :op2 \"Basnet\")))",
      "(a / and\n   :op2 (c / child\n           :quant 45\n           :ARG1-of (c2 / care-03\n                        :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Pushpa\"\n            :op2 \"Basnet\"))",
      "(n / name\n   :op1 \"Pushpa\")",
      "(n / name\n   :op2 \"Basnet\")",
      "(c / child\n   :ARG1-of (c2 / care-03\n                :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\"))))",
      "(c / child\n   :ARG1-of (c2 / care-03\n                :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))\n   :quant 45)",
      "(c2 / care-03\n    :ARG0 (p / person :name (n / name :op1 \"Pushpa\" :op2 \"Basnet\")))",
      "(e / evacuate-01\n   :ARG1 (t / thing\n            :ARG1-of (r / reside-01\n                        :ARG0 (a / and)))\n   :ARG2 a)",
      "(t / thing\n   :ARG1-of (r / reside-01\n               :ARG0 (a / and)))",
      "(r / reside-01\n   :ARG0 (a / and))",
      "(a / assist-01\n   :ARG0 (a2 / and\n             :op1 (h / hero\n                     :quant 7\n                     :mod (p / publication\n                             :name (n / name\n                                      :op1 \"CNN\"))\n                     :mod (o / other))\n             :op2 (o2 / organization\n                      :poss h))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01)))",
      "(a / assist-01\n   :ARG0 (a2 / and\n             :op1 (h / hero\n                     :quant 7\n                     :mod (p / publication\n                             :name (n / name\n                                      :op1 \"CNN\"))\n                     :mod (o / other))\n             :op2 (o2 / organization\n                      :poss h))\n   :ARG2 (e / effort-01\n            :ARG1 (r / relieve-01))\n   :time (n2 / now))",
      "(a2 / and\n    :op1 (h / hero\n            :quant 7\n            :mod (p / publication\n                    :name (n / name\n                             :op1 \"CNN\"))\n            :mod (o / other)))",
      "(a2 / and\n    :op2 (o2 / organization\n             :poss (h / hero)))",
      "(h / hero\n   :quant 7)",
      "(h / hero\n   :mod (p / publication\n           :name (n / name\n                    :op1 \"CNN\")))",
      "(h / hero\n   :mod (o / other))",
      "(p / publication\n   :name (n / name\n            :op1 \"CNN\"))",
      "(n / name\n   :op1 \"CNN\")",
      "(o2 / organization\n    :poss (h / hero))",
      "(e / effort-01\n   :ARG1 (r / relieve-01))"
    ],
    "smus": [
      "Anuradha Koirala, 425 young women and girls are sleeping outdoors because of the aftershocks.",
      "Anuradha Koirala, 425 young women and girls are sleeping.",
      "Anuradha Koirala, 425 young women and girls are sleeping outdoors.",
      "and Anuradha Koirala.",
      "And women.",
      "and girls.",
      "425 and...",
      "Young and.",
      "Anuradha Koirala",
      "Anuradha",
      "-Koirala",
      "Pushpa Basnet and 45 children she cares for were forced to evacuate their residence.",
      "and Pushpa Basnet",
      "and 45 children Pusspa Basnet cares for.",
      "Pushpa Basnet",
      "Pushpa.",
      "Basenet",
      "The children Pusspa Basnet cares for.",
      "45 children Pusspa Basnet cares for",
      "Pusspa Basnet cares.",
      "Evacuate their residence.",
      "The residence of the two.",
      "Residence of the two.",
      "7 other CNN heroes and their organizations are assisting in relief efforts.",
      "Seven other CNN heroes and their organizations are now assisting in relief efforts.",
      "And there are seven other CNN heroes.",
      "and the organizations of heroes.",
      "7 heroes.",
      "CNN heroes.",
      "Other heroes.",
      "CNN",
      "CNN",
      "The organizations of heroes.",
      "relief efforts"
    ]
  },
  {
    "instance_id": "realsumm-1",
    "summary": "<t> Students from the University of Surrey discovered thousands of colonies . </t> <t> They submerged coins and notes in agar to accelerate growth pf bacteria . </t> <t> Most were harmless on the money , but one caused boils and spots . </t> <t> Previous studies have revealed MRSA bacteria on notes and coins . </t>",
    "tree": [
      "(d / discover-01\n   :ARG0 (p / person\n            :ARG0-of (s / study-01)\n            :source (u / university\n                       :name (n / name\n                                :op1 \"University\"\n                                :op2 \"of\"\n                                :op3 \"Surrey\")))\n   :ARG1 (c / colony\n            :quant (m / multiple\n                      :op1 1000)))",
      "(p / person\n   :ARG0-of (s / study-01))",
      "(p / person\n   :ARG0-of (s / study-01)\n   :source (u / university\n              :name (n / name\n                       :op1 \"University\"\n                       :op2 \"of\"\n                       :op3 \"Surrey\")))",
      "(u / university\n   :name (n / name\n            :op1 \"University\"\n            :op2 \"of\"\n            :op3 \"Surrey\"))",
      "(n / name\n   :op1 \"University\")",
      "(n / name\n   :op2 \"of\")",
      "(n / name\n   :op3 \"Surrey\")",
      "(c / colony\n   :quant (m / multiple\n             :op1 1000))",
      "(m / multiple\n   :op1 1000)",
      "(s / submerge-01\n   :ARG0 (t / they)\n   :ARG1 (a / and\n            :op1 (c / coin)\n            :op2 (n / note))\n   :ARG2 (a2 / agar))",
      "(s / submerge-01\n   :ARG0 (t / they)\n   :ARG1 (a / and\n            :op1 (c / coin)\n            :op2 (n / note))\n   :ARG2 (a2 / agar))",
      "(a / and\n   :op1 (c / coin))",
      "(a / and\n   :op2 (n / note))",
      "(a3 / accelerate-01\n    :ARG0 (t / they)\n    :ARG1 (g / grow-03\n             :ARG1 (b / bacterium\n                      :name (n2 / name\n                                :op1 \"Pf\"))))",
      "(g / grow-03\n   :ARG1 (b / bacterium\n            :name (n2 / name\n                      :op1 \"Pf\")))",
      "(b / bacterium\n   :name (n2 / name\n             :op1 \"Pf\"))",
      "(n2 / name\n    :op1 \"Pf\")",
      "(c / contrast-01\n   :ARG1 (h / harmful-02\n            :polarity -\n            :ARG0 (m / most)\n            :mod (o / on-the-money))\n   :ARG2 (c2 / cause-01\n             :ARG0 (o2 / one)\n             :ARG1 (a / and\n                      :op1 (b / boil-01)\n                      :op2 (s / spot))))",
      "(h / harmful-02\n   :ARG0 (m / most))",
      "(h / harmful-02\n   :ARG0 (m / most)\n   :polarity -)",
      "(h / harmful-02\n   :ARG0 (m / most)\n   :mod (o / on-the-money))",
      "(c2 / cause-01\n    :ARG0 (o2 / one)\n    :ARG1 (a / and\n             :op1 (b / boil-01)\n             :op2 (s / spot)))",
      "(a / and\n   :op1 (b / boil-01))",
      "(a / and\n   :op2 (s / spot))",
      "(r / reveal-01\n   :ARG0 (s / study-01\n            :time (p / previous))\n   :ARG1 (b / bacterium\n            :mod (d / disease\n                    :name (n / name\n                             :op1 \"MRSA\"))\n            :location (a / and\n                         :op1 (n2 / note)\n                         :op2 (c / coin))))",
      "(s / study-01\n   :time (p / previous))",
      "(b / bacterium\n   :mod (d / disease\n           :name (n / name\n                    :op1 \"MRSA\")))",
      "(b / bacterium\n   :location (a / and\n                :op1 (n2 / note)\n                :op2 (c / coin)))",
      "(d / disease\n   :name (n / name\n            :op1 \"MRSA\"))",
      "(n / name\n   :op1 \"MRSA\")",
      "(a / and\n   :op1 (n2 / note))",
      "(a / and\n   :op2 (c / coin))"
    ],
    "smus": [
      "Students from the University of Surrey discovered thousands of colonies.",
      "Students",
      "Students from the University of Surrey",
      "University of Surrey",
      "University",
      "of.",
      "Surrey",
      "There were thousands of colonies.",
      "Thousands.",
      "They submerged the coins and notes in the agar.",
      "They submerged the coins and notes in the agar.",
      "and coins.",
      "and notes",
      "They will accelerate the growth of Pf bacteria.",
      "Pf growth",
      "Pf bacteria",
      "Pf",
      "Most aren't harmful on the mone but one caused boils and spots.",
      "Most harmful.",
      "Most aren't harmful.",
      "Most are harmful on the mone.",
      "One caused boils and spots.",
      "and boils.",
      "And spots.",
      "Previous studies have revealed MRSA bacteria on notes and coins.",
      "previous studies",
      "MRSA bacteria",
      "Bacteria on notes and coins.",
      "MRSA",
      "MRSA",
      "and notes",
      "and coins."
    ]
  },
  {
    "instance_id": "realsumm-2",
    "summary": "<t> Danilo this week agreed to join Real Madrid in the summer for \u00a3 23million . </t> <t> Transfer will take total raised from player sales to \u00a3 440 m since 2004 . </t> <t> James Rodriguez , Pepe and Radamel Falcao among those sold by Porto . </t> <t> CLICK HERE for all the latest Real Madrid news . </t>",
    "tree": [
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))\n            :time (d / date-entity\n                     :season (s / summer))\n            :prep-for (m / monetary-quantity\n                         :quant 23000000\n                         :unit (p2 / pound))))",
      "(a / agree-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danilo\"))\n   :ARG1 (j / join-04\n            :ARG0 p\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Real\"\n                               :op2 \"Madrid\"))\n            :time (d / date-entity\n                     :season (s / summer))\n            :prep-for (m / monetary-quantity\n                         :quant 23000000\n                         :unit (p2 / pound)))\n   :time (w / week\n            :mod (t2 / this)))",
      "(p / person\n   :name (n / name\n            :op1 \"Danilo\"))",
      "(n / name\n   :op1 \"Danilo\")",
      "(n / name\n   :op1 \"Real\")",
      "(n / name\n   :op2 \"Madrid\")",
      "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\")))",
      "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :time (d / date-entity\n            :season (s / summer)))",
      "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Danilo\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :prep-for (m / monetary-quantity\n                :quant 23000000\n                :unit (p2 / pound)))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Real\"\n             :op2 \"Madrid\"))",
      "(d / date-entity\n   :season (s / summer))",
      "(m / monetary-quantity\n   :quant 23000000)",
      "(m / monetary-quantity\n   :unit (p2 / pound))",
      "(w / week\n   :mod (t2 / this))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1-of (t3 / total-01)\n            :ARG1-of (r / raise-01\n                        :ARG3 (s / sell-01\n                                 :ARG1 (p / person\n                                          :ARG0-of (p2 / play-01)))))\n   :ARG3 (m2 / monetary-quantity\n             :quant 440000000\n             :unit (p3 / pound)))",
      "(t / take-01\n   :ARG0 (t2 / transfer-01)\n   :ARG1 (m / monetary-quantity\n            :ARG1-of (t3 / total-01)\n            :ARG1-of (r / raise-01\n                        :ARG3 (s / sell-01\n                                 :ARG1 (p / person\n                                          :ARG0-of (p2 / play-01)))))\n   :ARG3 (m2 / monetary-quantity\n             :quant 440000000\n             :unit (p3 / pound))\n   :time (s2 / since\n             :op1 (d / date-entity\n                     :year 2004)))",
      "(m / monetary-quantity\n   :ARG1-of (t3 / total-01)\n   :ARG1-of (r / raise-01\n               :ARG3 (s / sell-01\n                        :ARG1 (p / person\n                                 :ARG0-of (p2 / play-01)))))",
      "(m / monetary-quantity\n   :ARG1-of (t3 / total-01)\n   :ARG1-of (r / raise-01\n               :ARG3 (s / sell-01\n                        :ARG1 (p / person\n                                 :ARG0-of (p2 / play-01))))\n   :quant 440000000)",
      "(m / monetary-quantity\n   :ARG1-of (t3 / total-01)\n   :ARG1-of (r / raise-01\n               :ARG3 (s / sell-01\n                        :ARG1 (p / person\n                                 :ARG0-of (p2 / play-01))))\n   :unit (p3 / pound))",
      "(r / raise-01\n   :ARG3 (s / sell-01\n            :ARG1 (p / person\n                     :ARG0-of (p2 / play-01))))",
      "(s / sell-01\n   :ARG1 (p / person\n            :ARG0-of (p2 / play-01)))",
      "(p / person\n   :ARG0-of (p2 / play-01))",
      "(s2 / since\n    :op1 (d / date-entity\n            :year 2004))",
      "(d / date-entity\n   :year 2004)",
      "(ii / include-91\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"James\"\n                              :op2 \"Roduez\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Pepe\"))\n             :op3 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Radamel\"\n                                :op2 \"Falcao\")))\n    :ARG2 (t / that\n             :ARG1-of (s / sell-01\n                         :ARG0 (t2 / team\n                                   :name (n4 / name\n                                             :op1 \"Porto\")))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"James\"\n                    :op2 \"Roduez\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Pepe\")))",
      "(a / and\n   :op3 (p3 / person\n            :name (n3 / name\n                      :op1 \"Radamel\"\n                      :op2 \"Falcao\")))",
      "(p / person\n   :name (n / name\n            :op1 \"James\"\n            :op2 \"Roduez\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Pepe\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Radamel\"\n             :op2 \"Falcao\"))",
      "(n / name\n   :op1 \"James\")",
      "(n / name\n   :op2 \"Roduez\")",
      "(n / name\n   :op1 \"Pepe\")",
      "(n / name\n   :op1 \"Radamel\")",
      "(n / name\n   :op2 \"Falcao\")",
      "(n / name\n   :op1 \"Porto\")",
      "(t / that\n   :ARG1-of (s / sell-01\n               :ARG0 (t2 / team\n                         :name (n4 / name\n                                   :op1 \"Porto\"))))",
      "(s / sell-01\n   :ARG0 (t2 / team\n             :name (n4 / name\n                       :op1 \"Porto\")))",
      "(t2 / team\n    :name (n4 / name\n              :op1 \"Porto\"))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :mode imperative)",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :location (h / here))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(n / news\n   :mod (a / all))",
      "(n / news\n   :topic (t / team\n             :name (n2 / name\n                       :op1 \"Real\"\n                       :op2 \"Madrid\")))",
      "(n / news\n   :mod (l / last))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Real\"\n             :op2 \"Madrid\"))",
      "(n2 / name\n    :op1 \"Real\")",
      "(n2 / name\n    :op2 \"Madrid\")"
    ],
    "smus": [
      "Danilo agreed to join Real Madrid for PS23million this summer.",
      "Danilo agreed this week to join Real Madrid for PS23million this summer.",
      "Danilo",
      "Danilo",
      "Real.",
      "Madrid",
      "Danilo will join Real Madrid.",
      "Danilo will join Real Madrid in the summer.",
      "Danilo will join Real Madrid for PS23million.",
      "Real Madrid",
      "Summer.",
      "23 million",
      "PS",
      "This week.",
      "The transfer would take the total raised from the sale of the player to PS44million.",
      "The transfer would take the total raised from the sale of the player to PS44million since 2004.",
      "The total was raised through the sale of the player.",
      "The total raised from the sale of the player is 4.4 billion.",
      "The total amount raised from the sale of the player is PS2.",
      "The sale of the player was raised.",
      "The player was sold.",
      "Player.",
      "since 2004.",
      "2004-00-00",
      "Those sold by Porto included James Rodriguez, Pepe and Radamel Falcao.",
      "And James Rodriguez.",
      "And Pepe.",
      "And Radamel Falcao.",
      "James Rodriguez",
      "Pepe",
      "Radamel Falcao",
      "James",
      "Rodriguez",
      "Pepe",
      "Radamel",
      "Falcao.",
      "Porto",
      "That was sold by Porto.",
      "Porto have sold.",
      "Porto",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "All news.",
      "Real Madrid news",
      "Latest news.",
      "Real Madrid",
      "Real.",
      "Madrid"
    ]
  },
  {
    "instance_id": "realsumm-3",
    "summary": "<t> Dominatrix claims she shared a ' hot , deep kiss ' with Prince Harry in Vegas . </t> <t> Carrie Reichert said she felt overdressed after seeing his ' cute naked a * * ' The 43-year - old made the claim in an excerpt from her upcoming book . </t> <t> Kensington Palace has previously denied she was invited to the hotel suite . </t>",
    "tree": [
      "(c / claim-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dominatrix\"))\n   :ARG1 (s / share-01\n            :ARG0 p\n            :ARG1 (k / kiss-01\n                     :ARG0 p\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Prince\"\n                                         :op2 \"Harry\"))\n                     :ARG1-of (h / hot-05)\n                     :ARG1-of (d / deep-03))\n            :ARG2 p2\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"Vegas\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Dominatrix\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Prince\"\n             :op2 \"Harry\"))",
      "(n / name\n   :op1 \"Dominatrix\")",
      "(n / name\n   :op1 \"Prince\")",
      "(n / name\n   :op2 \"Harry\")",
      "(n / name\n   :op1 \"Vegas\")",
      "(s / share-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (k / kiss-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Prince\"\n                                :op2 \"Harry\"))\n            :ARG1-of (h / hot-05)\n            :ARG1-of (d / deep-03))\n   :ARG2 p2)",
      "(s / share-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (k / kiss-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Prince\"\n                                :op2 \"Harry\"))\n            :ARG1-of (h / hot-05)\n            :ARG1-of (d / deep-03))\n   :ARG2 p2\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Vegas\")))",
      "(k / kiss-01\n   :ARG0 (p / person :name (n / name :op1 \"Dominatrix\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Prince\"\n                       :op2 \"Harry\"))\n   :ARG1-of (h / hot-05)\n   :ARG1-of (d / deep-03))",
      "(c2 / city\n    :name (n3 / name\n              :op1 \"Vegas\"))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"\n                     :op2 \"Reichert\")\n            :age (t / temporal-quantity\n                    :quant 43\n                    :unit (y / year)))\n   :ARG1 (f / feel-01\n            :ARG0 p\n            :ARG1 (o / overdress-01\n                     :ARG1 p)\n            :time (a / after\n                     :op1 (s2 / see-01\n                              :ARG0 p\n                              :ARG1 (n2 / naked\n                                        :domain (h / he)\n                                        :mod (c / cute)))))\n   :ARG1-of (c2 / claim-01\n                :ARG0 p\n                :medium (e / excerpt-01\n                           :ARG2 (b / book\n                                    :poss p\n                                    :ARG1-of (c3 / come-up-13)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Carrie\"\n            :op2 \"Reichert\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 43\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Carrie\")",
      "(n / name\n   :op2 \"Reichert\")",
      "(t / temporal-quantity\n   :quant 43)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(f / feel-01\n   :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n   :ARG1 (o / overdress-01\n            :ARG1 p))",
      "(f / feel-01\n   :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n   :ARG1 (o / overdress-01\n            :ARG1 p)\n   :time (a / after\n            :op1 (s2 / see-01\n                     :ARG0 p\n                     :ARG1 (n2 / naked\n                               :domain (h / he)\n                               :mod (c / cute)))))",
      "(o / overdress-01\n   :ARG1 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\"))))",
      "(a / after\n   :op1 (s2 / see-01\n            :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n            :ARG1 (n2 / naked\n                      :domain (h / he)\n                      :mod (c / cute))))",
      "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n    :ARG1 (n2 / naked\n              :domain (h / he)\n              :mod (c / cute)))",
      "(n2 / naked\n    :domain (h / he))",
      "(n2 / naked\n    :mod (c / cute))",
      "(c2 / claim-01\n    :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\"))))",
      "(c2 / claim-01\n    :ARG0 (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n    :medium (e / excerpt-01\n               :ARG2 (b / book\n                        :poss p\n                        :ARG1-of (c3 / come-up-13))))",
      "(e / excerpt-01\n   :ARG2 (b / book\n            :poss (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\")))\n            :ARG1-of (c3 / come-up-13)))",
      "(b / book\n   :ARG1-of (c3 / come-up-13))",
      "(b / book\n   :ARG1-of (c3 / come-up-13)\n   :poss (p / person :name (n / name :op1 \"Carrie\" :op2 \"Reichert\"))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (s / she)\n             :ARG2 (s2 / suite\n                       :location (h / hotel))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Kensington\"\n                     :op2 \"Palace\"))\n   :ARG1 (ii / invite-01\n             :ARG1 (s / she)\n             :ARG2 (s2 / suite\n                       :location (h / hotel)))\n   :time (p / previous))",
      "(g / government-organization\n   :name (n / name\n            :op1 \"Kensington\"\n            :op2 \"Palace\"))",
      "(n / name\n   :op1 \"Kensington\")",
      "(n / name\n   :op2 \"Palace\")",
      "(ii / invite-01\n    :ARG1 (s / she)\n    :ARG2 (s2 / suite\n              :location (h / hotel)))",
      "(s2 / suite\n    :location (h / hotel))"
    ],
    "smus": [
      "Dominatrix claims she shared a hot and deep kiss with Prince Harry in Vegas.",
      "Dominatrix",
      "Prince Harry",
      "Dominatrix",
      "Prince.",
      "Harry",
      "Vegetables.",
      "Dominatrix shared a hot, deep kiss with Prince Harry.",
      "Dominatrix shared a hot, deep kiss with Prince Harry in Vegas.",
      "Dominatrix gave Prince Harry a hot, deep kiss.",
      "Vegas",
      "In an excerpt from her book that came up, 43-year-old Carrie Reichert said she felt overdressed after seeing him as cutely naked.",
      "Carrie Reichert",
      "43 year old",
      "Carrie",
      "Reichert",
      "43",
      "Year.",
      "Carrie Reichert felt overdressed.",
      "After seeing him as cutely naked, Carol Reichert felt overdressed.",
      "Carrie Reichert was overdressed.",
      "After seeing Carrie Reichert he was cutely naked.",
      "Carrie Reichert is seeing how cute he is naked.",
      "He's naked.",
      "Cute naked.",
      "Carrie Reichert's claim:",
      "In an excerpt from her book that came up, Carol Reichert made the claim:",
      "An excerpt from Carrie Reichert's book came up.",
      "The book that came up was:",
      "The book that came up was Carrie Reichert's.",
      "The Kensington Palace has denied that she was invited to a hotel suite.",
      "The Kensington Palace had previously denied that she had been invited to a hotel suite.",
      "The Kensington Palace.",
      "Kensington",
      "Palace.",
      "She was invited to a hotel suite.",
      "Suite in hotel"
    ]
  },
  {
    "instance_id": "realsumm-4",
    "summary": "<t> Eva Chapin , 34 , from West Linn , Oregon , has been accused of harassment . </t> <t> Referred to her neighbors as ' n * * * * * ' but insists she is not racist . </t> <t> One note said : ' There were no [ expletive ] in W.L until you came ' . </t> <t> Victim has said her family may be forced to move as they do n't feel safe . </t>",
    "tree": [
      "(a / accuse-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Eva\"\n                     :op2 \"Chapin\")\n            :age (t / temporal-quantity\n                    :quant 34\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"West\"\n                                 :op2 \"Linn\")\n                       :location (s / state\n                                    :name (n3 / name\n                                              :op1 \"Oregon\"))))\n   :ARG2 (h / harass-01\n            :ARG0 p))",
      "(p / person\n   :name (n / name\n            :op1 \"Eva\"\n            :op2 \"Chapin\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 34\n           :unit (y / year)))",
      "(p / person\n   :source (c / city\n              :name (n2 / name\n                        :op1 \"West\"\n                        :op2 \"Linn\")\n              :location (s / state\n                           :name (n3 / name\n                                     :op1 \"Oregon\"))))",
      "(n / name\n   :op1 \"Eva\")",
      "(n / name\n   :op2 \"Chapin\")",
      "(n / name\n   :op1 \"West\")",
      "(n / name\n   :op2 \"Linn\")",
      "(n / name\n   :op1 \"Oregon\")",
      "(t / temporal-quantity\n   :quant 34)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(c / city\n   :name (n2 / name\n             :op1 \"West\"\n             :op2 \"Linn\"))",
      "(c / city\n   :location (s / state\n                :name (n3 / name\n                          :op1 \"Oregon\")))",
      "(s / state\n   :name (n3 / name\n             :op1 \"Oregon\"))",
      "(h / harass-01\n   :ARG0 (p / person :name (n / name :op1 \"Eva\" :op2 \"Chapin\"))))",
      "(c / contrast-01\n   :ARG1 (r / refer-01\n            :ARG1 (p / person\n                     :ARG1-of (n / neighbor-01\n                                 :ARG2 (s / she)))\n            :ARG2 (n2 / nigger))\n   :ARG2 (ii / insist-01\n             :ARG0 s\n             :ARG1 (r2 / racist\n                       :polarity -\n                       :domain s)))",
      "(r / refer-01\n   :ARG1 (p / person\n            :ARG1-of (n / neighbor-01\n                        :ARG2 (s / she)))\n   :ARG2 (n2 / nigger))",
      "(p / person\n   :ARG1-of (n / neighbor-01\n               :ARG2 (s / she)))",
      "(n / neighbor-01\n   :ARG2 (s / she))",
      "(ii / insist-01\n    :ARG0 (s / she)\n    :ARG1 (r2 / racist\n              :polarity -\n              :domain s))",
      "(r2 / racist\n    :polarity -)",
      "(r2 / racist\n    :domain (s / she))",
      "(s / say-01\n   :ARG0 (n / note\n            :quant 1)\n   :ARG1 (b / be-located-at-91\n            :polarity -\n            :ARG1 (e / expletive)\n            :ARG2 (c / city\n                     :name (n2 / name\n                               :op1 \"W.L\"))\n            :time (u / until\n                     :op1 (c2 / come-01\n                              :ARG1 (y / you)))))",
      "(n / note\n   :quant 1)",
      "(b / be-located-at-91\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"W.L\")))",
      "(b / be-located-at-91\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"W.L\"))\n   :polarity -)",
      "(b / be-located-at-91\n   :ARG1 (e / expletive)\n   :ARG2 (c / city\n            :name (n2 / name\n                      :op1 \"W.L\"))\n   :time (u / until\n            :op1 (c2 / come-01\n                     :ARG1 (y / you))))",
      "(c / city\n   :name (n2 / name\n             :op1 \"W.L\"))",
      "(n2 / name\n    :op1 \"W.L\")",
      "(u / until\n   :op1 (c2 / come-01\n            :ARG1 (y / you)))",
      "(c2 / come-01\n    :ARG1 (y / you))",
      "(s / say-01\n   :ARG0 (v / victim)\n   :ARG1 (p / possible-01\n            :ARG1 (f / force-01\n                     :ARG1 (f2 / family\n                               :poss v)\n                     :ARG2 (m / move-01\n                              :ARG1 f2)\n                     :ARG1-of (c / cause-01\n                                 :ARG0 (f3 / feel-01\n                                           :polarity -\n                                           :ARG0 f2\n                                           :ARG1 (s2 / safe-01\n                                                     :ARG1 f2))))))",
      "(p / possible-01\n   :ARG1 (f / force-01\n            :ARG1 (f2 / family\n                      :poss (v / victim))\n            :ARG2 (m / move-01\n                     :ARG1 f2)\n            :ARG1-of (c / cause-01\n                        :ARG0 (f3 / feel-01\n                                  :polarity -\n                                  :ARG0 f2\n                                  :ARG1 (s2 / safe-01\n                                            :ARG1 f2)))))",
      "(f / force-01\n   :ARG1 (f2 / family\n             :poss (v / victim))\n   :ARG2 (m / move-01\n            :ARG1 f2)\n   :ARG1-of (c / cause-01\n               :ARG0 (f3 / feel-01\n                         :polarity -\n                         :ARG0 f2\n                         :ARG1 (s2 / safe-01\n                                   :ARG1 f2))))",
      "(f2 / family\n    :poss (v / victim))",
      "(m / move-01\n   :ARG1 (f2 / family))",
      "(c / cause-01\n   :ARG0 (f3 / feel-01\n             :polarity -\n             :ARG0 (f2 / family)\n             :ARG1 (s2 / safe-01\n                       :ARG1 f2)))",
      "(f3 / feel-01\n    :ARG0 (f2 / family)\n    :ARG1 (s2 / safe-01\n              :ARG1 f2))",
      "(f3 / feel-01\n    :ARG0 (f2 / family)\n    :ARG1 (s2 / safe-01\n              :ARG1 f2)\n    :polarity -)",
      "(s2 / safe-01\n    :ARG1 (f2 / family))"
    ],
    "smus": [
      "Eva Chapin, 34, of West Linn, Oregon, was accused of harassment.",
      "Eva Chapin",
      "34.",
      "-West Linn, Oregon",
      "Eva",
      "Chapin.",
      "West",
      "Linn.",
      "ORE.",
      "34",
      "Year.",
      "West Linn",
      "OR",
      "OR",
      "Eva Chapin is the harasser.",
      "Her neighbors are referred to as niggers but she insists she is not racist.",
      "Her neighbors were referred to as nigger.",
      "Her neighbors.",
      "She was one of her neighbors.",
      "She insists she is not racist.",
      "Not racist.",
      "She's racist.",
      "One note said: \"There is no expletive in W.L until you come.\"",
      "One note:",
      "expletive in W.L",
      "The expletive was not in W.L.",
      "The expletive will be in W.L until you come.",
      "W.L",
      "W.L",
      "Until you come.",
      "Come.",
      "Victims have said their families may be forced to move because they don't feel safe.",
      "Victim's family may be forced to move because they don't feel safe.",
      "The victim's family was forced to move because they didn't feel safe.",
      "Victim's family",
      "Move family.",
      "Because the family doesn't feel safe.",
      "Families will feel safe.",
      "Families do not feel safe.",
      "Family safety"
    ]
  },
  {
    "instance_id": "realsumm-5",
    "summary": "<t> Justin Rose finished joint runner - up at the Masters 2015 on 14-under - par . </t> <t> Rose 's final total has only been bettered six times at the the Masters . </t> <t> Rose hopes to build on his display and take some big titles across the year . </t> <t> CLICK HERE for all the latest news and reaction following the Masters . </t>",
    "tree": [
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")\n            :time (d / date-entity\n                     :year 2015)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Justin\"\n                     :op2 \"Rose\"))\n   :ARG2 (r / runner-up\n            :mod (j / joint))\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Masters\")\n            :time (d / date-entity\n                     :year 2015))\n   :manner (s / score-entity\n              :op1 14\n              :op2 (p2 / par)))",
      "(p / person\n   :name (n / name\n            :op1 \"Justin\"\n            :op2 \"Rose\"))",
      "(n / name\n   :op1 \"Justin\")",
      "(n / name\n   :op2 \"Rose\")",
      "(n / name\n   :op1 \"Masters\")",
      "(r / runner-up\n   :mod (j / joint))",
      "(e / event\n   :name (n2 / name\n             :op1 \"Masters\"))",
      "(e / event\n   :time (d / date-entity\n            :year 2015))",
      "(d / date-entity\n   :year 2015)",
      "(s / score-entity\n   :op1 14)",
      "(s / score-entity\n   :op2 (p2 / par))",
      "(b / best-01\n   :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Rose\"))))",
      "(b / best-01\n   :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Rose\")))\n   :frequency 6)",
      "(b / best-01\n   :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Rose\")))\n   :mod (o / only))",
      "(b / best-01\n   :ARG1 (t / total\n            :mod (f / final)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Rose\")))\n   :time (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))",
      "(t / total\n   :mod (f / final))",
      "(t / total\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Rose\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Rose\"))",
      "(n / name\n   :op1 \"Rose\")",
      "(n / name\n   :op1 \"Masters\")",
      "(g / game\n   :name (n2 / name\n             :op1 \"Masters\"))",
      "(h / hope-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rose\"))\n   :ARG1 (a / and\n            :op1 (b / build-01\n                    :ARG0 p\n                    :ARG1 (d / display-01\n                             :ARG0 p))\n            :op2 (t / take-01\n                    :ARG0 p\n                    :ARG1 (t2 / title\n                              :mod (b2 / big)\n                              :quant (s / some))\n                    :time (a2 / across\n                              :op1 (y / year)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Rose\"))",
      "(n / name\n   :op1 \"Rose\")",
      "(a / and\n   :op1 (b / build-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\"))\n           :ARG1 (d / display-01\n                    :ARG0 p)))",
      "(a / and\n   :op2 (t / take-01\n           :ARG0 (p / person :name (n / name :op1 \"Rose\"))\n           :ARG1 (t2 / title\n                     :mod (b2 / big)\n                     :quant (s / some))\n           :time (a2 / across\n                     :op1 (y / year))))",
      "(b / build-01\n   :ARG0 (p / person :name (n / name :op1 \"Rose\"))\n   :ARG1 (d / display-01\n            :ARG0 p))",
      "(d / display-01\n   :ARG0 (p / person :name (n / name :op1 \"Rose\")))",
      "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Rose\"))\n   :ARG1 (t2 / title\n             :mod (b2 / big)\n             :quant (s / some)))",
      "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Rose\"))\n   :ARG1 (t2 / title\n             :mod (b2 / big)\n             :quant (s / some))\n   :time (a2 / across\n             :op1 (y / year)))",
      "(t2 / title\n    :mod (b2 / big))",
      "(t2 / title\n    :quant (s / some))",
      "(a2 / across\n    :op1 (y / year))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :mode imperative)",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :location (h / here))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(a / and\n   :ARG1-of (f / follow-01\n               :ARG2 (g / game\n                        :name (n2 / name\n                                  :op1 \"Masters\"))))",
      "(a / and\n   :ARG1-of (f / follow-01\n               :ARG2 (g / game\n                        :name (n2 / name\n                                  :op1 \"Masters\")))\n   :op1 (n / news\n           :mod (l / last)))",
      "(a / and\n   :ARG1-of (f / follow-01\n               :ARG2 (g / game\n                        :name (n2 / name\n                                  :op1 \"Masters\")))\n   :op2 (r / react-01))",
      "(a / and\n   :ARG1-of (f / follow-01\n               :ARG2 (g / game\n                        :name (n2 / name\n                                  :op1 \"Masters\")))\n   :mod (a2 / all))",
      "(n / news\n   :mod (l / last))",
      "(f / follow-01\n   :ARG2 (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))",
      "(g / game\n   :name (n2 / name\n             :op1 \"Masters\"))",
      "(n2 / name\n    :op1 \"Masters\")"
    ],
    "smus": [
      "Justin Rose finished joint runner up at the Masters in 2015.",
      "Justin Rose finished joint runner up at the Masters in 2015 with a par of 14.",
      "Justin Rose",
      "Justin",
      "Rose",
      "Masters",
      "joint runner up",
      "Masters.",
      "2015",
      "2015",
      "14",
      "par.",
      "Best final total for Rose.",
      "Rose's final total is 6 best.",
      "Rose's final total is only best.",
      "Rose's final total was best at Masters.",
      "Final total.",
      "Rose's total.",
      "Rose",
      "Rose",
      "Masters",
      "Masters",
      "Rose hopes to build a display and take some big titles across the year.",
      "Rose",
      "Rose",
      "And Rose will build a display.",
      "And Rose will take some big titles across the year.",
      "Rose will build a display.",
      "Rose's display:",
      "Rose will take some big titles.",
      "Rose will take some big titles across the year.",
      "Big titles.",
      "Some titles.",
      "across the year.",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "and following the Masters.",
      "And the latest news following the Masters.",
      "Following the Masters and the reaction.",
      "All following the Masters.",
      "Latest news.",
      "Following the Masters.",
      "Masters",
      "Masters"
    ]
  },
  {
    "instance_id": "realsumm-6",
    "summary": "<t> Girl was playing with friend when Zbigniew Huminski forced her into car . </t> <t> Chloe 's naked body was found in nearby woods an hour - and - a - half later . </t> <t> Prosecutors say there is evidence of ' strangulation and sexual violence ' Polish immigrant , who was heading to England , has admitted to killing . </t>",
    "tree": [
      "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 g\n                         :ARG2 (f / friend))))",
      "(p / play-01\n   :ARG0 (g / girl)\n   :ARG3 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 g\n                         :ARG2 (f / friend)))\n   :time (f2 / force-01\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Zbigniew\"\n                                :op2 \"Huminski\"))\n             :ARG1 g\n             :ARG2 (c / car)))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG1 (g / girl)\n                :ARG2 (f / friend)))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG1 (g / girl)\n                :ARG2 (f / friend))\n    :name (n / name\n             :op1 \"Zbigniew\"\n             :op2 \"Huminski\"))",
      "(h / have-rel-role-91\n   :ARG1 (g / girl)\n   :ARG2 (f / friend))",
      "(f2 / force-01\n    :ARG0 (p3 / person\n              :name (n / name\n                       :op1 \"Zbigniew\"\n                       :op2 \"Huminski\"))\n    :ARG1 (g / girl)\n    :ARG2 (c / car))",
      "(n / name\n   :op1 \"Zbigniew\")",
      "(n / name\n   :op2 \"Huminski\")",
      "(f / find-01\n   :ARG1 (b / body\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Chloe\"))\n            :ARG1-of (n2 / naked-02)))",
      "(f / find-01\n   :ARG1 (b / body\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Chloe\"))\n            :ARG1-of (n2 / naked-02))\n   :location (w / woods\n                :location (n3 / nearby)))",
      "(f / find-01\n   :ARG1 (b / body\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Chloe\"))\n            :ARG1-of (n2 / naked-02))\n   :time (a / after\n            :quant (t / temporal-quantity\n                      :quant 1.5\n                      :unit (h / hour))))",
      "(b / body\n   :ARG1-of (n2 / naked-02))",
      "(b / body\n   :ARG1-of (n2 / naked-02)\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Chloe\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Chloe\"))",
      "(n / name\n   :op1 \"Chloe\")",
      "(w / woods\n   :location (n3 / nearby))",
      "(a / after\n   :quant (t / temporal-quantity\n             :quant 1.5\n             :unit (h / hour)))",
      "(t / temporal-quantity\n   :quant 1.5)",
      "(t / temporal-quantity\n   :unit (h / hour))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG0 (p / person\n                     :ARG0-of (p2 / prosecute-01))\n            :ARG1 (e / evidence-01\n                     :ARG1 (a / and\n                              :op1 (s2 / strangulate-01)\n                              :op2 (v / violence\n                                      :mod (s3 / sex))))))",
      "(m / multi-sentence\n   :snt2 (a2 / admit-01\n             :ARG0 (p3 / person\n                       :ARG0-of (ii / immigrate-01\n                                    :ARG2 (c / country\n                                             :name (n / name\n                                                      :op1 \"Poland\")))\n                       :ARG0-of (h / head-02\n                                   :ARG1 (c2 / country\n                                             :name (n2 / name\n                                                       :op1 \"England\"))))\n             :ARG1 (k / kill-01\n                      :ARG0 p3)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (p2 / prosecute-01))\n   :ARG1 (e / evidence-01\n            :ARG1 (a / and\n                     :op1 (s2 / strangulate-01)\n                     :op2 (v / violence\n                             :mod (s3 / sex)))))",
      "(p / person\n   :ARG0-of (p2 / prosecute-01)\n   :ARG0-of (ii / immigrate-01\n                :ARG2 (c / country\n                         :name (n / name\n                                  :op1 \"Poland\")))\n   :ARG0-of (h / head-02\n               :ARG1 (c2 / country\n                         :name (n2 / name\n                                   :op1 \"England\"))))",
      "(e / evidence-01\n   :ARG1 (a / and\n            :op1 (s2 / strangulate-01)\n            :op2 (v / violence\n                    :mod (s3 / sex))))",
      "(a / and\n   :op1 (s2 / strangulate-01))",
      "(a / and\n   :op2 (v / violence\n           :mod (s3 / sex)))",
      "(v / violence\n   :mod (s3 / sex))",
      "(a2 / admit-01\n    :ARG0 (p3 / person\n              :ARG0-of (ii / immigrate-01\n                           :ARG2 (c / country\n                                    :name (n / name\n                                             :op1 \"Poland\")))\n              :ARG0-of (h / head-02\n                          :ARG1 (c2 / country\n                                    :name (n2 / name\n                                              :op1 \"England\"))))\n    :ARG1 (k / kill-01\n             :ARG0 p3))",
      "(ii / immigrate-01\n    :ARG2 (c / country\n             :name (n / name\n                      :op1 \"Poland\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Poland\"))",
      "(c / country\n   :name (n2 / name\n             :op1 \"England\"))",
      "(n / name\n   :op1 \"Poland\")",
      "(n / name\n   :op1 \"England\")",
      "(h / head-02\n   :ARG1 (c2 / country\n             :name (n2 / name\n                       :op1 \"England\")))",
      "(k / kill-01\n   :ARG0 (p3 / person))"
    ],
    "smus": [
      "The Girl was playing with her friend.",
      "When Zbigniew Huminski forced the girl into a car, the girl was playing with her friend.",
      "Girl friend",
      "Girl friend Zbigniew Huminski",
      "The Girl is a friend.",
      "Zbigniew Huminski forced the girl into a car.",
      "Zbigniew",
      "Huminski.",
      "Holly's body was found naked.",
      "Holly's naked body was found in nearby woods.",
      "After an hour and a half, Holly's naked body was found.",
      "naked body",
      "Holly's naked body",
      "-Chloe",
      "-Chloe",
      "In nearby woods.",
      "After an hour and a half.",
      "1.5",
      "an hour",
      "Prosecutors say there is evidence of strangulation and sexual violence.",
      "Head of immigration to England, Poland, admitted killing.",
      "Prosecutors say there is evidence of strangulation and sexual violence.",
      "Polish immigration officials head of England.",
      "There is evidence of strangulation and sexual violence.",
      "and strangulation.",
      "and sexual violence.",
      "Sexual violence.",
      "Head of immigration to England, Poland, has admitted to killing.",
      "Immigration to Poland",
      "Poland (PL)",
      "England (EE)",
      "Poland.",
      "England",
      "Heading for England.",
      "Killing people."
    ]
  },
  {
    "instance_id": "realsumm-7",
    "summary": "<t> Pair were left homeless after storms and met in Connecticut trailer park . </t> <t> Won lottery last year but only cashed prize in after Easter to mark new start . ' </t> <t> Because of Sandy I met the love of my life ' , said thrilled lottery winner . </t>",
    "tree": [
      "(a / and\n   :op1 (l / leave-13\n           :ARG1 (p / pair)\n           :ARG2 (h / homeless\n                    :domain p)\n           :time (a2 / after\n                     :op1 (s / storm))))",
      "(a / and\n   :op2 (m / meet-03\n           :ARG0 (p / pair)\n           :location (p2 / park\n                         :mod (t / trailer)\n                         :location (s2 / state\n                                       :name (n / name\n                                                :op1 \"Connecticut\")))))",
      "(l / leave-13\n   :ARG1 (p / pair)\n   :ARG2 (h / homeless\n            :domain p))",
      "(l / leave-13\n   :ARG1 (p / pair)\n   :ARG2 (h / homeless\n            :domain p)\n   :time (a2 / after\n             :op1 (s / storm)))",
      "(h / homeless\n   :domain (p / pair))",
      "(a2 / after\n    :op1 (s / storm))",
      "(m / meet-03\n   :ARG0 (p / pair))",
      "(m / meet-03\n   :ARG0 (p / pair)\n   :location (p2 / park\n                 :mod (t / trailer)\n                 :location (s2 / state\n                               :name (n / name\n                                        :op1 \"Connecticut\"))))",
      "(p2 / park\n    :mod (t / trailer))",
      "(p2 / park\n    :location (s2 / state\n                  :name (n / name\n                           :op1 \"Connecticut\")))",
      "(s2 / state\n    :name (n / name\n             :op1 \"Connecticut\"))",
      "(n / name\n   :op1 \"Connecticut\")",
      "(c / contrast-01\n   :ARG1 (w / win-01\n            :ARG2 (l / lottery)\n            :time (y / year\n                     :mod (l2 / last)))\n   :ARG2 (c2 / cash-in-03\n             :ARG1 (p / prize)\n             :time (a / after\n                      :op1 (f / festival\n                              :name (n / name\n                                       :op1 \"Easter\")))\n             :purpose (m / mark-01\n                         :ARG1 (s / start-01\n                                  :ARG1-of (n2 / new-01)))\n             :mod (o / only)))",
      "(w / win-01\n   :ARG2 (l / lottery))",
      "(w / win-01\n   :ARG2 (l / lottery)\n   :time (y / year\n            :mod (l2 / last)))",
      "(y / year\n   :mod (l2 / last))",
      "(c2 / cash-in-03\n    :ARG1 (p / prize))",
      "(c2 / cash-in-03\n    :ARG1 (p / prize)\n    :time (a / after\n             :op1 (f / festival\n                     :name (n / name\n                              :op1 \"Easter\"))))",
      "(c2 / cash-in-03\n    :ARG1 (p / prize))",
      "(c2 / cash-in-03\n    :ARG1 (p / prize)\n    :mod (o / only))",
      "(a / after\n   :op1 (f / festival\n           :name (n / name\n                    :op1 \"Easter\")))",
      "(f / festival\n   :name (n / name\n            :op1 \"Easter\"))",
      "(n / name\n   :op1 \"Easter\")",
      "(m / mark-01\n   :ARG1 (s / start-01\n            :ARG1-of (n2 / new-01)))",
      "(s / start-01\n   :ARG1-of (n2 / new-01))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (w / win-01\n                        :ARG1 (l / lottery))\n            :ARG1-of (t / thrill-01))\n   :ARG1 (c / cause-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Sandy\"))\n            :ARG1 (m / meet-02\n                     :ARG0 p\n                     :ARG1 (p3 / person\n                               :ARG0-of (l2 / love-01\n                                            :ARG1 p)\n                               :ARG0-of (l3 / live-01\n                                            :ARG1 p)))))",
      "(p / person\n   :ARG0-of (w / win-01\n               :ARG1 (l / lottery))\n   :ARG1-of (t / thrill-01)\n   :ARG0-of (l2 / love-01\n                :ARG1 p)\n   :ARG0-of (l3 / live-01\n                :ARG1 p))",
      "(p / person\n   :ARG0-of (w / win-01\n               :ARG1 (l / lottery))\n   :ARG1-of (t / thrill-01)\n   :ARG0-of (l2 / love-01\n                :ARG1 p)\n   :ARG0-of (l3 / live-01\n                :ARG1 p)\n   :name (n / name\n            :op1 \"Sandy\"))",
      "(w / win-01\n   :ARG1 (l / lottery))",
      "(c / cause-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Sandy\"))\n   :ARG1 (m / meet-02\n            :ARG0 (p / person)\n            :ARG1 (p3 / person\n                      :ARG0-of (l2 / love-01\n                                   :ARG1 p)\n                      :ARG0-of (l3 / live-01\n                                   :ARG1 p))))",
      "(n / name\n   :op1 \"Sandy\")",
      "(m / meet-02\n   :ARG0 (p / person)\n   :ARG1 (p3 / person\n             :ARG0-of (l2 / love-01\n                          :ARG1 p)\n             :ARG0-of (l3 / live-01\n                          :ARG1 p)))",
      "(l2 / love-01\n    :ARG1 (p / person))",
      "(l3 / live-01\n    :ARG1 (p / person))"
    ],
    "smus": [
      "And the pair were left homeless after the storms.",
      "And the pair met at a trailer park in Connecticut.",
      "The pair were left homeless.",
      "The pair were left homeless after the storms.",
      "The pair were homeless.",
      "After the storms.",
      "The pair met.",
      "The pair met at a trailer park in Connecticut.",
      "trailer park",
      "a park in Connecticut",
      "Connecticut (CN)",
      "Connecticut.",
      "The lottery won last year, but the prize was only cashed in after Easter to mark the start of a new year.",
      "Lottery win",
      "Lottery win last year",
      "Last year.",
      "The prize is cash in.",
      "The prize will be cashed in after Easter.",
      "The prize is cash in.",
      "The prize is only cash in.",
      "After Easter.",
      "Easter.",
      "Easter.",
      "mark a new start",
      "New start.",
      "The thrill-seeker who won the lottery said Sandy met his love of his life because:",
      "Lottery winner - thrill-seeking, loving, living person",
      "Sandy, a thrill-seeking, loving person who has lived and won the lottery.",
      "Lottery win",
      "Because Sandy, people met a person who loved and lived with him.",
      "Sandy",
      "People met people who love and live with them.",
      "Love of people.",
      "People live."
    ]
  },
  {
    "instance_id": "realsumm-8",
    "summary": "<t> Cesc Fabregas was caught by trailing arm of Stoke City ace Charlie Adam . </t> <t> Former Barcelona man picked up the injury during Chelsea 's home win . </t> <t> Midfielder Adam scored wonder goal during the game but it was n't enough . </t> <t> Fabregas took to Instagram to show he was all smiles despite the bruises . </t> <t> CLICK HERE for all the latest Chelsea news . </t>",
    "tree": [
      "(c / catch-03\n   :ARG0 (a / arm\n            :part-of (p / person\n                        :name (n / name\n                                 :op1 \"Charlie\"\n                                 :op2 \"Adam\")\n                        :mod (a2 / ace)\n                        :part-of (t / team\n                                    :name (n2 / name\n                                              :op1 \"Stoke\"\n                                              :op2 \"City\")))\n            :ARG0-of (t2 / trail-01))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Cesc\"\n                       :op2 \"Fabregas\")))",
      "(a / arm\n   :ARG0-of (t2 / trail-01))",
      "(a / arm\n   :ARG0-of (t2 / trail-01)\n   :part-of (p / person\n               :name (n / name\n                        :op1 \"Charlie\"\n                        :op2 \"Adam\")\n               :mod (a2 / ace)\n               :part-of (t / team\n                           :name (n2 / name\n                                     :op1 \"Stoke\"\n                                     :op2 \"City\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Charlie\"\n            :op2 \"Adam\"))",
      "(p / person\n   :mod (a2 / ace))",
      "(p / person\n   :part-of (t / team\n               :name (n2 / name\n                         :op1 \"Stoke\"\n                         :op2 \"City\")))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Cesc\"\n             :op2 \"Fabregas\"))",
      "(n / name\n   :op1 \"Charlie\")",
      "(n / name\n   :op2 \"Adam\")",
      "(n / name\n   :op1 \"Stoke\")",
      "(n / name\n   :op2 \"City\")",
      "(n / name\n   :op1 \"Cesc\")",
      "(n / name\n   :op2 \"Fabregas\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"Stoke\"\n             :op2 \"City\"))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :time (f / former)\n            :part-of (t / team\n                        :name (n / name\n                                 :op1 \"Barcelona\")))\n   :ARG1 (ii / injury))",
      "(p / pick-up-11\n   :ARG0 (m / man\n            :time (f / former)\n            :part-of (t / team\n                        :name (n / name\n                                 :op1 \"Barcelona\")))\n   :ARG1 (ii / injury)\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Chelsea\"))\n            :location (h / home)))",
      "(m / man\n   :time (f / former))",
      "(m / man\n   :part-of (t / team\n               :name (n / name\n                        :op1 \"Barcelona\")))",
      "(t / team\n   :name (n / name\n            :op1 \"Barcelona\"))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Chelsea\"))",
      "(n / name\n   :op1 \"Barcelona\")",
      "(n / name\n   :op1 \"Chelsea\")",
      "(w / win-01\n   :ARG0 (t2 / team\n             :name (n2 / name\n                       :op1 \"Chelsea\")))",
      "(w / win-01\n   :ARG0 (t2 / team\n             :name (n2 / name\n                       :op1 \"Chelsea\"))\n   :location (h / home))",
      "(h / have-concession-91\n   :ARG1 (s / score-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Adam\")\n                     :ARG0-of (h2 / have-org-role-91\n                                  :ARG2 (m / midfielder)))\n            :ARG1 (g / goal\n                     :mod (w / wonder))\n            :time (g2 / game))\n   :ARG2 (h3 / have-quant-91\n             :ARG1 g\n             :ARG3 (e / enough\n                      :polarity -)))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Adam\")\n            :ARG0-of (h2 / have-org-role-91\n                         :ARG2 (m / midfielder)))\n   :ARG1 (g / goal\n            :mod (w / wonder)))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Adam\")\n            :ARG0-of (h2 / have-org-role-91\n                         :ARG2 (m / midfielder)))\n   :ARG1 (g / goal\n            :mod (w / wonder))\n   :time (g2 / game))",
      "(p / person\n   :ARG0-of (h2 / have-org-role-91\n                :ARG2 (m / midfielder)))",
      "(p / person\n   :ARG0-of (h2 / have-org-role-91\n                :ARG2 (m / midfielder))\n   :name (n / name\n            :op1 \"Adam\"))",
      "(n / name\n   :op1 \"Adam\")",
      "(h2 / have-org-role-91\n    :ARG2 (m / midfielder))",
      "(g / goal\n   :mod (w / wonder))",
      "(h3 / have-quant-91\n    :ARG1 (g / goal)\n    :ARG3 (e / enough\n             :polarity -))",
      "(e / enough\n   :polarity -)",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\")))",
      "(t / take-35\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fabregas\"))\n   :ARG2 (p2 / publication\n             :name (n2 / name\n                       :op1 \"Instagram\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Fabregas\"))",
      "(n / name\n   :op1 \"Fabregas\")",
      "(n / name\n   :op1 \"Instagram\")",
      "(p2 / publication\n    :name (n2 / name\n              :op1 \"Instagram\"))",
      "(s / show-01\n   :ARG0 (p / person :name (n / name :op1 \"Fabregas\"))\n   :ARG1 (s2 / smile-01\n             :ARG0 p\n             :mod (a / all)\n             :concession (b / bruise-01\n                            :ARG1 p)))",
      "(s2 / smile-01\n    :ARG0 (p / person :name (n / name :op1 \"Fabregas\")))",
      "(s2 / smile-01\n    :ARG0 (p / person :name (n / name :op1 \"Fabregas\"))\n    :mod (a / all))",
      "(s2 / smile-01\n    :ARG0 (p / person :name (n / name :op1 \"Fabregas\"))\n    :concession (b / bruise-01\n                   :ARG1 p))",
      "(b / bruise-01\n   :ARG1 (p / person :name (n / name :op1 \"Fabregas\")))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :mode imperative)",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :location (h / here))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(n / news\n   :mod (l / last))",
      "(n / news\n   :mod (a / all))",
      "(n / news\n   :topic (p / person\n             :name (n2 / name\n                       :op1 \"Chelsea\")))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Chelsea\"))",
      "(n2 / name\n    :op1 \"Chelsea\")"
    ],
    "smus": [
      "The trailing arm of Stoke City ace Charlie Adam caught Cesc Fabregas.",
      "trailing arm",
      "Trailing arm of Stoke City ace Charlie Adam",
      "Charlie Adam",
      "ace.",
      "Stoke City",
      "-Cesc Fabregas",
      "Charlie",
      "Adam",
      "Stoke",
      "City",
      "cesc",
      "Fabregas",
      "Stoke City",
      "The former Barcelona man picked up the injury.",
      "The former Barcelona man picked up the injury in Chelsea's home victory.",
      "Former man.",
      "Barcelona's man.",
      "Barcelona",
      "Chelsea",
      "Barcelona",
      "Chelsea",
      "Chelsea won 2-0.",
      "Chelsea won the home game 1-0.",
      "Not enough, but midfielder Adam scored a wonder goal in the game.",
      "Midfielder Adam scored a wonder goal.",
      "Midfielder Adam scored a wonder goal in the game.",
      "Midfielder",
      "Adam, the midfielder.",
      "Adam",
      "Midfielder",
      "The goal is wonder.",
      "The goal is not enough.",
      "Not enough.",
      "Fabregas took to Instagram.",
      "Fabregas took to Instagram.",
      "Fabregas",
      "Fabregas",
      "Instagram",
      "Instagram",
      "Fabregas did show all his smiles despite his bruises.",
      "Fabregas smiles",
      "Fabregas all smiles.",
      "Fabregas smiles despite bruises.",
      "Fabregas has bruises.",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "Latest news.",
      "All news.",
      "News about Chelsea.",
      "Chelsea",
      "Chelsea"
    ]
  },
  {
    "instance_id": "realsumm-9",
    "summary": "<t> The life of 16-year - old Maren Sanchez stabbed to death a year ago on the day of prom was celebrated on Saturday by hundreds of people . ' </t> <t> I do n't think there 's anything sad about this . </t> <t> It 's such a celebration , ' said Darby Hudd , a 17-year - old friend of the slain teen . </t> <t> A classmate , Christopher Plaskon , has been charged with Sanchez 's murder . </t>",
    "tree": [
      "(m / multi-sentence\n   :snt1 (c / celebrate-01\n            :ARG0 (p / person\n                     :quant (m2 / multiple\n                                :op1 100))\n            :ARG1 (l / life\n                     :poss (p2 / person\n                               :name (n / name\n                                        :op1 \"Maren\"\n                                        :op2 \"Sanchez\")\n                               :age (t / temporal-quantity\n                                       :quant 16\n                                       :unit (y / year))\n                               :ARG1-of (s / stab-01\n                                           :ARG4 (d / die-01\n                                                    :ARG1 p2)\n                                           :time (b / before\n                                                    :op1 (n2 / now)\n                                                    :quant (t2 / temporal-quantity\n                                                               :quant 1\n                                                               :unit (y2 / year)))\n                                           :time (d2 / day\n                                                     :time-of (p3 / prom)))))\n            :time (d3 / date-entity\n                      :weekday (s2 / saturday))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1-of (s / stab-01\n                                  :ARG4 (d / die-01\n                                           :ARG1 p2)\n                                  :time (b / before\n                                           :op1 (n2 / now)\n                                           :quant (t2 / temporal-quantity\n                                                      :quant 1\n                                                      :unit (y2 / year)))\n                                  :time (d2 / day\n                                            :time-of (p3 / prom))))))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :quant (m2 / multiple\n                       :op1 100))\n   :ARG1 (l / life\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Maren\"\n                               :op2 \"Sanchez\")\n                      :age (t / temporal-quantity\n                              :quant 16\n                              :unit (y / year))\n                      :ARG1-of (s / stab-01\n                                  :ARG4 (d / die-01\n                                           :ARG1 p2)\n                                  :time (b / before\n                                           :op1 (n2 / now)\n                                           :quant (t2 / temporal-quantity\n                                                      :quant 1\n                                                      :unit (y2 / year)))\n                                  :time (d2 / day\n                                            :time-of (p3 / prom)))))\n   :time (d3 / date-entity\n             :weekday (s2 / saturday)))",
      "(p / person\n   :ARG1-of (s / stab-01\n               :ARG4 (d / die-01\n                        :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n               :time (b / before\n                        :op1 (n2 / now)\n                        :quant (t2 / temporal-quantity\n                                   :quant 1\n                                   :unit (y2 / year)))\n               :time (d2 / day\n                         :time-of (p3 / prom))))",
      "(p / person\n   :ARG1-of (s / stab-01\n               :ARG4 (d / die-01\n                        :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n               :time (b / before\n                        :op1 (n2 / now)\n                        :quant (t2 / temporal-quantity\n                                   :quant 1\n                                   :unit (y2 / year)))\n               :time (d2 / day\n                         :time-of (p3 / prom)))\n   :quant (m2 / multiple\n              :op1 100))",
      "(p / person\n   :ARG1-of (s / stab-01\n               :ARG4 (d / die-01\n                        :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n               :time (b / before\n                        :op1 (n2 / now)\n                        :quant (t2 / temporal-quantity\n                                   :quant 1\n                                   :unit (y2 / year)))\n               :time (d2 / day\n                         :time-of (p3 / prom)))\n   :name (n / name\n            :op1 \"Maren\"\n            :op2 \"Sanchez\"))",
      "(p / person\n   :ARG1-of (s / stab-01\n               :ARG4 (d / die-01\n                        :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n               :time (b / before\n                        :op1 (n2 / now)\n                        :quant (t2 / temporal-quantity\n                                   :quant 1\n                                   :unit (y2 / year)))\n               :time (d2 / day\n                         :time-of (p3 / prom)))\n   :age (t / temporal-quantity\n           :quant 16\n           :unit (y / year)))",
      "(m2 / multiple\n    :op1 100)",
      "(l / life\n   :poss (p2 / person\n             :name (n / name\n                      :op1 \"Maren\"\n                      :op2 \"Sanchez\")\n             :age (t / temporal-quantity\n                     :quant 16\n                     :unit (y / year))\n             :ARG1-of (s / stab-01\n                         :ARG4 (d / die-01\n                                  :ARG1 p2)\n                         :time (b / before\n                                  :op1 (n2 / now)\n                                  :quant (t2 / temporal-quantity\n                                             :quant 1\n                                             :unit (y2 / year)))\n                         :time (d2 / day\n                                   :time-of (p3 / prom)))))",
      "(n / name\n   :op1 \"Maren\")",
      "(n / name\n   :op2 \"Sanchez\")",
      "(t / temporal-quantity\n   :quant 16)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(t / temporal-quantity\n   :quant 1)",
      "(t / temporal-quantity\n   :unit (y2 / year))",
      "(s / stab-01\n   :ARG4 (d / die-01\n            :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\")))))",
      "(s / stab-01\n   :ARG4 (d / die-01\n            :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 1\n                       :unit (y2 / year))))",
      "(s / stab-01\n   :ARG4 (d / die-01\n            :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))\n   :time (d2 / day\n             :time-of (p3 / prom)))",
      "(d / die-01\n   :ARG1 (p2 / person :name (n / name :op1 \"Maren\" :op2 \"Sanchez\"))))",
      "(b / before\n   :op1 (n2 / now))",
      "(b / before\n   :quant (t2 / temporal-quantity\n              :quant 1\n              :unit (y2 / year)))",
      "(d2 / day\n    :time-of (p3 / prom))",
      "(d3 / date-entity\n    :weekday (s2 / saturday))",
      "(t / think-01\n   :ARG0 (ii / i)\n   :ARG1 (s / sad-02\n            :ARG0 (a / anything)\n            :topic (t2 / this)))",
      "(t / think-01\n   :ARG0 (ii / i)\n   :ARG1 (s / sad-02\n            :ARG0 (a / anything)\n            :topic (t2 / this))\n   :polarity -)",
      "(s / sad-02\n   :ARG0 (a / anything))",
      "(s / sad-02\n   :ARG0 (a / anything)\n   :topic (t2 / this))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Darby\"\n                     :op2 \"Hudd\")\n            :age (t / temporal-quantity\n                    :quant 17\n                    :unit (y / year))\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (t2 / teen\n                                  :ARG1-of (s2 / slay-01))\n                        :ARG2 (f / friend)))\n   :ARG1 (c / celebrate-02\n            :domain (ii / it)\n            :degree (s3 / such)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (t2 / teen\n                         :ARG1-of (s2 / slay-01))\n               :ARG2 (f / friend)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (t2 / teen\n                         :ARG1-of (s2 / slay-01))\n               :ARG2 (f / friend))\n   :name (n / name\n            :op1 \"Darby\"\n            :op2 \"Hudd\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (t2 / teen\n                         :ARG1-of (s2 / slay-01))\n               :ARG2 (f / friend))\n   :age (t / temporal-quantity\n           :quant 17\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Darby\")",
      "(n / name\n   :op2 \"Hudd\")",
      "(t / temporal-quantity\n   :quant 17)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(h / have-rel-role-91\n   :ARG1 (t2 / teen\n             :ARG1-of (s2 / slay-01))\n   :ARG2 (f / friend))",
      "(t2 / teen\n    :ARG1-of (s2 / slay-01))",
      "(c / celebrate-02\n   :domain (ii / it))",
      "(c / celebrate-02\n   :degree (s3 / such))",
      "(m / multi-sentence\n   :snt1 (c / charge-05\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Christopher\"\n                              :op2 \"Plaskon\")\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG2 (c2 / classmate)))\n            :ARG2 (m2 / murder-01\n                      :ARG0 p\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Sanchez\")))))",
      "(c / charge-05\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Christopher\"\n                     :op2 \"Plaskon\")\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (c2 / classmate)))\n   :ARG2 (m2 / murder-01\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sanchez\"))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (c2 / classmate)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (c2 / classmate))\n   :name (n / name\n            :op1 \"Christopher\"\n            :op2 \"Plaskon\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (c2 / classmate))\n   :name (n2 / name\n             :op1 \"Sanchez\"))",
      "(n / name\n   :op1 \"Christopher\")",
      "(n / name\n   :op2 \"Plaskon\")",
      "(n / name\n   :op1 \"Sanchez\")",
      "(h / have-rel-role-91\n   :ARG2 (c2 / classmate))",
      "(m2 / murder-01\n    :ARG0 (p / person :name (n / name :op1 \"Christopher\" :op2 \"Plaskon\")))\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Sanchez\")))"
    ],
    "smus": [
      "On Saturday, hundreds celebrated the life of Maren Sanchez, 16, who was stabbed to death on the day of her prom last year.",
      "Hundreds have celebrated the life of Maren Sanchez, 16, who was stabbed to death on the prom day a year ago.",
      "On Saturday, hundreds celebrated the life of Maren Sanchez, 16, who was stabbed to death on the prom day a year ago.",
      "The person who stabbed Maren Sanchez to death on prom day a year ago",
      "There were hundreds of people stabbed on prom day a year ago to death, Maren Sanchez.",
      "Maren Sanchez, the person who stabbed Maren Sanchez to death on prom day a year ago",
      "The 16-year-old who stabbed to death on the day of the prom on the day of Maren Sanchez was stabbed.",
      "hundreds.",
      "Maren Sanchez, 16, was in the life of a man who was stabbed to death a prom day a year ago.",
      "Maren.",
      "Sanchez",
      "16",
      "Year.",
      "One.",
      "year",
      "Maren Sanchez was stabbed in the head.",
      "The death of Maren Sanchez was stabbed a year ago.",
      "Maren Sanchez's death was stabbed the day of the prom.",
      "Maren Sanchez died.",
      "Earlier.",
      "A year ago.",
      "prom day.",
      "Saturday",
      "I'd thik if anythi were sad on top of them.",
      "I don't thik anythi on top of them, thi.",
      "Anythi is sad.",
      "Anythi is sad tpi.",
      "\"It was such a celebration,\" said Darby Husd, a friend of the slain teen.",
      "a friend of a slain teen",
      "-Darby Husd, a slain teen friend.",
      "A friend of the slain teen, 17 years old.",
      "Darby",
      "Hudd",
      "17",
      "a year",
      "A slain teen's friend",
      "A slain teen.",
      "It was a celebration.",
      "Such a celebration.",
      "Classmate Christopher Plaskon is charged with murdering Sanchez.",
      "Classmate Christopher Plaskon has been charged with murdering Sanchez.",
      "My classmate",
      "Christopher Plaskon is a classmate.",
      "Sanchez is a classmate.",
      "Christopher",
      "Plaskon.",
      "Sanchez",
      "he's a classmate.",
      "Christopher Plaskon murdered Sanchez."
    ]
  },
  {
    "instance_id": "realsumm-10",
    "summary": "<t> Audrey Alexander wanted her neighbours to chop down their huge hedge . </t> <t> She claims the 40 ft leylandii was blocking sunlight from reaching her home . </t> <t> Feud started in 1980 when it blocked light from reaching a vegetable patch . </t> <t> Council finally rules that the hedge can stay - but must be cut back to 20 ft . </t>",
    "tree": [
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Audrey\"\n                     :op2 \"Alexander\"))\n   :ARG1 (c / chop-down-02\n            :ARG0 (p2 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 p\n                                  :ARG2 (n2 / neighbor)))\n            :ARG1 (h2 / hedge\n                      :mod (h3 / huge)\n                      :poss p2)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n2 / neighbor)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n2 / neighbor))\n   :name (n / name\n            :op1 \"Audrey\"\n            :op2 \"Alexander\"))",
      "(n / name\n   :op1 \"Audrey\")",
      "(n / name\n   :op2 \"Alexander\")",
      "(c / chop-down-02\n   :ARG0 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))\n                         :ARG2 (n2 / neighbor)))\n   :ARG1 (h2 / hedge\n             :mod (h3 / huge)\n             :poss p2))",
      "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Audrey\" :op2 \"Alexander\"))\n   :ARG2 (n2 / neighbor))",
      "(h2 / hedge\n    :mod (h3 / huge))",
      "(h2 / hedge\n    :poss (p2 / person))",
      "(c / claim-01\n   :ARG0 (s / she)\n   :ARG1 (b / block-01\n            :ARG0 (l / leylandii\n                     :quant (d / distance-quantity\n                               :quant 40\n                               :unit (f / foot)))\n            :ARG1 (s2 / sunlight)\n            :ARG2 (r / reach-01\n                     :ARG0 s2\n                     :ARG1 (h / home\n                              :poss s))))",
      "(b / block-01\n   :ARG0 (l / leylandii\n            :quant (d / distance-quantity\n                      :quant 40\n                      :unit (f / foot)))\n   :ARG1 (s2 / sunlight)\n   :ARG2 (r / reach-01\n            :ARG0 s2\n            :ARG1 (h / home\n                     :poss (s / she))))",
      "(l / leylandii\n   :quant (d / distance-quantity\n             :quant 40\n             :unit (f / foot)))",
      "(d / distance-quantity\n   :quant 40)",
      "(d / distance-quantity\n   :unit (f / foot))",
      "(r / reach-01\n   :ARG0 (s2 / sunlight)\n   :ARG1 (h / home\n            :poss (s / she)))",
      "(h / home\n   :poss (s / she))",
      "(s / start-01\n   :ARG1 (f / feud-01))",
      "(s / start-01\n   :ARG1 (f / feud-01)\n   :time (d / date-entity\n            :year 1980\n            :time-of (b / block-01\n                        :ARG0 f\n                        :ARG1 (r / reach-01\n                                 :ARG0 (l / light)\n                                 :ARG1 (p / patch\n                                          :mod (v / vegetable))))))",
      "(d / date-entity\n   :year 1980)",
      "(d / date-entity\n   :time-of (b / block-01\n               :ARG0 (f / feud-01)\n               :ARG1 (r / reach-01\n                        :ARG0 (l / light)\n                        :ARG1 (p / patch\n                                 :mod (v / vegetable)))))",
      "(b / block-01\n   :ARG0 (f / feud-01)\n   :ARG1 (r / reach-01\n            :ARG0 (l / light)\n            :ARG1 (p / patch\n                     :mod (v / vegetable))))",
      "(r / reach-01\n   :ARG0 (l / light)\n   :ARG1 (p / patch\n            :mod (v / vegetable)))",
      "(p / patch\n   :mod (v / vegetable))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p / possible-01\n                      :ARG1 (s / stay-01\n                               :ARG1 (h / hedge)))\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 h\n                                :ARG2 (d / distance-quantity\n                                         :quant 20\n                                         :unit (f / foot))))))",
      "(r / rule-01\n   :ARG0 (c / council)\n   :ARG1 (c2 / contrast-01\n             :ARG1 (p / possible-01\n                      :ARG1 (s / stay-01\n                               :ARG1 (h / hedge)))\n             :ARG2 (o / obligate-01\n                      :ARG2 (c3 / cut-back-05\n                                :ARG1 h\n                                :ARG2 (d / distance-quantity\n                                         :quant 20\n                                         :unit (f / foot)))))\n   :time (f2 / final))",
      "(c2 / contrast-01\n    :ARG1 (p / possible-01\n             :ARG1 (s / stay-01\n                      :ARG1 (h / hedge)))\n    :ARG2 (o / obligate-01\n             :ARG2 (c3 / cut-back-05\n                       :ARG1 h\n                       :ARG2 (d / distance-quantity\n                                :quant 20\n                                :unit (f / foot)))))",
      "(p / possible-01\n   :ARG1 (s / stay-01\n            :ARG1 (h / hedge)))",
      "(s / stay-01\n   :ARG1 (h / hedge))",
      "(o / obligate-01\n   :ARG2 (c3 / cut-back-05\n             :ARG1 (h / hedge)\n             :ARG2 (d / distance-quantity\n                      :quant 20\n                      :unit (f / foot))))",
      "(c3 / cut-back-05\n    :ARG1 (h / hedge)\n    :ARG2 (d / distance-quantity\n             :quant 20\n             :unit (f / foot)))",
      "(d / distance-quantity\n   :quant 20)",
      "(d / distance-quantity\n   :unit (f / foot))"
    ],
    "smus": [
      "Audrey Alexander wanted his neighbors to chop down his huge hedge.",
      "My neighbors.",
      "My neighbors are Audrey Alexander.",
      "Audrey",
      "Alexander",
      "Douglas Alexander's neighbors are going to chop down his huge hedge.",
      "a href=\"http://www.theworld.net/news/audrey-alander/\">Audrey Alexander/a> - Neighbors/a>",
      "A huge hedge.",
      "People's hedge.",
      "She claims 40-foot leylandii are blocking sunlight from reaching her home.",
      "40-foot leylandii blocked sunlight from reaching her home.",
      "40 ft.",
      "40 miles",
      "Footage",
      "The sunlight was reaching her home.",
      "Her home.",
      "Feuds started.",
      "Feud started in 1980, when it blocked light reaching a vegetable patch.",
      "1980.",
      "When the feud blocked the light from reaching the vegetable patch.",
      "Feudal blocked light from reaching the vegetable patch.",
      "The light is reaching the vegetable patch.",
      "a vegetable patch",
      "The Council rules that the hedge can stay but must be cut back to 20ft.",
      "The Council finally rules that the hedge can stay but must be cut back to 20ft.",
      "The hedge may stay, but it must be cut back 20ft.",
      "The hedge can stay put.",
      "Stay a hedge.",
      "The hedge had to be cut back by 20ft.",
      "The hedge was cut back to 20ft.",
      "20 miles",
      "Footage"
    ]
  },
  {
    "instance_id": "realsumm-11",
    "summary": "<t> Catherine Nevin was allowed out despite being jailed for life in April 2000 . </t> <t> 62-year - old was seen on the bus , with a pal and walking around in Dublin . </t> <t> Sat next to unsuspecting commuter on bus and went totally unnoticed . </t> <t> Ireland 's most infamous female prisoner murdered husband Tom in 1996 . </t>",
    "tree": [
      "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\"))))",
      "(a / allow-01\n   :ARG1 (o / out-06\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Catherine\"\n                              :op2 \"Nevin\")))\n   :concession (j / jail-01\n                  :ARG1 p\n                  :ARG2 (l / life)\n                  :time (d / date-entity\n                           :year 2000\n                           :month 4)))",
      "(o / out-06\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Catherine\"\n                     :op2 \"Nevin\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Catherine\"\n            :op2 \"Nevin\"))",
      "(n / name\n   :op1 \"Catherine\")",
      "(n / name\n   :op2 \"Nevin\")",
      "(j / jail-01\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (l / life))",
      "(j / jail-01\n   :ARG1 (p / person :name (n / name :op1 \"Catherine\" :op2 \"Nevin\"))\n   :ARG2 (l / life)\n   :time (d / date-entity\n            :year 2000\n            :month 4))",
      "(d / date-entity\n   :year 2000)",
      "(d / date-entity\n   :month 4)",
      "(s / see-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 62\n                    :unit (y / year))\n            :accompanier (p2 / person\n                             :ARG0-of (h / have-rel-role-91\n                                         :ARG1 p\n                                         :ARG2 (p3 / pal)))\n            :ARG0-of (w / walk-01\n                        :location (a / around\n                                     :op1 (c / city\n                                             :name (n / name\n                                                      :op1 \"Dublin\"))))))",
      "(s / see-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 62\n                    :unit (y / year))\n            :accompanier (p2 / person\n                             :ARG0-of (h / have-rel-role-91\n                                         :ARG1 p\n                                         :ARG2 (p3 / pal)))\n            :ARG0-of (w / walk-01\n                        :location (a / around\n                                     :op1 (c / city\n                                             :name (n / name\n                                                      :op1 \"Dublin\")))))\n   :location (b / bus))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (p3 / pal))\n   :ARG0-of (w / walk-01\n               :location (a / around\n                            :op1 (c / city\n                                    :name (n / name\n                                             :op1 \"Dublin\")))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (p3 / pal))\n   :ARG0-of (w / walk-01\n               :location (a / around\n                            :op1 (c / city\n                                    :name (n / name\n                                             :op1 \"Dublin\"))))\n   :age (t / temporal-quantity\n           :quant 62\n           :unit (y / year)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (p3 / pal))\n   :ARG0-of (w / walk-01\n               :location (a / around\n                            :op1 (c / city\n                                    :name (n / name\n                                             :op1 \"Dublin\"))))\n   :accompanier (p2 / person\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 p\n                                :ARG2 (p3 / pal))))",
      "(t / temporal-quantity\n   :quant 62)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(h / have-rel-role-91\n   :ARG1 (p / person)\n   :ARG2 (p3 / pal))",
      "(w / walk-01\n   :location (a / around\n                :op1 (c / city\n                        :name (n / name\n                                 :op1 \"Dublin\"))))",
      "(a / around\n   :op1 (c / city\n           :name (n / name\n                    :op1 \"Dublin\")))",
      "(c / city\n   :name (n / name\n            :op1 \"Dublin\"))",
      "(n / name\n   :op1 \"Dublin\")",
      "(a / and\n   :op1 (s / sit-01\n           :ARG1 (ii / i)\n           :ARG2 (n / next-to\n                    :op1 (p / person\n                            :ARG0-of (c / commute-01)\n                            :ARG0-of (s2 / suspect-01\n                                         :polarity -))\n                    :location (b / bus))))",
      "(a / and\n   :op2 (n2 / notice-01\n            :polarity -\n            :ARG1 (ii / i)\n            :degree (t / total)))",
      "(s / sit-01\n   :ARG1 (ii / i)\n   :ARG2 (n / next-to\n            :op1 (p / person\n                    :ARG0-of (c / commute-01)\n                    :ARG0-of (s2 / suspect-01\n                                 :polarity -))\n            :location (b / bus)))",
      "(n / next-to\n   :op1 (p / person\n           :ARG0-of (c / commute-01)\n           :ARG0-of (s2 / suspect-01\n                        :polarity -)))",
      "(n / next-to\n   :location (b / bus))",
      "(p / person\n   :ARG0-of (c / commute-01)\n   :ARG0-of (s2 / suspect-01\n                :polarity -))",
      "(s2 / suspect-01\n    :polarity -)",
      "(n2 / notice-01\n    :ARG1 (ii / i))",
      "(n2 / notice-01\n    :ARG1 (ii / i)\n    :polarity -)",
      "(n2 / notice-01\n    :ARG1 (ii / i)\n    :degree (t / total))",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1-of (h / have-rel-role-91\n                        :ARG0 (p2 / person\n                                  :ARG1-of (ii / imprison-01)\n                                  :mod (f / female)\n                                  :ARG1-of (h2 / have-degree-91\n                                               :ARG2 (ii2 / infamous)\n                                               :ARG3 (m2 / most)\n                                               :ARG5 (p3 / person\n                                                         :ARG1-of (ii3 / imprison-01)\n                                                         :location (c / country\n                                                                      :name (n2 / name\n                                                                                :op1 \"Ireland\")))))\n                        :ARG2 (h3 / husband)))\n   :ARG1 p)",
      "(m / murder-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\")\n            :ARG1-of (h / have-rel-role-91\n                        :ARG0 (p2 / person\n                                  :ARG1-of (ii / imprison-01)\n                                  :mod (f / female)\n                                  :ARG1-of (h2 / have-degree-91\n                                               :ARG2 (ii2 / infamous)\n                                               :ARG3 (m2 / most)\n                                               :ARG5 (p3 / person\n                                                         :ARG1-of (ii3 / imprison-01)\n                                                         :location (c / country\n                                                                      :name (n2 / name\n                                                                                :op1 \"Ireland\")))))\n                        :ARG2 (h3 / husband)))\n   :ARG1 p\n   :time (d / date-entity\n            :year 1996))",
      "(p / person\n   :ARG1-of (h / have-rel-role-91\n               :ARG0 (p2 / person\n                         :ARG1-of (ii / imprison-01)\n                         :mod (f / female)\n                         :ARG1-of (h2 / have-degree-91\n                                      :ARG2 (ii2 / infamous)\n                                      :ARG3 (m2 / most)\n                                      :ARG5 (p3 / person\n                                                :ARG1-of (ii3 / imprison-01)\n                                                :location (c / country\n                                                             :name (n2 / name\n                                                                       :op1 \"Ireland\")))))\n               :ARG2 (h3 / husband))\n   :ARG1-of (ii / imprison-01)\n   :ARG1-of (h2 / have-degree-91\n                :ARG2 (ii2 / infamous)\n                :ARG3 (m2 / most)\n                :ARG5 (p3 / person\n                          :ARG1-of (ii3 / imprison-01)\n                          :location (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Ireland\"))))\n   :ARG1-of (ii3 / imprison-01))",
      "(p / person\n   :ARG1-of (h / have-rel-role-91\n               :ARG0 (p2 / person\n                         :ARG1-of (ii / imprison-01)\n                         :mod (f / female)\n                         :ARG1-of (h2 / have-degree-91\n                                      :ARG2 (ii2 / infamous)\n                                      :ARG3 (m2 / most)\n                                      :ARG5 (p3 / person\n                                                :ARG1-of (ii3 / imprison-01)\n                                                :location (c / country\n                                                             :name (n2 / name\n                                                                       :op1 \"Ireland\")))))\n               :ARG2 (h3 / husband))\n   :ARG1-of (ii / imprison-01)\n   :ARG1-of (h2 / have-degree-91\n                :ARG2 (ii2 / infamous)\n                :ARG3 (m2 / most)\n                :ARG5 (p3 / person\n                          :ARG1-of (ii3 / imprison-01)\n                          :location (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Ireland\"))))\n   :ARG1-of (ii3 / imprison-01)\n   :name (n / name\n            :op1 \"Tom\"))",
      "(p / person\n   :ARG1-of (h / have-rel-role-91\n               :ARG0 (p2 / person\n                         :ARG1-of (ii / imprison-01)\n                         :mod (f / female)\n                         :ARG1-of (h2 / have-degree-91\n                                      :ARG2 (ii2 / infamous)\n                                      :ARG3 (m2 / most)\n                                      :ARG5 (p3 / person\n                                                :ARG1-of (ii3 / imprison-01)\n                                                :location (c / country\n                                                             :name (n2 / name\n                                                                       :op1 \"Ireland\")))))\n               :ARG2 (h3 / husband))\n   :ARG1-of (ii / imprison-01)\n   :ARG1-of (h2 / have-degree-91\n                :ARG2 (ii2 / infamous)\n                :ARG3 (m2 / most)\n                :ARG5 (p3 / person\n                          :ARG1-of (ii3 / imprison-01)\n                          :location (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Ireland\"))))\n   :ARG1-of (ii3 / imprison-01)\n   :mod (f / female))",
      "(p / person\n   :ARG1-of (h / have-rel-role-91\n               :ARG0 (p2 / person\n                         :ARG1-of (ii / imprison-01)\n                         :mod (f / female)\n                         :ARG1-of (h2 / have-degree-91\n                                      :ARG2 (ii2 / infamous)\n                                      :ARG3 (m2 / most)\n                                      :ARG5 (p3 / person\n                                                :ARG1-of (ii3 / imprison-01)\n                                                :location (c / country\n                                                             :name (n2 / name\n                                                                       :op1 \"Ireland\")))))\n               :ARG2 (h3 / husband))\n   :ARG1-of (ii / imprison-01)\n   :ARG1-of (h2 / have-degree-91\n                :ARG2 (ii2 / infamous)\n                :ARG3 (m2 / most)\n                :ARG5 (p3 / person\n                          :ARG1-of (ii3 / imprison-01)\n                          :location (c / country\n                                       :name (n2 / name\n                                                 :op1 \"Ireland\"))))\n   :ARG1-of (ii3 / imprison-01)\n   :location (c / country\n                :name (n2 / name\n                          :op1 \"Ireland\")))",
      "(n / name\n   :op1 \"Tom\")",
      "(n / name\n   :op1 \"Ireland\")",
      "(h / have-rel-role-91\n   :ARG0 (p2 / person\n             :ARG1-of (ii / imprison-01)\n             :mod (f / female)\n             :ARG1-of (h2 / have-degree-91\n                          :ARG2 (ii2 / infamous)\n                          :ARG3 (m2 / most)\n                          :ARG5 (p3 / person\n                                    :ARG1-of (ii3 / imprison-01)\n                                    :location (c / country\n                                                 :name (n2 / name\n                                                           :op1 \"Ireland\")))))\n   :ARG2 (h3 / husband))",
      "(h2 / have-degree-91\n    :ARG2 (ii2 / infamous)\n    :ARG3 (m2 / most)\n    :ARG5 (p3 / person\n              :ARG1-of (ii3 / imprison-01)\n              :location (c / country\n                           :name (n2 / name\n                                     :op1 \"Ireland\"))))",
      "(c / country\n   :name (n2 / name\n             :op1 \"Ireland\"))",
      "(d / date-entity\n   :year 1996)"
    ],
    "smus": [
      "Catherine Nevin was allowed out.",
      "Catherine Nevin was allowed out despite being jailed for life in April 2000.",
      "Catherine Nevin is out.",
      "Catherine Nevin",
      "Catherine",
      "Nevin",
      "Catherine Nevin was jailed for life.",
      "Catherine Nevin was jailed for life in April 2000.",
      "2000.",
      "April",
      "A 62 year old man was seen walking around Dublin with his pal.",
      "A 62 year old man was seen on a bus with his pal walking around Dublin.",
      "My pal walking around Dublin.",
      "My pal walking around Dublin at 62.",
      "A pal walking around Dublin with his pal.",
      "62",
      "Year.",
      "pal",
      "Walking around Dublin.",
      "Around Dublin.",
      "Dublin",
      "Dublin",
      "And I'm sitting next to an unsuspecting commuter on the bus.",
      "And I wasn't totally unaware.",
      "I'm sitting next to an unsuspecting commuter on the bus.",
      "Next to the unsuspecting commuter.",
      "next to the bus",
      "a suspect commuter",
      "Suspected.",
      "I was noticeably.",
      "I wasn't noticed.",
      "I was totally noticed.",
      "Tom, the husband of one of Ireland's most infamous female prisoners, was murdered.",
      "Tom, the husband of Ireland's most infamous female prisoner, was murdered in 1996.",
      "The husband of the most infamous female prisoner in Ireland, the prisoner of war.",
      "Tom is the most infamous prisoner in Ireland, the female prisoner, and the husband of the most infamous prisoner in Ireland.",
      "The husband of the most infamous female prisoner in Ireland, the prisoner of the year, is the female prisoner.",
      "The husband of the most infamous female prisoner in Ireland, is the most infamous prisoner in Ireland.",
      "Tom",
      "Ireland (IRE)",
      "The husband of the most infamous female prisoner in Ireland.",
      "The most infamous prisoner in Ireland.",
      "Ireland (IRE)",
      "1996."
    ]
  },
  {
    "instance_id": "realsumm-12",
    "summary": "<t> Didier Drogba given the Barclays Spirit of the Game award . </t> <t> The 37-year - old 's foundation has done impressive work in Africa . </t> <t> Some of Chelsea 's stars attended a charity ball which raised \u00a3 400,000 . </t> <t> CLICK HERE for all the latest Chelsea news . </t>",
    "tree": [
      "(g / give-01\n   :ARG1 (a / award\n            :name (n / name\n                     :op1 \"Barclays\"\n                     :op2 \"Spirit\"\n                     :op3 \"of\"\n                     :op4 \"the\"\n                     :op5 \"Game\"))\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Didier\"\n                      :op2 \"Drogba\")))",
      "(a / award\n   :name (n / name\n            :op1 \"Barclays\"\n            :op2 \"Spirit\"\n            :op3 \"of\"\n            :op4 \"the\"\n            :op5 \"Game\"))",
      "(n / name\n   :op1 \"Barclays\")",
      "(n / name\n   :op2 \"Spirit\")",
      "(n / name\n   :op3 \"of\")",
      "(n / name\n   :op4 \"the\")",
      "(n / name\n   :op5 \"Game\")",
      "(n / name\n   :op1 \"Didier\")",
      "(n / name\n   :op2 \"Drogba\")",
      "(p / person\n   :name (n2 / name\n             :op1 \"Didier\"\n             :op2 \"Drogba\"))",
      "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :age (t / temporal-quantity\n                             :quant 37\n                             :unit (y / year))))\n   :ARG0-of (ii / impress-01))",
      "(w / work-01\n   :ARG0 (f / foundation\n            :poss (p / person\n                     :age (t / temporal-quantity\n                             :quant 37\n                             :unit (y / year))))\n   :ARG0-of (ii / impress-01)\n   :location (c / continent\n                :name (n / name\n                         :op1 \"Africa\")))",
      "(f / foundation\n   :poss (p / person\n            :age (t / temporal-quantity\n                    :quant 37\n                    :unit (y / year))))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 37\n           :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 37)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(c / continent\n   :name (n / name\n            :op1 \"Africa\"))",
      "(n / name\n   :op1 \"Africa\")",
      "(a / attend-01\n   :ARG0 (s / star\n            :ARG1-of (ii / include-91\n                         :ARG2 (s2 / star\n                                   :poss (p / person\n                                            :name (n / name\n                                                     :op1 \"Chelsea\"))))\n            :quant (s3 / some))\n   :ARG1 (b / ball\n            :purpose (c / charity)\n            :ARG0-of (r / raise-02\n                        :ARG1 (m / monetary-quantity\n                                 :quant 400000\n                                 :unit (p2 / pound)))))",
      "(s / star\n   :ARG1-of (ii / include-91\n                :ARG2 (s2 / star\n                          :poss (p / person\n                                   :name (n / name\n                                            :op1 \"Chelsea\")))))",
      "(s / star\n   :ARG1-of (ii / include-91\n                :ARG2 (s2 / star\n                          :poss (p / person\n                                   :name (n / name\n                                            :op1 \"Chelsea\"))))\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Chelsea\")))",
      "(s / star\n   :ARG1-of (ii / include-91\n                :ARG2 (s2 / star\n                          :poss (p / person\n                                   :name (n / name\n                                            :op1 \"Chelsea\"))))\n   :quant (s3 / some))",
      "(ii / include-91\n    :ARG2 (s2 / star\n              :poss (p / person\n                       :name (n / name\n                                :op1 \"Chelsea\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Chelsea\"))",
      "(n / name\n   :op1 \"Chelsea\")",
      "(b / ball\n   :ARG0-of (r / raise-02\n               :ARG1 (m / monetary-quantity\n                        :quant 400000\n                        :unit (p2 / pound))))",
      "(b / ball\n   :ARG0-of (r / raise-02\n               :ARG1 (m / monetary-quantity\n                        :quant 400000\n                        :unit (p2 / pound))))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 400000\n            :unit (p2 / pound)))",
      "(m / monetary-quantity\n   :quant 400000)",
      "(m / monetary-quantity\n   :unit (p2 / pound))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :mode imperative)",
      "(c / CLICK-01\n   :ARG0 (y / you)\n   :location (h / here))",
      "(c / CLICK-01\n   :ARG0 (y / you))",
      "(n / news\n   :mod (l / last))",
      "(n / news\n   :mod (a / all))",
      "(n / news\n   :topic (p / person\n             :name (n2 / name\n                       :op1 \"Chelsea\")))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Chelsea\"))",
      "(n2 / name\n    :op1 \"Chelsea\")"
    ],
    "smus": [
      "The Barclays Spirit of the Game award was given to Didier Drogba.",
      "The Barclays Spirit of the Game award",
      "Barclays",
      "Spirit",
      "of.",
      "The",
      "Game",
      "Didier",
      "Drogba",
      "Didier Drogba",
      "The 37 year old's foundation did impressive work.",
      "The 37 year old's foundation has been an impressive work in Africa.",
      "The foundation of the 37 year old.",
      "37 year old",
      "37",
      "Year.",
      "Africa",
      "Africa",
      "Some of Chelsea's stars attended a charity ball that raised PS400,000.",
      "Chelsea's stars",
      "Chelsea's stars include:",
      "Some of Chelsea's stars.",
      "Chelsea's stars include:",
      "Chelsea",
      "Chelsea",
      "The ball that raised PS400,000.",
      "The ball that raised PS400,000.",
      "raised PS400,000.",
      "400,000.",
      "PS",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "CLICK HERE.",
      "Latest news.",
      "All news.",
      "News about Chelsea.",
      "Chelsea",
      "Chelsea"
    ]
  },
  {
    "instance_id": "realsumm-13",
    "summary": "<t> Figures from the Catholic Church show more and more becoming nuns . </t> <t> The number of women taking Holy Vows stood at just seven back in 2004 . </t> <t> But that figure had risen to 15 in 2009 and increased further to 45 last year . </t> <t> One father said a ' gap in the market for meaning ' led people toward religion . </t>",
    "tree": [
      "(s / show-01\n   :ARG0 (f / figure\n            :source (o / organization\n                       :name (n / name\n                                :op1 \"Catholic\"\n                                :op2 \"Church\")))\n   :ARG1 (b / become-01\n            :ARG1 (p / person\n                     :quant (n2 / number\n                                :ARG1-of (ii / increase-01)))\n            :ARG2 (n3 / nun)))",
      "(f / figure\n   :source (o / organization\n              :name (n / name\n                       :op1 \"Catholic\"\n                       :op2 \"Church\")))",
      "(o / organization\n   :name (n / name\n            :op1 \"Catholic\"\n            :op2 \"Church\"))",
      "(n / name\n   :op1 \"Catholic\")",
      "(n / name\n   :op2 \"Church\")",
      "(b / become-01\n   :ARG1 (p / person\n            :quant (n2 / number\n                       :ARG1-of (ii / increase-01)))\n   :ARG2 (n3 / nun))",
      "(p / person\n   :quant (n2 / number\n              :ARG1-of (ii / increase-01)))",
      "(n2 / number\n    :ARG1-of (ii / increase-01))",
      "(m / multi-sentence\n   :snt1 (s / stand-04\n            :ARG1 (n / number\n                     :quant-of (w / woman\n                                  :ARG0-of (t / take-01\n                                              :ARG1 (v / vow-01\n                                                       :mod (h / holy)))))\n            :ARG2 (n2 / numerical-quantity\n                      :quant 7\n                      :mod (j / just))\n            :time (d / date-entity\n                     :year 2004)))",
      "(s / stand-04\n   :ARG1 (n / number\n            :quant-of (w / woman\n                         :ARG0-of (t / take-01\n                                     :ARG1 (v / vow-01\n                                              :mod (h / holy)))))\n   :ARG2 (n2 / numerical-quantity\n             :quant 7\n             :mod (j / just)))",
      "(s / stand-04\n   :ARG1 (n / number\n            :quant-of (w / woman\n                         :ARG0-of (t / take-01\n                                     :ARG1 (v / vow-01\n                                              :mod (h / holy)))))\n   :ARG2 (n2 / numerical-quantity\n             :quant 7\n             :mod (j / just))\n   :time (d / date-entity\n            :year 2004))",
      "(n / number\n   :quant-of (w / woman\n                :ARG0-of (t / take-01\n                            :ARG1 (v / vow-01\n                                     :mod (h / holy)))))",
      "(w / woman\n   :ARG0-of (t / take-01\n               :ARG1 (v / vow-01\n                        :mod (h / holy))))",
      "(t / take-01\n   :ARG1 (v / vow-01\n            :mod (h / holy)))",
      "(v / vow-01\n   :mod (h / holy))",
      "(n2 / numerical-quantity\n    :quant 7)",
      "(n2 / numerical-quantity\n    :mod (j / just))",
      "(d / date-entity\n   :year 2004)",
      "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (r / rise-01\n                    :ARG1 (f / figure\n                             :mod (t / that))\n                    :ARG4 (n / numerical-quantity\n                             :quant 15)\n                    :time (d / date-entity\n                             :year 2009))\n            :op2 (ii / increase-01\n                     :ARG1 f\n                     :ARG4 (n2 / numerical-quantity\n                               :quant 45)\n                     :degree (f2 / further)\n                     :time (y / year\n                              :mod (l / last)))))",
      "(a / and\n   :op1 (r / rise-01\n           :ARG1 (f / figure\n                    :mod (t / that))\n           :ARG4 (n / numerical-quantity\n                    :quant 15)\n           :time (d / date-entity\n                    :year 2009)))",
      "(a / and\n   :op2 (ii / increase-01\n            :ARG1 (f / figure)\n            :ARG4 (n2 / numerical-quantity\n                      :quant 45)\n            :degree (f2 / further)\n            :time (y / year\n                     :mod (l / last))))",
      "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that))\n   :ARG4 (n / numerical-quantity\n            :quant 15))",
      "(r / rise-01\n   :ARG1 (f / figure\n            :mod (t / that))\n   :ARG4 (n / numerical-quantity\n            :quant 15)\n   :time (d / date-entity\n            :year 2009))",
      "(f / figure\n   :mod (t / that))",
      "(n / numerical-quantity\n   :quant 15)",
      "(n / numerical-quantity\n   :quant 45)",
      "(d / date-entity\n   :year 2009)",
      "(ii / increase-01\n    :ARG1 (f / figure)\n    :ARG4 (n2 / numerical-quantity\n              :quant 45))",
      "(ii / increase-01\n    :ARG1 (f / figure)\n    :ARG4 (n2 / numerical-quantity\n              :quant 45)\n    :degree (f2 / further))",
      "(ii / increase-01\n    :ARG1 (f / figure)\n    :ARG4 (n2 / numerical-quantity\n              :quant 45)\n    :time (y / year\n             :mod (l / last)))",
      "(y / year\n   :mod (l / last))",
      "(s / say-01\n   :ARG0 (p / person\n            :quant 1\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (f / father)))\n   :ARG1 (l / lead-01\n            :ARG0 (g / gap\n                     :location (m / market)\n                     :topic (m2 / mean-01))\n            :ARG1 (p2 / person)\n            :ARG4 (r / religion)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (f / father)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (f / father))\n   :quant 1)",
      "(h / have-rel-role-91\n   :ARG2 (f / father))",
      "(l / lead-01\n   :ARG0 (g / gap\n            :location (m / market)\n            :topic (m2 / mean-01))\n   :ARG1 (p2 / person)\n   :ARG4 (r / religion))",
      "(g / gap\n   :location (m / market))",
      "(g / gap\n   :topic (m2 / mean-01))"
    ],
    "smus": [
      "Catholic Church figures show that more and more people are becoming nuns.",
      "Catholic Church figures",
      "The Catholic Church.",
      "Catholic.",
      "Church.",
      "More and more people are becoming nuns.",
      "More and more people.",
      "The numbers are increasing.",
      "The number of women taking the holy vow stood at just 7 in 2004.",
      "The number of women taking the holy vow stood at just 7.",
      "In 2004, the number of women taking the holy vow stood at just seven.",
      "The number of women taking the holy vows.",
      "Women taking Holy Vows",
      "Taking the Holy Vow.",
      "Holy vows",
      "7",
      "Just numbers.",
      "2004-00-00",
      "But that figure has risen to 15 in 2009 and increased to 45 further in last year.",
      "And that figure has risen to 15 in 2009.",
      "And the figure increased further to 45 percent from last year.",
      "That figure has risen to 15.",
      "That figure has risen to 15 in 2009.",
      "That figure.",
      "15",
      "45",
      "2009-09-06",
      "The figure increased to 45.",
      "The figure increased further to 45.",
      "The figure increased from 45 last year.",
      "Last year.",
      "One father said the \"meaning gap\" in the market had led people to religion.",
      "Father",
      "One father.",
      "Father.",
      "The meaning gap in the market has led people to religion.",
      "There is a gap in the market.",
      "There is a gap in meaning."
    ]
  },
  {
    "instance_id": "realsumm-14",
    "summary": "<t> Eduardo Vargas put QPR ahead with a spectacular strike from 25 yards after 15 minutes . </t> <t> Charlie Austin doubled the lead with a header 20 minutes later , Bobby Zamora made it three . </t> <t> Victor Anichebe pulled one back for West Brom before Youssouf Mulumbu was sent off and Joey Barton scored . </t>",
    "tree": [
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :manner (s / strike-01\n              :ARG0 p2\n              :ARG2 (d / distance-quantity\n                       :quant 25\n                       :unit (y / yard))\n              :mod (s2 / spectacle)))",
      "(p / put-03\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Eduardo\"\n                      :op2 \"Vargas\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"QPR\"))\n   :ARG2 (a / ahead)\n   :time (a2 / after\n             :op1 (t2 / temporal-quantity\n                      :quant 15\n                      :unit (m / minute))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Eduardo\"\n             :op2 \"Vargas\"))",
      "(n / name\n   :op1 \"Eduardo\")",
      "(n / name\n   :op2 \"Vargas\")",
      "(n / name\n   :op1 \"QPR\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"QPR\"))",
      "(s / strike-01\n   :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n   :ARG2 (d / distance-quantity\n            :quant 25\n            :unit (y / yard)))",
      "(s / strike-01\n   :ARG0 (p2 / person :name (n / name :op1 \"Eduardo\" :op2 \"Vargas\"))\n   :ARG2 (d / distance-quantity\n            :quant 25\n            :unit (y / yard))\n   :mod (s2 / spectacle))",
      "(d / distance-quantity\n   :quant 25)",
      "(d / distance-quantity\n   :unit (y / yard))",
      "(a2 / after\n    :op1 (t2 / temporal-quantity\n             :quant 15\n             :unit (m / minute)))",
      "(t2 / temporal-quantity\n    :quant 15)",
      "(t2 / temporal-quantity\n    :unit (m / minute))",
      "(a / and\n   :op1 (d / double-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Charlie\"\n                             :op2 \"Austin\"))\n           :ARG1 (l / lead-01)\n           :instrument (h / header)\n           :time (a2 / after\n                     :quant (t / temporal-quantity\n                               :quant 20\n                               :unit (m / minute)))))",
      "(a / and\n   :op2 (m2 / make-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bobby\"\n                                :op2 \"Zamora\"))\n            :ARG1 (ii / it\n                      :quant 3)))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01)\n   :instrument (h / header))",
      "(d / double-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"\n                     :op2 \"Austin\"))\n   :ARG1 (l / lead-01)\n   :time (a2 / after\n             :quant (t / temporal-quantity\n                       :quant 20\n                       :unit (m / minute))))",
      "(p / person\n   :name (n / name\n            :op1 \"Charlie\"\n            :op2 \"Austin\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Bobby\"\n             :op2 \"Zamora\"))",
      "(n / name\n   :op1 \"Charlie\")",
      "(n / name\n   :op2 \"Austin\")",
      "(n / name\n   :op1 \"Bobby\")",
      "(n / name\n   :op2 \"Zamora\")",
      "(a2 / after\n    :quant (t / temporal-quantity\n              :quant 20\n              :unit (m / minute)))",
      "(t / temporal-quantity\n   :quant 20)",
      "(t / temporal-quantity\n   :unit (m / minute))",
      "(m2 / make-01\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Bobby\"\n                        :op2 \"Zamora\"))\n    :ARG1 (ii / it\n              :quant 3))",
      "(ii / it\n    :quant 3)",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :beneficiary (t / team\n                   :name (n2 / name\n                             :op1 \"West\"\n                             :op2 \"Brum\")))",
      "(p / pull-back-09\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Victor\"\n                      :op2 \"Anichebe\"))\n   :ARG1 (o / one)\n   :time (b / before\n            :op1 (a / and\n                    :op1 (s / send-off-08\n                            :ARG1 (p3 / person\n                                      :name (n3 / name\n                                                :op1 \"Youssouf\"\n                                                :op2 \"Mulumbu\")))\n                    :op2 (s2 / score-01\n                             :ARG0 (p4 / person\n                                       :name (n4 / name\n                                                 :op1 \"Joey\"\n                                                 :op2 \"Barton\"))))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Victor\"\n             :op2 \"Anichebe\"))",
      "(p2 / person\n    :name (n3 / name\n              :op1 \"Youssouf\"\n              :op2 \"Mulumbu\"))",
      "(p2 / person\n    :name (n4 / name\n              :op1 \"Joey\"\n              :op2 \"Barton\"))",
      "(n / name\n   :op1 \"Victor\")",
      "(n / name\n   :op2 \"Anichebe\")",
      "(n / name\n   :op1 \"West\")",
      "(n / name\n   :op2 \"Brum\")",
      "(n / name\n   :op1 \"Youssouf\")",
      "(n / name\n   :op2 \"Mulumbu\")",
      "(n / name\n   :op1 \"Joey\")",
      "(n / name\n   :op2 \"Barton\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"West\"\n             :op2 \"Brum\"))",
      "(b / before\n   :op1 (a / and\n           :op1 (s / send-off-08\n                   :ARG1 (p3 / person\n                             :name (n3 / name\n                                       :op1 \"Youssouf\"\n                                       :op2 \"Mulumbu\")))\n           :op2 (s2 / score-01\n                    :ARG0 (p4 / person\n                              :name (n4 / name\n                                        :op1 \"Joey\"\n                                        :op2 \"Barton\")))))",
      "(a / and\n   :op1 (s / send-off-08\n           :ARG1 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Youssouf\"\n                               :op2 \"Mulumbu\"))))",
      "(a / and\n   :op2 (s2 / score-01\n            :ARG0 (p4 / person\n                      :name (n4 / name\n                                :op1 \"Joey\"\n                                :op2 \"Barton\"))))",
      "(s / send-off-08\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Youssouf\"\n                       :op2 \"Mulumbu\")))",
      "(s2 / score-01\n    :ARG0 (p4 / person\n              :name (n4 / name\n                        :op1 \"Joey\"\n                        :op2 \"Barton\")))"
    ],
    "smus": [
      "Eduardo Vargas put QPR ahead.",
      "Eduardo Vargas put QPR ahead with a spectacular 25-yard strike.",
      "After 15 minutes Eduardo Vargas put QPR ahead.",
      "Eduardo Vargas",
      "Eduardo",
      "Vargas",
      "QPR",
      "QPR",
      "Eduardo Vargas made the strike at 25 yards.",
      "Eduardo Vargas made a spectacle strike of 25 yards.",
      "25 miles",
      "Yards",
      "After 15 minutes",
      "15",
      "Minutes",
      "Charlie Austin doubled the lead with a header 20 minutes later.",
      "And Bobby Zamora made three of it.",
      "Charlie Austin doubled the lead.",
      "Charlie Austin doubled the lead with a header.",
      "Charlie Austin doubled the lead in 20 minutes.",
      "Charlie Austin",
      "Bobby Zamora",
      "Charlie",
      "Austin",
      "Bobby",
      "Zamora",
      "20 minutes later.",
      "20",
      "Minutes",
      "Bobby Zamora made three of it.",
      "It's three.",
      "Victor Anichebe pulled back one.",
      "Victor Anichebe pulled back one for West Brum.",
      "Victor Anichebe pulled back one before Youssouf Mulumbu was sent off and Joey Barton scored.",
      "Victor Anichebe",
      "Youssouf Mulumbu",
      "-Joey Barton",
      "Victor",
      "a href=\"http://www.anichebe.com/blog/2011/03/anichebe-the-world-of-anichebe\">Anichebe/a>",
      "West",
      "Brum",
      "Youssouf",
      "Mulumbu",
      "Joey",
      "Barton",
      "West Brom",
      "Before Youssouf Mulumbu was sent off and Joey Barton scored.",
      "And Youssouf Mulumbu was sent off.",
      "And Joey Barton scored.",
      "Youssouf Mulumbu was sent off.",
      "Joey Barton scored."
    ]
  },
  {
    "instance_id": "realsumm-15",
    "summary": "<t> Detroit Red Wings ' Drew Miller was caught by a skate in the first period against the Ottawa Senators . </t> <t> The massive cut required 50 to 60 stitches to close , but did not damage Miller 's eye . </t> <t> The Red Wings lost 2 - 1 but remained in third place in the Atlantic division . </t>",
    "tree": [
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\")\n            :part-of (t / team\n                        :name (n2 / name\n                                  :op1 \"Detroit\"\n                                  :op2 \"Red\"\n                                  :op3 \"Wings\")))\n   :ARG2 (s / skate))",
      "(c / catch-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Drew\"\n                     :op2 \"Miller\")\n            :part-of (t / team\n                        :name (n2 / name\n                                  :op1 \"Detroit\"\n                                  :op2 \"Red\"\n                                  :op3 \"Wings\")))\n   :ARG2 (s / skate)\n   :time (p2 / period\n             :ord (o / ordinal-entity\n                     :value 1)\n             :subevent-of (o2 / oppose-01\n                              :ARG0 t\n                              :ARG1 (t2 / team\n                                        :name (n3 / name\n                                                  :op1 \"Ottawa\"\n                                                  :op2 \"Senators\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Drew\"\n            :op2 \"Miller\"))",
      "(p / person\n   :part-of (t / team\n               :name (n2 / name\n                         :op1 \"Detroit\"\n                         :op2 \"Red\"\n                         :op3 \"Wings\")))",
      "(n / name\n   :op1 \"Drew\")",
      "(n / name\n   :op2 \"Miller\")",
      "(n / name\n   :op1 \"Detroit\")",
      "(n / name\n   :op2 \"Red\")",
      "(n / name\n   :op3 \"Wings\")",
      "(n / name\n   :op1 \"Ottawa\")",
      "(n / name\n   :op2 \"Senators\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"Detroit\"\n             :op2 \"Red\"\n             :op3 \"Wings\"))",
      "(t / team\n   :name (n3 / name\n             :op1 \"Ottawa\"\n             :op2 \"Senators\"))",
      "(p2 / period\n    :ord (o / ordinal-entity\n            :value 1))",
      "(p2 / period\n    :subevent-of (o2 / oppose-01\n                     :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\"))\n                     :ARG1 (t2 / team\n                               :name (n3 / name\n                                         :op1 \"Ottawa\"\n                                         :op2 \"Senators\"))))",
      "(o / ordinal-entity\n   :value 1)",
      "(o2 / oppose-01\n    :ARG0 (t / team :name (n2 / name :op1 \"Detroit\" :op2 \"Red\" :op3 \"Wings\"))\n    :ARG1 (t2 / team\n              :name (n3 / name\n                        :op1 \"Ottawa\"\n                        :op2 \"Senators\")))",
      "(c / contrast-01\n   :ARG1 (r / require-01\n            :ARG0 (c2 / close-01\n                      :ARG1 (c3 / cut-01\n                                :mod (m / massive)))\n            :ARG1 (s / stitch\n                     :quant (b / between\n                               :op1 50\n                               :op2 60)))\n   :ARG2 (d / damage-01\n            :polarity -\n            :ARG0 c3\n            :ARG1 (e / eye\n                     :part-of (p / person\n                                 :name (n / name\n                                          :op1 \"Miller\")))))",
      "(r / require-01\n   :ARG0 (c2 / close-01\n             :ARG1 (c3 / cut-01\n                       :mod (m / massive)))\n   :ARG1 (s / stitch\n            :quant (b / between\n                      :op1 50\n                      :op2 60)))",
      "(c2 / close-01\n    :ARG1 (c3 / cut-01\n              :mod (m / massive)))",
      "(c3 / cut-01\n    :mod (m / massive))",
      "(s / stitch\n   :quant (b / between\n             :op1 50\n             :op2 60))",
      "(b / between\n   :op1 50)",
      "(b / between\n   :op2 60)",
      "(d / damage-01\n   :ARG0 (c3 / cut-01)\n   :ARG1 (e / eye\n            :part-of (p / person\n                        :name (n / name\n                                 :op1 \"Miller\"))))",
      "(d / damage-01\n   :ARG0 (c3 / cut-01)\n   :ARG1 (e / eye\n            :part-of (p / person\n                        :name (n / name\n                                 :op1 \"Miller\")))\n   :polarity -)",
      "(e / eye\n   :part-of (p / person\n               :name (n / name\n                        :op1 \"Miller\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Miller\"))",
      "(n / name\n   :op1 \"Miller\")",
      "(h / have-concession-91\n   :ARG1 (r / remain-01\n            :ARG1 (t / team\n                     :name (n / name\n                              :op1 \"Red\"\n                              :op2 \"Wings\"))\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 3)\n                     :location (d / division\n                                  :mod (o2 / ocean\n                                           :name (n2 / name\n                                                     :op1 \"Atlantic\")))))\n   :ARG2 (l / lose-03\n            :ARG0 t\n            :quant (s / score-entity\n                      :op1 2\n                      :op2 1)))",
      "(r / remain-01\n   :ARG1 (t / team\n            :name (n / name\n                     :op1 \"Red\"\n                     :op2 \"Wings\"))\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 3)\n            :location (d / division\n                         :mod (o2 / ocean\n                                  :name (n2 / name\n                                            :op1 \"Atlantic\")))))",
      "(t / team\n   :name (n / name\n            :op1 \"Red\"\n            :op2 \"Wings\"))",
      "(n / name\n   :op1 \"Red\")",
      "(n / name\n   :op2 \"Wings\")",
      "(n / name\n   :op1 \"Atlantic\")",
      "(p / place\n   :ord (o / ordinal-entity\n           :value 3))",
      "(p / place\n   :location (d / division\n                :mod (o2 / ocean\n                         :name (n2 / name\n                                   :op1 \"Atlantic\"))))",
      "(o / ordinal-entity\n   :value 3)",
      "(d / division\n   :mod (o2 / ocean\n            :name (n2 / name\n                      :op1 \"Atlantic\")))",
      "(o2 / ocean\n    :name (n2 / name\n              :op1 \"Atlantic\"))",
      "(l / lose-03\n   :ARG0 (t / team :name (n / name :op1 \"Red\" :op2 \"Wings\")))",
      "(l / lose-03\n   :ARG0 (t / team :name (n / name :op1 \"Red\" :op2 \"Wings\"))\n   :quant (s / score-entity\n             :op1 2\n             :op2 1))",
      "(s / score-entity\n   :op1 2)",
      "(s / score-entity\n   :op2 1)"
    ],
    "smus": [
      "Drew Miller of the Detroit Red Wings was caught on skates.",
      "Detroit Red Wings defender Drew Miller was caught on skates in the first period against the Ottawa Senators.",
      "Drew Miller",
      "Detroit Red Wings",
      "Drew",
      "Miller",
      "Detroit",
      "Red.",
      "Wings",
      "Ottawa",
      "Senators",
      "Detroit Red Wings",
      "Ottawa Senators",
      "First period.",
      "Period against the Detroit Red Wings vs. the Ottawa Senators.",
      "First..",
      "Detroit Red Wings vs Ottawa Senators",
      "The massive cut required 50-60 stitches to close, but did not damage Miller's eye.",
      "The massive cut required between 50 and 60 stitches to close.",
      "Close the massive cut.",
      "Massive cuts.",
      "50-60 stitches.",
      "50 to 50",
      "60-70",
      "The cut did damage Miller's eye.",
      "The cut did not damage Miller's eye.",
      "Miller's eye.",
      "Miller",
      "Miller",
      "The Red Wings remained in third place in the Atlantic division, but lost by two goals in one loss.",
      "The Red Wings remained in third place in the Atlantic division.",
      "Red Wings",
      "Red",
      "Wings>",
      "Atlantic",
      "The third place.",
      "The place is in the Atlantic division.",
      "3.",
      "The Atlantic division.",
      "The Atlantic.",
      "The Red Wings lost",
      "The Red Wings lost by 2 goals, 1 in",
      "2",
      "1"
    ]
  },
  {
    "instance_id": "realsumm-16",
    "summary": "<t> Jurgen Klopp will leave Borussia Dortmund at the end of the season . </t> <t> German boss has enjoyed success with club during seven - year stint . </t> <t> He has been linked with Manchester City , Manchester United and Arsenal . </t> <t> Per Mertesacker says he would like to see Klopp in the Premier League . </t>",
    "tree": [
      "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\")))",
      "(l / leave-15\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jurgen\"\n                     :op2 \"Klopp\"))\n   :ARG1 (t / team\n            :name (n2 / name\n                      :op1 \"Borussia\"\n                      :op2 \"Dortmund\"))\n   :time (e / end-01\n            :ARG1 (s / season)))",
      "(p / person\n   :name (n / name\n            :op1 \"Jurgen\"\n            :op2 \"Klopp\"))",
      "(n / name\n   :op1 \"Jurgen\")",
      "(n / name\n   :op2 \"Klopp\")",
      "(n / name\n   :op1 \"Borussia\")",
      "(n / name\n   :op2 \"Dortmund\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"Borussia\"\n             :op2 \"Dortmund\"))",
      "(e / end-01\n   :ARG1 (s / season))",
      "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG0 b\n            :ARG1 (c2 / club)))",
      "(e / enjoy-01\n   :ARG0 (b / boss\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\")))\n   :ARG1 (s / succeed-01\n            :ARG0 b\n            :ARG1 (c2 / club))\n   :duration (s2 / stint\n                 :duration (t / temporal-quantity\n                              :quant 7\n                              :unit (y / year))))",
      "(b / boss\n   :mod (c / country\n           :name (n / name\n                    :op1 \"Germany\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Germany\"))",
      "(n / name\n   :op1 \"Germany\")",
      "(s / succeed-01\n   :ARG0 (b / boss)\n   :ARG1 (c2 / club))",
      "(s2 / stint\n    :duration (t / temporal-quantity\n                 :quant 7\n                 :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 7)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(l / link-01\n   :ARG1 (h / he)\n   :ARG2 (a / and\n            :op1 (t / team\n                    :name (n / name\n                             :op1 \"Manchester\"\n                             :op2 \"City\"))\n            :op2 (t2 / team\n                     :name (n2 / name\n                               :op1 \"Manchester\"\n                               :op2 \"United\"))\n            :op3 (t3 / team\n                     :name (n3 / name\n                               :op1 \"Arsenal\"))))",
      "(a / and\n   :op1 (t / team\n           :name (n / name\n                    :op1 \"Manchester\"\n                    :op2 \"City\")))",
      "(a / and\n   :op2 (t2 / team\n            :name (n2 / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\")))",
      "(a / and\n   :op3 (t3 / team\n            :name (n3 / name\n                      :op1 \"Arsenal\")))",
      "(t / team\n   :name (n / name\n            :op1 \"Manchester\"\n            :op2 \"City\"))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Manchester\"\n             :op2 \"United\"))",
      "(t / team\n   :name (n3 / name\n             :op1 \"Arsenal\"))",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op2 \"City\")",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op2 \"United\")",
      "(n / name\n   :op1 \"Arsenal\")",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Per\"\n                     :op2 \"Mertesacker\"))\n   :ARG1 (l / like-02\n            :ARG0 p\n            :ARG1 (s2 / see-01\n                      :ARG0 p\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Klopp\")\n                                :location (l2 / league\n                                              :name (n3 / name\n                                                        :op1 \"Premier\"\n                                                        :op2 \"League\"))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Per\"\n            :op2 \"Mertesacker\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Klopp\"))",
      "(p / person\n   :location (l2 / league\n                 :name (n3 / name\n                           :op1 \"Premier\"\n                           :op2 \"League\")))",
      "(n / name\n   :op1 \"Per\")",
      "(n / name\n   :op2 \"Mertesacker\")",
      "(n / name\n   :op1 \"Klopp\")",
      "(n / name\n   :op1 \"Premier\")",
      "(n / name\n   :op2 \"League\")",
      "(l / like-02\n   :ARG0 (p / person :name (n / name :op1 \"Per\" :op2 \"Mertesacker\"))\n   :ARG1 (s2 / see-01\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Klopp\")\n                       :location (l2 / league\n                                     :name (n3 / name\n                                               :op1 \"Premier\"\n                                               :op2 \"League\")))))",
      "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Per\" :op2 \"Mertesacker\"))\n    :ARG1 (p2 / person\n              :name (n2 / name\n                        :op1 \"Klopp\")\n              :location (l2 / league\n                            :name (n3 / name\n                                      :op1 \"Premier\"\n                                      :op2 \"League\"))))",
      "(l2 / league\n    :name (n3 / name\n              :op1 \"Premier\"\n              :op2 \"League\"))"
    ],
    "smus": [
      "Kurgen Klopp will leave Borussia Dortmund.",
      "Jurgen Klopp will leave Borussia Dortmund at the end of the season.",
      "-Jurgen Klopp",
      "-Jurgen",
      "Klopp",
      "Borussia",
      "Dortmund",
      "Borussia Dortmund",
      "End of season",
      "The German boss has enjoyed success at the club.",
      "The German boss has enjoyed success at the club during his seven-year stint.",
      "German boss.",
      "Germany (DE)",
      "Germany",
      "The club has had a successful boss.",
      "7 year stint.",
      "7",
      "Year.",
      "He is linked with Manche City, Manche United and Arsenal.",
      "And Manche City.",
      "and Manchester United.",
      "and Arsenal.",
      "Manche City",
      "Manche United",
      "Arsenal",
      "Manche",
      "City",
      "Manche",
      "United States",
      "Arsenal",
      "Per Mertesacker says he would like to see Klopp in the Prem League.",
      "Per Mertesacker.",
      "Klopp",
      "PL Player",
      "Per.",
      "Mertesacker.",
      "Klopp",
      "a href=\"http://www.thepremier.com/news/2011/03/premier-premier-premier-premier.html\">Premier/a>",
      "League",
      "Per Mertesacker would like to see Klopp in the Prem League.",
      "Per Mertesacker will see Klopp in the Prem League.",
      "Premier League"
    ]
  },
  {
    "instance_id": "realsumm-17",
    "summary": "<t> AppleInsider spotted nine listings in the past month relating to batteries . </t> <t> These include one for an iOS battery life software engineer and another for iOS software power systems engineer . </t> <t> Apple significantly improved the battery life on its iPhone 6 and 6 Plus . </t> <t> But it has been criticised for phones and tablets that only do n't last a day . </t>",
    "tree": [
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1-of (r / relate-01\n                        :ARG2 (b / battery))))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"AppleInsider\"))\n   :ARG1 (l / listing\n            :quant 9\n            :ARG1-of (r / relate-01\n                        :ARG2 (b / battery)))\n   :time (m / month\n            :mod (p2 / past)))",
      "(p / person\n   :name (n / name\n            :op1 \"AppleInsider\"))",
      "(n / name\n   :op1 \"AppleInsider\")",
      "(l / listing\n   :ARG1-of (r / relate-01\n               :ARG2 (b / battery)))",
      "(l / listing\n   :ARG1-of (r / relate-01\n               :ARG2 (b / battery))\n   :quant 9)",
      "(r / relate-01\n   :ARG2 (b / battery))",
      "(m / month\n   :mod (p2 / past))",
      "(ii / include-01\n    :ARG1 (a / and\n             :op1 (o / one\n                     :purpose (p / person\n                                 :ARG0-of (e / engineer-01\n                                             :ARG1 (s / software\n                                                      :purpose (l / life\n                                                                  :mod (b / battery))\n                                                      :mod (p2 / product\n                                                               :name (n / name\n                                                                        :op1 \"iOS\"))))))\n             :op2 (a2 / another\n                      :purpose (p3 / person\n                                   :ARG0-of (e2 / engineer-01\n                                                :ARG1 (s2 / system\n                                                          :mod (p4 / power)\n                                                          :mod (s3 / software))))))\n    :ARG2 (t / this))",
      "(a / and\n   :op1 (o / one\n           :purpose (p / person\n                       :ARG0-of (e / engineer-01\n                                   :ARG1 (s / software\n                                            :purpose (l / life\n                                                        :mod (b / battery))\n                                            :mod (p2 / product\n                                                     :name (n / name\n                                                              :op1 \"iOS\")))))))",
      "(a / and\n   :op2 (a2 / another\n            :purpose (p3 / person\n                         :ARG0-of (e2 / engineer-01\n                                      :ARG1 (s2 / system\n                                                :mod (p4 / power)\n                                                :mod (s3 / software))))))",
      "(p / person\n   :ARG0-of (e / engineer-01\n               :ARG1 (s / software\n                        :purpose (l / life\n                                    :mod (b / battery))\n                        :mod (p2 / product\n                                 :name (n / name\n                                          :op1 \"iOS\"))))\n   :ARG0-of (e2 / engineer-01\n                :ARG1 (s2 / system\n                          :mod (p4 / power)\n                          :mod (s3 / software))))",
      "(e / engineer-01\n   :ARG1 (s / software\n            :purpose (l / life\n                        :mod (b / battery))\n            :mod (p2 / product\n                     :name (n / name\n                              :op1 \"iOS\")))\n   :ARG1 (s2 / system\n             :mod (p4 / power)\n             :mod (s3 / software)))",
      "(s / software\n   :mod (p2 / product\n            :name (n / name\n                     :op1 \"iOS\")))",
      "(l / life\n   :mod (b / battery))",
      "(p2 / product\n    :name (n / name\n             :op1 \"iOS\"))",
      "(n / name\n   :op1 \"iOS\")",
      "(s2 / system\n    :mod (p4 / power))",
      "(s2 / system\n    :mod (s3 / software))",
      "(ii / improve-01\n    :ARG0 (c / company\n             :name (n / name\n                      :op1 \"Apple\"))\n    :ARG1 (l / life\n             :duration-of (b / battery)\n             :poss (a / and\n                      :op1 (p / product\n                              :name (n2 / name\n                                        :op1 \"iPhone\"\n                                        :op2 6))\n                      :op2 (p2 / product\n                               :name (n3 / name\n                                         :op1 \"iPhone\"\n                                         :op2 6\n                                         :op3 \"Plus\"))\n                      :poss c))\n    :ARG1-of (s / significant-02))",
      "(c / company\n   :name (n / name\n            :op1 \"Apple\"))",
      "(n / name\n   :op1 \"Apple\")",
      "(n / name\n   :op1 \"iPhone\")",
      "(n / name\n   :op2 6)",
      "(n / name\n   :op1 \"iPhone\")",
      "(n / name\n   :op2 6)",
      "(n / name\n   :op3 \"Plus\")",
      "(l / life\n   :duration-of (b / battery))",
      "(l / life\n   :poss (a / and\n            :op1 (p / product\n                    :name (n2 / name\n                              :op1 \"iPhone\"\n                              :op2 6))\n            :op2 (p2 / product\n                     :name (n3 / name\n                               :op1 \"iPhone\"\n                               :op2 6\n                               :op3 \"Plus\"))\n            :poss (c / company :name (n / name :op1 \"Apple\"))))",
      "(a / and\n   :op1 (p / product\n           :name (n2 / name\n                     :op1 \"iPhone\"\n                     :op2 6)))",
      "(a / and\n   :op2 (p2 / product\n            :name (n3 / name\n                      :op1 \"iPhone\"\n                      :op2 6\n                      :op3 \"Plus\")))",
      "(a / and\n   :poss (c / company :name (n / name :op1 \"Apple\")))",
      "(p / product\n   :name (n2 / name\n             :op1 \"iPhone\"\n             :op2 6))",
      "(p / product\n   :name (n3 / name\n             :op1 \"iPhone\"\n             :op2 6\n             :op3 \"Plus\"))",
      "(c / contrast-01\n   :ARG2 (c2 / criticize-01\n             :ARG1 (ii / it)\n             :ARG2 (a / and\n                      :op1 (p / phone)\n                      :op2 (t / tablet)\n                      :ARG1-of (l / last-04\n                                  :polarity -\n                                  :ARG2 (t2 / temporal-quantity\n                                            :quant 1\n                                            :unit (d / day))\n                                  :mod (o / only)))))",
      "(c2 / criticize-01\n    :ARG1 (ii / it)\n    :ARG2 (a / and\n             :op1 (p / phone)\n             :op2 (t / tablet)\n             :ARG1-of (l / last-04\n                         :polarity -\n                         :ARG2 (t2 / temporal-quantity\n                                   :quant 1\n                                   :unit (d / day))\n                         :mod (o / only))))",
      "(a / and\n   :ARG1-of (l / last-04\n               :polarity -\n               :ARG2 (t2 / temporal-quantity\n                         :quant 1\n                         :unit (d / day))\n               :mod (o / only)))",
      "(a / and\n   :ARG1-of (l / last-04\n               :polarity -\n               :ARG2 (t2 / temporal-quantity\n                         :quant 1\n                         :unit (d / day))\n               :mod (o / only))\n   :op1 (p / phone))",
      "(a / and\n   :ARG1-of (l / last-04\n               :polarity -\n               :ARG2 (t2 / temporal-quantity\n                         :quant 1\n                         :unit (d / day))\n               :mod (o / only))\n   :op2 (t / tablet))",
      "(l / last-04\n   :ARG2 (t2 / temporal-quantity\n             :quant 1\n             :unit (d / day)))",
      "(l / last-04\n   :ARG2 (t2 / temporal-quantity\n             :quant 1\n             :unit (d / day))\n   :polarity -)",
      "(l / last-04\n   :ARG2 (t2 / temporal-quantity\n             :quant 1\n             :unit (d / day))\n   :mod (o / only))",
      "(t2 / temporal-quantity\n    :quant 1)",
      "(t2 / temporal-quantity\n    :unit (d / day))"
    ],
    "smus": [
      "AppleInsider spotted 9 listings related to batteries.",
      "AppleInsider spotted 9 listings related to batteries in the past month.",
      "AppleInsider",
      "AppleInsider",
      "Batteries-related listings",
      "There are 9 listings relating to batteries.",
      "Relating to batteries.",
      "The past month.",
      "These include one for an IOS battery life engineer and another for a software power system engineer.",
      "And one for the IOS battery life software engineer.",
      "and another for the power and software engineers.",
      "ios battery life software engineer, software power systems engineer.",
      "IOS battery life software is engineering software for power systems.",
      "OS software.",
      "Battery life",
      "IOS.",
      "IOS",
      "Power systems.",
      "Software systems.",
      "Apple significantly improved the battery life of its iPhone 6 and iPhone 6 Plus.",
      "Apple",
      "Apple",
      "Iphone",
      "6.",
      "Iphone",
      "6.",
      "Plus",
      "Battery life",
      "Apple's iPhone 6 and iPhone 6 Plus lives.",
      "and the iPhone 6.",
      "and the iPhone 6 Plus.",
      "Apple and...",
      "Iphone 6",
      "iPhone 6 Plus",
      "But it is critiquised for phones and tablets that only last a day.",
      "It is critiquised for phones and tablets that only last a day.",
      "And it won't only last a day.",
      "Phones only last a day and a half.",
      "The tablets only last a day and not a day.",
      "It's going to last a day.",
      "It doesn't last a day.",
      "It only lasts a day.",
      "One.",
      "a day"
    ]
  },
  {
    "instance_id": "realsumm-18",
    "summary": "<t> Tournament performances have restored Andy Murray to World No 3 . </t> <t> But it 's wedding to Kim Sears that takes Murray 's No 1 spot this week . </t> <t> Murray is due to marry fianc\u00e9e Sears in Dunblane this coming Saturday . </t> <t> There are believed to be well over 100 names on down - to - earth guest list . </t>",
    "tree": [
      "(r / restore-01\n   :ARG0 (p / perform-02\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andy\"\n                               :op2 \"Murray\"))\n            :mod (t / tournament))\n   :ARG1 (h / have-org-role-91\n            :ARG0 p2\n            :ARG1 (w / world)\n            :ARG2 (n2 / no\n                      :ord (o / ordinal-entity\n                              :value 3))))",
      "(p / perform-02\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Andy\"\n                      :op2 \"Murray\")))",
      "(p / perform-02\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Andy\"\n                      :op2 \"Murray\"))\n   :mod (t / tournament))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Andy\"\n             :op2 \"Murray\"))",
      "(n / name\n   :op1 \"Andy\")",
      "(n / name\n   :op2 \"Murray\")",
      "(h / have-org-role-91\n   :ARG0 (p2 / person :name (n / name :op1 \"Andy\" :op2 \"Murray\"))\n   :ARG1 (w / world)\n   :ARG2 (n2 / no\n             :ord (o / ordinal-entity\n                     :value 3)))",
      "(n2 / no\n    :ord (o / ordinal-entity\n            :value 3))",
      "(o / ordinal-entity\n   :value 3)",
      "(c / contrast-01\n   :ARG2 (t / take-01\n            :ARG0 (w / wed-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Murray\"))\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Kim\"\n                                         :op2 \"Sears\")))\n            :ARG1 (s / spot\n                     :ord (o / ordinal-entity\n                             :value 1)\n                     :poss p)\n            :time (w2 / week\n                      :mod (t2 / this))))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\"))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)\n            :poss p))",
      "(t / take-01\n   :ARG0 (w / wed-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Murray\"))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Kim\"\n                                :op2 \"Sears\")))\n   :ARG1 (s / spot\n            :ord (o / ordinal-entity\n                    :value 1)\n            :poss p)\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(w / wed-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kim\"\n                       :op2 \"Sears\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Murray\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Kim\"\n             :op2 \"Sears\"))",
      "(n / name\n   :op1 \"Murray\")",
      "(n / name\n   :op1 \"Kim\")",
      "(n / name\n   :op2 \"Sears\")",
      "(s / spot\n   :ord (o / ordinal-entity\n           :value 1))",
      "(s / spot\n   :poss (p / person :name (n / name :op1 \"Murray\")))",
      "(o / ordinal-entity\n   :value 1)",
      "(w2 / week\n    :mod (t2 / this))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 p\n                                  :ARG2 (f / fiancee)))\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\"))))",
      "(d / due-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Murray\"))\n   :ARG2 (m / marry-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sears\")\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 p\n                                  :ARG2 (f / fiancee)))\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Dunblane\")))\n   :time (d2 / date-entity\n             :weekday (s / saturday)\n             :mod (t / this)\n             :ARG1-of (c2 / come-01)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (f / fiancee)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (f / fiancee))\n   :name (n / name\n            :op1 \"Murray\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (f / fiancee))\n   :name (n2 / name\n             :op1 \"Sears\"))",
      "(n / name\n   :op1 \"Murray\")",
      "(n / name\n   :op1 \"Sears\")",
      "(n / name\n   :op1 \"Dunblane\")",
      "(m / marry-01\n   :ARG1 (p / person :name (n / name :op1 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sears\")\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 p\n                         :ARG2 (f / fiancee))))",
      "(m / marry-01\n   :ARG1 (p / person :name (n / name :op1 \"Murray\"))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sears\")\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 p\n                         :ARG2 (f / fiancee)))\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Dunblane\")))",
      "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Murray\"))\n   :ARG2 (f / fiancee))",
      "(c / city\n   :name (n3 / name\n             :op1 \"Dunblane\"))",
      "(d2 / date-entity\n    :ARG1-of (c2 / come-01))",
      "(d2 / date-entity\n    :ARG1-of (c2 / come-01)\n    :weekday (s / saturday))",
      "(d2 / date-entity\n    :ARG1-of (c2 / come-01)\n    :mod (t / this))",
      "(b / believe-01\n   :ARG1 (n / name\n            :quant (o / over\n                      :op1 100\n                      :quant (w / well))\n            :location (l / list-01\n                         :ARG1 (g / guest)\n                         :mod (d / down-to-earth))))",
      "(n / name\n   :quant (o / over\n             :op1 100\n             :quant (w / well)))",
      "(n / name\n   :location (l / list-01\n                :ARG1 (g / guest)\n                :mod (d / down-to-earth)))",
      "(o / over\n   :op1 100)",
      "(o / over\n   :quant (w / well))",
      "(l / list-01\n   :ARG1 (g / guest))",
      "(l / list-01\n   :ARG1 (g / guest)\n   :mod (d / down-to-earth))"
    ],
    "smus": [
      "Andy Murray's Tournament performances have restored him to World No. 3.",
      "Andy Murray's performances:",
      "Andy Murray's Tournament Performances",
      "Andy Murray",
      "Andy",
      "Murray.",
      "Andy Murray is the World No. 3.",
      "No, no, no, no, no, no.",
      "3.",
      "But this week, Murray's wedding to Kim Sears takes his first spot.",
      "Murray's wedding to Kim Sears takes his first spot.",
      "This week, Murray's wedding to Kim Sears takes his first spot.",
      "Murray and Kim Sears got married.",
      "Murray.",
      "Kim Sears",
      "Murray.",
      "Kim",
      "Sears",
      "spot one",
      "Murray's spot.",
      "1.",
      "This week.",
      "Murray is due to marry his fiancee Seers in Dunblane.",
      "Murray is due to marry his fiancee, Seers, in Dunblane on this coming Saturday.",
      "Fianc.",
      "Murray's fiancee",
      "Seers is Seers' fiancee.",
      "Murray.",
      "Sears",
      "Dunblane",
      "Murray to marry his fiancee Seers.",
      "Murray will marry his fiancee Seers in Dunblane.",
      "Murray's fiancee",
      "Dunblane",
      "Come on...",
      "Coming Saturday.",
      "This is coming.",
      "Well over 100 names on the down-to-earth guest list are believed to be.",
      "Well over 100 names.",
      "names on the down-to-earth guest list",
      "over 100",
      "Well over.",
      "Guest list.",
      "Down to earth guest list."
    ]
  },
  {
    "instance_id": "realsumm-19",
    "summary": "<t> Paula Dunican paid \u00a3 25 for the baby blue coat at her local branch of Asda . </t> <t> When she took it home she noticed a ' seeping ' stain on the back of coat . </t> <t> She then discovered the reptile 's crushed body on the garment 's lining . </t> <t> The supermarket has apologised and offered her a \u00a3 40 voucher and refund . </t>",
    "tree": [
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby)))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Paula\"\n                      :op2 \"Dunican\"))\n   :ARG1 (m / monetary-quantity\n            :quant 25\n            :unit (p3 / pound))\n   :ARG3 (c / coat\n            :mod (b / blue)\n            :mod (b2 / baby))\n   :location (b3 / branch\n                 :poss p2\n                 :ARG1-of (l / local-02)\n                 :part-of (c2 / company\n                              :name (n2 / name\n                                        :op1 \"Asda\"))))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Paula\"\n             :op2 \"Dunican\"))",
      "(n / name\n   :op1 \"Paula\")",
      "(n / name\n   :op2 \"Dunican\")",
      "(n / name\n   :op1 \"Asda\")",
      "(m / monetary-quantity\n   :quant 25)",
      "(m / monetary-quantity\n   :unit (p3 / pound))",
      "(c / coat\n   :mod (b / blue))",
      "(c / coat\n   :mod (b2 / baby))",
      "(b3 / branch\n    :ARG1-of (l / local-02))",
      "(b3 / branch\n    :ARG1-of (l / local-02)\n    :poss (p2 / person :name (n / name :op1 \"Paula\" :op2 \"Dunican\")))",
      "(b3 / branch\n    :ARG1-of (l / local-02)\n    :part-of (c2 / company\n                 :name (n2 / name\n                           :op1 \"Asda\")))",
      "(c2 / company\n    :name (n2 / name\n              :op1 \"Asda\"))",
      "(n / notice-01\n   :ARG0 (s / she)\n   :ARG1 (s2 / stain-01\n             :ARG1-of (s3 / seep-01)\n             :location (b / back\n                          :part-of (c / coat))))",
      "(n / notice-01\n   :ARG0 (s / she)\n   :ARG1 (s2 / stain-01\n             :ARG1-of (s3 / seep-01)\n             :location (b / back\n                          :part-of (c / coat)))\n   :time (t / take-01\n            :ARG0 s\n            :ARG1 c\n            :ARG3 (h / home)))",
      "(s2 / stain-01\n    :ARG1-of (s3 / seep-01))",
      "(s2 / stain-01\n    :ARG1-of (s3 / seep-01)\n    :location (b / back\n                 :part-of (c / coat)))",
      "(b / back\n   :part-of (c / coat))",
      "(t / take-01\n   :ARG0 (s / she)\n   :ARG1 (c / coat)\n   :ARG3 (h / home))",
      "(d / discover-01\n   :ARG0 (s / she)\n   :ARG1 (b / body\n            :part-of (r / reptile)\n            :ARG1-of (c / crush-01)))",
      "(d / discover-01\n   :ARG0 (s / she)\n   :ARG1 (b / body\n            :part-of (r / reptile)\n            :ARG1-of (c / crush-01))\n   :location (l / lining\n                :part-of (g / garment)))",
      "(d / discover-01\n   :ARG0 (s / she)\n   :ARG1 (b / body\n            :part-of (r / reptile)\n            :ARG1-of (c / crush-01))\n   :time (t / then))",
      "(b / body\n   :ARG1-of (c / crush-01))",
      "(b / body\n   :ARG1-of (c / crush-01)\n   :part-of (r / reptile))",
      "(l / lining\n   :part-of (g / garment))",
      "(a / and\n   :op1 (a2 / apologize-01\n            :ARG0 (s / supermarket)))",
      "(a / and\n   :op2 (o / offer-01\n           :ARG0 (s / supermarket)\n           :ARG1 (a3 / and\n                     :op1 (v / voucher\n                             :mod (m / monetary-quantity\n                                     :quant 40\n                                     :unit (p / pound)))\n                     :op2 (r / refund-01\n                             :ARG0 s\n                             :ARG2 (s2 / she)))\n           :ARG3 s2))",
      "(a / and\n   :op1 (v / voucher\n           :mod (m / monetary-quantity\n                   :quant 40\n                   :unit (p / pound))))",
      "(a / and\n   :op2 (r / refund-01\n           :ARG0 (s / supermarket)\n           :ARG2 (s2 / she)))",
      "(a2 / apologize-01\n    :ARG0 (s / supermarket))",
      "(o / offer-01\n   :ARG0 (s / supermarket)\n   :ARG1 (a3 / and\n             :op1 (v / voucher\n                     :mod (m / monetary-quantity\n                             :quant 40\n                             :unit (p / pound)))\n             :op2 (r / refund-01\n                     :ARG0 s\n                     :ARG2 (s2 / she)))\n   :ARG3 s2)",
      "(v / voucher\n   :mod (m / monetary-quantity\n           :quant 40\n           :unit (p / pound)))",
      "(m / monetary-quantity\n   :quant 40)",
      "(m / monetary-quantity\n   :unit (p / pound))",
      "(r / refund-01\n   :ARG0 (s / supermarket)\n   :ARG2 (s2 / she))"
    ],
    "smus": [
      "Paula Dunican paid PS25 for a baby blue coat.",
      "Paula Dunican paid PS25 for a baby blue coat at her local Asda branch.",
      "Paula Dunican",
      "Paula",
      "Dunican.",
      "Asda",
      "25",
      "PS",
      "Blue coat",
      "a baby coat",
      "Local branch",
      "Paula Dunican's local branch",
      "The local branch of Asda.",
      "Asda",
      "She noticed a seeping stain on the back of the coat.",
      "When she took the coat home, she noticed a seeping stain on the back of the coat.",
      "Seeping stain.",
      "Seeping stain on the back of the coat.",
      "the back of the coat",
      "She took the coat home.",
      "She discovered a crushed reptile's body.",
      "She discovered the crushed reptile's body in the lining of the garment.",
      "Then she discovered a crushed reptile's body.",
      "Crushed body",
      "Crushed body of reptile",
      "The lining of the garment",
      "And the supermarket has apologized.",
      "And the supermarket offered her a PS40 voucher and a refund.",
      "and a PS40 voucher.",
      "and the supermarket gave her a refund.",
      "The supermarket has apologized.",
      "The supermarket offered her a PS40 voucher and a refund.",
      "PS40 voucher",
      "40",
      "PS",
      "The supermarket gave her a refund."
    ]
  },
  {
    "instance_id": "realsumm-20",
    "summary": "<t> Ronnie Carroll placed fourth in the Eurovision contest in 1962 and 1963 . </t> <t> He died in London two days ago , aged 80 , following a battle with cancer . </t> <t> Mr Carroll was running in the General Election for Hampstead and Kilburn . </t> <t> He remains on the paper and he will be elected if he gets enough votes . </t>",
    "tree": [
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :subevent-of (c / contest-02\n                   :ARG3 (e / event\n                            :name (n2 / name\n                                      :op1 \"Eurovision\"))))",
      "(p / place-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Ronnie\"\n                      :op2 \"Carroll\"))\n   :ARG2 (f / fourth)\n   :time (a / and\n            :op1 (d / date-entity\n                    :year 1962)\n            :op2 (d2 / date-entity\n                     :year 1963)))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Ronnie\"\n             :op2 \"Carroll\"))",
      "(n / name\n   :op1 \"Ronnie\")",
      "(n / name\n   :op2 \"Carroll\")",
      "(n / name\n   :op1 \"Eurovision\")",
      "(c / contest-02\n   :ARG3 (e / event\n            :name (n2 / name\n                      :op1 \"Eurovision\")))",
      "(e / event\n   :name (n2 / name\n             :op1 \"Eurovision\"))",
      "(a / and\n   :op1 (d / date-entity\n           :year 1962))",
      "(a / and\n   :op2 (d2 / date-entity\n            :year 1963))",
      "(d / date-entity\n   :year 1962)",
      "(d / date-entity\n   :year 1963)",
      "(d / die-01\n   :ARG1 (h / he\n            :age (t / temporal-quantity\n                    :quant 80\n                    :unit (y / year)))\n   :ARG1-of (f / follow-01\n               :ARG2 (b2 / battle-01\n                         :ARG0 h\n                         :ARG1 (d3 / disease\n                                   :name (n3 / name\n                                             :op1 \"cancer\")))))",
      "(d / die-01\n   :ARG1 (h / he\n            :age (t / temporal-quantity\n                    :quant 80\n                    :unit (y / year)))\n   :ARG1-of (f / follow-01\n               :ARG2 (b2 / battle-01\n                         :ARG0 h\n                         :ARG1 (d3 / disease\n                                   :name (n3 / name\n                                             :op1 \"cancer\"))))\n   :location (c / city\n                :name (n / name\n                         :op1 \"London\")))",
      "(d / die-01\n   :ARG1 (h / he\n            :age (t / temporal-quantity\n                    :quant 80\n                    :unit (y / year)))\n   :ARG1-of (f / follow-01\n               :ARG2 (b2 / battle-01\n                         :ARG0 h\n                         :ARG1 (d3 / disease\n                                   :name (n3 / name\n                                             :op1 \"cancer\"))))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 2\n                       :unit (d2 / day))))",
      "(h / he\n   :age (t / temporal-quantity\n           :quant 80\n           :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 80)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(t / temporal-quantity\n   :quant 2)",
      "(t / temporal-quantity\n   :unit (d2 / day))",
      "(c / city\n   :name (n / name\n            :op1 \"London\"))",
      "(n / name\n   :op1 \"London\")",
      "(n / name\n   :op1 \"cancer\")",
      "(b / before\n   :op1 (n2 / now))",
      "(b / before\n   :quant (t2 / temporal-quantity\n              :quant 2\n              :unit (d2 / day)))",
      "(f / follow-01\n   :ARG2 (b2 / battle-01\n             :ARG0 (h / he)\n             :ARG1 (d3 / disease\n                       :name (n3 / name\n                                 :op1 \"cancer\"))))",
      "(b2 / battle-01\n    :ARG0 (h / he)\n    :ARG1 (d3 / disease\n              :name (n3 / name\n                        :op1 \"cancer\")))",
      "(d3 / disease\n    :name (n3 / name\n              :op1 \"cancer\"))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (a / and\n            :op1 (c / city-district\n                    :name (n2 / name\n                              :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                     :name (n3 / name\n                               :op1 \"Kilburn\"))))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carroll\"))\n   :ARG1 (a / and\n            :op1 (c / city-district\n                    :name (n2 / name\n                              :op1 \"Hampstead\"))\n            :op2 (c2 / city-district\n                     :name (n3 / name\n                               :op1 \"Kilburn\")))\n   :subevent-of (e / elect-01\n                   :ARG1-of (g / general-02)))",
      "(p / person\n   :name (n / name\n            :op1 \"Mr\"\n            :op2 \"Carroll\"))",
      "(n / name\n   :op1 \"Mr\")",
      "(n / name\n   :op2 \"Carroll\")",
      "(n / name\n   :op1 \"Hampstead\")",
      "(n / name\n   :op1 \"Kilburn\")",
      "(a / and\n   :op1 (c / city-district\n           :name (n2 / name\n                     :op1 \"Hampstead\")))",
      "(a / and\n   :op2 (c2 / city-district\n            :name (n3 / name\n                      :op1 \"Kilburn\")))",
      "(c / city-district\n   :name (n2 / name\n             :op1 \"Hampstead\"))",
      "(c / city-district\n   :name (n3 / name\n             :op1 \"Kilburn\"))",
      "(e / elect-01\n   :ARG1-of (g / general-02))",
      "(a / and\n   :op1 (r / remain-01\n           :ARG1 (h / he)\n           :location (p / paper)))",
      "(a / and\n   :op2 (e / elect-01\n           :ARG1 (h / he)\n           :condition (g / get-01\n                         :ARG0 h\n                         :ARG1 (v / vote-01\n                                  :ARG1 h\n                                  :ARG1-of (h2 / have-quant-91\n                                               :ARG3 (e2 / enough))))))",
      "(r / remain-01\n   :ARG1 (h / he))",
      "(r / remain-01\n   :ARG1 (h / he)\n   :location (p / paper))",
      "(e / elect-01\n   :ARG1 (h / he))",
      "(e / elect-01\n   :ARG1 (h / he)\n   :condition (g / get-01\n                 :ARG0 h\n                 :ARG1 (v / vote-01\n                          :ARG1 h\n                          :ARG1-of (h2 / have-quant-91\n                                       :ARG3 (e2 / enough)))))",
      "(g / get-01\n   :ARG0 (h / he)\n   :ARG1 (v / vote-01\n            :ARG1 h\n            :ARG1-of (h2 / have-quant-91\n                         :ARG3 (e2 / enough))))",
      "(v / vote-01\n   :ARG1 (h / he)\n   :ARG1-of (h2 / have-quant-91\n                :ARG3 (e2 / enough)))",
      "(h2 / have-quant-91\n    :ARG3 (e2 / enough))"
    ],
    "smus": [
      "Ronnie Carroll placed fourth.",
      "Ronie Carroll placed fourth in the Eurovision contest.",
      "In 1962 and 1963, Ronnie Carroll placed fourth.",
      "Ronnie Carroll",
      "Ronnie",
      "Carroll.",
      "Eurovision",
      "The Eurovision contest",
      "Eurovision",
      "and 1962.",
      "and 1963.",
      "1962.",
      "1963.",
      "He died at the age of 80 following a battle with cancer.",
      "He died in London at the age of 80 following a battle with cancer.",
      "Two days ago, he died of cancer at the age of 80, following a battle with cancer.",
      "He's 80.",
      "80",
      "Year.",
      "Two.",
      "day",
      "London",
      "London",
      "cancer.",
      "Before now.",
      "2 days earlier",
      "Following his battle with cancer.",
      "He's in battle with cancer.",
      "cancer",
      "Mr Carroll is running Hampstead and Kilburn.",
      "Mr Carroll is running for Hampstead and Kilburn in the General Election.",
      "Mr Carroll",
      "Mr.",
      "Carroll.",
      "Hampstead",
      "Kilburn",
      "and Hampstead.",
      "and Kilburn.",
      "HAMPSTOCK, N.J.",
      "Kilburn",
      "General Election",
      "And he remains on paper.",
      "And if he gets enough votes he will be elected.",
      "He remains.",
      "He remains in the paper.",
      "He was elected.",
      "If he gets enough votes he will be elected.",
      "He gets enough votes.",
      "He got enough votes.",
      "Enough."
    ]
  },
  {
    "instance_id": "realsumm-21",
    "summary": "<t> McHenry , 28 , berated single mother Gina Michelle for towing her car . </t> <t> She insulted her looks and social status in footage that went viral . </t> <t> ESPN suspended the sports reporter for a week amid investigation . </t> <t> But despite thousands of calls for her to be fired , she returns this week . </t>",
    "tree": [
      "(b / berate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McHenry\")\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Gina\"\n                       :op2 \"Michelle\")\n             :ARG0-of (h / have-rel-role-91\n                         :ARG2 (m / mother\n                                  :ARG1-of (s / single-03))))\n   :ARG2 (t2 / tow-01\n             :ARG0 p2\n             :ARG1 (c / car\n                      :poss p)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (m / mother\n                        :ARG1-of (s / single-03))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (m / mother\n                        :ARG1-of (s / single-03)))\n   :name (n / name\n            :op1 \"McHenry\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (m / mother\n                        :ARG1-of (s / single-03)))\n   :age (t / temporal-quantity\n           :quant 28\n           :unit (y / year)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (m / mother\n                        :ARG1-of (s / single-03)))\n   :name (n2 / name\n             :op1 \"Gina\"\n             :op2 \"Michelle\"))",
      "(n / name\n   :op1 \"McHenry\")",
      "(n / name\n   :op1 \"Gina\")",
      "(n / name\n   :op2 \"Michelle\")",
      "(t / temporal-quantity\n   :quant 28)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(h / have-rel-role-91\n   :ARG2 (m / mother\n            :ARG1-of (s / single-03)))",
      "(m / mother\n   :ARG1-of (s / single-03))",
      "(t2 / tow-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Gina\" :op2 \"Michelle\")))\n    :ARG1 (c / car\n             :poss (p / person :name (n / name :op1 \"McHenry\")))))",
      "(c / car\n   :poss (p / person :name (n / name :op1 \"McHenry\"))))",
      "(ii / insult-01\n    :ARG0 (s / she)\n    :ARG1 (a / and\n             :op1 (l / look-02\n                     :ARG0 s)\n             :op2 (s2 / status\n                      :mod (s3 / social)\n                      :poss s)))",
      "(ii / insult-01\n    :ARG0 (s / she)\n    :ARG1 (a / and\n             :op1 (l / look-02\n                     :ARG0 s)\n             :op2 (s2 / status\n                      :mod (s3 / social)\n                      :poss s))\n    :medium (f / footage\n               :ARG1-of (g / go-08\n                           :ARG2 (v / viral))))",
      "(a / and\n   :op1 (l / look-02\n           :ARG0 (s / she)))",
      "(a / and\n   :op2 (s2 / status\n            :mod (s3 / social)\n            :poss (s / she)))",
      "(l / look-02\n   :ARG0 (s / she))",
      "(s2 / status\n    :mod (s3 / social))",
      "(s2 / status\n    :poss (s / she))",
      "(f / footage\n   :ARG1-of (g / go-08\n               :ARG2 (v / viral)))",
      "(g / go-08\n   :ARG2 (v / viral))",
      "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :ARG1 (p2 / person\n             :ARG0-of (r / report-01\n                         :ARG1 (s2 / sport)))\n   :ARG1-of (c / cause-01\n               :ARG0 (ii / investigate-01)))",
      "(s / suspend-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"ESPN\"))\n   :ARG1 (p2 / person\n             :ARG0-of (r / report-01\n                         :ARG1 (s2 / sport)))\n   :ARG1-of (c / cause-01\n               :ARG0 (ii / investigate-01))\n   :duration (t / temporal-quantity\n                :quant 1\n                :unit (w / week)))",
      "(p / publication\n   :name (n / name\n            :op1 \"ESPN\"))",
      "(n / name\n   :op1 \"ESPN\")",
      "(p2 / person\n    :ARG0-of (r / report-01\n                :ARG1 (s2 / sport)))",
      "(r / report-01\n   :ARG1 (s2 / sport))",
      "(t / temporal-quantity\n   :quant 1)",
      "(t / temporal-quantity\n   :unit (w / week))",
      "(c / cause-01\n   :ARG0 (ii / investigate-01))",
      "(h / have-concession-91\n   :ARG1 (r / return-01\n            :ARG1 (s / she)\n            :time (w / week\n                     :mod (t / this)))\n   :ARG2 (c / call-03\n            :ARG1 (f / fire-02\n                     :ARG1 s)\n            :quant (m / multiple\n                      :op1 1000)))",
      "(r / return-01\n   :ARG1 (s / she))",
      "(r / return-01\n   :ARG1 (s / she)\n   :time (w / week\n            :mod (t / this)))",
      "(w / week\n   :mod (t / this))",
      "(c / call-03\n   :ARG1 (f / fire-02\n            :ARG1 (s / she)))",
      "(c / call-03\n   :ARG1 (f / fire-02\n            :ARG1 (s / she))\n   :quant (m / multiple\n             :op1 1000))",
      "(f / fire-02\n   :ARG1 (s / she))",
      "(m / multiple\n   :op1 1000)"
    ],
    "smus": [
      "McHenry, 28, berated single mother Gina Michelle for towing her car.",
      "Single mother.",
      "McHenry is a single mother.",
      "Single mother, 28,",
      "Gina Michelle is a single mother.",
      "McHenry",
      "Gina",
      "Michelle",
      "28",
      "Year.",
      "Single mother.",
      "Single mother.",
      "Gina Michelle towing McHenry's car.",
      "McHenry's car",
      "She insulted her looks and her social status.",
      "In the footage that went viral, she insulted her looks and social status.",
      "And she looks.",
      "and her social status.",
      "She looks.",
      "Social status",
      "Her status.",
      "The footage went viral.",
      "went viral.",
      "ESPN suspended a sports reporter for an investigation.",
      "ESPN suspended a sports reporter for a week under investigation.",
      "ESPN",
      "ESPN",
      "Sports reporter",
      "Sports report.",
      "One.",
      "a week",
      "So there is an investigation.",
      "She returns this week despite thousands of calls to be fired.",
      "She returns.",
      "She returns this week.",
      "This week.",
      "Calls for her to be fired.",
      "She has received thousands of calls to be fired.",
      "She was fired.",
      "Thousands."
    ]
  },
  {
    "instance_id": "realsumm-22",
    "summary": "<t> Chloe Owens , 27 , from Swanley , designed new app Bump 2 Breast . </t> <t> Came up with idea when pregnant with daughter , Lola , now three months . </t> <t> Says her and husband David felt like ' rabbits in headlights ' at first . </t> <t> Also struggled to remember which boob to use when breastfeeding . </t>",
    "tree": [
      "(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chloe\"\n                     :op2 \"Owens\")\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Swanley\")))\n   :ARG1 (a / app\n            :name (n3 / name\n                      :op1 \"Bump\"\n                      :op2 2\n                      :op3 \"Breast\")\n            :ARG1-of (n4 / new-01)))",
      "(p / person\n   :name (n / name\n            :op1 \"Chloe\"\n            :op2 \"Owens\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 27\n           :unit (y / year)))",
      "(p / person\n   :source (c / city\n              :name (n2 / name\n                        :op1 \"Swanley\")))",
      "(n / name\n   :op1 \"Chloe\")",
      "(n / name\n   :op2 \"Owens\")",
      "(n / name\n   :op1 \"Swanley\")",
      "(n / name\n   :op1 \"Bump\")",
      "(n / name\n   :op2 2)",
      "(n / name\n   :op3 \"Breast\")",
      "(t / temporal-quantity\n   :quant 27)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(c / city\n   :name (n2 / name\n             :op1 \"Swanley\"))",
      "(a / app\n   :ARG1-of (n4 / new-01))",
      "(a / app\n   :ARG1-of (n4 / new-01)\n   :name (n3 / name\n             :op1 \"Bump\"\n             :op2 2\n             :op3 \"Breast\"))",
      "(c / come-up-11\n   :ARG1 (ii / idea))",
      "(c / come-up-11\n   :ARG1 (ii / idea)\n   :time (ii2 / impregnate-01\n              :ARG1 (p / person\n                       :name (n / name\n                                :op1 \"Lola\")\n                       :ARG0-of (h / have-rel-role-91\n                                   :ARG2 (d / daughter))\n                       :age (t / temporal-quantity\n                               :quant 3\n                               :unit (m / month)\n                               :time (n2 / now)))))",
      "(ii2 / impregnate-01\n     :ARG1 (p / person\n              :name (n / name\n                       :op1 \"Lola\")\n              :ARG0-of (h / have-rel-role-91\n                          :ARG2 (d / daughter))\n              :age (t / temporal-quantity\n                      :quant 3\n                      :unit (m / month)\n                      :time (n2 / now))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (d / daughter)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (d / daughter))\n   :name (n / name\n            :op1 \"Lola\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (d / daughter))\n   :age (t / temporal-quantity\n           :quant 3\n           :unit (m / month)\n           :time (n2 / now)))",
      "(n / name\n   :op1 \"Lola\")",
      "(h / have-rel-role-91\n   :ARG2 (d / daughter))",
      "(t / temporal-quantity\n   :quant 3)",
      "(t / temporal-quantity\n   :unit (m / month))",
      "(t / temporal-quantity\n   :time (n2 / now))",
      "(s / say-01\n   :ARG1 (f / feel-01\n            :ARG0 (a / and\n                     :op1 (s2 / she)\n                     :op2 (p / person\n                             :name (n / name\n                                      :op1 \"David\")\n                             :ARG0-of (h / have-rel-role-91\n                                         :ARG1 s2\n                                         :ARG2 (h2 / husband))))\n            :ARG1 (r / resemble-01\n                     :ARG1 a\n                     :ARG2 (b / bunny\n                              :location (h3 / head\n                                            :part-of (h4 / headlights))))\n            :time (a2 / at-first)))",
      "(f / feel-01\n   :ARG0 (a / and\n            :op1 (s2 / she)\n            :op2 (p / person\n                    :name (n / name\n                             :op1 \"David\")\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 s2\n                                :ARG2 (h2 / husband))))\n   :ARG1 (r / resemble-01\n            :ARG1 a\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part-of (h4 / headlights)))))",
      "(f / feel-01\n   :ARG0 (a / and\n            :op1 (s2 / she)\n            :op2 (p / person\n                    :name (n / name\n                             :op1 \"David\")\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 s2\n                                :ARG2 (h2 / husband))))\n   :ARG1 (r / resemble-01\n            :ARG1 a\n            :ARG2 (b / bunny\n                     :location (h3 / head\n                                   :part-of (h4 / headlights))))\n   :time (a2 / at-first))",
      "(a / and\n   :op1 (s2 / she))",
      "(a / and\n   :op2 (p / person\n           :name (n / name\n                    :op1 \"David\")\n           :ARG0-of (h / have-rel-role-91\n                       :ARG1 (s2 / she)\n                       :ARG2 (h2 / husband))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (s2 / she)\n               :ARG2 (h2 / husband)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (s2 / she)\n               :ARG2 (h2 / husband))\n   :name (n / name\n            :op1 \"David\"))",
      "(n / name\n   :op1 \"David\")",
      "(h / have-rel-role-91\n   :ARG1 (s2 / she)\n   :ARG2 (h2 / husband))",
      "(r / resemble-01\n   :ARG1 (a / and)\n   :ARG2 (b / bunny\n            :location (h3 / head\n                          :part-of (h4 / headlights))))",
      "(b / bunny\n   :location (h3 / head\n                 :part-of (h4 / headlights)))",
      "(h3 / head\n    :part-of (h4 / headlights))",
      "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG0 ii\n            :ARG1 (b / boob\n                     :ARG1-of (u / use-01\n                                 :ARG0 ii\n                                 :time (b2 / breastfeed-01\n                                           :ARG0 ii)))))",
      "(s / struggle-02\n   :ARG0 (ii / i)\n   :ARG1 (r / remember-01\n            :ARG0 ii\n            :ARG1 (b / boob\n                     :ARG1-of (u / use-01\n                                 :ARG0 ii\n                                 :time (b2 / breastfeed-01\n                                           :ARG0 ii))))\n   :mod (a / also))",
      "(r / remember-01\n   :ARG0 (ii / i)\n   :ARG1 (b / boob\n            :ARG1-of (u / use-01\n                        :ARG0 ii\n                        :time (b2 / breastfeed-01\n                                  :ARG0 ii))))",
      "(b / boob\n   :ARG1-of (u / use-01\n               :ARG0 (ii / i)\n               :time (b2 / breastfeed-01\n                         :ARG0 ii)))",
      "(u / use-01\n   :ARG0 (ii / i))",
      "(u / use-01\n   :ARG0 (ii / i)\n   :time (b2 / breastfeed-01\n             :ARG0 ii))",
      "(b2 / breastfeed-01\n    :ARG0 (ii / i))"
    ],
    "smus": [
      "Holly Owens, 2, of Swanley, designed the new bump 2 breast app.",
      "-Chloe Owens",
      "2/7",
      "swanley",
      "-Chloe",
      "Owens",
      "Swanley",
      "BUMP.",
      "2.",
      "-Breast",
      "2",
      "Year.",
      "Swanley",
      "New app.",
      "New app, bump 2 breast.",
      "The idea came up.",
      "The idea came up when Lola, now three months old, was pregnant.",
      "Lola is pregnant, now 3 months old.",
      "daughter",
      "Lola is the daughter.",
      "daughter is now 3 months old.",
      "Lola",
      "daughter",
      "Three.",
      "Months",
      "Now...",
      "She and her husband, David, felt like bunnies on headslights at first, she says.",
      "She and her husband, David, felt like bunnies on headslights.",
      "At first she and her husband, David, felt like bunnies on headslights.",
      "And she is.",
      "And her husband, David.",
      "Her husband.",
      "Her husband, David.",
      "David",
      "She is husband.",
      "Like bunnies on the headslights.",
      "Bunnies on the headslights.",
      "heads of headlights",
      "I struggled to remember the boob I used to use while breast feeding.",
      "I also struggled to remember the boob I used to use while breast feeding.",
      "I do remember the boob I used to use when I was breast feeding.",
      "boob I use when breast feeding.",
      "I'll use.",
      "I use when I'm breast feeding.",
      "I'm breast feeding."
    ]
  },
  {
    "instance_id": "realsumm-23",
    "summary": "<t> Harley Street is a top destination for private cosmetic surgery . </t> <t> Patients pay thousands for treatments they hope will change their lives . </t> <t> Michael , 33 , spent \u00a3 7,500 on a hair transplant to boost his self - esteem . </t> <t> Andrea , 72 , pays for a facelift - but her husband ca n't tell the difference . </t>",
    "tree": [
      "(d / destination\n   :mod (t / top))",
      "(d / destination\n   :domain (s / street\n              :name (n / name\n                       :op1 \"Harley\"\n                       :op2 \"Street\")))",
      "(s / street\n   :name (n / name\n            :op1 \"Harley\"\n            :op2 \"Street\"))",
      "(n / name\n   :op1 \"Harley\")",
      "(n / name\n   :op2 \"Street\")",
      "(s2 / surgery-01\n    :ARG2 (c / cosmetic)\n    :ARG1-of (p / private-03))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG2 (p3 / patient)))\n   :ARG1 (m / multiple\n            :op1 (m2 / monetary-quantity\n                     :quant 1000\n                     :unit (d / dollar)))\n   :ARG3 (t / treat-03\n            :ARG1 p2\n            :ARG0-of (c / change-01\n                        :ARG1 (l / life\n                                 :poss p2)\n                        :ARG1-of (h2 / hope-01\n                                     :ARG0 p2))))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG2 (p3 / patient)))",
      "(h / have-rel-role-91\n   :ARG2 (p3 / patient))",
      "(m / multiple\n   :op1 (m2 / monetary-quantity\n            :quant 1000\n            :unit (d / dollar)))",
      "(m2 / monetary-quantity\n    :quant 1000)",
      "(m2 / monetary-quantity\n    :unit (d / dollar))",
      "(t / treat-03\n   :ARG1 (p2 / person)\n   :ARG0-of (c / change-01\n               :ARG1 (l / life\n                        :poss p2)\n               :ARG1-of (h2 / hope-01\n                            :ARG0 p2)))",
      "(c / change-01\n   :ARG1 (l / life\n            :poss (p2 / person))\n   :ARG1-of (h2 / hope-01\n                :ARG0 p2))",
      "(l / life\n   :poss (p2 / person))",
      "(h2 / hope-01\n    :ARG0 (p2 / person))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\")\n            :age (t / temporal-quantity\n                    :quant 33\n                    :unit (y / year)))\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair)\n             :ARG2 p)\n   :ARG3 (m / monetary-quantity\n            :quant 7000\n            :unit (p2 / pound)))",
      "(s / spend-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\")\n            :age (t / temporal-quantity\n                    :quant 33\n                    :unit (y / year)))\n   :ARG1 (t2 / transplant-01\n             :ARG1 (h / hair)\n             :ARG2 p)\n   :ARG3 (m / monetary-quantity\n            :quant 7000\n            :unit (p2 / pound)))",
      "(p / person\n   :name (n / name\n            :op1 \"Michael\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 33\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Michael\")",
      "(t / temporal-quantity\n   :quant 33)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(t2 / transplant-01\n    :ARG1 (h / hair)\n    :ARG2 (p / person :name (n / name :op1 \"Michael\"))))",
      "(m / monetary-quantity\n   :quant 7000)",
      "(m / monetary-quantity\n   :unit (p2 / pound))",
      "(b / boost-01\n   :ARG0 (p / person :name (n / name :op1 \"Michael\")))\n   :ARG1 (e / esteem-01\n            :ARG0 p\n            :ARG1 p))",
      "(e / esteem-01\n   :ARG0 (p / person :name (n / name :op1 \"Michael\")))\n   :ARG1 p)",
      "(c / contrast-01\n   :ARG1 (p / pay-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Andrea\")\n                      :age (t / temporal-quantity\n                              :quant 72\n                              :unit (y / year)))\n            :ARG3 (f / facelift))\n   :ARG2 (p3 / possible-01\n             :polarity -\n             :ARG1 (k / know-04\n                      :ARG0 (p4 / person\n                                :ARG0-of (h / have-rel-role-91\n                                            :ARG1 p2\n                                            :ARG2 (h2 / husband)))\n                      :ARG1 (t2 / thing\n                                :ARG1-of (d / differ-02)))))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Andrea\")\n             :age (t / temporal-quantity\n                     :quant 72\n                     :unit (y / year)))\n   :ARG3 (f / facelift))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG1 p2\n                :ARG2 (h2 / husband)))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG1 p2\n                :ARG2 (h2 / husband))\n    :name (n / name\n             :op1 \"Andrea\"))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG1 p2\n                :ARG2 (h2 / husband))\n    :age (t / temporal-quantity\n            :quant 72\n            :unit (y / year)))",
      "(n / name\n   :op1 \"Andrea\")",
      "(t / temporal-quantity\n   :quant 72)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(p3 / possible-01\n    :ARG1 (k / know-04\n             :ARG0 (p4 / person\n                       :ARG0-of (h / have-rel-role-91\n                                   :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n                                   :ARG2 (h2 / husband)))\n             :ARG1 (t2 / thing\n                       :ARG1-of (d / differ-02))))",
      "(p3 / possible-01\n    :ARG1 (k / know-04\n             :ARG0 (p4 / person\n                       :ARG0-of (h / have-rel-role-91\n                                   :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n                                   :ARG2 (h2 / husband)))\n             :ARG1 (t2 / thing\n                       :ARG1-of (d / differ-02)))\n    :polarity -)",
      "(k / know-04\n   :ARG0 (p4 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n                         :ARG2 (h2 / husband)))\n   :ARG1 (t2 / thing\n             :ARG1-of (d / differ-02)))",
      "(h / have-rel-role-91\n   :ARG1 (p2 / person :name (n / name :op1 \"Andrea\")))\n   :ARG2 (h2 / husband))",
      "(t2 / thing\n    :ARG1-of (d / differ-02))"
    ],
    "smus": [
      "top destination",
      "Harley Street is a destination.",
      "HARLEY STEET",
      "HARLEY",
      "Street",
      "Private cosmetic surgery.",
      "Patients pay thousands for treatments they hope will change their lives.",
      "Patients.",
      "Patients.",
      "Thousands.",
      "1000",
      "$",
      "People are given treatments that they hope will change their lives.",
      "Hope their lives will change.",
      "People's lives.",
      "People hope.",
      "Michael, 33, spent PS7,000 on a hair transplant.",
      "Michael, 33, spent PS7,000 on a hair transplant.",
      "Michael",
      "33.",
      "Michael",
      "33",
      "Year.",
      "Michael had a hair transplant.",
      "7000",
      "PS",
      "Michael will boost his self esteem.",
      "Michael has a high esteem for himself.",
      "Andrea, 72, pays for a facelift but her husband can't tell the difference.",
      "Andrea, 72, pays for a facelift.",
      "husband",
      "Andrea is her husband.",
      "Her husband is 72.",
      "Andrea",
      "72",
      "Year.",
      "Andrea's husband may know a different thing.",
      "Andrea's husband may not know the difference.",
      "Andrea's husband knew the difference.",
      "Andrea is the husband.",
      "There is a difference."
    ]
  },
  {
    "instance_id": "realsumm-24",
    "summary": "<t> General Motors unveiled their concept car at an event in Shanghai . </t> <t> Chevrolet - FNR has ' dragonfly ' swing doors and ' crystal laser headlights ' It is self - driving , electric , and the front chairs can swivel round . </t> <t> And using iris recognition software you can start it using just your eyes . </t>",
    "tree": [
      "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss c))",
      "(u / unveil-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"General\"\n                     :op2 \"Motors\"))\n   :ARG1 (c2 / car\n             :mod (c3 / concept)\n             :poss c)\n   :time (e / event\n            :location (c4 / city\n                          :name (n2 / name\n                                    :op1 \"Shanghai\"))))",
      "(c / company\n   :name (n / name\n            :op1 \"General\"\n            :op2 \"Motors\"))",
      "(n / name\n   :op1 \"General\")",
      "(n / name\n   :op2 \"Motors\")",
      "(n / name\n   :op1 \"Shanghai\")",
      "(c2 / car\n    :mod (c3 / concept))",
      "(c2 / car\n    :poss (c / company :name (n / name :op1 \"General\" :op2 \"Motors\")))",
      "(e / event\n   :location (c4 / city\n                 :name (n2 / name\n                           :op1 \"Shanghai\")))",
      "(c4 / city\n    :name (n2 / name\n              :op1 \"Shanghai\"))",
      "(m / multi-sentence\n   :snt1 (h / have-03\n            :ARG0 (c / car-make\n                     :name (n / name\n                              :op1 \"Chevrolet\"\n                              :op2 \"FNR\"))\n            :ARG1 (a / and\n                     :op1 (d / door\n                             :mod (s / swing)\n                             :mod (d2 / dragonfly))\n                     :op2 (h2 / headlight\n                              :mod (l / laser\n                                      :mod (c2 / crystal))))))",
      "(m / multi-sentence\n   :snt2 (a2 / and\n             :op1 (d3 / drive-01\n                      :ARG0 (s2 / self)\n                      :ARG1 (ii / it))\n             :op2 (e / electric\n                     :domain ii)\n             :op3 (p / possible-01\n                     :ARG1 (s3 / swivel-01\n                               :ARG1 (c3 / chair\n                                         :mod (f / front))\n                               :direction (r / round)))))",
      "(h / have-03\n   :ARG0 (c / car-make\n            :name (n / name\n                     :op1 \"Chevrolet\"\n                     :op2 \"FNR\"))\n   :ARG1 (a / and\n            :op1 (d / door\n                    :mod (s / swing)\n                    :mod (d2 / dragonfly))\n            :op2 (h2 / headlight\n                     :mod (l / laser\n                             :mod (c2 / crystal)))))",
      "(c / car-make\n   :name (n / name\n            :op1 \"Chevrolet\"\n            :op2 \"FNR\"))",
      "(n / name\n   :op1 \"Chevrolet\")",
      "(n / name\n   :op2 \"FNR\")",
      "(a / and\n   :op1 (d / door\n           :mod (s / swing)\n           :mod (d2 / dragonfly)))",
      "(a / and\n   :op2 (h2 / headlight\n            :mod (l / laser\n                    :mod (c2 / crystal))))",
      "(a / and\n   :op1 (d3 / drive-01\n            :ARG0 (s2 / self)\n            :ARG1 (ii / it)))",
      "(a / and\n   :op2 (e / electric\n           :domain (ii / it)))",
      "(a / and\n   :op3 (p / possible-01\n           :ARG1 (s3 / swivel-01\n                     :ARG1 (c3 / chair\n                               :mod (f / front))\n                     :direction (r / round))))",
      "(d / door\n   :mod (s / swing))",
      "(d / door\n   :mod (d2 / dragonfly))",
      "(h2 / headlight\n    :mod (l / laser\n            :mod (c2 / crystal)))",
      "(l / laser\n   :mod (c2 / crystal))",
      "(d3 / drive-01\n    :ARG0 (s2 / self)\n    :ARG1 (ii / it))",
      "(e / electric\n   :domain (ii / it))",
      "(p / possible-01\n   :ARG1 (s3 / swivel-01\n             :ARG1 (c3 / chair\n                       :mod (f / front))\n             :direction (r / round)))",
      "(s3 / swivel-01\n    :ARG1 (c3 / chair\n              :mod (f / front)))",
      "(s3 / swivel-01\n    :ARG1 (c3 / chair\n              :mod (f / front))\n    :direction (r / round))",
      "(c3 / chair\n    :mod (f / front))",
      "(m / multi-sentence\n   :snt1 (a / and\n            :op2 (p / possible-01\n                    :ARG1 (s / start-01\n                             :ARG0 (y / you)\n                             :ARG1 (ii / it)\n                             :manner (u / use-01\n                                        :ARG0 y\n                                        :ARG1 (e / eye\n                                                 :mod (j / just)\n                                                 :part-of (y2 / you))))\n                    :manner (u2 / use-01\n                                :ARG0 y\n                                :ARG1 (s2 / software\n                                          :ARG0-of (r / recognize-02\n                                                      :ARG1 (ii2 / iris)))))))",
      "(a / and\n   :op2 (p / possible-01\n           :ARG1 (s / start-01\n                    :ARG0 (y / you)\n                    :ARG1 (ii / it)\n                    :manner (u / use-01\n                               :ARG0 y\n                               :ARG1 (e / eye\n                                        :mod (j / just)\n                                        :part-of (y2 / you))))\n           :manner (u2 / use-01\n                       :ARG0 y\n                       :ARG1 (s2 / software\n                                 :ARG0-of (r / recognize-02\n                                             :ARG1 (ii2 / iris))))))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you)\n            :ARG1 (ii / it)\n            :manner (u / use-01\n                       :ARG0 y\n                       :ARG1 (e / eye\n                                :mod (j / just)\n                                :part-of (y2 / you)))))",
      "(p / possible-01\n   :ARG1 (s / start-01\n            :ARG0 (y / you)\n            :ARG1 (ii / it)\n            :manner (u / use-01\n                       :ARG0 y\n                       :ARG1 (e / eye\n                                :mod (j / just)\n                                :part-of (y2 / you))))\n   :manner (u2 / use-01\n               :ARG0 y\n               :ARG1 (s2 / software\n                         :ARG0-of (r / recognize-02\n                                     :ARG1 (ii2 / iris)))))",
      "(s / start-01\n   :ARG0 (y / you)\n   :ARG1 (ii / it))",
      "(s / start-01\n   :ARG0 (y / you)\n   :ARG1 (ii / it)\n   :manner (u / use-01\n              :ARG0 y\n              :ARG1 (e / eye\n                       :mod (j / just)\n                       :part-of (y2 / you))))",
      "(u / use-01\n   :ARG0 (y / you)\n   :ARG1 (e / eye\n            :mod (j / just)\n            :part-of (y2 / you))\n   :ARG0 y\n   :ARG1 (s2 / software\n             :ARG0-of (r / recognize-02\n                         :ARG1 (ii2 / iris))))",
      "(e / eye\n   :mod (j / just))",
      "(e / eye\n   :part-of (y2 / you))",
      "(s2 / software\n    :ARG0-of (r / recognize-02\n                :ARG1 (ii2 / iris)))",
      "(r / recognize-02\n   :ARG1 (ii2 / iris))"
    ],
    "smus": [
      "General Motors unveiled their concept car.",
      "General Motors unveiled its concept car at an event in Shanghai.",
      "General Motors",
      "General.",
      "MOTORS",
      "Shanghai",
      "Concept car",
      "The car of General Motors.",
      "The event took place in Shanghai.",
      "Shanghai",
      "The Ford FNR has dragonfly swing doors and crystal laser headlights.",
      "It's self driving, electric and the front chairs can swivel round.",
      "The Ford FNR has dragonfly swing doors and crystal laser headlights.",
      "- Chevrolet FNR",
      "Chevrolet",
      "FNR",
      "and dragonfly swing doors.",
      "and crystal laser headlights.",
      "And it's self driving.",
      "And it is electric.",
      "And the front chairs can swivel round.",
      "Swing doors.",
      "Dragonfly doors",
      "Crystal laser headlights.",
      "Crystal lasers",
      "It's self driving.",
      "It's electric.",
      "The front chairs can swivel round.",
      "The front chairs swivel.",
      "The front chairs swivel round.",
      "Front chairs.",
      "And you can start it using just your eyes by using iris recognition software.",
      "And you can start it using just your eyes by using iris recognition software.",
      "You can start it using just your eyes.",
      "You can start it using just your eyes by using iris recognition software.",
      "You'll start with it.",
      "You'll start it using just your eyes.",
      "You're using just your eyes with IRIS recognition software.",
      "Just in the eyes.",
      "Your eyes.",
      "IRIS recognition software",
      "Iris recognition"
    ]
  },
  {
    "instance_id": "realsumm-25",
    "summary": "<t> Candidate Lynne Abraham says she suffered a momentary drop in blood pressure and that it 's never happened before . </t> <t> While a doctor kept her from returning to the debate , the 74-year - old former district attorney says she will not let the incident affect her campaign . </t>",
    "tree": [
      "(s / say-01\n   :ARG0 (c / candidate\n            :name (n / name\n                     :op1 \"Lynne\"\n                     :op2 \"Abraham\"))\n   :ARG1 (a / and\n            :op1 (s2 / suffer-01\n                     :ARG0 c\n                     :ARG1 (d / drop-01\n                              :ARG1 (p / pressure\n                                       :mod (b / blood))\n                              :mod (m / momentary)))\n            :op2 (h / have-polarity-91\n                    :ARG1 d\n                    :ARG2 -\n                    :time (e / ever)\n                    :time (b2 / before))))",
      "(c / candidate\n   :name (n / name\n            :op1 \"Lynne\"\n            :op2 \"Abraham\"))",
      "(n / name\n   :op1 \"Lynne\")",
      "(n / name\n   :op2 \"Abraham\")",
      "(a / and\n   :op1 (s2 / suffer-01\n            :ARG0 (c / candidate :name (n / name :op1 \"Lynne\" :op2 \"Abraham\"))\n            :ARG1 (d / drop-01\n                     :ARG1 (p / pressure\n                              :mod (b / blood))\n                     :mod (m / momentary))))",
      "(a / and\n   :op2 (h / have-polarity-91\n           :ARG1 (d / drop-01)\n           :ARG2 -\n           :time (e / ever)\n           :time (b2 / before)))",
      "(s2 / suffer-01\n    :ARG0 (c / candidate :name (n / name :op1 \"Lynne\" :op2 \"Abraham\"))\n    :ARG1 (d / drop-01\n             :ARG1 (p / pressure\n                      :mod (b / blood))\n             :mod (m / momentary)))",
      "(d / drop-01\n   :ARG1 (p / pressure\n            :mod (b / blood)))",
      "(d / drop-01\n   :ARG1 (p / pressure\n            :mod (b / blood))\n   :mod (m / momentary))",
      "(p / pressure\n   :mod (b / blood))",
      "(h / have-polarity-91\n   :ARG1 (d / drop-01)\n   :ARG2 -)",
      "(h / have-polarity-91\n   :ARG1 (d / drop-01)\n   :ARG2 -\n   :time (e / ever))",
      "(h / have-polarity-91\n   :ARG1 (d / drop-01)\n   :ARG2 -\n   :time (b2 / before))",
      "(s / say-01\n   :ARG0 (a / attorney\n            :mod (d / district)\n            :time (f / former)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year)))\n   :ARG1 (l / let-01\n            :polarity -\n            :ARG0 a\n            :ARG1 (a2 / affect-01\n                      :ARG0 (ii / incident)\n                      :ARG1 (c / campaign-01\n                               :ARG0 a))))",
      "(s / say-01\n   :ARG0 (a / attorney\n            :mod (d / district)\n            :time (f / former)\n            :age (t / temporal-quantity\n                    :quant 74\n                    :unit (y / year)))\n   :ARG1 (l / let-01\n            :polarity -\n            :ARG0 a\n            :ARG1 (a2 / affect-01\n                      :ARG0 (ii / incident)\n                      :ARG1 (c / campaign-01\n                               :ARG0 a)))\n   :concession (k / keep-04\n                  :ARG0 (d2 / doctor)\n                  :ARG1 a\n                  :ARG2 (r / return-01\n                           :ARG1 a\n                           :ARG4 (d3 / debate-01))))",
      "(a / attorney\n   :mod (d / district))",
      "(a / attorney\n   :time (f / former))",
      "(a / attorney\n   :age (t / temporal-quantity\n           :quant 74\n           :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 74)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(l / let-01\n   :ARG0 (a / attorney)\n   :ARG1 (a2 / affect-01\n             :ARG0 (ii / incident)\n             :ARG1 (c / campaign-01\n                      :ARG0 a)))",
      "(l / let-01\n   :ARG0 (a / attorney)\n   :ARG1 (a2 / affect-01\n             :ARG0 (ii / incident)\n             :ARG1 (c / campaign-01\n                      :ARG0 a))\n   :polarity -)",
      "(a2 / affect-01\n    :ARG0 (ii / incident)\n    :ARG1 (c / campaign-01\n             :ARG0 (a / attorney)))",
      "(c / campaign-01\n   :ARG0 (a / attorney))",
      "(k / keep-04\n   :ARG0 (d2 / doctor)\n   :ARG1 (a / attorney)\n   :ARG2 (r / return-01\n            :ARG1 a\n            :ARG4 (d3 / debate-01)))",
      "(r / return-01\n   :ARG1 (a / attorney)\n   :ARG4 (d3 / debate-01))"
    ],
    "smus": [
      "Candide Lynne Abraham says she suffered a momentary drop in blood pressure and never had it before.",
      "Candide Lynne Abraham",
      "Lynne",
      "Abraham",
      "And Candide Lynne Abraham suffered a momentary drop in blood pressure.",
      "And never before has there been a drop.",
      "Candide Lynne Abraham suffered a momentary drop in blood pressure.",
      "Drop in blood pressure",
      "Momentary drop in blood pressure",
      "Blood pressure.",
      "No drop.",
      "The drop never happened.",
      "The drop was not as much as before.",
      "A former 74-year-old district attorney says he won't let the incident have an effect on his campaign.",
      "A former 74-year-old district attorney says he won't let the incident affect his campaign, but the doctor keeps him from returning to debates.",
      "a district attorney",
      "Former attorney.",
      "74 year old attorney",
      "74",
      "Year.",
      "Let the attorney know how the incident affected his campaign.",
      "The attorney didn't let the incident affect his campaign.",
      "The attorney's campaign was affected by the incident.",
      "Attorney campaigned.",
      "The doctor kept the attorney in return for debate.",
      "The attorney returned to debate."
    ]
  },
  {
    "instance_id": "realsumm-26",
    "summary": "<t> Bundles of notes spilled onto Interstate 20 in Albilene , Texas , on Friday . </t> <t> Passenger door of vehicle flung open - releasing the money onto the road . </t> <t> Motorists pulled over and abandoned their vehicles to pick up the cash . </t> <t> Police have warned anyone caught with the money will be arrested . </t>",
    "tree": [
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :name (n2 / name\n                      :op1 \"Interstate\"\n                      :op2 20)\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Alilene\")\n                         :location (s2 / state\n                                       :name (n4 / name\n                                                 :op1 \"Texas\")))))",
      "(s / spill-over-02\n   :ARG1 (b / bundle\n            :consist-of (n / note))\n   :ARG2 (r / road\n            :name (n2 / name\n                      :op1 \"Interstate\"\n                      :op2 20)\n            :location (c / city\n                         :name (n3 / name\n                                   :op1 \"Alilene\")\n                         :location (s2 / state\n                                       :name (n4 / name\n                                                 :op1 \"Texas\"))))\n   :time (d / date-entity\n            :weekday (f / friday)))",
      "(b / bundle\n   :consist-of (n / note))",
      "(r / road\n   :name (n2 / name\n             :op1 \"Interstate\"\n             :op2 20))",
      "(r / road\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Alilene\")\n                :location (s2 / state\n                              :name (n4 / name\n                                        :op1 \"Texas\"))))",
      "(n2 / name\n    :op1 \"Interstate\")",
      "(n2 / name\n    :op2 20)",
      "(n2 / name\n    :op1 \"Alilene\")",
      "(n2 / name\n    :op1 \"Texas\")",
      "(c / city\n   :name (n3 / name\n             :op1 \"Alilene\"))",
      "(c / city\n   :location (s2 / state\n                 :name (n4 / name\n                           :op1 \"Texas\")))",
      "(s2 / state\n    :name (n4 / name\n              :op1 \"Texas\"))",
      "(d / date-entity\n   :weekday (f / friday))",
      "(o / open-01\n   :ARG1 (d / door\n            :part-of (v / vehicle)\n            :mod (p / passenger))\n   :ARG0-of (r / release-01\n               :ARG1 (m / money)\n               :ARG2 (r2 / road)))",
      "(d / door\n   :part-of (v / vehicle))",
      "(d / door\n   :mod (p / passenger))",
      "(r / release-01\n   :ARG1 (m / money)\n   :ARG2 (r2 / road))",
      "(a / and\n   :op1 (p / pull-over-05\n           :ARG1 (m / motorist)))",
      "(a / and\n   :op2 (a2 / abandon-01\n            :ARG0 (m / motorist)\n            :ARG1 (v / vehicle\n                     :poss m)))",
      "(p / pull-over-05\n   :ARG1 (m / motorist))",
      "(a2 / abandon-01\n    :ARG0 (m / motorist)\n    :ARG1 (v / vehicle\n             :poss m))",
      "(v / vehicle\n   :poss (m / motorist))",
      "(p2 / pick-up-04\n    :ARG0 (m / motorist)\n    :ARG1 (c / cash))",
      "(w / warn-01\n   :ARG0 (p / police)\n   :ARG1 (a / arrest-01\n            :ARG1 (a2 / anyone\n                      :ARG1-of (c / catch-02\n                                  :ARG2 (h / have-03\n                                           :ARG0 a2\n                                           :ARG1 (m / money))))))",
      "(a / arrest-01\n   :ARG1 (a2 / anyone\n             :ARG1-of (c / catch-02\n                         :ARG2 (h / have-03\n                                  :ARG0 a2\n                                  :ARG1 (m / money)))))",
      "(a2 / anyone\n    :ARG1-of (c / catch-02\n                :ARG2 (h / have-03\n                         :ARG0 a2\n                         :ARG1 (m / money))))",
      "(c / catch-02\n   :ARG2 (h / have-03\n            :ARG0 (a2 / anyone)\n            :ARG1 (m / money)))",
      "(h / have-03\n   :ARG0 (a2 / anyone)\n   :ARG1 (m / money))"
    ],
    "smus": [
      "Bundles of notes spilled over Interstate 20 in Alison, Texas.",
      "Bundles of notes spilled over Interstate 20 in Alison, Texas, Friday.",
      "Bundles of notes",
      "Interstate 20",
      "Road in Alilene, Texas",
      "Interstate",
      "20.",
      "Alilene",
      "Texas",
      "ALILENE, Texas",
      "TEXAS",
      "Texas",
      "Friday",
      "The passenger door of the vehicle opened, releasing money from the road.",
      "the door of the vehicle",
      "passenger door",
      "releasing money on the road.",
      "And the motorists pulled over.",
      "and motorists abandon their vehicles.",
      "The motorists pulled over.",
      "The motorists abandoned their vehicles.",
      "motorists vehicles",
      "The motorists will pick up cash.",
      "Police have warned anyone caught with money to be arrested.",
      "Anyone caught with money will be arrested.",
      "Anyone caught with money.",
      "if anyone have money, they get caught.",
      "Anyone have money."
    ]
  },
  {
    "instance_id": "realsumm-27",
    "summary": "<t> Godfrey Elfwick recruited via Twitter to appear on World Have Your Say . </t> <t> Came after claims he had never seen the Star Wars franchise before . </t> <t> On the show he described the films as both anti - women and anti - gay . </t> <t> Also said that Darth Vader was a black man and a ' really bad racial stereotype ' . </t>",
    "tree": [
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\"))))",
      "(r / recruit-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Godfrey\"\n                     :op2 \"Elfwick\"))\n   :ARG2 (a / appear-01\n            :ARG1 p\n            :medium (b / broadcast-program\n                       :name (n2 / name\n                                 :op1 \"World\"\n                                 :op2 \"Have\"\n                                 :op3 \"Your\"\n                                 :op4 \"Say\")))\n   :medium (p2 / publication\n               :name (n3 / name\n                         :op1 \"Twitter\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Godfrey\"\n            :op2 \"Elfwick\"))",
      "(n / name\n   :op1 \"Godfrey\")",
      "(n / name\n   :op2 \"Elfwick\")",
      "(n / name\n   :op1 \"World\")",
      "(n / name\n   :op2 \"Have\")",
      "(n / name\n   :op3 \"Your\")",
      "(n / name\n   :op4 \"Say\")",
      "(n / name\n   :op1 \"Twitter\")",
      "(a / appear-01\n   :ARG1 (p / person :name (n / name :op1 \"Godfrey\" :op2 \"Elfwick\")))",
      "(a / appear-01\n   :ARG1 (p / person :name (n / name :op1 \"Godfrey\" :op2 \"Elfwick\"))\n   :medium (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"World\"\n                        :op2 \"Have\"\n                        :op3 \"Your\"\n                        :op4 \"Say\")))",
      "(b / broadcast-program\n   :name (n2 / name\n             :op1 \"World\"\n             :op2 \"Have\"\n             :op3 \"Your\"\n             :op4 \"Say\"))",
      "(p2 / publication\n    :name (n3 / name\n              :op1 \"Twitter\"))",
      "(b / be-temporally-at-91\n   :ARG1 (e / event)\n   :ARG2 (a / after\n            :op1 (c / claim-01\n                    :ARG0 (h / he)\n                    :ARG1 (s / see-01\n                             :polarity -\n                             :ARG0 h\n                             :ARG1 (f / franchise\n                                      :name (n / name\n                                               :op1 \"Star\"\n                                               :op2 \"Wars\"))\n                             :time (e2 / ever)\n                             :time (b2 / before)))))",
      "(a / after\n   :op1 (c / claim-01\n           :ARG0 (h / he)\n           :ARG1 (s / see-01\n                    :polarity -\n                    :ARG0 h\n                    :ARG1 (f / franchise\n                             :name (n / name\n                                      :op1 \"Star\"\n                                      :op2 \"Wars\"))\n                    :time (e2 / ever)\n                    :time (b2 / before))))",
      "(c / claim-01\n   :ARG0 (h / he)\n   :ARG1 (s / see-01\n            :polarity -\n            :ARG0 h\n            :ARG1 (f / franchise\n                     :name (n / name\n                              :op1 \"Star\"\n                              :op2 \"Wars\"))\n            :time (e2 / ever)\n            :time (b2 / before)))",
      "(s / see-01\n   :ARG0 (h / he)\n   :ARG1 (f / franchise\n            :name (n / name\n                     :op1 \"Star\"\n                     :op2 \"Wars\")))",
      "(s / see-01\n   :ARG0 (h / he)\n   :ARG1 (f / franchise\n            :name (n / name\n                     :op1 \"Star\"\n                     :op2 \"Wars\"))\n   :polarity -)",
      "(s / see-01\n   :ARG0 (h / he)\n   :ARG1 (f / franchise\n            :name (n / name\n                     :op1 \"Star\"\n                     :op2 \"Wars\"))\n   :time (e2 / ever))",
      "(s / see-01\n   :ARG0 (h / he)\n   :ARG1 (f / franchise\n            :name (n / name\n                     :op1 \"Star\"\n                     :op2 \"Wars\"))\n   :time (b2 / before))",
      "(f / franchise\n   :name (n / name\n            :op1 \"Star\"\n            :op2 \"Wars\"))",
      "(n / name\n   :op1 \"Star\")",
      "(n / name\n   :op2 \"Wars\")",
      "(d / describe-01\n   :ARG0 (h / he)\n   :ARG1 (f / film)\n   :ARG2 (a / and\n            :op1 (o / oppose-01\n                    :ARG0 f\n                    :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                     :ARG0 f\n                     :ARG1 (g / gay-01))))",
      "(d / describe-01\n   :ARG0 (h / he)\n   :ARG1 (f / film)\n   :ARG2 (a / and\n            :op1 (o / oppose-01\n                    :ARG0 f\n                    :ARG1 (w / woman))\n            :op2 (o2 / oppose-01\n                     :ARG0 f\n                     :ARG1 (g / gay-01)))\n   :time (s / show-04))",
      "(a / and\n   :op1 (o / oppose-01\n           :ARG0 (f / film)\n           :ARG1 (w / woman)))",
      "(a / and\n   :op2 (o2 / oppose-01\n            :ARG0 (f / film)\n            :ARG1 (g / gay-01)))",
      "(o / oppose-01\n   :ARG0 (f / film)\n   :ARG1 (w / woman)\n   :ARG0 f\n   :ARG1 (g / gay-01))",
      "(s / say-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG1-of (b / black-05)\n                    :domain (p / person\n                               :name (n / name\n                                        :op1 \"Darth\"\n                                        :op2 \"Vader\")))\n            :op2 (s2 / stereotype-01\n                     :ARG2 p\n                     :mod (r / race)\n                     :ARG1-of (b2 / bad-07\n                                  :degree (r2 / really)))))",
      "(s / say-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG1-of (b / black-05)\n                    :domain (p / person\n                               :name (n / name\n                                        :op1 \"Darth\"\n                                        :op2 \"Vader\")))\n            :op2 (s2 / stereotype-01\n                     :ARG2 p\n                     :mod (r / race)\n                     :ARG1-of (b2 / bad-07\n                                  :degree (r2 / really))))\n   :mod (a2 / also))",
      "(a / and\n   :op1 (m / man\n           :ARG1-of (b / black-05)\n           :domain (p / person\n                      :name (n / name\n                               :op1 \"Darth\"\n                               :op2 \"Vader\"))))",
      "(a / and\n   :op2 (s2 / stereotype-01\n            :ARG2 (p / person :name (n / name :op1 \"Darth\" :op2 \"Vader\"))\n            :mod (r / race)\n            :ARG1-of (b2 / bad-07\n                         :degree (r2 / really))))",
      "(m / man\n   :ARG1-of (b / black-05))",
      "(m / man\n   :ARG1-of (b / black-05)\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Darth\"\n                       :op2 \"Vader\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Darth\"\n            :op2 \"Vader\"))",
      "(n / name\n   :op1 \"Darth\")",
      "(n / name\n   :op2 \"Vader\")",
      "(s2 / stereotype-01\n    :ARG2 (p / person :name (n / name :op1 \"Darth\" :op2 \"Vader\"))\n    :ARG1-of (b2 / bad-07\n                 :degree (r2 / really)))",
      "(s2 / stereotype-01\n    :ARG2 (p / person :name (n / name :op1 \"Darth\" :op2 \"Vader\"))\n    :ARG1-of (b2 / bad-07\n                 :degree (r2 / really))\n    :mod (r / race))",
      "(b2 / bad-07\n    :degree (r2 / really))"
    ],
    "smus": [
      "Godfrey Elfwick was recruited to appear on World Have Your Say.",
      "Godfrey Elfwick was recruited to appear on World Have Your Say on Twitter.",
      "Godfrey Elfwick",
      "Godfrey.",
      "Elfwick",
      "World.",
      "Have.",
      "Your",
      "Say.",
      "Twitter",
      "appear to be Godfrey Elfwick.",
      "Godfrey Elfwick will appear on World Have Your Say.",
      "World Have Your Say",
      "Twitter",
      "After he claims he has never seen the Star Wars franchise before, it happened.",
      "After he claims he has never seen the Star Wars franchise before.",
      "He claims he has never seen the Star Wars franchise before.",
      "He has seen the Star Wars franchise.",
      "He hasn't seen the Star Wars franchise.",
      "He's never seen the Star Wars franchise.",
      "He's seen the Star Wars franchise before.",
      "Star Wars franchise.",
      "Star",
      "Wars.",
      "He described the films as anti-woman and anti-gay.",
      "During the show, he described the films as anti-woman and anti-gay.",
      "And the films are anti-women.",
      "And the films are anti-gay.",
      "The films are anti-gay and anti-women.",
      "\"Darth Vader is a black man and has a really bad racial stereotype,\" she said.",
      "Also, Darth Vader was said to be a black man and that was a really bad racial stereotype.",
      "And Darth Vader is a black man.",
      "And the racial stereotype of Darth Vader is really bad.",
      "a black man",
      "arth Vader is a black man.",
      "Darth Vader",
      "arth",
      "Vader",
      "Thearth Vader stereotype is really bad.",
      "Darth Vader is a really bad racial stereotype.",
      "Really bad."
    ]
  },
  {
    "instance_id": "realsumm-28",
    "summary": "<t> Cuban - born Kathy Ferreiro 's curves have attracted fans on social media . </t> <t> Bikini - loving beach babe says photos of her booty are all natural . </t> <t> Miami - based party girl is hoping to become next Kim Kardashian . </t> <t> Has a huge following in Colombia and other Latin American countries . </t>",
    "tree": [
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1-of (b / bear-02\n                                 :location (c2 / country\n                                               :name (n2 / name\n                                                         :op1 \"Cuba\")))))\n   :ARG1 (f / fan))",
      "(a / attract-01\n   :ARG0 (c / curve\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Kathy\"\n                              :op2 \"Ferreiro\")\n                     :ARG1-of (b / bear-02\n                                 :location (c2 / country\n                                               :name (n2 / name\n                                                         :op1 \"Cuba\")))))\n   :ARG1 (f / fan)\n   :medium (m / media\n              :mod (s / social)))",
      "(c / curve\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Kathy\"\n                     :op2 \"Ferreiro\")\n            :ARG1-of (b / bear-02\n                        :location (c2 / country\n                                      :name (n2 / name\n                                                :op1 \"Cuba\")))))",
      "(p / person\n   :ARG1-of (b / bear-02\n               :location (c2 / country\n                             :name (n2 / name\n                                       :op1 \"Cuba\"))))",
      "(p / person\n   :ARG1-of (b / bear-02\n               :location (c2 / country\n                             :name (n2 / name\n                                       :op1 \"Cuba\")))\n   :name (n / name\n            :op1 \"Kathy\"\n            :op2 \"Ferreiro\"))",
      "(n / name\n   :op1 \"Kathy\")",
      "(n / name\n   :op2 \"Ferreiro\")",
      "(n / name\n   :op1 \"Cuba\")",
      "(b / bear-02\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Cuba\")))",
      "(c2 / country\n    :name (n2 / name\n              :op1 \"Cuba\"))",
      "(m / media\n   :mod (s / social))",
      "(s / say-01\n   :ARG0 (b / babe\n            :ARG0-of (l / love-01\n                        :ARG1 (b2 / bikini))\n            :location (b3 / beach)\n            :part (b4 / booty))\n   :ARG1 (n / natural-03\n            :ARG1 (p / photograph-01\n                     :ARG1 b4)\n            :mod (a / all)))",
      "(b / babe\n   :ARG0-of (l / love-01\n               :ARG1 (b2 / bikini)))",
      "(b / babe\n   :ARG0-of (l / love-01\n               :ARG1 (b2 / bikini))\n   :location (b3 / beach))",
      "(b / babe\n   :ARG0-of (l / love-01\n               :ARG1 (b2 / bikini))\n   :part (b4 / booty))",
      "(l / love-01\n   :ARG1 (b2 / bikini))",
      "(n / natural-03\n   :ARG1 (p / photograph-01\n            :ARG1 (b4 / booty)))",
      "(n / natural-03\n   :ARG1 (p / photograph-01\n            :ARG1 (b4 / booty))\n   :mod (a / all))",
      "(p / photograph-01\n   :ARG1 (b4 / booty))",
      "(h / hope-01\n   :ARG0 (g / girl\n            :mod (p / party)\n            :ARG1-of (b / base-01\n                        :location (c / city\n                                     :name (n / name\n                                              :op1 \"Miami\"))))\n   :ARG1 (b2 / become-01\n             :ARG1 g\n             :ARG2 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Kim\"\n                                 :op2 \"Kardinez\")\n                       :mod (n3 / next))))",
      "(g / girl\n   :ARG1-of (b / base-01\n               :location (c / city\n                            :name (n / name\n                                     :op1 \"Miami\"))))",
      "(g / girl\n   :ARG1-of (b / base-01\n               :location (c / city\n                            :name (n / name\n                                     :op1 \"Miami\")))\n   :mod (p / party))",
      "(b / base-01\n   :location (c / city\n                :name (n / name\n                         :op1 \"Miami\")))",
      "(c / city\n   :name (n / name\n            :op1 \"Miami\"))",
      "(n / name\n   :op1 \"Miami\")",
      "(n / name\n   :op1 \"Kim\")",
      "(n / name\n   :op2 \"Kardinez\")",
      "(b2 / become-01\n    :ARG1 (g / girl)\n    :ARG2 (p2 / person\n              :name (n2 / name\n                        :op1 \"Kim\"\n                        :op2 \"Kardinez\")\n              :mod (n3 / next)))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Kim\"\n              :op2 \"Kardinez\"))",
      "(p2 / person\n    :mod (n3 / next))",
      "(f / follow-02\n   :ARG1 (ii / it))",
      "(f / follow-02\n   :ARG1 (ii / it)\n   :mod (h / huge))",
      "(f / follow-02\n   :ARG1 (ii / it)\n   :location (a / and\n                :op1 (c / country\n                        :name (n / name\n                                 :op1 \"Colombia\"))\n                :op2 (c2 / country\n                         :location (w / world-region\n                                      :name (n2 / name\n                                                :op1 \"Latin\"\n                                                :op2 \"America\"))\n                         :mod (o / other))))",
      "(a / and\n   :op1 (c / country\n           :name (n / name\n                    :op1 \"Colombia\")))",
      "(a / and\n   :op2 (c2 / country\n            :location (w / world-region\n                         :name (n2 / name\n                                   :op1 \"Latin\"\n                                   :op2 \"America\"))\n            :mod (o / other)))",
      "(c / country\n   :name (n / name\n            :op1 \"Colombia\"))",
      "(c / country\n   :location (w / world-region\n                :name (n2 / name\n                          :op1 \"Latin\"\n                          :op2 \"America\")))",
      "(c / country\n   :mod (o / other))",
      "(n / name\n   :op1 \"Colombia\")",
      "(n / name\n   :op1 \"Latin\")",
      "(n / name\n   :op2 \"America\")",
      "(w / world-region\n   :name (n2 / name\n             :op1 \"Latin\"\n             :op2 \"America\"))"
    ],
    "smus": [
      "Kathy Ferreiro's Cuban-born curves have attracted fans.",
      "Kathy Ferreiro's Cuban-born curves have attracted fans via social media.",
      "Kathy Ferreiro's curves were born in Cuba.",
      "Cuban born",
      "Kathy Ferreiro was born in Cuba.",
      "Kathy",
      "Ferreiro",
      "Cuba (CU)",
      "Born in Cuba.",
      "Cuba (CU)",
      "Social media",
      "A bikini loving booty babe on the beach says the photos are all natural.",
      "babe who loves bikinis.",
      "babe in a bikini loving beach babe.",
      "a booty babe who loves bikinis.",
      "Love a Bikini.",
      "The photos of the booty are natural.",
      "The photos of the booty are all natural.",
      "The booty is in photos.",
      "The Miami-based party girl is hoping to become the next Kim Kardinez.",
      "a girl based in Miami",
      "a party girl based in miami",
      "Based in Miami.",
      "Miami",
      "Miami",
      "Kim",
      "Kardinez",
      "The girl will become the next Kim Kardinez.",
      "Kim Kardinez",
      "Next person.",
      "It will follow.",
      "It's going to be a huge follow.",
      "It is followed in Colombia and other Latin American countries.",
      "Colombia and",
      "and other Latin American countries.",
      "Colombia (CO)",
      "Latin American countries",
      "Other countries",
      "Colombia (CO)",
      "Latin",
      "American",
      "Latin American"
    ]
  },
  {
    "instance_id": "realsumm-29",
    "summary": "<t> Thousands of accounts vanished from the social network last week . </t> <t> Twitter said it had received numerous reports about terror - promoting users . </t> <t> Decided to suspend 10,000 accounts for making threats of violence . </t> <t> Suspensions were almost certainly linked to a campaign by ' hacktavist ' collective Anonymous targeting online jihadis . </t>",
    "tree": [
      "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000)))",
      "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000))\n   :location (n / network\n                :ARG1-of (s / social-03)))",
      "(v / vanish-01\n   :ARG1 (a / account\n            :quant (m / multiple\n                      :op1 1000))\n   :time (w / week\n            :mod (l / last)))",
      "(a / account\n   :quant (m / multiple\n             :op1 1000))",
      "(m / multiple\n   :op1 1000)",
      "(n / network\n   :ARG1-of (s / social-03))",
      "(w / week\n   :mod (l / last))",
      "(s / say-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"Twitter\"))\n   :ARG1 (r / receive-01\n            :ARG0 p\n            :ARG1 (r2 / report-01\n                      :ARG1 (p2 / person\n                                :ARG0-of (u / use-01)\n                                :ARG0-of (p3 / promote-02\n                                             :ARG1 (t / terror)))\n                      :quant (n2 / numerous))))",
      "(p / publication\n   :name (n / name\n            :op1 \"Twitter\"))",
      "(n / name\n   :op1 \"Twitter\")",
      "(r / receive-01\n   :ARG0 (p / publication :name (n / name :op1 \"Twitter\"))\n   :ARG1 (r2 / report-01\n             :ARG1 (p2 / person\n                       :ARG0-of (u / use-01)\n                       :ARG0-of (p3 / promote-02\n                                    :ARG1 (t / terror)))\n             :quant (n2 / numerous)))",
      "(r2 / report-01\n    :ARG1 (p2 / person\n              :ARG0-of (u / use-01)\n              :ARG0-of (p3 / promote-02\n                           :ARG1 (t / terror))))",
      "(r2 / report-01\n    :ARG1 (p2 / person\n              :ARG0-of (u / use-01)\n              :ARG0-of (p3 / promote-02\n                           :ARG1 (t / terror)))\n    :quant (n2 / numerous))",
      "(p2 / person\n    :ARG0-of (u / use-01)\n    :ARG0-of (p3 / promote-02\n                 :ARG1 (t / terror)))",
      "(p3 / promote-02\n    :ARG1 (t / terror))",
      "(d / decide-01\n   :ARG1 (s / suspend-01\n            :ARG1 (a / account\n                     :quant 10000)\n            :ARG1-of (c / cause-01\n                        :ARG0 (t / threaten-01\n                                 :ARG1 (v / violence)))))",
      "(s / suspend-01\n   :ARG1 (a / account\n            :quant 10000)\n   :ARG1-of (c / cause-01\n               :ARG0 (t / threaten-01\n                        :ARG1 (v / violence))))",
      "(a / account\n   :quant 10000)",
      "(c / cause-01\n   :ARG0 (t / threaten-01\n            :ARG1 (v / violence)))",
      "(t / threaten-01\n   :ARG1 (v / violence))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")\n                      :mod (h / hacktavist))\n            :ARG0-of (t / target-01\n                        :ARG1 (j / jihadi\n                                 :mod (o / online)))))",
      "(l / link-01\n   :ARG1 (s / suspend-01)\n   :ARG2 (c / campaign-01\n            :ARG0 (c2 / collective\n                      :name (n / name\n                               :op1 \"Anonymous\")\n                      :mod (h / hacktavist))\n            :ARG0-of (t / target-01\n                        :ARG1 (j / jihadi\n                                 :mod (o / online))))\n   :mod (c3 / certain\n            :mod (a / almost)))",
      "(c / campaign-01\n   :ARG0 (c2 / collective\n             :name (n / name\n                      :op1 \"Anonymous\")\n             :mod (h / hacktavist))\n   :ARG0-of (t / target-01\n               :ARG1 (j / jihadi\n                        :mod (o / online))))",
      "(c2 / collective\n    :name (n / name\n             :op1 \"Anonymous\"))",
      "(c2 / collective\n    :mod (h / hacktavist))",
      "(n / name\n   :op1 \"Anonymous\")",
      "(t / target-01\n   :ARG1 (j / jihadi\n            :mod (o / online)))",
      "(j / jihadi\n   :mod (o / online))",
      "(c3 / certain\n    :mod (a / almost))"
    ],
    "smus": [
      "Thousands of accounts vanished.",
      "Thousands of accounts vanished from the social network.",
      "Thousands of accounts vanished last week.",
      "Thousands of accounts.",
      "Thousands.",
      "social network",
      "Last week.",
      "Twitter said it had received numerous reports of terror-promoting users.",
      "Twitter",
      "Twitter",
      "Twitter has received numerous reports of terror-propaganda users.",
      "Reports of users promoting terror",
      "There have been numerous reports of users promoting terror.",
      "The users are the ones promoting terror.",
      "Promoting terror",
      "10000 accounts were decided to suspend over threats of violence.",
      "10000 accounts suspended over threats of violence",
      "10,000 accounts.",
      "Because of threats of violence.",
      "Violence threats",
      "The suspensions were linked to an anonymous hacktavist collective campaign targeting online jihadis.",
      "The suspensions are almost certainly linked to an anonymous hacktavist collective campaign targeting online jihadis.",
      "Anonymous is a hacktavist collective campaign targeting online jihadis.",
      "Anonymous collective",
      "Hacktavist collective.",
      "Anonymous",
      "Online jihadis are targeted.",
      "Online jihadis",
      "Almost certainly."
    ]
  },
  {
    "instance_id": "realsumm-30",
    "summary": "<t> Locals say power cuts the weekend before raid could be linked to heist . </t> <t> They also tell of suspicious ' drilling ' noises on evening of Good Friday . </t> <t> Group seen returning to scene on Saturday - a day after initial break - in . </t> <t> Police admit they did n't respond after alarm went off early on Friday . </t>",
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :ARG1-of (l / local-02))\n   :ARG1 (p2 / possible-01\n             :ARG1 (l2 / link-01\n                       :ARG1 (c / cut-02\n                                :ARG1 (p3 / power)\n                                :time (w / weekend)\n                                :time (b / before\n                                         :op1 (r / raid-01)))\n                       :ARG2 (h / heist))))",
      "(p / person\n   :ARG1-of (l / local-02))",
      "(p2 / possible-01\n    :ARG1 (l2 / link-01\n              :ARG1 (c / cut-02\n                       :ARG1 (p3 / power)\n                       :time (w / weekend)\n                       :time (b / before\n                                :op1 (r / raid-01)))\n              :ARG2 (h / heist)))",
      "(l2 / link-01\n    :ARG1 (c / cut-02\n             :ARG1 (p3 / power)\n             :time (w / weekend)\n             :time (b / before\n                      :op1 (r / raid-01)))\n    :ARG2 (h / heist))",
      "(c / cut-02\n   :ARG1 (p3 / power))",
      "(c / cut-02\n   :ARG1 (p3 / power)\n   :time (w / weekend))",
      "(c / cut-02\n   :ARG1 (p3 / power)\n   :time (b / before\n            :op1 (r / raid-01)))",
      "(b / before\n   :op1 (r / raid-01))",
      "(t / tell-01\n   :ARG0 (t2 / they)\n   :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1-of (s / suspicious-03)\n            :time (d2 / date-entity\n                      :weekday (f / friday)\n                      :dayperiod (e / evening))))",
      "(t / tell-01\n   :ARG0 (t2 / they)\n   :ARG1 (n / noise\n            :mod (d / drill-01)\n            :ARG1-of (s / suspicious-03)\n            :time (d2 / date-entity\n                      :weekday (f / friday)\n                      :dayperiod (e / evening)))\n   :mod (a / also))",
      "(n / noise\n   :ARG1-of (s / suspicious-03))",
      "(n / noise\n   :ARG1-of (s / suspicious-03)\n   :mod (d / drill-01))",
      "(n / noise\n   :ARG1-of (s / suspicious-03)\n   :time (d2 / date-entity\n             :weekday (f / friday)\n             :dayperiod (e / evening)))",
      "(d2 / date-entity\n    :weekday (f / friday))",
      "(d2 / date-entity\n    :dayperiod (e / evening))",
      "(s / see-01\n   :ARG1 (r / return-01\n            :ARG1 (g / group)\n            :ARG4 (s2 / scene)\n            :time (d / date-entity\n                     :weekday (s3 / saturday))\n            :time (a / after\n                     :op1 (b / break-02\n                             :mod (ii / initial))\n                     :quant (t / temporal-quantity\n                               :quant 1\n                               :unit (d2 / day)))))",
      "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene))",
      "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene)\n   :time (d / date-entity\n            :weekday (s3 / saturday)))",
      "(r / return-01\n   :ARG1 (g / group)\n   :ARG4 (s2 / scene)\n   :time (a / after\n            :op1 (b / break-02\n                    :mod (ii / initial))\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (d2 / day))))",
      "(d / date-entity\n   :weekday (s3 / saturday))",
      "(a / after\n   :op1 (b / break-02\n           :mod (ii / initial)))",
      "(a / after\n   :quant (t / temporal-quantity\n             :quant 1\n             :unit (d2 / day)))",
      "(b / break-02\n   :mod (ii / initial))",
      "(t / temporal-quantity\n   :quant 1)",
      "(t / temporal-quantity\n   :unit (d2 / day))",
      "(a / admit-01\n   :ARG0 (p / police)\n   :ARG1 (r / respond-01\n            :polarity -\n            :ARG0 p\n            :time (a2 / after\n                      :op1 (g / go-off-16\n                              :ARG1 (a3 / alarm-01)\n                              :time (e / early\n                                       :op1 (d / date-entity\n                                               :weekday (f / friday)))))))",
      "(r / respond-01\n   :ARG0 (p / police))",
      "(r / respond-01\n   :ARG0 (p / police)\n   :polarity -)",
      "(r / respond-01\n   :ARG0 (p / police)\n   :time (a2 / after\n             :op1 (g / go-off-16\n                     :ARG1 (a3 / alarm-01)\n                     :time (e / early\n                              :op1 (d / date-entity\n                                      :weekday (f / friday))))))",
      "(a2 / after\n    :op1 (g / go-off-16\n            :ARG1 (a3 / alarm-01)\n            :time (e / early\n                     :op1 (d / date-entity\n                             :weekday (f / friday)))))",
      "(g / go-off-16\n   :ARG1 (a3 / alarm-01))",
      "(g / go-off-16\n   :ARG1 (a3 / alarm-01)\n   :time (e / early\n            :op1 (d / date-entity\n                    :weekday (f / friday))))",
      "(e / early\n   :op1 (d / date-entity\n           :weekday (f / friday)))",
      "(d / date-entity\n   :weekday (f / friday))"
    ],
    "smus": [
      "Locals say power cuts over the weekend before the raid could have been linked to the heist.",
      "Locals.",
      "Power cuts over the weekend before the raid could have been linked to the heist.",
      "Power cuts over the weekend before the raid were linked to the heist.",
      "Power cuts.",
      "Power cuts over the weekend.",
      "Power cuts before raid.",
      "Before the raid.",
      "They tell of the suspicious drilling noises Friday evening.",
      "They also tell of suspicious drilling noises Friday evening.",
      "Suspicious noises.",
      "Suspicious drilling noises.",
      "Suspective noises Friday evening.",
      "Friday",
      "evening",
      "The Group saw the scene returning on Saturday, a day after the initial break.",
      "The Group is returning to the scene.",
      "The Group will be returning to the scene Saturday.",
      "The Group was returning to the scene a day after the initial break.",
      "Saturday",
      "After the initial break.",
      "After a day",
      "Initial break.",
      "One.",
      "day",
      "Police admit they didn't respond after the alarm went off early Friday.",
      "Police will respond.",
      "Police didn't respond.",
      "Police will respond after the alarm went off early Friday.",
      "After the alarm went off early Friday.",
      "The alarm goes off.",
      "The alarm went off early Friday.",
      "Early Friday.",
      "Friday"
    ]
  },
  {
    "instance_id": "realsumm-31",
    "summary": "<t> Shiraz Nawaz felt lucky to be alive after the flames shot out the manhole . </t> <t> The fire erupted just moments after he walked over it in the busy street . </t> <t> Incredibly no - one was hurt in the incident after Nawaz evacuated the area . </t>",
    "tree": [
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p\n            :ARG1-of (c / cause-01\n                        :ARG0 (l2 / live-01\n                                  :ARG0 p))))",
      "(f / feel-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shiraz\"\n                     :op2 \"Nawaz\"))\n   :ARG1 (l / lucky\n            :domain p\n            :ARG1-of (c / cause-01\n                        :ARG0 (l2 / live-01\n                                  :ARG0 p)))\n   :time (a / after\n            :op1 (s / shoot-02\n                    :ARG0 (f2 / flame)\n                    :ARG3 (m / manhole))))",
      "(p / person\n   :name (n / name\n            :op1 \"Shiraz\"\n            :op2 \"Nawaz\"))",
      "(n / name\n   :op1 \"Shiraz\")",
      "(n / name\n   :op2 \"Nawaz\")",
      "(l / lucky\n   :ARG1-of (c / cause-01\n               :ARG0 (l2 / live-01\n                         :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\")))))",
      "(l / lucky\n   :ARG1-of (c / cause-01\n               :ARG0 (l2 / live-01\n                         :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\"))))\n   :domain p)",
      "(c / cause-01\n   :ARG0 (l2 / live-01\n             :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\"))))",
      "(l2 / live-01\n    :ARG0 (p / person :name (n / name :op1 \"Shiraz\" :op2 \"Nawaz\")))",
      "(a / after\n   :op1 (s / shoot-02\n           :ARG0 (f2 / flame)\n           :ARG3 (m / manhole)))",
      "(s / shoot-02\n   :ARG0 (f2 / flame)\n   :ARG3 (m / manhole))",
      "(e / erupt-01\n   :ARG1 (f / fire))",
      "(e / erupt-01\n   :ARG1 (f / fire)\n   :time (a / after\n            :op1 (w / walk-01\n                    :ARG0 (h / he)\n                    :ARG2 (o / over\n                             :op1 f)\n                    :location (s / street\n                                 :ARG1-of (b / busy-02)))\n            :quant (m / moment\n                      :mod (j / just))))",
      "(a / after\n   :op1 (w / walk-01\n           :ARG0 (h / he)\n           :ARG2 (o / over\n                    :op1 (f / fire))\n           :location (s / street\n                        :ARG1-of (b / busy-02))))",
      "(a / after\n   :quant (m / moment\n             :mod (j / just)))",
      "(w / walk-01\n   :ARG0 (h / he)\n   :ARG2 (o / over\n            :op1 (f / fire)))",
      "(w / walk-01\n   :ARG0 (h / he)\n   :ARG2 (o / over\n            :op1 (f / fire))\n   :location (s / street\n                :ARG1-of (b / busy-02)))",
      "(o / over\n   :op1 (f / fire))",
      "(s / street\n   :ARG1-of (b / busy-02))",
      "(m / moment\n   :mod (j / just))",
      "(h / hurt-01\n   :ARG1 (n / no-one))",
      "(h / hurt-01\n   :ARG1 (n / no-one)\n   :manner (ii / incredible))",
      "(h / hurt-01\n   :ARG1 (n / no-one)\n   :time (ii2 / incident))",
      "(h / hurt-01\n   :ARG1 (n / no-one)\n   :time (a / after\n            :op1 (e / evacuate-01\n                    :ARG0 (p / person\n                             :name (n2 / name\n                                       :op1 \"Nawaz\"))\n                    :ARG1 (a2 / area))))",
      "(a / after\n   :op1 (e / evacuate-01\n           :ARG0 (p / person\n                    :name (n2 / name\n                              :op1 \"Nawaz\"))\n           :ARG1 (a2 / area)))",
      "(e / evacuate-01\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Nawaz\"))\n   :ARG1 (a2 / area))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Nawaz\"))",
      "(n2 / name\n    :op1 \"Nawaz\")"
    ],
    "smus": [
      "Shiraz Nawza felt lucky to have lived.",
      "After flames shot through the manhole Shiraz Nawza felt lucky to have lived.",
      "Shiraz Nawabs",
      "Shiraz",
      "Nawabs",
      "Lucky for Shiraz Nawabs to live.",
      "Shiraz Nawabs is lucky to have lived.",
      "Because Shiraz Nawabs lives.",
      "Shiraz Nawabs lives.",
      "After flames shot through the manhole.",
      "Flames shot through the manhole.",
      "The fire erupted.",
      "The fire erupted just moments after he walked over it on a busy street.",
      "After he walked over a fire on a busy street.",
      "Just moments later.",
      "He walked over the fire.",
      "He walked over a fire on a busy street.",
      "over the fire.",
      "a busy street",
      "Just moments.",
      "No one was hurt.",
      "No one was hurt incredibly.",
      "No one was hurt in the incident.",
      "No one was hurt after Nawabs evacuated the area.",
      "After Nawabs evacuated the area.",
      "Nawabs evacuated the area.",
      "Nawzaz",
      "Nawabs"
    ]
  },
  {
    "instance_id": "realsumm-32",
    "summary": "<t> Ao Nang Princess 5 ferry was in Andaman Sea on way from resort of Krabi . </t> <t> Was five miles from the coast travelling to Phuket when engine exploded . </t> <t> 35-metre - long boat caught fire around 3.30pm before sinking around 6 pm . </t> <t> Passengers seen throwing themselves overboard before being rescued . </t> <t> No injuries reported but search will continue into tomorrow for missing girl . </t>",
    "tree": [
      "(b / be-located-at-91\n   :ARG1 (f / ferry\n            :name (n / name\n                     :op1 \"Ao\"\n                     :op2 \"Nang\"\n                     :op3 \"Princess\"\n                     :op4 5))\n   :ARG2 (s / sea\n            :name (n2 / name\n                      :op1 \"Andaman\"\n                      :op2 \"Sea\")))",
      "(b / be-located-at-91\n   :ARG1 (f / ferry\n            :name (n / name\n                     :op1 \"Ao\"\n                     :op2 \"Nang\"\n                     :op3 \"Princess\"\n                     :op4 5))\n   :ARG2 (s / sea\n            :name (n2 / name\n                      :op1 \"Andaman\"\n                      :op2 \"Sea\"))\n   :time (w / way\n            :direction (r / resort\n                          :name (n3 / name\n                                    :op1 \"Krabi\"))))",
      "(f / ferry\n   :name (n / name\n            :op1 \"Ao\"\n            :op2 \"Nang\"\n            :op3 \"Princess\"\n            :op4 5))",
      "(n / name\n   :op1 \"Ao\")",
      "(n / name\n   :op2 \"Nang\")",
      "(n / name\n   :op3 \"Princess\")",
      "(n / name\n   :op4 5)",
      "(n / name\n   :op1 \"Andaman\")",
      "(n / name\n   :op2 \"Sea\")",
      "(n / name\n   :op1 \"Krabi\")",
      "(s / sea\n   :name (n2 / name\n             :op1 \"Andaman\"\n             :op2 \"Sea\"))",
      "(w / way\n   :direction (r / resort\n                 :name (n3 / name\n                           :op1 \"Krabi\")))",
      "(r / resort\n   :name (n3 / name\n             :op1 \"Krabi\"))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\")))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :time (e / explode-01\n            :ARG1 (e2 / engine)))",
      "(t / travel-01\n   :ARG0 (ii / i)\n   :ARG1 (ii2 / island\n              :name (n / name\n                       :op1 \"Phuket\"))\n   :extent (d / distance-quantity\n              :quant 5\n              :unit (m / mile)\n              :location (f / from\n                           :op1 (c / coast))))",
      "(ii2 / island\n     :name (n / name\n              :op1 \"Phuket\"))",
      "(n / name\n   :op1 \"Phuket\")",
      "(e / explode-01\n   :ARG1 (e2 / engine))",
      "(d / distance-quantity\n   :quant 5)",
      "(d / distance-quantity\n   :unit (m / mile))",
      "(d / distance-quantity\n   :location (f / from\n                :op1 (c / coast)))",
      "(f / from\n   :op1 (c / coast))",
      "(a / and\n   :op1 (c / catch-on-fire-09\n           :ARG1 (b / boat\n                    :ARG1-of (l / long-03\n                                :ARG2 (d / distance-quantity\n                                         :quant 35\n                                         :unit (m / meter))))\n           :time (a2 / around\n                     :op1 (d2 / date-entity\n                              :time \"15:30\"))))",
      "(a / and\n   :op2 (s / sink-01\n           :ARG1 (b / boat)\n           :time (a3 / around\n                     :op1 (d3 / date-entity\n                              :time \"18:00\"))))",
      "(c / catch-on-fire-09\n   :ARG1 (b / boat\n            :ARG1-of (l / long-03\n                        :ARG2 (d / distance-quantity\n                                 :quant 35\n                                 :unit (m / meter)))))",
      "(c / catch-on-fire-09\n   :ARG1 (b / boat\n            :ARG1-of (l / long-03\n                        :ARG2 (d / distance-quantity\n                                 :quant 35\n                                 :unit (m / meter))))\n   :time (a2 / around\n             :op1 (d2 / date-entity\n                      :time \"15:30\")))",
      "(b / boat\n   :ARG1-of (l / long-03\n               :ARG2 (d / distance-quantity\n                        :quant 35\n                        :unit (m / meter))))",
      "(l / long-03\n   :ARG2 (d / distance-quantity\n            :quant 35\n            :unit (m / meter)))",
      "(d / distance-quantity\n   :quant 35)",
      "(d / distance-quantity\n   :unit (m / meter))",
      "(a2 / around\n    :op1 (d2 / date-entity\n             :time \"15:30\"))",
      "(a2 / around\n    :op1 (d3 / date-entity\n             :time \"18:00\"))",
      "(d2 / date-entity\n    :time \"15:30\")",
      "(d2 / date-entity\n    :time \"18:00\")",
      "(s / sink-01\n   :ARG1 (b / boat))",
      "(s / sink-01\n   :ARG1 (b / boat)\n   :time (a3 / around\n             :op1 (d3 / date-entity\n                      :time \"18:00\")))",
      "(s / see-01\n   :ARG1 (t / throw-01\n            :ARG0 (p / passenger)\n            :ARG1 p\n            :ARG2 (o / overboard)\n            :time (b / before\n                     :op1 (r / rescue-01\n                             :ARG1 p))))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 p\n   :ARG2 (o / overboard))",
      "(t / throw-01\n   :ARG0 (p / passenger)\n   :ARG1 p\n   :ARG2 (o / overboard)\n   :time (b / before\n            :op1 (r / rescue-01\n                    :ARG1 p)))",
      "(b / before\n   :op1 (r / rescue-01\n           :ARG1 (p / passenger)))",
      "(r / rescue-01\n   :ARG1 (p / passenger))",
      "(h / have-concession-91\n   :ARG1 (c / continue-01\n            :ARG1 (s / search-01\n                     :ARG2 (g / girl\n                              :ARG1-of (m / miss-01)))\n            :time (ii / into\n                      :op1 (t / tomorrow)))\n   :ARG2 (r / report-01\n            :polarity -\n            :ARG1 (ii2 / injure-01)))",
      "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1-of (m / miss-01))))",
      "(c / continue-01\n   :ARG1 (s / search-01\n            :ARG2 (g / girl\n                     :ARG1-of (m / miss-01)))\n   :time (ii / into\n             :op1 (t / tomorrow)))",
      "(s / search-01\n   :ARG2 (g / girl\n            :ARG1-of (m / miss-01)))",
      "(g / girl\n   :ARG1-of (m / miss-01))",
      "(ii / into\n    :op1 (t / tomorrow))",
      "(r / report-01\n   :ARG1 (ii2 / injure-01))",
      "(r / report-01\n   :ARG1 (ii2 / injure-01)\n   :polarity -)"
    ],
    "smus": [
      "The Ao Nang Princess 5 ferry is on the Andaman Sea.",
      "On the way to the resort of Rabi, the Ao Nam Princess 5 ferry is on the Andaman Sea.",
      "Ao Nang Princess 5 ferry",
      "Ao",
      "NANG",
      "Princess.",
      "5.",
      "Andaman.",
      "Sea.",
      "Rabi",
      "Andaman Sea",
      "The way to Rabi.",
      "Krabi resort",
      "I'm traveling to Phuket.",
      "I was traveling to Phuket when the engine exploded.",
      "I'm traveling 5 miles from the coast to Phuket.",
      "Phuket",
      "Phuket",
      "The engine exploded.",
      "5 miles",
      "miles",
      "from the coast.",
      "from the coast",
      "The 35-meter-long boat caught fire around 5:30pm.",
      "And the boat was sinking around 8 o'clock a.m.",
      "The 35-meter-long boat caught fire.",
      "The 35-metre-long boat caught fire around 5:30 p.m.",
      "The boat is 35 meters long.",
      "35 meters (40 feet) long.",
      "35 miles",
      "Meters",
      "Around 5:30pm",
      "Around 8pm",
      "15:30",
      "8 a.m.",
      "The boat is sinking.",
      "The boat was sinking around 8 o'clock p.m.",
      "The passengers were seen throwing themselves overboard before being rescued.",
      "Passengers throwing themselves overboard.",
      "Passengers throwing themselves overboard before being rescued.",
      "Before the passengers were rescued.",
      "The passengers were rescued.",
      "No injuries were reported but the search for the missing girl will continue into tomorrow.",
      "Search continues for missing girl",
      "Search for missing girl will continue into tomorrow.",
      "Search for missing girl",
      "Missing girl",
      "into tomorrow.",
      "There were reports of injuries.",
      "No injuries were reported."
    ]
  },
  {
    "instance_id": "realsumm-33",
    "summary": "<t> The worker was caught on camera by a member of the public . </t> <t> Field owner TH Clements & Son was alerted and the man was sacked . </t> <t> Passer - by who used mobile phone to snap photo branded act ' disgusting ' Tesco : Vegetables undergo ' extensive assessment ' before hitting shelves . </t>",
    "tree": [
      "(c / catch-03\n   :ARG0 (m / member\n            :part-of (p / public))\n   :ARG1 (p2 / person\n             :ARG0-of (w / work-01))\n   :ARG2 (c2 / camera))",
      "(m / member\n   :part-of (p / public))",
      "(p2 / person\n    :ARG0-of (w / work-01))",
      "(a / and\n   :op1 (a2 / alert-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"TH\"\n                              :op2 \"Clements\"\n                              :op3 \"&\"\n                              :op4 \"Son\")\n                     :ARG0-of (o / own-01\n                                 :ARG1 (f / field)))))",
      "(a / and\n   :op2 (s / sack-01\n           :ARG1 (m / man)))",
      "(a2 / alert-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"TH\"\n                      :op2 \"Clements\"\n                      :op3 \"&\"\n                      :op4 \"Son\")\n             :ARG0-of (o / own-01\n                         :ARG1 (f / field))))",
      "(p / person\n   :ARG0-of (o / own-01\n               :ARG1 (f / field)))",
      "(p / person\n   :ARG0-of (o / own-01\n               :ARG1 (f / field))\n   :name (n / name\n            :op1 \"TH\"\n            :op2 \"Clements\"\n            :op3 \"&\"\n            :op4 \"Son\"))",
      "(n / name\n   :op1 \"TH\")",
      "(n / name\n   :op2 \"Clements\")",
      "(n / name\n   :op3 \"&\")",
      "(n / name\n   :op4 \"Son\")",
      "(o / own-01\n   :ARG1 (f / field))",
      "(s / sack-01\n   :ARG1 (m / man))",
      "(m / multi-sentence\n   :snt1 (p / person\n            :ARG0-of (p2 / pass-by-17)\n            :ARG0-of (u / use-01\n                        :ARG1 (p3 / phone\n                                  :mod (m2 / mobile))\n                        :ARG2 (s / snap-03\n                                 :ARG0 p\n                                 :ARG1 (a / act-02\n                                          :ARG1-of (b / brand-01\n                                                      :ARG2 (d / disgust-01))\n                                          :mod (p4 / photo))))\n            :mod (c / company\n                    :name (n / name\n                             :op1 \"Tesco\"))))",
      "(m / multi-sentence\n   :snt2 (u2 / undergo-28\n             :ARG1 (v / vegetable)\n             :ARG2 (a2 / assess-01\n                       :ARG1 v\n                       :ARG1-of (e / extensive-03))\n             :time (b2 / before\n                       :op1 (h / hit-01\n                               :ARG1 (s2 / shelf)))))",
      "(p / person\n   :ARG0-of (p2 / pass-by-17)\n   :ARG0-of (u / use-01\n               :ARG1 (p3 / phone\n                         :mod (m2 / mobile))\n               :ARG2 (s / snap-03\n                        :ARG0 p\n                        :ARG1 (a / act-02\n                                 :ARG1-of (b / brand-01\n                                             :ARG2 (d / disgust-01))\n                                 :mod (p4 / photo)))))",
      "(p / person\n   :ARG0-of (p2 / pass-by-17)\n   :ARG0-of (u / use-01\n               :ARG1 (p3 / phone\n                         :mod (m2 / mobile))\n               :ARG2 (s / snap-03\n                        :ARG0 p\n                        :ARG1 (a / act-02\n                                 :ARG1-of (b / brand-01\n                                             :ARG2 (d / disgust-01))\n                                 :mod (p4 / photo))))\n   :mod (c / company\n           :name (n / name\n                    :op1 \"Tesco\")))",
      "(u / use-01\n   :ARG1 (p3 / phone\n             :mod (m2 / mobile))\n   :ARG2 (s / snap-03\n            :ARG0 (p / person)\n            :ARG1 (a / act-02\n                     :ARG1-of (b / brand-01\n                                 :ARG2 (d / disgust-01))\n                     :mod (p4 / photo))))",
      "(p3 / phone\n    :mod (m2 / mobile))",
      "(s / snap-03\n   :ARG0 (p / person)\n   :ARG1 (a / act-02\n            :ARG1-of (b / brand-01\n                        :ARG2 (d / disgust-01))\n            :mod (p4 / photo)))",
      "(a / act-02\n   :ARG1-of (b / brand-01\n               :ARG2 (d / disgust-01)))",
      "(a / act-02\n   :ARG1-of (b / brand-01\n               :ARG2 (d / disgust-01))\n   :mod (p4 / photo))",
      "(b / brand-01\n   :ARG2 (d / disgust-01))",
      "(c / company\n   :name (n / name\n            :op1 \"Tesco\"))",
      "(n / name\n   :op1 \"Tesco\")",
      "(u2 / undergo-28\n    :ARG1 (v / vegetable)\n    :ARG2 (a2 / assess-01\n              :ARG1 v\n              :ARG1-of (e / extensive-03)))",
      "(u2 / undergo-28\n    :ARG1 (v / vegetable)\n    :ARG2 (a2 / assess-01\n              :ARG1 v\n              :ARG1-of (e / extensive-03))\n    :time (b2 / before\n              :op1 (h / hit-01\n                      :ARG1 (s2 / shelf))))",
      "(a2 / assess-01\n    :ARG1 (v / vegetable)\n    :ARG1-of (e / extensive-03))",
      "(b2 / before\n    :op1 (h / hit-01\n            :ARG1 (s2 / shelf)))",
      "(h / hit-01\n   :ARG1 (s2 / shelf))"
    ],
    "smus": [
      "A member of the public has caught the worker on camera.",
      "Member of the public.",
      "Worker.",
      "And TH Clements & Son, the field's owner, was alerted.",
      "and the man was sacked.",
      "Field owner TH Clements & Son was alerted.",
      "The owner of the field.",
      "TH Clements & Son - Field Owner",
      "TH",
      "Clements",
      "&",
      "Son",
      "The field is owned by the owner.",
      "The man was sacked.",
      "Passed by a Tesco person who used a mobile phone to snap a photo of an act branded disgusting.",
      "Vegetables undergo extensive assessment before hitting the shelves.",
      "Passed by who used a mobile phone to snap a photo of an act branded disgusting.",
      "Passed by a Tesco person who used a mobile phone to snap a photo of an act branded disgusting.",
      "People used a mobile phone to snap a photo of an act branded disgusting.",
      "mobile phone",
      "People snap photos of disgusting acts branded as \"acts of disgust\".",
      "An act branded disgusting.",
      "The photo is of an act branded disgusting.",
      "Branded disgusting.",
      "Tesco",
      "Tesco",
      "Vegetables undergo an extensive assessment.",
      "Vegetables undergo extensive assessment before hitting the shelves.",
      "The vegetables have undergone an extensive assessment.",
      "before hitting the shelves.",
      "Hit the shelves."
    ]
  },
  {
    "instance_id": "realsumm-34",
    "summary": "<t> Tim Stanley : Muhammadu Buhar won Nigeria vote on campaign against corruption . </t> <t> He 's an ex - dictator , but there 's reason for optimism . </t> <t> He says Jonathan administration failed to address corruption , poverty and rise of Boko Haram . </t> <t> Buhar may be tonic to years of misrule . </t>",
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tim\"\n                     :op2 \"Stanley\"))\n   :ARG1 (w / win-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Muhammadu\"\n                                :op2 \"Buhar\"))\n            :ARG1 (v / vote-01)\n            :ARG2 (c / country\n                     :name (n3 / name\n                               :op1 \"Nigeria\"))\n            :ARG1-of (c2 / cause-01\n                         :ARG0 (c3 / campaign-01\n                                   :ARG0 p2\n                                   :ARG1 (a / against\n                                            :op1 (c4 / corrupt-01))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Tim\"\n            :op2 \"Stanley\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Muhammadu\"\n             :op2 \"Buhar\"))",
      "(n / name\n   :op1 \"Tim\")",
      "(n / name\n   :op2 \"Stanley\")",
      "(n / name\n   :op1 \"Muhammadu\")",
      "(n / name\n   :op2 \"Buhar\")",
      "(n / name\n   :op1 \"Nigeria\")",
      "(w / win-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Muhammadu\"\n                       :op2 \"Buhar\"))\n   :ARG1 (v / vote-01)\n   :ARG2 (c / country\n            :name (n3 / name\n                      :op1 \"Nigeria\"))\n   :ARG1-of (c2 / cause-01\n                :ARG0 (c3 / campaign-01\n                          :ARG0 p2\n                          :ARG1 (a / against\n                                   :op1 (c4 / corrupt-01)))))",
      "(c / country\n   :name (n3 / name\n             :op1 \"Nigeria\"))",
      "(c2 / cause-01\n    :ARG0 (c3 / campaign-01\n              :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))\n              :ARG1 (a / against\n                       :op1 (c4 / corrupt-01))))",
      "(c3 / campaign-01\n    :ARG0 (p2 / person :name (n2 / name :op1 \"Muhammadu\" :op2 \"Buhar\"))\n    :ARG1 (a / against\n             :op1 (c4 / corrupt-01)))",
      "(a / against\n   :op1 (c4 / corrupt-01))",
      "(h / have-concession-91\n   :ARG1 (r / reason\n            :ARG0-of (c / cause-01\n                        :ARG1 (o / optimism)))\n   :ARG2 (d / dictator\n            :domain (h2 / he)\n            :time (e / ex)))",
      "(r / reason\n   :ARG0-of (c / cause-01\n               :ARG1 (o / optimism)))",
      "(c / cause-01\n   :ARG1 (o / optimism))",
      "(d / dictator\n   :domain (h2 / he))",
      "(d / dictator\n   :time (e / ex))",
      "(s / say-01\n   :ARG0 (h / he)\n   :ARG1 (f / fail-01\n            :ARG1 (g / government-organization\n                     :ARG0-of (a / administrate-01)\n                     :mod (p / person\n                             :name (n / name\n                                      :op1 \"Jonathan\")))\n            :ARG2 (a2 / address-02\n                      :ARG0 g\n                      :ARG1 (a3 / and\n                                :op1 (c / corruption)\n                                :op2 (p2 / poor)\n                                :op3 (r / rise-01\n                                        :ARG1 (c2 / criminal-organization\n                                                  :name (n2 / name\n                                                            :op1 \"Boko\"\n                                                            :op2 \"Hararma\")))))))",
      "(f / fail-01\n   :ARG1 (g / government-organization\n            :ARG0-of (a / administrate-01)\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"Jonathan\")))\n   :ARG2 (a2 / address-02\n             :ARG0 g\n             :ARG1 (a3 / and\n                       :op1 (c / corruption)\n                       :op2 (p2 / poor)\n                       :op3 (r / rise-01\n                               :ARG1 (c2 / criminal-organization\n                                         :name (n2 / name\n                                                   :op1 \"Boko\"\n                                                   :op2 \"Hararma\"))))))",
      "(g / government-organization\n   :ARG0-of (a / administrate-01))",
      "(g / government-organization\n   :ARG0-of (a / administrate-01)\n   :mod (p / person\n           :name (n / name\n                    :op1 \"Jonathan\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Jonathan\"))",
      "(n / name\n   :op1 \"Jonathan\")",
      "(n / name\n   :op1 \"Boko\")",
      "(n / name\n   :op2 \"Hararma\")",
      "(a2 / address-02\n    :ARG0 (g / government-organization)\n    :ARG1 (a3 / and\n              :op1 (c / corruption)\n              :op2 (p2 / poor)\n              :op3 (r / rise-01\n                      :ARG1 (c2 / criminal-organization\n                                :name (n2 / name\n                                          :op1 \"Boko\"\n                                          :op2 \"Hararma\")))))",
      "(a3 / and\n    :op1 (c / corruption))",
      "(a3 / and\n    :op2 (p2 / poor))",
      "(a3 / and\n    :op3 (r / rise-01\n            :ARG1 (c2 / criminal-organization\n                      :name (n2 / name\n                                :op1 \"Boko\"\n                                :op2 \"Hararma\"))))",
      "(r / rise-01\n   :ARG1 (c2 / criminal-organization\n             :name (n2 / name\n                       :op1 \"Boko\"\n                       :op2 \"Hararma\")))",
      "(c2 / criminal-organization\n    :name (n2 / name\n              :op1 \"Boko\"\n              :op2 \"Hararma\"))",
      "(p / possible-01\n   :ARG1 (t / tonic\n            :beneficiary (m / misrule\n                            :duration (m2 / multiple\n                                          :op1 (t2 / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y / year))))\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"Buhar\"))))",
      "(t / tonic\n   :beneficiary (m / misrule\n                   :duration (m2 / multiple\n                                 :op1 (t2 / temporal-quantity\n                                          :quant 1\n                                          :unit (y / year)))))",
      "(t / tonic\n   :domain (p2 / person\n               :name (n / name\n                        :op1 \"Buhar\")))",
      "(m / misrule\n   :duration (m2 / multiple\n                 :op1 (t2 / temporal-quantity\n                          :quant 1\n                          :unit (y / year))))",
      "(m2 / multiple\n    :op1 (t2 / temporal-quantity\n             :quant 1\n             :unit (y / year)))",
      "(t2 / temporal-quantity\n    :quant 1)",
      "(t2 / temporal-quantity\n    :unit (y / year))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Buhar\"))",
      "(n / name\n   :op1 \"Buhar\")"
    ],
    "smus": [
      "Tim Stanley said Muhammadu Buhar won the vote for Nigeria in a campaign against corruption.",
      "Tim Stanley",
      "Muhammadu Buhar",
      "Tim",
      "Stanley",
      "Muhammadu",
      "BUHAR",
      "Nigeria (NZ)",
      "Muhammadu Buhar won the vote for Nigeria in a campaign against corruption.",
      "Nigeria (NZ)",
      "Because Muhammadu Buhar is a campaign against corruption.",
      "Muhammadu Buhar is a campaign against corruption.",
      "against corruption.",
      "There is reason for optimism, but he was an ex-dictator.",
      "The reason for optimism.",
      "So optimism.",
      "He was a dictator.",
      "Ex-dictator.",
      "He says the Jonathan administration failed to address corruption, poverty and the rise of the Bok Hararma movement.",
      "Jonathan's administration failed to address corruption, poverty and the rise of Bok Hararma.",
      "the administration",
      "Jonathan administration",
      "Jonathan",
      "Jonathan",
      "Boko",
      "Hararma",
      "The government will address corruption, poverty and the rise of the Boko Hararma.",
      "and corruption.",
      "and poor.",
      "and the rise of the Boko Hararma.",
      "The rise of the Boko Hararma.",
      "Boko Hararma",
      "Buhar may have been a tonic for years of misrule.",
      "A tonic for years of misrule.",
      "Buhar is a tonic.",
      "Misruly for years.",
      "for years.",
      "One.",
      "Years.",
      "Buhar",
      "BUHAR"
    ]
  },
  {
    "instance_id": "realsumm-35",
    "summary": "<t> Bulgaria 's Black Sea resorts cheaper than hotspots in Italy , Spain and Turkey . </t> <t> Researchers found cheapest destination using ' imaginary shopping basket ' Cheap prices are driven by low exchange rates and country 's high inflation . </t> <t> Its most popular resort of Sunny Beach copies those of Spain and Greece . </t>",
    "tree": [
      "(h / have-degree-91\n   :ARG1 (r / resort\n            :location (s / sea\n                         :name (n / name\n                                  :op1 \"Black\"\n                                  :op2 \"Sea\"))\n            :poss (c / country\n                     :name (n2 / name\n                               :op1 \"Bulgaria\")))\n   :ARG2 (c2 / cheap-02\n             :ARG1 r)\n   :ARG3 (m / more)\n   :ARG4 (h2 / hotspot\n             :location (a / and\n                          :op1 (c3 / country\n                                   :name (n3 / name\n                                             :op1 \"Italy\"))\n                          :op2 (c4 / country\n                                   :name (n4 / name\n                                             :op1 \"Spain\"))\n                          :op3 (c5 / country\n                                   :name (n5 / name\n                                             :op1 \"Turkey\")))))",
      "(r / resort\n   :location (s / sea\n                :name (n / name\n                         :op1 \"Black\"\n                         :op2 \"Sea\")))",
      "(r / resort\n   :poss (c / country\n            :name (n2 / name\n                      :op1 \"Bulgaria\")))",
      "(s / sea\n   :name (n / name\n            :op1 \"Black\"\n            :op2 \"Sea\"))",
      "(n / name\n   :op1 \"Black\")",
      "(n / name\n   :op2 \"Sea\")",
      "(n / name\n   :op1 \"Bulgaria\")",
      "(n / name\n   :op1 \"Italy\")",
      "(n / name\n   :op1 \"Spain\")",
      "(n / name\n   :op1 \"Turkey\")",
      "(c / country\n   :name (n2 / name\n             :op1 \"Bulgaria\"))",
      "(c / country\n   :name (n3 / name\n             :op1 \"Italy\"))",
      "(c / country\n   :name (n4 / name\n             :op1 \"Spain\"))",
      "(c / country\n   :name (n5 / name\n             :op1 \"Turkey\"))",
      "(c2 / cheap-02\n    :ARG1 (r / resort))",
      "(h2 / hotspot\n    :location (a / and\n                 :op1 (c3 / country\n                          :name (n3 / name\n                                    :op1 \"Italy\"))\n                 :op2 (c4 / country\n                          :name (n4 / name\n                                    :op1 \"Spain\"))\n                 :op3 (c5 / country\n                          :name (n5 / name\n                                    :op1 \"Turkey\"))))",
      "(a / and\n   :op1 (c3 / country\n            :name (n3 / name\n                      :op1 \"Italy\")))",
      "(a / and\n   :op2 (c4 / country\n            :name (n4 / name\n                      :op1 \"Spain\")))",
      "(a / and\n   :op3 (c5 / country\n            :name (n5 / name\n                      :op1 \"Turkey\")))",
      "(m / multi-sentence\n   :snt1 (f / find-01\n            :ARG0 (p / person\n                     :ARG0-of (r / research-01))\n            :ARG1 (d / destination\n                     :ARG1-of (h / have-degree-91\n                                 :ARG2 (c / cheap-02\n                                          :ARG1 d)\n                                 :ARG3 (m2 / most)))\n            :manner (u / use-01\n                       :ARG0 p\n                       :ARG1 (b / basket\n                                :mod (s / shop-01)\n                                :mod (ii / imaginary)))))",
      "(m / multi-sentence\n   :snt2 (d2 / drive-02\n             :ARG0 (a / and\n                      :op1 (r2 / rate\n                               :ARG1-of (l / low-04)\n                               :mod (e / exchange-01))\n                      :op2 (ii2 / inflate-01\n                                :ARG1 (c2 / country)\n                                :ARG1-of (h2 / high-02)))\n             :ARG1 (p2 / price-01\n                       :ARG1-of (c3 / cheap-02))))",
      "(f / find-01\n   :ARG0 (p / person\n            :ARG0-of (r / research-01))\n   :ARG1 (d / destination\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (c / cheap-02\n                                 :ARG1 d)\n                        :ARG3 (m2 / most))))",
      "(f / find-01\n   :ARG0 (p / person\n            :ARG0-of (r / research-01))\n   :ARG1 (d / destination\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (c / cheap-02\n                                 :ARG1 d)\n                        :ARG3 (m2 / most)))\n   :manner (u / use-01\n              :ARG0 p\n              :ARG1 (b / basket\n                       :mod (s / shop-01)\n                       :mod (ii / imaginary))))",
      "(p / person\n   :ARG0-of (r / research-01))",
      "(d / destination\n   :ARG1-of (h / have-degree-91\n               :ARG2 (c / cheap-02\n                        :ARG1 d)\n               :ARG3 (m2 / most)))",
      "(h / have-degree-91\n   :ARG2 (c / cheap-02\n            :ARG1 (d / destination))\n   :ARG3 (m2 / most))",
      "(c / cheap-02\n   :ARG1 (d / destination))",
      "(u / use-01\n   :ARG0 (p / person)\n   :ARG1 (b / basket\n            :mod (s / shop-01)\n            :mod (ii / imaginary)))",
      "(b / basket\n   :mod (s / shop-01))",
      "(b / basket\n   :mod (ii / imaginary))",
      "(d2 / drive-02\n    :ARG0 (a / and\n             :op1 (r2 / rate\n                      :ARG1-of (l / low-04)\n                      :mod (e / exchange-01))\n             :op2 (ii2 / inflate-01\n                       :ARG1 (c2 / country)\n                       :ARG1-of (h2 / high-02)))\n    :ARG1 (p2 / price-01\n              :ARG1-of (c3 / cheap-02)))",
      "(a / and\n   :op1 (r2 / rate\n            :ARG1-of (l / low-04)\n            :mod (e / exchange-01)))",
      "(a / and\n   :op2 (ii2 / inflate-01\n             :ARG1 (c2 / country)\n             :ARG1-of (h2 / high-02)))",
      "(r2 / rate\n    :ARG1-of (l / low-04))",
      "(r2 / rate\n    :ARG1-of (l / low-04)\n    :mod (e / exchange-01))",
      "(ii2 / inflate-01\n     :ARG1 (c2 / country)\n     :ARG1-of (h2 / high-02))",
      "(p2 / price-01\n    :ARG1-of (c3 / cheap-02))",
      "(c / copy-01\n   :ARG1 (r / resort\n            :name (n / name\n                     :op1 \"Sunny\"\n                     :op2 \"Beach\")\n            :poss (ii / it)\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (p / popular-02\n                                 :ARG1 r)\n                        :ARG3 (m / most)\n                        :ARG5 (r2 / resort\n                                  :poss (a / and\n                                           :op1 (c2 / country\n                                                    :name (n2 / name\n                                                              :op1 \"Spain\"))\n                                           :op2 (c3 / country\n                                                    :name (n3 / name\n                                                              :op1 \"Greece\")))))))",
      "(r / resort\n   :ARG1-of (h / have-degree-91\n               :ARG2 (p / popular-02\n                        :ARG1 r)\n               :ARG3 (m / most)\n               :ARG5 (r2 / resort\n                         :poss (a / and\n                                  :op1 (c2 / country\n                                           :name (n2 / name\n                                                     :op1 \"Spain\"))\n                                  :op2 (c3 / country\n                                           :name (n3 / name\n                                                     :op1 \"Greece\"))))))",
      "(r / resort\n   :ARG1-of (h / have-degree-91\n               :ARG2 (p / popular-02\n                        :ARG1 r)\n               :ARG3 (m / most)\n               :ARG5 (r2 / resort\n                         :poss (a / and\n                                  :op1 (c2 / country\n                                           :name (n2 / name\n                                                     :op1 \"Spain\"))\n                                  :op2 (c3 / country\n                                           :name (n3 / name\n                                                     :op1 \"Greece\")))))\n   :name (n / name\n            :op1 \"Sunny\"\n            :op2 \"Beach\"))",
      "(r / resort\n   :ARG1-of (h / have-degree-91\n               :ARG2 (p / popular-02\n                        :ARG1 r)\n               :ARG3 (m / most)\n               :ARG5 (r2 / resort\n                         :poss (a / and\n                                  :op1 (c2 / country\n                                           :name (n2 / name\n                                                     :op1 \"Spain\"))\n                                  :op2 (c3 / country\n                                           :name (n3 / name\n                                                     :op1 \"Greece\")))))\n   :poss (ii / it))",
      "(r / resort\n   :ARG1-of (h / have-degree-91\n               :ARG2 (p / popular-02\n                        :ARG1 r)\n               :ARG3 (m / most)\n               :ARG5 (r2 / resort\n                         :poss (a / and\n                                  :op1 (c2 / country\n                                           :name (n2 / name\n                                                     :op1 \"Spain\"))\n                                  :op2 (c3 / country\n                                           :name (n3 / name\n                                                     :op1 \"Greece\")))))\n   :poss (a / and\n            :op1 (c2 / country\n                     :name (n2 / name\n                               :op1 \"Spain\"))\n            :op2 (c3 / country\n                     :name (n3 / name\n                               :op1 \"Greece\"))))",
      "(n / name\n   :op1 \"Sunny\")",
      "(n / name\n   :op2 \"Beach\")",
      "(n / name\n   :op1 \"Spain\")",
      "(n / name\n   :op1 \"Greece\")",
      "(h / have-degree-91\n   :ARG2 (p / popular-02\n            :ARG1 (r / resort :name (n / name :op1 \"Sunny\" :op2 \"Beach\"))))\n   :ARG3 (m / most)\n   :ARG5 (r2 / resort\n             :poss (a / and\n                      :op1 (c2 / country\n                               :name (n2 / name\n                                         :op1 \"Spain\"))\n                      :op2 (c3 / country\n                               :name (n3 / name\n                                         :op1 \"Greece\")))))",
      "(p / popular-02\n   :ARG1 (r / resort :name (n / name :op1 \"Sunny\" :op2 \"Beach\"))))",
      "(a / and\n   :op1 (c2 / country\n            :name (n2 / name\n                      :op1 \"Spain\")))",
      "(a / and\n   :op2 (c3 / country\n            :name (n3 / name\n                      :op1 \"Greece\")))",
      "(c2 / country\n    :name (n2 / name\n              :op1 \"Spain\"))",
      "(c2 / country\n    :name (n3 / name\n              :op1 \"Greece\"))"
    ],
    "smus": [
      "Bulgaria's Black Sea resorts are cheaper than hotspots in Italy, Spain and Turkey.",
      "Black Sea resorts",
      "Bulgaria's resorts",
      "The Black Sea",
      "Black.",
      "Sea.",
      "Bulgaria (BG)",
      "Italy (IT)",
      "Spain (ES)",
      "Turkey (TUR)",
      "Bulgaria (BG)",
      "Italy (IT)",
      "Spain (ES)",
      "Turkey (TW)",
      "The resorts are cheap.",
      "Hotspots in Italy, Spain and Turkey.",
      "Italy (IT)",
      "and Spain.",
      "and Turkey.",
      "Researchers found the cheapest destination using an imaginary shopping basket.",
      "Low exchange rates and high inflation in the country have driven up prices to cheap prices.",
      "The researchers found the cheapest destination.",
      "Using an imaginary shopping basket, researchers found the cheapest destination.",
      "Researchers",
      "The cheapest destination.",
      "The cheapest destination",
      "The destination is cheap.",
      "People are using an imaginary shopping basket.",
      "Shopping basket.",
      "an imaginary basket.",
      "Low exchange rates and high inflation in the country have driven up prices to cheap prices.",
      "and low exchange rates.",
      "and the country is in high inflation.",
      "Low rates.",
      "Low exchange rates.",
      "The country is in high inflation.",
      "Cheap prices.",
      "It copies its Sunny Beach resort, which is the most popular of Spain and Greece's resorts.",
      "The most popular resort of Spain and Greece.",
      "Sunny Beach is Spain's most popular resort, followed by Greece.",
      "It is its most popular resort of Spain and Greece.",
      "Spain and Greece's most popular resorts are Spain and Greece's.",
      "Sunny.",
      "Beach.",
      "Spain (ES)",
      "Greece (GR)",
      "Sunny Beach is Spain's most popular resort, followed by Greece.",
      "Sunny Beach is a popular resort.",
      "and Spain.",
      "and Greece.",
      "Spain (ES)",
      "Greece (GR)"
    ]
  },
  {
    "instance_id": "realsumm-36",
    "summary": "<t> WARNING : GRAPHIC CONTENT . </t> <t> Series of photos appear to show the beheading of a man in Hama in Syria . </t> <t> Man is handcuffed and blindfolded as he is led from a van to area of land . </t> <t> He is surrounded by men with guns and executioner with a meat cleaver . </t> <t> It is claimed the man was beheaded because he is an alleged ' blasphemer ' </t>",
    "tree": [
      "(w / warn-01\n   :ARG1 (c / content\n            :mod (g / graphic)))",
      "(c / content\n   :mod (g / graphic))",
      "(a / appear-02\n   :ARG1 (s / show-01\n            :ARG0 (s2 / series\n                      :consist-of (p / photo))\n            :ARG1 (b / behead-01\n                     :ARG1 (m / man)\n                     :location (c / city\n                                  :name (n / name\n                                           :op1 \"Hama\")\n                                  :location (c2 / country\n                                                :name (n2 / name\n                                                          :op1 \"Syria\"))))))",
      "(s / show-01\n   :ARG0 (s2 / series\n             :consist-of (p / photo))\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Hama\")\n                         :location (c2 / country\n                                       :name (n2 / name\n                                                 :op1 \"Syria\")))))",
      "(s2 / series\n    :consist-of (p / photo))",
      "(b / behead-01\n   :ARG1 (m / man))",
      "(b / behead-01\n   :ARG1 (m / man)\n   :location (c / city\n                :name (n / name\n                         :op1 \"Hama\")\n                :location (c2 / country\n                              :name (n2 / name\n                                        :op1 \"Syria\"))))",
      "(c / city\n   :name (n / name\n            :op1 \"Hama\"))",
      "(c / city\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Syria\")))",
      "(n / name\n   :op1 \"Hama\")",
      "(n / name\n   :op1 \"Syria\")",
      "(c2 / country\n    :name (n2 / name\n              :op1 \"Syria\"))",
      "(a / and\n   :op1 (h / handcuff-01\n           :ARG1 (m / man)))",
      "(a / and\n   :op2 (b / blindfold-01\n           :ARG1 (m / man)))",
      "(a / and\n   :time (l / lead-01\n            :ARG1 (m / man)\n            :ARG3 (v / van)\n            :ARG4 (a2 / area\n                      :mod (l2 / land))))",
      "(h / handcuff-01\n   :ARG1 (m / man))",
      "(b / blindfold-01\n   :ARG1 (m / man))",
      "(l / lead-01\n   :ARG1 (m / man)\n   :ARG3 (v / van)\n   :ARG4 (a2 / area\n             :mod (l2 / land)))",
      "(a2 / area\n    :mod (l2 / land))",
      "(s / surround-01\n   :ARG1 (a / and\n            :op1 (m / man\n                    :ARG0-of (h / have-03\n                                :ARG1 (g / gun)))\n            :op2 (p / person\n                    :ARG0-of (e / execute-01)\n                    :ARG0-of (h2 / have-03\n                                 :ARG1 (c / cleaver\n                                          :purpose (m2 / meat)))))\n   :ARG2 (h3 / he))",
      "(a / and\n   :op1 (m / man\n           :ARG0-of (h / have-03\n                       :ARG1 (g / gun))))",
      "(a / and\n   :op2 (p / person\n           :ARG0-of (e / execute-01)\n           :ARG0-of (h2 / have-03\n                        :ARG1 (c / cleaver\n                                 :purpose (m2 / meat)))))",
      "(m / man\n   :ARG0-of (h / have-03\n               :ARG1 (g / gun)))",
      "(h / have-03\n   :ARG1 (g / gun)\n   :ARG1 (c / cleaver\n            :purpose (m2 / meat)))",
      "(p / person\n   :ARG0-of (e / execute-01)\n   :ARG0-of (h2 / have-03\n                :ARG1 (c / cleaver\n                         :purpose (m2 / meat))))",
      "(c / claim-01\n   :ARG1 (b / behead-01\n            :ARG1 (m / man)\n            :ARG1-of (c2 / cause-01\n                         :ARG0 (b2 / blaspheme-01\n                                   :ARG0 m\n                                   :ARG1-of (a / allege-01)))))",
      "(b / behead-01\n   :ARG1 (m / man)\n   :ARG1-of (c2 / cause-01\n                :ARG0 (b2 / blaspheme-01\n                          :ARG0 m\n                          :ARG1-of (a / allege-01))))",
      "(c2 / cause-01\n    :ARG0 (b2 / blaspheme-01\n              :ARG0 (m / man)\n              :ARG1-of (a / allege-01)))",
      "(b2 / blaspheme-01\n    :ARG0 (m / man)\n    :ARG1-of (a / allege-01))"
    ],
    "smus": [
      "Graphic Content Warning:",
      "Graphic Content",
      "The photo series appear to show a man being beheaded in Hama, Syria.",
      "The photo series will show the beheading of a man in Hama, Syria.",
      "a series of photos",
      "The man was beheaded.",
      "The man was beheaded in Hama, Syria.",
      "Hama.",
      "-Syria",
      "HAMA.",
      "Syria (SY)",
      "Syria (SY)",
      "and the man was handcuffed.",
      "and the man was blindfolded.",
      "and when the man was led by a van to a land area.",
      "The man was handcuffed.",
      "The man was blindfolded.",
      "The man was led by a van to a land area.",
      "land area",
      "He was surrounded by men with guns and an executioner with a meat cleaver.",
      "And men with guns.",
      "and an executioner with a meat cleaver.",
      "men with guns",
      "The guns have a meat cleaver.",
      "The executioner had a meat cleaver.",
      "The man was claimed to have been beheaded because of his alleged blasphemy.",
      "The man was beheaded because of his alleged blasphemy.",
      "Because of the alleged blasphemy of the man.",
      "The man is accused of blasphemy."
    ]
  },
  {
    "instance_id": "realsumm-37",
    "summary": "<t> Denise and Glen Higgs thought they 'd never have children . </t> <t> He was made infertile due to cancer treatment , but they tried IVF . </t> <t> Couple from of Braunton , Devon , had Mazy , born three years ago . </t> <t> Tried again using the same batch and had twins Carter & Carson last week . </t>",
    "tree": [
      "(t / think-01\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Denise\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Glenn\"\n                               :op2 \"Higgs\")))\n   :ARG1 (h / have-05\n            :polarity -\n            :ARG0 a\n            :ARG1 (c / child)\n            :time (e / ever)))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Denise\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Glenn\"\n                      :op2 \"Higgs\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Denise\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Glenn\"\n             :op2 \"Higgs\"))",
      "(n / name\n   :op1 \"Denise\")",
      "(n / name\n   :op1 \"Glenn\")",
      "(n / name\n   :op2 \"Higgs\")",
      "(h / have-05\n   :ARG0 (a / and)\n   :ARG1 (c / child))",
      "(h / have-05\n   :ARG0 (a / and)\n   :ARG1 (c / child)\n   :polarity -)",
      "(h / have-05\n   :ARG0 (a / and)\n   :ARG1 (c / child)\n   :time (e / ever))",
      "(c / contrast-01\n   :ARG1 (m / make-02\n            :ARG0 (t / treat-03\n                     :ARG1 (h / he)\n                     :ARG2 (d / disease\n                              :name (n / name\n                                       :op1 \"cancer\")))\n            :ARG1 (ii / infertile\n                      :domain h))\n   :ARG2 (t2 / try-01\n             :ARG0 (t3 / they)\n             :ARG1 (f / fertilize-01\n                      :mod (m2 / multiple))))",
      "(m / make-02\n   :ARG0 (t / treat-03\n            :ARG1 (h / he)\n            :ARG2 (d / disease\n                     :name (n / name\n                              :op1 \"cancer\")))\n   :ARG1 (ii / infertile\n             :domain h))",
      "(t / treat-03\n   :ARG1 (h / he)\n   :ARG2 (d / disease\n            :name (n / name\n                     :op1 \"cancer\")))",
      "(d / disease\n   :name (n / name\n            :op1 \"cancer\"))",
      "(n / name\n   :op1 \"cancer\")",
      "(ii / infertile\n    :domain (h / he))",
      "(t2 / try-01\n    :ARG0 (t3 / they)\n    :ARG1 (f / fertilize-01\n             :mod (m2 / multiple)))",
      "(f / fertilize-01\n   :mod (m2 / multiple))",
      "(h / have-05\n   :ARG0 (c / couple\n            :source (c2 / city\n                        :name (n / name\n                                 :op1 \"Braunton\")\n                        :location (c3 / county\n                                      :name (n2 / name\n                                                :op1 \"Devon\"))))\n   :ARG1 (p / person\n            :name (n3 / name\n                      :op1 \"Mazy\")\n            :ARG1-of (b / bear-02\n                        :time (b2 / before\n                                  :op1 (n4 / now)\n                                  :quant (t / temporal-quantity\n                                            :quant 3\n                                            :unit (y / year))))))",
      "(c / couple\n   :source (c2 / city\n               :name (n / name\n                        :op1 \"Braunton\")\n               :location (c3 / county\n                             :name (n2 / name\n                                       :op1 \"Devon\"))))",
      "(c2 / city\n    :name (n / name\n             :op1 \"Braunton\"))",
      "(c2 / city\n    :location (c3 / county\n                  :name (n2 / name\n                            :op1 \"Devon\")))",
      "(n / name\n   :op1 \"Braunton\")",
      "(n / name\n   :op1 \"Devon\")",
      "(n / name\n   :op1 \"Mazy\")",
      "(c3 / county\n    :name (n2 / name\n              :op1 \"Devon\"))",
      "(p / person\n   :ARG1-of (b / bear-02\n               :time (b2 / before\n                         :op1 (n4 / now)\n                         :quant (t / temporal-quantity\n                                   :quant 3\n                                   :unit (y / year)))))",
      "(p / person\n   :ARG1-of (b / bear-02\n               :time (b2 / before\n                         :op1 (n4 / now)\n                         :quant (t / temporal-quantity\n                                   :quant 3\n                                   :unit (y / year))))\n   :name (n3 / name\n             :op1 \"Mazy\"))",
      "(b / bear-02\n   :time (b2 / before\n             :op1 (n4 / now)\n             :quant (t / temporal-quantity\n                       :quant 3\n                       :unit (y / year))))",
      "(b2 / before\n    :op1 (n4 / now))",
      "(b2 / before\n    :quant (t / temporal-quantity\n              :quant 3\n              :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 3)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(a / and\n   :op1 (t / try-01\n           :ARG0 (ii / i)\n           :mod (a2 / again)\n           :manner (u / use-01\n                      :ARG0 ii\n                      :ARG1 (b / batch\n                               :ARG1-of (s / same-01)))))",
      "(a / and\n   :op2 (h / have-05\n           :ARG0 (ii / i)\n           :ARG1 (a3 / and\n                     :op1 (p / person\n                             :name (n / name\n                                      :op1 \"Carter\"))\n                     :op2 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Carson\"))\n                     :mod (t2 / twin))\n           :time (w / week\n                    :mod (l / last))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Carter\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Carson\")))",
      "(a / and\n   :mod (t2 / twin))",
      "(t / try-01\n   :ARG0 (ii / i))",
      "(t / try-01\n   :ARG0 (ii / i)\n   :mod (a2 / again))",
      "(t / try-01\n   :ARG0 (ii / i)\n   :manner (u / use-01\n              :ARG0 ii\n              :ARG1 (b / batch\n                       :ARG1-of (s / same-01))))",
      "(u / use-01\n   :ARG0 (ii / i)\n   :ARG1 (b / batch\n            :ARG1-of (s / same-01)))",
      "(b / batch\n   :ARG1-of (s / same-01))",
      "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (a3 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Carter\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carson\"))\n             :mod (t2 / twin)))",
      "(h / have-05\n   :ARG0 (ii / i)\n   :ARG1 (a3 / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Carter\"))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carson\"))\n             :mod (t2 / twin))\n   :time (w / week\n            :mod (l / last)))",
      "(p / person\n   :name (n / name\n            :op1 \"Carter\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Carson\"))",
      "(n / name\n   :op1 \"Carter\")",
      "(n / name\n   :op1 \"Carson\")",
      "(w / week\n   :mod (l / last))"
    ],
    "smus": [
      "Denise and Glenn Higgs thought they would never have children.",
      "And Denise.",
      "And Glenn Higgs.",
      "Denise",
      "Glenn Higgs",
      "Denise",
      "Glenn.",
      "Higgs",
      "The children will have children.",
      "The children don't have children.",
      "And the children will never have children.",
      "His cancer treatment has made him infertile, but the chemist tried multiple fertilization.",
      "His cancer treatment has made him infertile.",
      "He was on cancer treatment.",
      "cancer",
      "cancer.",
      "He is infertile.",
      "The tried multiple fertilization.",
      "Multiple fertilization.",
      "The couple from Brainton, Devon, had Mazy born three years ago.",
      "A couple from Brainton, Devon.",
      "BRUNTON",
      "Devon County",
      "Braunnton",
      "Devon",
      "Mazy",
      "Devon",
      "a person born three years ago",
      "Mazy was born three years ago.",
      "Born three years ago",
      "Earlier.",
      "Three years ago.",
      "Three.",
      "Years.",
      "And I've tried again using the same batch.",
      "And last week I had Carter and Carson as twins.",
      "And Carter.",
      "And Carson.",
      "and twins.",
      "I've tried.",
      "I've tried again.",
      "I've tried using the same batch.",
      "I'm using the same batch.",
      "Same batch.",
      "I had Carter and Carter as twins.",
      "Last week I had Carter and Carson as twins.",
      "Carter.",
      "@Carson,",
      "Carter.",
      "Carlson",
      "Last week."
    ]
  },
  {
    "instance_id": "realsumm-38",
    "summary": "<t> Speed camera discovered pointing at house in Handsworth , Birmingham . </t> <t> Fixed cameras switched off across the West Midlands in Spring of 2013 . </t> <t> Site is not going to be part of a new trial using digital technology . </t> <t> Obsolete camera may now be taken down after engineers examine device . </t>",
    "tree": [
      "(d / discover-01\n   :ARG1 (c / camera\n            :mod (s / speed)\n            :ARG0-of (p / point-01\n                        :ARG2 (h / house\n                                 :location (c2 / city-district\n                                               :name (n / name\n                                                        :op1 \"Handsworth\")\n                                               :part-of (c3 / city\n                                                            :name (n2 / name\n                                                                      :op1 \"Birmingham\")))))))",
      "(c / camera\n   :ARG0-of (p / point-01\n               :ARG2 (h / house\n                        :location (c2 / city-district\n                                      :name (n / name\n                                               :op1 \"Handsworth\")\n                                      :part-of (c3 / city\n                                                   :name (n2 / name\n                                                             :op1 \"Birmingham\"))))))",
      "(c / camera\n   :ARG0-of (p / point-01\n               :ARG2 (h / house\n                        :location (c2 / city-district\n                                      :name (n / name\n                                               :op1 \"Handsworth\")\n                                      :part-of (c3 / city\n                                                   :name (n2 / name\n                                                             :op1 \"Birmingham\")))))\n   :mod (s / speed))",
      "(p / point-01\n   :ARG2 (h / house\n            :location (c2 / city-district\n                          :name (n / name\n                                   :op1 \"Handsworth\")\n                          :part-of (c3 / city\n                                       :name (n2 / name\n                                                 :op1 \"Birmingham\")))))",
      "(h / house\n   :location (c2 / city-district\n                 :name (n / name\n                          :op1 \"Handsworth\")\n                 :part-of (c3 / city\n                              :name (n2 / name\n                                        :op1 \"Birmingham\"))))",
      "(c2 / city-district\n    :name (n / name\n             :op1 \"Handsworth\"))",
      "(c2 / city-district\n    :part-of (c3 / city\n                 :name (n2 / name\n                           :op1 \"Birmingham\")))",
      "(n / name\n   :op1 \"Handsworth\")",
      "(n / name\n   :op1 \"Birmingham\")",
      "(c3 / city\n    :name (n2 / name\n              :op1 \"Birmingham\"))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1-of (f / fix-03)))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1-of (f / fix-03))\n   :location (a / across\n                :op1 (c2 / country-region\n                         :name (n / name\n                                  :op1 \"West\"\n                                  :op2 \"Midlands\"))))",
      "(s / switch-off-04\n   :ARG1 (c / camera\n            :ARG1-of (f / fix-03))\n   :time (d / date-entity\n            :year 2013\n            :season (s2 / spring)))",
      "(c / camera\n   :ARG1-of (f / fix-03))",
      "(a / across\n   :op1 (c2 / country-region\n            :name (n / name\n                     :op1 \"West\"\n                     :op2 \"Midlands\")))",
      "(c2 / country-region\n    :name (n / name\n             :op1 \"West\"\n             :op2 \"Midlands\"))",
      "(n / name\n   :op1 \"West\")",
      "(n / name\n   :op2 \"Midlands\")",
      "(d / date-entity\n   :year 2013)",
      "(d / date-entity\n   :season (s2 / spring))",
      "(h / have-part-91\n   :ARG1 (t / try-02\n            :ARG1-of (n / new-01)\n            :ARG0-of (u / use-01\n                        :ARG1 (t2 / technology\n                                  :mod (d / digit))))\n   :ARG2 (s / site))",
      "(h / have-part-91\n   :ARG1 (t / try-02\n            :ARG1-of (n / new-01)\n            :ARG0-of (u / use-01\n                        :ARG1 (t2 / technology\n                                  :mod (d / digit))))\n   :ARG2 (s / site)\n   :polarity -)",
      "(t / try-02\n   :ARG1-of (n / new-01)\n   :ARG0-of (u / use-01\n               :ARG1 (t2 / technology\n                         :mod (d / digit))))",
      "(u / use-01\n   :ARG1 (t2 / technology\n             :mod (d / digit)))",
      "(t2 / technology\n    :mod (d / digit))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                     :mod (o / obsolete))\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG0 (p2 / person\n                                       :ARG0-of (e2 / engineer-01))\n                             :ARG1 (d / device)))))",
      "(p / possible-01\n   :ARG1 (t / take-down-22\n            :ARG1 (c / camera\n                     :mod (o / obsolete))\n            :time (a / after\n                     :op1 (e / examine-01\n                             :ARG0 (p2 / person\n                                       :ARG0-of (e2 / engineer-01))\n                             :ARG1 (d / device))))\n   :time (n / now))",
      "(t / take-down-22\n   :ARG1 (c / camera\n            :mod (o / obsolete)))",
      "(t / take-down-22\n   :ARG1 (c / camera\n            :mod (o / obsolete))\n   :time (a / after\n            :op1 (e / examine-01\n                    :ARG0 (p2 / person\n                              :ARG0-of (e2 / engineer-01))\n                    :ARG1 (d / device))))",
      "(c / camera\n   :mod (o / obsolete))",
      "(a / after\n   :op1 (e / examine-01\n           :ARG0 (p2 / person\n                     :ARG0-of (e2 / engineer-01))\n           :ARG1 (d / device)))",
      "(e / examine-01\n   :ARG0 (p2 / person\n             :ARG0-of (e2 / engineer-01))\n   :ARG1 (d / device))",
      "(p2 / person\n    :ARG0-of (e2 / engineer-01))"
    ],
    "smus": [
      "A speed camera discovered pointing at a house in Handsworth, Birmingham.",
      "A camera pointing at a house in Handsworth, Birmingham.",
      "A speed camera pointing at a house in Handsworth, Birmingham.",
      "Point to a house in Handsworth, Birmingham.",
      "House in Handsworth, Birmingham",
      "Handsworth",
      "birmingham",
      "Handsworth",
      "Birmingham",
      "birmingham",
      "Fixed cameras switched off.",
      "Fixed cameras switched off across the West Midlands.",
      "Fixed cameras switched off in spring 2013.",
      "Fixed cameras.",
      "across the West Midlands",
      "West Midlands (WM)",
      "West",
      "Midlands",
      "2013-00-00",
      "Spring",
      "The site has part of a new trial using digital technology.",
      "The site is not part of a new trial using digital technology.",
      "New trial using digital technology",
      "using digital technology",
      "Digit technology.",
      "The obsolete camera can be taken down after engineers examine the device.",
      "Now the obsolete camera can be taken down after engineers examine the device.",
      "The obsolete camera was taken down.",
      "The obsolete camera was taken down after engineers examine the device.",
      "obsolete camera",
      "After engineers examine the device.",
      "Engineers examine the device.",
      "Engineers"
    ]
  },
  {
    "instance_id": "realsumm-39",
    "summary": "<t> Charles Terreni , 18 , was found dead March 18 at a frat house in Columbia . </t> <t> Terreni was a USC freshman and a member of the Pi Kappa Alpha house . </t> <t> Coroner identified cause of death as alcohol poisoning . </t> <t> Toxicology tests showed he had a blood alcohol of .375 . </t> <t> Neighbors said there was a large party ; a beer keg was still visible outside . </t>",
    "tree": [
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / date-entity\n             :day 18\n             :month 3))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Charles\"\n                     :op2 \"Terreni\")\n            :age (t / temporal-quantity\n                    :quant 18\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h / house\n                :mod (f2 / frat)\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Columbia\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Charles\"\n            :op2 \"Terreni\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 18\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Charles\")",
      "(n / name\n   :op2 \"Terreni\")",
      "(n / name\n   :op1 \"Columbia\")",
      "(t / temporal-quantity\n   :quant 18)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(d / die-01\n   :ARG1 (p / person :name (n / name :op1 \"Charles\" :op2 \"Terreni\"))))",
      "(d2 / date-entity\n    :day 18)",
      "(d2 / date-entity\n    :month 3)",
      "(h / house\n   :mod (f2 / frat))",
      "(h / house\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"Columbia\")))",
      "(c / city\n   :name (n2 / name\n             :op1 \"Columbia\"))",
      "(a / and\n   :op1 (f / freshman\n           :domain (p / person\n                      :name (n / name\n                               :op1 \"Terreni\"))\n           :location (u / university\n                        :name (n2 / name\n                                  :op1 \"USC\"))))",
      "(a / and\n   :op2 (h / have-org-role-91\n           :ARG0 (p / person :name (n / name :op1 \"Terreni\"))\n           :ARG1 (h2 / house\n                     :name (n3 / name\n                               :op1 \"Pi\"\n                               :op2 \"Kappa\"\n                               :op3 \"Alpha\"))\n           :ARG2 (m / member)))",
      "(f / freshman\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Terreni\")))",
      "(f / freshman\n   :location (u / university\n                :name (n2 / name\n                          :op1 \"USC\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Terreni\"))",
      "(n / name\n   :op1 \"Terreni\")",
      "(n / name\n   :op1 \"USC\")",
      "(n / name\n   :op1 \"Pi\")",
      "(n / name\n   :op2 \"Kappa\")",
      "(n / name\n   :op3 \"Alpha\")",
      "(u / university\n   :name (n2 / name\n             :op1 \"USC\"))",
      "(h / have-org-role-91\n   :ARG0 (p / person :name (n / name :op1 \"Terreni\"))\n   :ARG1 (h2 / house\n             :name (n3 / name\n                       :op1 \"Pi\"\n                       :op2 \"Kappa\"\n                       :op3 \"Alpha\"))\n   :ARG2 (m / member))",
      "(h2 / house\n    :name (n3 / name\n              :op1 \"Pi\"\n              :op2 \"Kappa\"\n              :op3 \"Alpha\"))",
      "(ii / identify-01\n    :ARG0 (c / coroner)\n    :ARG1 (c2 / cause-01\n              :ARG1 (d / die-01))\n    :ARG2 (p / poison-02\n             :ARG1 (a / alcohol)))",
      "(c2 / cause-01\n    :ARG1 (d / die-01))",
      "(p / poison-02\n   :ARG1 (a / alcohol))",
      "(s / show-01\n   :ARG0 (t / test-01\n            :ARG2 (t2 / toxicology))\n   :ARG1 (h / have-03\n            :ARG0 (h2 / he)\n            :ARG1 (a / alcohol\n                     :quant (c / concentration-quantity\n                               :quant.375 (f / fluid-ounce))\n                     :mod (b / blood))))",
      "(t / test-01\n   :ARG2 (t2 / toxicology))",
      "(h / have-03\n   :ARG0 (h2 / he)\n   :ARG1 (a / alcohol\n            :quant (c / concentration-quantity\n                      :quant.375 (f / fluid-ounce))\n            :mod (b / blood)))",
      "(a / alcohol\n   :quant (c / concentration-quantity\n             :quant.375 (f / fluid-ounce)))",
      "(a / alcohol\n   :mod (b / blood))",
      "(c / concentration-quantity\n   :quant.375 (f / fluid-ounce))",
      "(a / and\n   :op1 (s / say-01\n           :ARG0 (n / neighbor)\n           :ARG1 (p / party-01\n                    :mod (l / large))))",
      "(a / and\n   :op2 (s2 / see-01\n            :ARG1 (k / keg\n                     :mod (b / beer))\n            :mod (s3 / still)\n            :location (o / outside)))",
      "(s / say-01\n   :ARG0 (n / neighbor)\n   :ARG1 (p / party-01\n            :mod (l / large)))",
      "(p / party-01\n   :mod (l / large))",
      "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer)))",
      "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer))\n    :mod (s3 / still))",
      "(s2 / see-01\n    :ARG1 (k / keg\n             :mod (b / beer))\n    :location (o / outside))",
      "(k / keg\n   :mod (b / beer))"
    ],
    "smus": [
      "Charles Terreni, 18, was found dead.",
      "Charles Terreni, 18, was found dead March 18.",
      "Charles Terreni, 18, was found dead in a frat house in Columbia.",
      "Charles Terreni",
      "18",
      "Charles",
      "Terreni",
      "Columbia",
      "18",
      "Year.",
      "Charles Terreni died.",
      "18",
      "March",
      "a frat house",
      "a house in Columbia",
      "Columbia",
      "And Terreni is a freshman at USC.",
      "And Terreni is a member of the Pi Kappa Alpha house.",
      "Terreni is a freshman.",
      "freshman at USC",
      "Terreni",
      "Terreni",
      "USC",
      "Pi",
      "Kappa",
      "Alga",
      "USC",
      "Terreni is a member of the Pi Kappa Alpha house.",
      "Pi Kappa Alpha house",
      "The coroner identified the cause of death as alcohol poisoning.",
      "Cause of Death",
      "Alcohol poisoning.",
      "The toxicology tests showed he had.375 fl oz of alcohol in the blood.",
      "toxicology tests",
      "He had 375 fl.oz of alcohol in the blood.",
      "375 fl.oz alcohol",
      "Blood alcohol.",
      "375 FFU",
      "And neighbors said there was a large party.",
      "And there's still a beer keg outside.",
      "The neighbors said it was a large party.",
      "a large party",
      "See beer keg.",
      "Still seeing a beer keg.",
      "There was a beer keg seen outside.",
      "a beer keg"
    ]
  },
  {
    "instance_id": "realsumm-40",
    "summary": "<t> Air strikes were launched by Saudi forces a month ago against rebels . </t> <t> Saudi forces have focused on beating back Shiite Houthi rebels in Yemen . </t> <t> Prince Alwaleed Bin Talal pledged Bentleys for pilots involved in bombings . </t> <t> He made pledge on Wednesday after bombing raids appeared to resume , despite an official announcement that they would be halted last night . </t>",
    "tree": [
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                     :ARG0-of (r / rebel-01))\n            :path (a / air)))",
      "(l / launch-01\n   :ARG0 (f / force\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Saudi\"\n                             :op2 \"Arabia\")))\n   :ARG1 (s / strike-01\n            :ARG0 f\n            :ARG1 (p / person\n                     :ARG0-of (r / rebel-01))\n            :path (a / air))\n   :time (b / before\n            :op1 (n2 / now)\n            :quant (t / temporal-quantity\n                      :quant 1\n                      :unit (m / month))))",
      "(f / force\n   :mod (c / country\n           :name (n / name\n                    :op1 \"Saudi\"\n                    :op2 \"Arabia\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Saudi\"\n            :op2 \"Arabia\"))",
      "(n / name\n   :op1 \"Saudi\")",
      "(n / name\n   :op2 \"Arabia\")",
      "(s / strike-01\n   :ARG0 (f / force)\n   :ARG1 (p / person\n            :ARG0-of (r / rebel-01)))",
      "(s / strike-01\n   :ARG0 (f / force)\n   :ARG1 (p / person\n            :ARG0-of (r / rebel-01))\n   :path (a / air))",
      "(p / person\n   :ARG0-of (r / rebel-01))",
      "(b / before\n   :op1 (n2 / now))",
      "(b / before\n   :quant (t / temporal-quantity\n             :quant 1\n             :unit (m / month)))",
      "(t / temporal-quantity\n   :quant 1)",
      "(t / temporal-quantity\n   :unit (m / month))",
      "(f / focus-01\n   :ARG0 (f2 / force\n             :mod (c / country\n                     :name (n / name\n                              :op1 \"Saudi\"\n                              :op2 \"Arabia\")))\n   :ARG2 (b / beat-back-05\n            :ARG0 f2\n            :ARG1 (p / person\n                     :mod (r / religious-group\n                             :name (n2 / name\n                                       :op1 \"Shiite\"\n                                       :op2 \"Hathi\"))\n                     :location (c2 / country\n                                   :name (n3 / name\n                                             :op1 \"Yemen\"))\n                     :ARG0-of (r2 / rebel-01))))",
      "(f2 / force\n    :mod (c / country\n            :name (n / name\n                     :op1 \"Saudi\"\n                     :op2 \"Arabia\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Saudi\"\n            :op2 \"Arabia\"))",
      "(c / country\n   :name (n3 / name\n             :op1 \"Yemen\"))",
      "(n / name\n   :op1 \"Saudi\")",
      "(n / name\n   :op2 \"Arabia\")",
      "(n / name\n   :op1 \"Shiite\")",
      "(n / name\n   :op2 \"Hathi\")",
      "(n / name\n   :op1 \"Yemen\")",
      "(b / beat-back-05\n   :ARG0 (f2 / force)\n   :ARG1 (p / person\n            :mod (r / religious-group\n                    :name (n2 / name\n                              :op1 \"Shiite\"\n                              :op2 \"Hathi\"))\n            :location (c2 / country\n                          :name (n3 / name\n                                    :op1 \"Yemen\"))\n            :ARG0-of (r2 / rebel-01)))",
      "(p / person\n   :ARG0-of (r2 / rebel-01))",
      "(p / person\n   :ARG0-of (r2 / rebel-01)\n   :mod (r / religious-group\n           :name (n2 / name\n                     :op1 \"Shiite\"\n                     :op2 \"Hathi\")))",
      "(p / person\n   :ARG0-of (r2 / rebel-01)\n   :location (c2 / country\n                 :name (n3 / name\n                           :op1 \"Yemen\")))",
      "(r / religious-group\n   :name (n2 / name\n             :op1 \"Shiite\"\n             :op2 \"Hathi\"))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\")\n             :ARG0-of (h / have-org-role-91\n                         :ARG2 (p3 / prince)))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\")))",
      "(p / pledge-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alwaleed\"\n                      :op2 \"Bin\"\n                      :op3 \"Talal\")\n             :ARG0-of (h / have-org-role-91\n                         :ARG2 (p3 / prince)))\n   :ARG2 (c / car-make\n            :name (n2 / name\n                      :op1 \"Bentley\"))\n   :beneficiary (p4 / person\n                    :ARG0-of (p5 / pilot-01)\n                    :ARG1-of (ii / involve-01\n                                 :ARG2 (b / bomb-01))))",
      "(p2 / person\n    :ARG0-of (h / have-org-role-91\n                :ARG2 (p3 / prince))\n    :ARG0-of (p5 / pilot-01)\n    :ARG1-of (ii / involve-01\n                 :ARG2 (b / bomb-01)))",
      "(p2 / person\n    :ARG0-of (h / have-org-role-91\n                :ARG2 (p3 / prince))\n    :ARG0-of (p5 / pilot-01)\n    :ARG1-of (ii / involve-01\n                 :ARG2 (b / bomb-01))\n    :name (n / name\n             :op1 \"Alwaleed\"\n             :op2 \"Bin\"\n             :op3 \"Talal\"))",
      "(n / name\n   :op1 \"Alwaleed\")",
      "(n / name\n   :op2 \"Bin\")",
      "(n / name\n   :op3 \"Talal\")",
      "(n / name\n   :op1 \"Bentley\")",
      "(h / have-org-role-91\n   :ARG2 (p3 / prince))",
      "(c / car-make\n   :name (n2 / name\n             :op1 \"Bentley\"))",
      "(ii / involve-01\n    :ARG2 (b / bomb-01))",
      "(p / pledge-01\n   :ARG0 (h / he))",
      "(p / pledge-01\n   :ARG0 (h / he)\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(p / pledge-01\n   :ARG0 (h / he)\n   :time (a / after\n            :op1 (a2 / appear-02\n                     :ARG1 (r / resume-01\n                              :ARG1 (r2 / raid-01\n                                        :manner (b / bomb-01))))))",
      "(p / pledge-01\n   :ARG0 (h / he)\n   :concession (a3 / announce-01\n                   :ARG1 (h2 / halt-01\n                             :ARG1 (r2 / raid-01)\n                             :time (d2 / date-entity\n                                       :dayperiod (n / night)\n                                       :mod (y / yesterday)))\n                   :mod (o / official)))",
      "(d / date-entity\n   :weekday (w / wednesday))",
      "(d / date-entity\n   :dayperiod (n / night))",
      "(d / date-entity\n   :mod (y / yesterday))",
      "(a / after\n   :op1 (a2 / appear-02\n            :ARG1 (r / resume-01\n                     :ARG1 (r2 / raid-01\n                               :manner (b / bomb-01)))))",
      "(a2 / appear-02\n    :ARG1 (r / resume-01\n             :ARG1 (r2 / raid-01\n                       :manner (b / bomb-01))))",
      "(r / resume-01\n   :ARG1 (r2 / raid-01\n             :manner (b / bomb-01)))",
      "(r2 / raid-01\n    :manner (b / bomb-01))",
      "(a3 / announce-01\n    :ARG1 (h2 / halt-01\n              :ARG1 (r2 / raid-01)\n              :time (d2 / date-entity\n                        :dayperiod (n / night)\n                        :mod (y / yesterday))))",
      "(a3 / announce-01\n    :ARG1 (h2 / halt-01\n              :ARG1 (r2 / raid-01)\n              :time (d2 / date-entity\n                        :dayperiod (n / night)\n                        :mod (y / yesterday)))\n    :mod (o / official))",
      "(h2 / halt-01\n    :ARG1 (r2 / raid-01))",
      "(h2 / halt-01\n    :ARG1 (r2 / raid-01)\n    :time (d2 / date-entity\n              :dayperiod (n / night)\n              :mod (y / yesterday)))"
    ],
    "smus": [
      "Saudi forces have launched airstrikes on rebels.",
      "Saudi forces have launched airstrikes on rebels in the past month.",
      "Saudi forces",
      "Saudi Arabia (SA)",
      "Saudi",
      "-Arabia",
      "Forces strike rebels",
      "Forces launched airstrikes on rebels.",
      "Rebels",
      "Earlier.",
      "a month earlier",
      "One.",
      "a month",
      "Saudi forces have focused on beating back Shiite Hathi rebels in Yemen.",
      "Saudi forces",
      "Saudi Arabia (SA)",
      "Yemen (Ye)",
      "Saudi",
      "-Arabia",
      "Shiite.",
      "Hathi",
      "Yeman",
      "Forces beating back Yemeni Shiite Hathi rebels",
      "Rebels",
      "Shiite Hathi rebels",
      "Rebels in Yemen",
      "Shiite Hathi.",
      "Prince Alwaleed Bin Talal pledged the Bentleys.",
      "Prince Alwaleed Bin Talal pledged a Bentley to pilots involved in the bombs.",
      "Prince of Wales pilots involved in bombings",
      "Prince Alwaleed Bin Talal was one of the pilots involved in the bombings.",
      "Alwaleed",
      "Bin",
      "Talal",
      "Bentley",
      "The Prince",
      "- Bentleys",
      "The bombs were involved.",
      "He made the pledge.",
      "He made the pledge Wednesday.",
      "He made the pledge after it appeared the bomb raids would resume.",
      "He made the pledge despite an official announcement that the raids had halted last night.",
      "Wednesday",
      "Night.",
      "Yesterday.",
      "After it appeared the bomb raids would resume.",
      "The bomb raids appeared to resume.",
      "Bomb raids to resume",
      "Bombing raids",
      "The announcement came as the raids were halted last night.",
      "The official announcement comes as the raids were halted last night.",
      "The raids have been halted.",
      "The raids were halted last night."
    ]
  },
  {
    "instance_id": "realsumm-41",
    "summary": "<t> Brawl at Spring Gardens station in Philadelphia was captured on CCTV . </t> <t> Fight involved students from nearby Benjamin Franklin High School . </t> <t> At one point an attacker falls onto the tracks , but manages to get back up . </t> <t> After the confrontation , the victims and attackers walk onto the same train . </t>",
    "tree": [
      "(c / capture-01\n   :ARG0 (p / publication\n            :name (n / name\n                     :op1 \"CCTV\"))\n   :ARG1 (b / brawl-01\n            :location (s / station\n                         :name (n2 / name\n                                   :op1 \"Spring\"\n                                   :op2 \"Gardens\")\n                         :location (c2 / city\n                                       :name (n3 / name\n                                                 :op1 \"Philadelphia\")))))",
      "(p / publication\n   :name (n / name\n            :op1 \"CCTV\"))",
      "(n / name\n   :op1 \"CCTV\")",
      "(n / name\n   :op1 \"Spring\")",
      "(n / name\n   :op2 \"Gardens\")",
      "(n / name\n   :op1 \"Philadelphia\")",
      "(b / brawl-01\n   :location (s / station\n                :name (n2 / name\n                          :op1 \"Spring\"\n                          :op2 \"Gardens\")\n                :location (c2 / city\n                              :name (n3 / name\n                                        :op1 \"Philadelphia\"))))",
      "(s / station\n   :name (n2 / name\n             :op1 \"Spring\"\n             :op2 \"Gardens\"))",
      "(s / station\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Philadelphia\")))",
      "(c2 / city\n    :name (n3 / name\n              :op1 \"Philadelphia\"))",
      "(ii / involve-01\n    :ARG1 (p / person\n             :ARG0-of (s / study-01)\n             :source (h / high-school\n                        :name (n / name\n                                 :op1 \"Benjamin\"\n                                 :op2 \"Franklin\"\n                                 :op3 \"High\"\n                                 :op4 \"School\")\n                        :location (n2 / nearby)))\n    :ARG2 (f / fight-01))",
      "(p / person\n   :ARG0-of (s / study-01))",
      "(p / person\n   :ARG0-of (s / study-01)\n   :source (h / high-school\n              :name (n / name\n                       :op1 \"Benjamin\"\n                       :op2 \"Franklin\"\n                       :op3 \"High\"\n                       :op4 \"School\")\n              :location (n2 / nearby)))",
      "(h / high-school\n   :name (n / name\n            :op1 \"Benjamin\"\n            :op2 \"Franklin\"\n            :op3 \"High\"\n            :op4 \"School\"))",
      "(h / high-school\n   :location (n2 / nearby))",
      "(n / name\n   :op1 \"Benjamin\")",
      "(n / name\n   :op2 \"Franklin\")",
      "(n / name\n   :op3 \"High\")",
      "(n / name\n   :op4 \"School\")",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0-of (a / attack-01))\n            :ARG4 (t / track))\n   :ARG2 (m / manage-01\n            :ARG0 p\n            :ARG1 (g / get-back-10\n                     :ARG1 p\n                     :ARG2 t)))",
      "(c / contrast-01\n   :ARG1 (f / fall-01\n            :ARG1 (p / person\n                     :ARG0-of (a / attack-01))\n            :ARG4 (t / track))\n   :ARG2 (m / manage-01\n            :ARG0 p\n            :ARG1 (g / get-back-10\n                     :ARG1 p\n                     :ARG2 t))\n   :time (p2 / point\n             :quant 1))",
      "(f / fall-01\n   :ARG1 (p / person\n            :ARG0-of (a / attack-01))\n   :ARG4 (t / track))",
      "(p / person\n   :ARG0-of (a / attack-01))",
      "(m / manage-01\n   :ARG0 (p / person)\n   :ARG1 (g / get-back-10\n            :ARG1 p\n            :ARG2 (t / track)))",
      "(g / get-back-10\n   :ARG1 (p / person)\n   :ARG2 (t / track))",
      "(p2 / point\n    :quant 1)",
      "(w / walk-01\n   :ARG0 (a / and\n            :op1 (v / victim)\n            :op2 (p / person\n                    :ARG0-of (a2 / attack-01))))",
      "(w / walk-01\n   :ARG0 (a / and\n            :op1 (v / victim)\n            :op2 (p / person\n                    :ARG0-of (a2 / attack-01)))\n   :destination (t / train\n                   :ARG1-of (s / same-01)))",
      "(w / walk-01\n   :ARG0 (a / and\n            :op1 (v / victim)\n            :op2 (p / person\n                    :ARG0-of (a2 / attack-01)))\n   :time (a3 / after\n             :op1 (c / confront-01)))",
      "(a / and\n   :op1 (v / victim))",
      "(a / and\n   :op2 (p / person\n           :ARG0-of (a2 / attack-01)))",
      "(p / person\n   :ARG0-of (a2 / attack-01))",
      "(t / train\n   :ARG1-of (s / same-01))",
      "(a3 / after\n    :op1 (c / confront-01))"
    ],
    "smus": [
      "The brawl at the Spring Gardens station in Philadelphia was captured by CCTV.",
      "a href=\"http://www.ctv.com/news/2011/06/06/ctv/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show/show",
      "a href=\"http://www.ctv.com/show/show_1_1_2_1_2_1_2_2_1_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2_2",
      "Spring",
      "Gardens",
      "Philadelphia",
      "Brawl at Spring Gardens in Philadelphia",
      "Spring Gardens station",
      "- Philadelphia station",
      "Philadelphia",
      "Students from nearby Benjamin Franklin High School were involved in the fight.",
      "Students",
      "Students from nearby Benjamin Franklin High School.",
      "- Benjamin Franklin High School",
      "nearby High School",
      "Benjamin",
      "Franklin.",
      "High.",
      "School.",
      "The attacker falls off the tracks but manages to get back on.",
      "At one point the attacker falls off the tracks but manages to get back on the tracks.",
      "The attacker falls off the tracks.",
      "The attacker.",
      "People manage to get back on track.",
      "People are getting back on the tracks.",
      "One point.",
      "Victims and attackers walk.",
      "Victims and attackers walk to the same train.",
      "Victims and attackers walk after confrontation.",
      "and the victims.",
      "and the attackers.",
      "The attackers",
      "the same train.",
      "After the confrontation."
    ]
  },
  {
    "instance_id": "realsumm-42",
    "summary": "<t> Paul and Laura Elliott met half way round at St Katharine Docks . </t> <t> Ceremony was witnessed by 80 guests . </t> <t> Pair ran across finish line under a shower of confetti . </t> <t> Returned to scene of ceremony for party later on . </t> <t> Raised \u00a3 7,000 for Cancer Research in honour of Paul 's father . </t>",
    "tree": [
      "(m / meet-03\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Paul\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Laura\"\n                               :op2 \"Elliott\"))))",
      "(m / meet-03\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Paul\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Laura\"\n                               :op2 \"Elliott\")))\n   :location (r / round-03\n                :extent (h / half-way)\n                :location (p3 / port\n                              :name (n3 / name\n                                        :op1 \"St\"\n                                        :op2 \"Katharine\"\n                                        :op3 \"Docks\"))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Paul\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Laura\"\n                      :op2 \"Elliott\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Paul\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Laura\"\n             :op2 \"Elliott\"))",
      "(n / name\n   :op1 \"Paul\")",
      "(n / name\n   :op1 \"Laura\")",
      "(n / name\n   :op2 \"Elliott\")",
      "(n / name\n   :op1 \"St\")",
      "(n / name\n   :op2 \"Katharine\")",
      "(n / name\n   :op3 \"Docks\")",
      "(r / round-03\n   :extent (h / half-way))",
      "(r / round-03\n   :location (p3 / port\n                 :name (n3 / name\n                           :op1 \"St\"\n                           :op2 \"Katharine\"\n                           :op3 \"Docks\")))",
      "(p3 / port\n    :name (n3 / name\n              :op1 \"St\"\n              :op2 \"Katharine\"\n              :op3 \"Docks\"))",
      "(w / witness-01\n   :ARG0 (g / guest\n            :quant 80)\n   :ARG1 (c / ceremony))",
      "(g / guest\n   :quant 80)",
      "(r / run-02\n   :ARG0 (p / pair))",
      "(r / run-02\n   :ARG0 (p / pair)\n   :path (a / across\n            :op1 (l / line\n                    :mod (f / finish-01))))",
      "(r / run-02\n   :ARG0 (p / pair)\n   :time (s / shower-01\n            :ARG1 (c / confetti)))",
      "(a / across\n   :op1 (l / line\n           :mod (f / finish-01)))",
      "(l / line\n   :mod (f / finish-01))",
      "(s / shower-01\n   :ARG1 (c / confetti))",
      "(r / return-01\n   :ARG4 (s / scene\n            :location-of (c / ceremony\n                            :purpose (p / party-01))))",
      "(r / return-01\n   :ARG4 (s / scene\n            :location-of (c / ceremony\n                            :purpose (p / party-01)))\n   :time (a / after))",
      "(s / scene\n   :location-of (c / ceremony\n                   :purpose (p / party-01)))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound)))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound)))",
      "(r / raise-02\n   :ARG1 (m / monetary-quantity\n            :quant 7000\n            :unit (p / pound))\n   :manner (h / honor-01\n              :ARG1 (p2 / person\n                        :ARG0-of (h2 / have-rel-role-91\n                                     :ARG1 (p3 / person\n                                               :name (n / name\n                                                        :op1 \"Paul\"))\n                                     :ARG2 (f / father)))))",
      "(m / monetary-quantity\n   :quant 7000)",
      "(m / monetary-quantity\n   :unit (p / pound))",
      "(r2 / research-01\n    :ARG1 (c / cancer))",
      "(h / honor-01\n   :ARG1 (p2 / person\n             :ARG0-of (h2 / have-rel-role-91\n                          :ARG1 (p3 / person\n                                    :name (n / name\n                                             :op1 \"Paul\"))\n                          :ARG2 (f / father))))",
      "(p2 / person\n    :ARG0-of (h2 / have-rel-role-91\n                 :ARG1 (p3 / person\n                           :name (n / name\n                                    :op1 \"Paul\"))\n                 :ARG2 (f / father)))",
      "(p2 / person\n    :ARG0-of (h2 / have-rel-role-91\n                 :ARG1 (p3 / person\n                           :name (n / name\n                                    :op1 \"Paul\"))\n                 :ARG2 (f / father))\n    :name (n / name\n             :op1 \"Paul\"))",
      "(h2 / have-rel-role-91\n    :ARG1 (p3 / person\n              :name (n / name\n                       :op1 \"Paul\"))\n    :ARG2 (f / father))",
      "(n / name\n   :op1 \"Paul\")"
    ],
    "smus": [
      "Paul and Laura Elliott met.",
      "Paul and Laura Elliot met half way round St Katharine Docks.",
      "And Paul.",
      "and Laura Elliott",
      "Paul",
      "Laura Elliott",
      "Paul",
      "Laura",
      "Elliott",
      "St.",
      "Katharine",
      "Docks.",
      "Round half way.",
      "Round at St Katharine Docks.",
      "St Katharine Docks",
      "The Ceremony was witnessed by 80 guests.",
      "80 guests",
      "The pair ran.",
      "The pair ran across the finish line.",
      "The pair ran in the confetti shower.",
      "across the finish line.",
      "Finish line.",
      "Confetti shower",
      "The scene of the party ceremony was returned.",
      "The scene of the party ceremony was later returned.",
      "Scene of party ceremony",
      "PS7,000 raised.",
      "PS7,000 raised.",
      "The PS7,000 was raised in honor of Paul's father.",
      "7000",
      "PS",
      "Cancer Research",
      "Honor to Paul's father.",
      "Paul's father",
      "Paul's father.",
      "Paul's father.",
      "Paul"
    ]
  },
  {
    "instance_id": "realsumm-43",
    "summary": "<t> Nasr Bitar spotted Google Street View car driving around last autumn . </t> <t> Decided it was ' his time to shine ' with it so followed in his car to get a selfie . </t> <t> Sensing the perfect moment , he got out and took the snap in Mississauga . </t> <t> Picture of Nasr 's selfie and the Street View image shared 2.9million times . </t>",
    "tree": [
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around)))",
      "(s / spot-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nasr\"\n                     :op2 \"Bitar\"))\n   :ARG1 (d / drive-01\n            :ARG0 (c / car-make\n                     :name (n2 / name\n                               :op1 \"Google\"\n                               :op2 \"Street\"\n                               :op3 \"View\"))\n            :ARG1 (a / around))\n   :time (d2 / date-entity\n             :season (a2 / autumn\n                         :mod (l / last))))",
      "(p / person\n   :name (n / name\n            :op1 \"Nasr\"\n            :op2 \"Bitar\"))",
      "(n / name\n   :op1 \"Nasr\")",
      "(n / name\n   :op2 \"Bitar\")",
      "(n / name\n   :op1 \"Google\")",
      "(n / name\n   :op2 \"Street\")",
      "(n / name\n   :op3 \"View\")",
      "(d / drive-01\n   :ARG0 (c / car-make\n            :name (n2 / name\n                      :op1 \"Google\"\n                      :op2 \"Street\"\n                      :op3 \"View\"))\n   :ARG1 (a / around))",
      "(c / car-make\n   :name (n2 / name\n             :op1 \"Google\"\n             :op2 \"Street\"\n             :op3 \"View\"))",
      "(d2 / date-entity\n    :season (a2 / autumn\n                :mod (l / last)))",
      "(a2 / autumn\n    :mod (l / last))",
      "(c / cause-01\n   :ARG0 (d / decide-01\n            :ARG1 (s / shine-01\n                     :ARG0 (ii / it)\n                     :ARG1 (h / he)\n                     :instrument ii))\n   :ARG1 (f / follow-01\n            :ARG1 (ii2 / i)\n            :ARG4 (c2 / car\n                      :poss h)\n            :purpose (g / get-01\n                        :ARG0 ii2\n                        :ARG1 (p / photograph-01\n                                 :ARG0 ii2\n                                 :ARG1 ii2))))",
      "(d / decide-01\n   :ARG1 (s / shine-01\n            :ARG0 (ii / it)\n            :ARG1 (h / he)\n            :instrument ii))",
      "(s / shine-01\n   :ARG0 (ii / it)\n   :ARG1 (h / he))",
      "(s / shine-01\n   :ARG0 (ii / it)\n   :ARG1 (h / he)\n   :instrument ii)",
      "(f / follow-01\n   :ARG1 (ii2 / i)\n   :ARG4 (c2 / car\n             :poss (h / he)))",
      "(f / follow-01\n   :ARG1 (ii2 / i)\n   :ARG4 (c2 / car\n             :poss (h / he)))",
      "(c2 / car\n    :poss (h / he))",
      "(g / get-01\n   :ARG0 (ii2 / i)\n   :ARG1 (p / photograph-01\n            :ARG0 ii2\n            :ARG1 ii2))",
      "(p / photograph-01\n   :ARG0 (ii2 / i)\n   :ARG1 ii2)",
      "(a / and\n   :ARG1-of (c2 / cause-01\n                :ARG0 (r / realize-01\n                         :ARG0 (h / he)\n                         :ARG1 (m / moment\n                                  :ARG1-of (p / perfect-02)))))",
      "(a / and\n   :ARG1-of (c2 / cause-01\n                :ARG0 (r / realize-01\n                         :ARG0 h\n                         :ARG1 (m / moment\n                                  :ARG1-of (p / perfect-02))))\n   :op1 (g / get-05\n           :ARG1 (h / he)\n           :ARG2 (o / out)))",
      "(a / and\n   :ARG1-of (c2 / cause-01\n                :ARG0 (r / realize-01\n                         :ARG0 (h / he)\n                         :ARG1 (m / moment\n                                  :ARG1-of (p / perfect-02))))\n   :op2 (s / snap-01\n           :ARG0 h\n           :location (c / city\n                        :name (n / name\n                                 :op1 \"Mississauga\"))))",
      "(g / get-05\n   :ARG1 (h / he)\n   :ARG2 (o / out))",
      "(s / snap-01\n   :ARG0 (h / he))",
      "(s / snap-01\n   :ARG0 (h / he)\n   :location (c / city\n                :name (n / name\n                         :op1 \"Mississauga\")))",
      "(c / city\n   :name (n / name\n            :op1 \"Mississauga\"))",
      "(n / name\n   :op1 \"Mississauga\")",
      "(c2 / cause-01\n    :ARG0 (r / realize-01\n             :ARG0 (h / he)\n             :ARG1 (m / moment\n                      :ARG1-of (p / perfect-02))))",
      "(r / realize-01\n   :ARG0 (h / he)\n   :ARG1 (m / moment\n            :ARG1-of (p / perfect-02)))",
      "(m / moment\n   :ARG1-of (p / perfect-02))",
      "(a / and\n   :op1 (p / picture\n           :poss (p2 / person\n                     :name (n / name\n                              :op1 \"Nasr\"))))",
      "(a / and\n   :op2 (ii / image\n            :mod (p3 / product\n                     :name (n2 / name\n                               :op1 \"Street\"\n                               :op2 \"View\"))\n            :ARG1-of (s / share-01\n                        :ARG3 (t / times\n                                 :quant 2900000))))",
      "(p / picture\n   :poss (p2 / person\n             :name (n / name\n                      :op1 \"Nasr\")))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Nasr\"))",
      "(n / name\n   :op1 \"Nasr\")",
      "(n / name\n   :op1 \"Street\")",
      "(n / name\n   :op2 \"View\")",
      "(ii / image\n    :ARG1-of (s / share-01\n                :ARG3 (t / times\n                         :quant 2900000)))",
      "(ii / image\n    :ARG1-of (s / share-01\n                :ARG3 (t / times\n                         :quant 2900000))\n    :mod (p3 / product\n             :name (n2 / name\n                       :op1 \"Street\"\n                       :op2 \"View\")))",
      "(p3 / product\n    :name (n2 / name\n              :op1 \"Street\"\n              :op2 \"View\"))",
      "(s / share-01\n   :ARG3 (t / times\n            :quant 2900000))",
      "(t / times\n   :quant 2900000)"
    ],
    "smus": [
      "Nasr Balitar spotted a Google Street View driving around.",
      "Last autumn Nasr Balitar spotted a Google Street View car driving around.",
      "Nasr biraat",
      "Nasr",
      "- Gibraltar",
      "Google",
      "Street",
      "View",
      "Google Street View is driving around.",
      "Google Street View",
      "last autumn",
      "Last autumn.",
      "I followed him in his car to get a photo, it decided to shine on him.",
      "It decided to shine on him with it.",
      "It will shine on him.",
      "It will shine on him with it.",
      "I followed his car.",
      "I followed his car.",
      "His car",
      "I did get a photo of myself.",
      "I took a photo of myself.",
      "And because he was aware of the perfect moment.",
      "And because he was aware of the perfect moment, he got out.",
      "He was aware of the perfect moment and took a snap in Mississauga.",
      "He got out.",
      "He snapped.",
      "He took a snap in Mississauga.",
      "-Missauga",
      "Mississauga",
      "Because he was aware of the perfect moment.",
      "He was aware of the perfect moment.",
      "Perfect moment.",
      "And Nasr's Picture:",
      "and a Street View image shared 2 million times.",
      "Nasr's Picture",
      "Nasr",
      "Nasr",
      "Street",
      "View",
      "ii Image shared 29 million times",
      "a href=\"http://www.streetview.com/images/showthread/29 million-times-shared\">Street View Image/a>",
      "Street View",
      "Shared 2.90 million times.",
      "29 million times."
    ]
  },
  {
    "instance_id": "realsumm-44",
    "summary": "<t> Rory McIlroy bidding to win his first Masters title this week at Augusta . </t> <t> The Northern Irishman finished tied for eighth place last year in his best finish in Georgia . </t> <t> McIlroy looking for third straight major victory after winning The Open and USPGA Championship last year . </t> <t> One Direction star Niall Horan caddied for McIlroy in Wednesday 's Par-3 Contest . </t>",
    "tree": [
      "(b / bid-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :ARG1 (t / title\n                     :mod (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\"))\n                     :ord (o / ordinal-entity\n                             :value 1))\n            :time (w2 / week\n                      :mod (t2 / this))\n            :location (f / facility\n                         :name (n3 / name\n                                   :op1 \"Augusta\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Rory\"\n            :op2 \"McIlroy\"))",
      "(n / name\n   :op1 \"Rory\")",
      "(n / name\n   :op2 \"McIlroy\")",
      "(n / name\n   :op1 \"Masters\")",
      "(n / name\n   :op1 \"Augusta\")",
      "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))\n            :ord (o / ordinal-entity\n                    :value 1)))",
      "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))\n            :ord (o / ordinal-entity\n                    :value 1))\n   :time (w2 / week\n             :mod (t2 / this)))",
      "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"Rory\" :op2 \"McIlroy\"))\n   :ARG1 (t / title\n            :mod (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))\n            :ord (o / ordinal-entity\n                    :value 1))\n   :location (f / facility\n                :name (n3 / name\n                          :op1 \"Augusta\")))",
      "(t / title\n   :mod (g / game\n           :name (n2 / name\n                     :op1 \"Masters\")))",
      "(t / title\n   :ord (o / ordinal-entity\n           :value 1))",
      "(g / game\n   :name (n2 / name\n             :op1 \"Masters\"))",
      "(o / ordinal-entity\n   :value 1)",
      "(w2 / week\n    :mod (t2 / this))",
      "(f / facility\n   :name (n3 / name\n             :op1 \"Augusta\"))",
      "(f / finish-07\n   :ARG0 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 m\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 8)))\n   :ARG0 m\n   :ARG1-of (h / have-degree-91\n               :ARG2 (g / good-03\n                        :ARG1 (f2 / finish-07))\n               :ARG3 (m2 / most)))",
      "(f / finish-07\n   :ARG0 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 m\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 8)))\n   :ARG0 m\n   :ARG1-of (h / have-degree-91\n               :ARG2 (g / good-03\n                        :ARG1 (f2 / finish-07))\n               :ARG3 (m2 / most))\n   :time (y / year\n            :mod (l / last)))",
      "(f / finish-07\n   :ARG0 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 m\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 8)))\n   :ARG0 m\n   :ARG1-of (h / have-degree-91\n               :ARG2 (g / good-03\n                        :ARG1 f2)\n               :ARG3 (m2 / most))\n   :subevent-of (f2 / finish-07\n                    :ARG0 m\n                    :location (c2 / country\n                                  :name (n2 / name\n                                            :op1 \"Georgia\"))\n                    :ARG1-of (h / have-degree-91\n                                :ARG2 (g / good-03\n                                         :ARG1 f2)\n                                :ARG3 (m2 / most))))",
      "(f / finish-07\n   :ARG0 (m / man\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Northern\"\n                             :op2 \"Ireland\")))\n   :ARG2 (t / tie-01\n            :ARG1 m\n            :ARG3 (p / place\n                     :ord (o / ordinal-entity\n                             :value 8)))\n   :ARG0 m\n   :ARG1-of (h / have-degree-91\n               :ARG2 (g / good-03\n                        :ARG1 (f2 / finish-07))\n               :ARG3 (m2 / most))\n   :location (c2 / country\n                 :name (n2 / name\n                           :op1 \"Georgia\")))",
      "(m / man\n   :mod (c / country\n           :name (n / name\n                    :op1 \"Northern\"\n                    :op2 \"Ireland\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Northern\"\n            :op2 \"Ireland\"))",
      "(c / country\n   :name (n2 / name\n             :op1 \"Georgia\"))",
      "(n / name\n   :op1 \"Northern\")",
      "(n / name\n   :op2 \"Ireland\")",
      "(n / name\n   :op1 \"Georgia\")",
      "(t / tie-01\n   :ARG1 (m / man)\n   :ARG3 (p / place\n            :ord (o / ordinal-entity\n                    :value 8)))",
      "(p / place\n   :ord (o / ordinal-entity\n           :value 8))",
      "(o / ordinal-entity\n   :value 8)",
      "(y / year\n   :mod (l / last))",
      "(h / have-degree-91\n   :ARG2 (g / good-03\n            :ARG1 (f2 / finish-07))\n   :ARG3 (m2 / most))",
      "(g / good-03\n   :ARG1 (f2 / finish-07))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                    :value 3\n                    :range (s / straight))))",
      "(l / look-04\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (w / win-01\n            :ARG0 p\n            :mod (m / major)\n            :ord (o / ordinal-entity\n                    :value 3\n                    :range (s / straight)))\n   :time (a / after\n            :op1 (w2 / win-01\n                     :ARG0 p\n                     :ARG2 (a2 / and\n                               :op1 (e / event\n                                       :name (n2 / name\n                                                 :op1 \"The\"\n                                                 :op2 \"Open\"))\n                               :op2 (e2 / event\n                                        :name (n3 / name\n                                                  :op1 \"USPGA\"\n                                                  :op2 \"Championship\")))\n                     :time (y / year\n                              :mod (l2 / last)))))",
      "(p / person\n   :name (n / name\n            :op1 \"McIlroy\"))",
      "(n / name\n   :op1 \"McIlroy\")",
      "(n / name\n   :op1 \"The\")",
      "(n / name\n   :op2 \"Open\")",
      "(n / name\n   :op1 \"USPGA\")",
      "(n / name\n   :op2 \"Championship\")",
      "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n   :ARG0 p\n   :ARG2 (a2 / and\n             :op1 (e / event\n                     :name (n2 / name\n                               :op1 \"The\"\n                               :op2 \"Open\"))\n             :op2 (e2 / event\n                      :name (n3 / name\n                                :op1 \"USPGA\"\n                                :op2 \"Championship\"))))",
      "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n   :ARG0 p\n   :ARG2 (a2 / and\n             :op1 (e / event\n                     :name (n2 / name\n                               :op1 \"The\"\n                               :op2 \"Open\"))\n             :op2 (e2 / event\n                      :name (n3 / name\n                                :op1 \"USPGA\"\n                                :op2 \"Championship\")))\n   :mod (m / major))",
      "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n   :ARG0 p\n   :ARG2 (a2 / and\n             :op1 (e / event\n                     :name (n2 / name\n                               :op1 \"The\"\n                               :op2 \"Open\"))\n             :op2 (e2 / event\n                      :name (n3 / name\n                                :op1 \"USPGA\"\n                                :op2 \"Championship\")))\n   :ord (o / ordinal-entity\n           :value 3\n           :range (s / straight)))",
      "(w / win-01\n   :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n   :ARG0 p\n   :ARG2 (a2 / and\n             :op1 (e / event\n                     :name (n2 / name\n                               :op1 \"The\"\n                               :op2 \"Open\"))\n             :op2 (e2 / event\n                      :name (n3 / name\n                                :op1 \"USPGA\"\n                                :op2 \"Championship\")))\n   :time (y / year\n            :mod (l2 / last)))",
      "(o / ordinal-entity\n   :value 3)",
      "(o / ordinal-entity\n   :range (s / straight))",
      "(a / after\n   :op1 (w2 / win-01\n            :ARG0 (p / person :name (n / name :op1 \"McIlroy\"))\n            :ARG2 (a2 / and\n                      :op1 (e / event\n                              :name (n2 / name\n                                        :op1 \"The\"\n                                        :op2 \"Open\"))\n                      :op2 (e2 / event\n                               :name (n3 / name\n                                         :op1 \"USPGA\"\n                                         :op2 \"Championship\")))\n            :time (y / year\n                     :mod (l2 / last))))",
      "(a2 / and\n    :op1 (e / event\n            :name (n2 / name\n                      :op1 \"The\"\n                      :op2 \"Open\")))",
      "(a2 / and\n    :op2 (e2 / event\n             :name (n3 / name\n                       :op1 \"USPGA\"\n                       :op2 \"Championship\")))",
      "(e / event\n   :name (n2 / name\n             :op1 \"The\"\n             :op2 \"Open\"))",
      "(e / event\n   :name (n3 / name\n             :op1 \"USPGA\"\n             :op2 \"Championship\"))",
      "(y / year\n   :mod (l2 / last))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (o / organization\n                                 :name (n2 / name\n                                           :op1 \"One\"\n                                           :op2 \"Direction\"))\n                        :ARG2 (s / star)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\")))",
      "(c / caddie-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Niall\"\n                     :op2 \"Horan\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (o / organization\n                                 :name (n2 / name\n                                           :op1 \"One\"\n                                           :op2 \"Direction\"))\n                        :ARG2 (s / star)))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"McIlroy\"))\n   :subevent-of (c2 / contest-02\n                    :name (n4 / name\n                              :op1 \"Par-3\")\n                    :time (d / date-entity\n                             :weekday (w / wednesday))))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (o / organization\n                        :name (n2 / name\n                                  :op1 \"One\"\n                                  :op2 \"Direction\"))\n               :ARG2 (s / star)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (o / organization\n                        :name (n2 / name\n                                  :op1 \"One\"\n                                  :op2 \"Direction\"))\n               :ARG2 (s / star))\n   :name (n / name\n            :op1 \"Niall\"\n            :op2 \"Horan\"))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (o / organization\n                        :name (n2 / name\n                                  :op1 \"One\"\n                                  :op2 \"Direction\"))\n               :ARG2 (s / star))\n   :name (n3 / name\n             :op1 \"McIlroy\"))",
      "(n / name\n   :op1 \"Niall\")",
      "(n / name\n   :op2 \"Horan\")",
      "(n / name\n   :op1 \"One\")",
      "(n / name\n   :op2 \"Direction\")",
      "(n / name\n   :op1 \"McIlroy\")",
      "(n / name\n   :op1 \"Par-3\")",
      "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"One\"\n                      :op2 \"Direction\"))\n   :ARG2 (s / star))",
      "(o / organization\n   :name (n2 / name\n             :op1 \"One\"\n             :op2 \"Direction\"))",
      "(c2 / contest-02\n    :name (n4 / name\n              :op1 \"Par-3\"))",
      "(c2 / contest-02\n    :time (d / date-entity\n             :weekday (w / wednesday)))",
      "(d / date-entity\n   :weekday (w / wednesday))"
    ],
    "smus": [
      "Ryder McIlroy is bidding to win the first Masters title this week at Augusta.",
      "Ry McIlroy",
      "Ry.",
      "McIlroy",
      "Masters",
      "Augusta",
      "Ry McIlroy will win the first Masters title.",
      "This week, Ry McIlroy will win the first Masters title.",
      "At Augusta, Rory McIlroy will win the first Masters title.",
      "Masters title",
      "First title.",
      "Masters",
      "First..",
      "This week.",
      "Augusta",
      "The Northern Irish man's best finish was tied for 8th place.",
      "The Northern Irish man's best finish last year was tied for 8th place.",
      "The Northern Irish man finished best tied for 8th place in Georgia.",
      "The Northern Irish man's best finish in Georgia was tied for 8th place.",
      "Northern Irish man.",
      "Northern Ireland (NI)",
      "Georgia (GE)",
      "Northern",
      "Ireland (IRE)",
      "Georgia",
      "The man was tied to the eighth place.",
      "8th place",
      "8.",
      "Last year.",
      "Best finish.",
      "Good finish.",
      "McIlroy is looking to win his third straight major.",
      "After winning the Open and USPGA Championship last year, McIlroy is looking to win his third straight major.",
      "McIlroy",
      "McIlroy",
      "The",
      "a href=\"http://www.open.org/news/2010/08/open-up-to-the-open-up-to-the-open-up-to-the-open-up-to-the-open-up-to-the-open-up-to-the-open\">Open/a>",
      "USPGA",
      "Champion.",
      "McIlroy is winning the Open and the USPGA Championship.",
      "McIlroy is a major winner in the Open and USPGA Championship.",
      "McIlroy is winning the Open and USPGA Championship for the 3rd straight year.",
      "McIlroy won the Open and USPGA Championship last year.",
      "3.",
      "Straight up.",
      "After winning the Open and USPGA Championship last year, McIlroy is now in.",
      "and The Open.",
      "and the USPGA Championship.",
      "The Open.",
      "USPGA Championship",
      "Last year.",
      "One Direction star Niall Horan caddied for McIlroy.",
      "One Direction star Niall Horan caddied for McIlroy in the Par-3 contest Wednesday.",
      "One Direction star",
      "One Direction star Niall Horan",
      "McIlroy is the One Direction star.",
      "Niall",
      "Horan.",
      "One.",
      "Direction",
      "McIlroy",
      "Par-3",
      "One Direction star.",
      "One Direction",
      "Par-3 Contest",
      "Contest on Wednesday",
      "Wednesday"
    ]
  },
  {
    "instance_id": "realsumm-45",
    "summary": "<t> Danny Higginbotham covers his time under Roy Keane in his new book . </t> <t> He played for Keane 's Sunderland during the 2007 - 08 season . </t> <t> Keane told his players ' basically you 're s * * * ' before a game with Aston Villa . </t> <t> He also told one player he was ' not f * * * * * * good enough ' to play for the club . </t>",
    "tree": [
      "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\"))\n   :ARG1 (t / time\n            :poss p\n            :prep-under (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\"))))",
      "(c / cover-03\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Danny\"\n                     :op2 \"Higginbotham\"))\n   :ARG1 (t / time\n            :poss p\n            :prep-under (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Roy\"\n                                      :op2 \"Keane\")))\n   :medium (b / book\n              :ARG1-of (n3 / new-01)\n              :poss p))",
      "(p / person\n   :name (n / name\n            :op1 \"Danny\"\n            :op2 \"Higginbotham\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Roy\"\n             :op2 \"Keane\"))",
      "(n / name\n   :op1 \"Danny\")",
      "(n / name\n   :op2 \"Higginbotham\")",
      "(n / name\n   :op1 \"Roy\")",
      "(n / name\n   :op2 \"Keane\")",
      "(t / time\n   :poss (p / person :name (n / name :op1 \"Danny\" :op2 \"Higginbotham\")))",
      "(t / time\n   :prep-under (p2 / person\n                   :name (n2 / name\n                             :op1 \"Roy\"\n                             :op2 \"Keane\")))",
      "(b / book\n   :ARG1-of (n3 / new-01))",
      "(b / book\n   :ARG1-of (n3 / new-01)\n   :poss (p / person :name (n / name :op1 \"Danny\" :op2 \"Higginbotham\")))",
      "(p / play-01\n   :ARG0 (h / he)\n   :ARG2 (t / team\n            :name (n / name\n                     :op1 \"Sunderland\")\n            :ARG1-of (h2 / have-org-role-91\n                         :ARG0 (p2 / person\n                                   :name (n2 / name\n                                             :op1 \"Keane\")))))",
      "(p / play-01\n   :ARG0 (h / he)\n   :ARG2 (t / team\n            :name (n / name\n                     :op1 \"Sunderland\")\n            :ARG1-of (h2 / have-org-role-91\n                         :ARG0 (p2 / person\n                                   :name (n2 / name\n                                             :op1 \"Keane\"))))\n   :time (d / date-entity\n            :year 2007\n            :year2 2008\n            :season (s / season)))",
      "(t / team\n   :ARG1-of (h2 / have-org-role-91\n                :ARG0 (p2 / person\n                          :name (n2 / name\n                                    :op1 \"Keane\"))))",
      "(t / team\n   :ARG1-of (h2 / have-org-role-91\n                :ARG0 (p2 / person\n                          :name (n2 / name\n                                    :op1 \"Keane\")))\n   :name (n / name\n            :op1 \"Sunderland\"))",
      "(n / name\n   :op1 \"Sunderland\")",
      "(n / name\n   :op1 \"Keane\")",
      "(h2 / have-org-role-91\n    :ARG0 (p2 / person\n              :name (n2 / name\n                        :op1 \"Keane\")))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Keane\"))",
      "(d / date-entity\n   :year 2007)",
      "(d / date-entity\n   :year2 2008)",
      "(d / date-entity\n   :season (s / season))",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keane\"))\n   :ARG1 (s / shit\n            :mode expressive\n            :domain (p2 / person\n                        :ARG0-of (p3 / play-01)\n                        :poss p)\n            :mod (b / basic))\n   :ARG2 p2)",
      "(t / tell-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Keane\"))\n   :ARG1 (s / shit\n            :mode expressive\n            :domain (p2 / person\n                        :ARG0-of (p3 / play-01)\n                        :poss p)\n            :mod (b / basic))\n   :ARG2 p2\n   :time (b2 / before\n             :op1 (g / game\n                     :mod (t2 / team\n                              :name (n2 / name\n                                        :op1 \"Aston\"\n                                        :op2 \"Villa\")))))",
      "(p / person\n   :ARG0-of (p3 / play-01))",
      "(p / person\n   :ARG0-of (p3 / play-01)\n   :name (n / name\n            :op1 \"Keane\"))",
      "(p / person\n   :ARG0-of (p3 / play-01)\n   :poss p)",
      "(n / name\n   :op1 \"Keane\")",
      "(n / name\n   :op1 \"Aston\")",
      "(n / name\n   :op2 \"Villa\")",
      "(s / shit\n   :mode expressive)",
      "(s / shit\n   :domain (p2 / person\n               :ARG0-of (p3 / play-01)\n               :poss (p / person :name (n / name :op1 \"Keane\"))))",
      "(s / shit\n   :mod (b / basic))",
      "(b2 / before\n    :op1 (g / game\n            :mod (t2 / team\n                     :name (n2 / name\n                               :op1 \"Aston\"\n                               :op2 \"Villa\"))))",
      "(g / game\n   :mod (t2 / team\n            :name (n2 / name\n                      :op1 \"Aston\"\n                      :op2 \"Villa\")))",
      "(t2 / team\n    :name (n2 / name\n              :op1 \"Aston\"\n              :op2 \"Villa\"))",
      "(t / tell-01\n   :ARG0 (h / he)\n   :ARG1 (h2 / have-degree-91\n             :polarity -\n             :ARG1 (p / play-01\n                      :ARG0 (p2 / person\n                                :quant 1\n                                :ARG0-of (p3 / play-01)))\n             :ARG2 (g / good-03\n                      :ARG1 p)\n             :ARG3 (e / enough)\n             :ARG6 (p4 / play-01\n                       :ARG0 p2\n                       :ARG3 (c / club)))\n   :ARG2 p2)",
      "(t / tell-01\n   :ARG0 (h / he)\n   :ARG1 (h2 / have-degree-91\n             :polarity -\n             :ARG1 (p / play-01\n                      :ARG0 (p2 / person\n                                :quant 1\n                                :ARG0-of (p3 / play-01)))\n             :ARG2 (g / good-03\n                      :ARG1 p)\n             :ARG3 (e / enough)\n             :ARG6 (p4 / play-01\n                       :ARG0 p2\n                       :ARG3 (c / club)))\n   :ARG2 p2\n   :mod (a / also))",
      "(h2 / have-degree-91\n    :ARG1 (p / play-01\n             :ARG0 (p2 / person\n                       :quant 1\n                       :ARG0-of (p3 / play-01)))\n    :ARG2 (g / good-03\n             :ARG1 p)\n    :ARG3 (e / enough)\n    :ARG6 (p4 / play-01\n              :ARG0 p2\n              :ARG3 (c / club)))",
      "(h2 / have-degree-91\n    :ARG1 (p / play-01\n             :ARG0 (p2 / person\n                       :quant 1\n                       :ARG0-of (p3 / play-01)))\n    :ARG2 (g / good-03\n             :ARG1 p)\n    :ARG3 (e / enough)\n    :ARG6 (p4 / play-01\n              :ARG0 p2\n              :ARG3 (c / club))\n    :polarity -)",
      "(p / play-01\n   :ARG0 (p2 / person\n             :quant 1\n             :ARG0-of (p3 / play-01))\n   :ARG0 p2\n   :ARG3 (c / club))",
      "(p2 / person\n    :ARG0-of (p3 / play-01))",
      "(p2 / person\n    :ARG0-of (p3 / play-01)\n    :quant 1)",
      "(g / good-03\n   :ARG1 (p / play-01))"
    ],
    "smus": [
      "Danny Higginbotham covers her time under Roy Keane.",
      "In his new book, Danny Higginbotham covers her time under Roy Keane.",
      "Danny Higginbotham",
      "Roy Keane",
      "Danny",
      "Higginbotham",
      "Roy",
      "Keane",
      "Danny Higginbotham's time.",
      "Time under Roy Keane.",
      "New book.",
      "The new book of Danny Higginbotham.",
      "He played for Seane's side, Sydney.",
      "He played for Seane's side, Sydney, in the 2007-08 season.",
      "Kevine's team",
      "Seane's team is the Southerners.",
      "a href=\"http://www.sunderland.com/2011/02/sunderland/\">Sunderland/a>",
      "Keane",
      "-Keane",
      "@Keane,",
      "2007-00-00",
      "2008-02-28",
      "Season.",
      "My players are basically shit,'' Keane told her.",
      "Before the Aston Villa game, Keane told him that his players were basically shit!",
      "Players:",
      "-Keane",
      "a href=\"http://www.youtube.com/watch?v=st&t=st&t=st\">My Players/a>",
      "Keane",
      "Aston",
      "Villa.",
      "Shit.",
      "Keane's players are shit.",
      "basically shit.",
      "Before the Aston Villa game.",
      "The game will be against Aston Villa.",
      "Aston Villa",
      "He told him that one player did not play good enough to play for a club.",
      "He also told one player that he did not have played good enough to play for a club.",
      "One player has played good enough to play for a club.",
      "Not that one player has played good enough to play for a club.",
      "One player played for the club.",
      "Playmaker.",
      "One player to play.",
      "Good play."
    ]
  },
  {
    "instance_id": "realsumm-46",
    "summary": "<t> Four - poster bed dumped in a hotel car park and sold at auction for \u00a3 2,200 . </t> <t> Owner suspected it had historic value and experts have been investigating . </t> <t> Historian now claims DNA from the timber proves it belonged to Henry VII . </t> <t> Ornate bed , now on display , was made for King and wife Elizabeth of York . </t>",
    "tree": [
      "(a / and\n   :op1 (d / dump-01\n           :ARG1 (b / bed\n                    :mod (p / poster\n                            :quant 4))\n           :location (p2 / park\n                         :mod (c / car)\n                         :mod (h / hotel))))",
      "(a / and\n   :op2 (s / sell-01\n           :ARG1 (b / bed)\n           :ARG3 (m / monetary-quantity\n                    :quant 2100\n                    :unit (p3 / pound))\n           :time (a2 / auction-off-01)))",
      "(d / dump-01\n   :ARG1 (b / bed\n            :mod (p / poster\n                    :quant 4)))",
      "(d / dump-01\n   :ARG1 (b / bed\n            :mod (p / poster\n                    :quant 4))\n   :location (p2 / park\n                 :mod (c / car)\n                 :mod (h / hotel)))",
      "(b / bed\n   :mod (p / poster\n           :quant 4))",
      "(p / poster\n   :quant 4)",
      "(p2 / park\n    :mod (c / car))",
      "(p2 / park\n    :mod (h / hotel))",
      "(s / sell-01\n   :ARG1 (b / bed)\n   :ARG3 (m / monetary-quantity\n            :quant 2100\n            :unit (p3 / pound)))",
      "(s / sell-01\n   :ARG1 (b / bed)\n   :ARG3 (m / monetary-quantity\n            :quant 2100\n            :unit (p3 / pound))\n   :time (a2 / auction-off-01))",
      "(m / monetary-quantity\n   :quant 2100)",
      "(m / monetary-quantity\n   :unit (p3 / pound))",
      "(a / and\n   :op1 (s / suspect-01\n           :ARG0 (p / person\n                    :ARG0-of (o / own-01\n                                :ARG1 (ii / it)))\n           :ARG1 (v / value-01\n                    :ARG1 ii\n                    :mod (h / history))))",
      "(a / and\n   :op2 (ii2 / investigate-01\n             :ARG0 (p2 / person\n                       :ARG1-of (e / expert-01))))",
      "(s / suspect-01\n   :ARG0 (p / person\n            :ARG0-of (o / own-01\n                        :ARG1 (ii / it)))\n   :ARG1 (v / value-01\n            :ARG1 ii\n            :mod (h / history)))",
      "(p / person\n   :ARG0-of (o / own-01\n               :ARG1 (ii / it))\n   :ARG1-of (e / expert-01))",
      "(o / own-01\n   :ARG1 (ii / it))",
      "(v / value-01\n   :ARG1 (ii / it))",
      "(v / value-01\n   :ARG1 (ii / it)\n   :mod (h / history))",
      "(ii2 / investigate-01\n     :ARG0 (p2 / person\n               :ARG1-of (e / expert-01)))",
      "(c / claim-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\")\n                      :part-of (t / timber))\n             :ARG1 (b / belong-01\n                      :ARG0 t\n                      :ARG1 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Henry\"\n                                          :op2 \"VII\")))))",
      "(c / claim-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (h2 / historian)))\n   :ARG1 (p2 / prove-01\n             :ARG0 (n / nucleic-acid\n                      :name (n2 / name\n                                :op1 \"DNA\")\n                      :part-of (t / timber))\n             :ARG1 (b / belong-01\n                      :ARG0 t\n                      :ARG1 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Henry\"\n                                          :op2 \"VII\"))))\n   :time (n4 / now))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (h2 / historian)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (h2 / historian))\n   :name (n3 / name\n             :op1 \"Henry\"\n             :op2 \"VII\"))",
      "(h / have-org-role-91\n   :ARG2 (h2 / historian))",
      "(p2 / prove-01\n    :ARG0 (n / nucleic-acid\n             :name (n2 / name\n                       :op1 \"DNA\")\n             :part-of (t / timber))\n    :ARG1 (b / belong-01\n             :ARG0 t\n             :ARG1 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Henry\"\n                                 :op2 \"VII\"))))",
      "(n / nucleic-acid\n   :name (n2 / name\n             :op1 \"DNA\"))",
      "(n / nucleic-acid\n   :part-of (t / timber))",
      "(n2 / name\n    :op1 \"DNA\")",
      "(n2 / name\n    :op1 \"Henry\")",
      "(n2 / name\n    :op2 \"VII\")",
      "(b / belong-01\n   :ARG0 (t / timber)\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Henry\"\n                       :op2 \"VII\")))",
      "(m / make-01\n   :ARG1 (b / bed\n            :mod (o / ornate)\n            :ARG1-of (d / display-01\n                        :time (n / now)))\n   :ARG3 (p / person\n            :name (n2 / name\n                      :op1 \"Elizabeth\"\n                      :op2 \"of\"\n                      :op3 \"York\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (k / king))\n            :ARG0-of (h2 / have-rel-role-91\n                         :ARG2 (w / wife))))",
      "(b / bed\n   :ARG1-of (d / display-01\n               :time (n / now)))",
      "(b / bed\n   :ARG1-of (d / display-01\n               :time (n / now))\n   :mod (o / ornate))",
      "(d / display-01\n   :time (n / now))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (k / king))\n   :ARG0-of (h2 / have-rel-role-91\n                :ARG2 (w / wife)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (k / king))\n   :ARG0-of (h2 / have-rel-role-91\n                :ARG2 (w / wife))\n   :name (n2 / name\n             :op1 \"Elizabeth\"\n             :op2 \"of\"\n             :op3 \"York\"))",
      "(n2 / name\n    :op1 \"Elizabeth\")",
      "(n2 / name\n    :op2 \"of\")",
      "(n2 / name\n    :op3 \"York\")",
      "(h / have-org-role-91\n   :ARG2 (k / king))",
      "(h2 / have-rel-role-91\n    :ARG2 (w / wife))"
    ],
    "smus": [
      "And the 4 poster bed was dumped in a hotel car park.",
      "and the bed sold for PS2100 at the auction.",
      "Dumped 4 poster bed.",
      "4 poster bed dumped in hotel car park.",
      "Bed with four poster.",
      "4 posters",
      "car park",
      "hotel park",
      "The bed sold for PS2100.",
      "The bed sold for PS2100 at the auction.",
      "2100",
      "PS",
      "And its owners suspected it of historical value.",
      "and experts are investigating.",
      "The owner of it suspected it had historical value.",
      "It's owners and experts.",
      "It's owned by the owner.",
      "It has value.",
      "It has a historical value.",
      "Experts are investigating.",
      "The historian claims that the DNA of the timber proves it belonged to Henry VI.",
      "Now the historian claims that the DNA of the timber proves it belonged to Henry VI.",
      "historian",
      "Henry VI",
      "historian",
      "DNA in the timber proves it belonged to Henry VI.",
      "DNA",
      "Nuclear acids in timber",
      "DNA",
      "Henry",
      "VII",
      "Timber belonged to Henry VI.",
      "The ornate bed on display now is made of Queen Elizabeth of York's wife.",
      "The bed is now on display.",
      "The ornate bed on display now.",
      "Now on display.",
      "The King's wife.",
      "Queen Elizabeth of York, wife of King Edward I.",
      "Elizabeth",
      "of.",
      "York",
      "King.",
      "wife"
    ]
  },
  {
    "instance_id": "realsumm-47",
    "summary": "<t> Attorney : Robert Bates assumed the gun was a Taser because he saw a laser sight on it . </t> <t> Harris family lawyers say there are stark differences between the gun and Taser used . </t> <t> In 2009 , an officer in California also said he mistakenly used his gun instead of a Taser . </t>",
    "tree": [
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Robert\"\n                     :op2 \"Bates\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (a / attorney)))\n   :ARG1 (a2 / assume-02\n             :ARG0 p\n             :ARG1 (t / taser\n                      :domain (g / gun))\n             :ARG1-of (c / cause-01\n                         :ARG0 (s2 / see-01\n                                   :ARG0 p\n                                   :ARG1 (s3 / sight\n                                             :mod (l / laser))\n                                   :location g))))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (a / attorney)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (a / attorney))\n   :name (n / name\n            :op1 \"Robert\"\n            :op2 \"Bates\"))",
      "(n / name\n   :op1 \"Robert\")",
      "(n / name\n   :op2 \"Bates\")",
      "(h / have-org-role-91\n   :ARG2 (a / attorney))",
      "(a2 / assume-02\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))\n    :ARG1 (t / taser\n             :domain (g / gun))\n    :ARG1-of (c / cause-01\n                :ARG0 (s2 / see-01\n                          :ARG0 p\n                          :ARG1 (s3 / sight\n                                    :mod (l / laser))\n                          :location g)))",
      "(t / taser\n   :domain (g / gun))",
      "(c / cause-01\n   :ARG0 (s2 / see-01\n             :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))\n             :ARG1 (s3 / sight\n                       :mod (l / laser))\n             :location (g / gun)))",
      "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))\n    :ARG1 (s3 / sight\n              :mod (l / laser)))",
      "(s2 / see-01\n    :ARG0 (p / person :name (n / name :op1 \"Robert\" :op2 \"Bates\")))\n    :ARG1 (s3 / sight\n              :mod (l / laser))\n    :location (g / gun))",
      "(s3 / sight\n    :mod (l / laser))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (f / family\n                                 :name (n / name\n                                          :op1 \"Harris\"))\n                        :ARG2 (l / lawyer)))\n   :ARG1 (d / differ-02\n            :ARG1 (g / gun)\n            :ARG2 (t / taser\n                     :ARG1-of (u / use-01))\n            :mod (s2 / stark)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (f / family\n                        :name (n / name\n                                 :op1 \"Harris\"))\n               :ARG2 (l / lawyer)))",
      "(h / have-rel-role-91\n   :ARG1 (f / family\n            :name (n / name\n                     :op1 \"Harris\"))\n   :ARG2 (l / lawyer))",
      "(f / family\n   :name (n / name\n            :op1 \"Harris\"))",
      "(n / name\n   :op1 \"Harris\")",
      "(d / differ-02\n   :ARG1 (g / gun)\n   :ARG2 (t / taser\n            :ARG1-of (u / use-01)))",
      "(d / differ-02\n   :ARG1 (g / gun)\n   :ARG2 (t / taser\n            :ARG1-of (u / use-01))\n   :mod (s2 / stark))",
      "(t / taser\n   :ARG1-of (u / use-01))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 o\n            :ARG1 (g / gun\n                     :poss o\n                     :ARG1-of (ii / instead-of-91\n                                  :ARG2 (t / taser)))\n            :ARG1-of (m / mistake-01\n                        :ARG0 o)))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 o\n            :ARG1 (g / gun\n                     :poss o\n                     :ARG1-of (ii / instead-of-91\n                                  :ARG2 (t / taser)))\n            :ARG1-of (m / mistake-01\n                        :ARG0 o))\n   :mod (a / also))",
      "(s / say-01\n   :ARG0 (o / officer\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"California\")))\n   :ARG1 (u / use-01\n            :ARG0 o\n            :ARG1 (g / gun\n                     :poss o\n                     :ARG1-of (ii / instead-of-91\n                                  :ARG2 (t / taser)))\n            :ARG1-of (m / mistake-01\n                        :ARG0 o))\n   :time (d / date-entity\n            :year 2009))",
      "(o / officer\n   :location (s2 / state\n                 :name (n / name\n                          :op1 \"California\")))",
      "(s2 / state\n    :name (n / name\n             :op1 \"California\"))",
      "(n / name\n   :op1 \"California\")",
      "(u / use-01\n   :ARG0 (o / officer)\n   :ARG1 (g / gun\n            :poss o\n            :ARG1-of (ii / instead-of-91\n                         :ARG2 (t / taser)))\n   :ARG1-of (m / mistake-01\n               :ARG0 o))",
      "(g / gun\n   :ARG1-of (ii / instead-of-91\n                :ARG2 (t / taser)))",
      "(g / gun\n   :ARG1-of (ii / instead-of-91\n                :ARG2 (t / taser))\n   :poss (o / officer))",
      "(ii / instead-of-91\n    :ARG2 (t / taser))",
      "(m / mistake-01\n   :ARG0 (o / officer))",
      "(d / date-entity\n   :year 2009)"
    ],
    "smus": [
      "Attorney Robert Bates said he assumed the gun was a taser because he saw a laser sight on it.",
      "Attorney.",
      "Robert Bates, Attorney",
      "Robert",
      "Bates",
      "Attorney.",
      "Robert Bates assumed the gun was a taser because he saw a laser sight on it.",
      "The gun is a Taser.",
      "Because Robert Bates saw a laser sight in the gun.",
      "Robert Bates saw a laser sight.",
      "Robert Bates saw a laser sight in the gun.",
      "a laser sight",
      "Harris family lawyers say the gun and taser used are stark differences.",
      "Harris family lawyers",
      "The Harris family lawyers.",
      "The Harris family.",
      "Harris",
      "There are differences between a gun and the Taser used.",
      "There are stark differences between a gun and the Taser used.",
      "The Taser used...",
      "An officer in California said he mistakenly used his gun instead of a Taser.",
      "Also, the California officer said he mistakenly used his gun instead of a Taser.",
      "In 2009, an officer in California said he mistakenly used his gun instead of a Taser.",
      "-California officer",
      "California (CA)",
      "California.",
      "The officer mistakenly used his gun instead of a Taser.",
      "a gun instead of a taser",
      "The officer had his gun instead of a taser.",
      "Instead, tasers.",
      "The officer mistook.",
      "2009-03-08"
    ]
  },
  {
    "instance_id": "realsumm-48",
    "summary": "<t> Singer arrived at artists ' entrance to gain entry to Drake 's gig . </t> <t> Security told him area was at full capacity and denied admission . </t> <t> A row erupted and a Coachella staffer tried to get Bieber into the gig . </t> <t> But festival security then intervened and put singer in chokehold and removed him from the area . </t>",
    "tree": [
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0-of (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist)))",
      "(a / arrive-01\n   :ARG1 (p / person\n            :ARG0-of (s / sing-01))\n   :ARG4 (e / entrance\n            :poss (a2 / artist)))",
      "(p / person\n   :ARG0-of (s / sing-01))",
      "(p / person\n   :ARG0-of (s / sing-01)\n   :name (n / name\n            :op1 \"Drake\"))",
      "(e / entrance\n   :poss (a2 / artist))",
      "(g / gain-02\n   :ARG0 (p / person)\n   :ARG1 (e2 / enter-01\n             :ARG0 p\n             :ARG1 (g2 / gig\n                       :poss (p2 / person\n                                 :name (n / name\n                                          :op1 \"Drake\")))))",
      "(e2 / enter-01\n    :ARG0 (p / person)\n    :ARG1 (g2 / gig\n              :poss (p2 / person\n                        :name (n / name\n                                 :op1 \"Drake\"))))",
      "(g2 / gig\n    :poss (p2 / person\n              :name (n / name\n                       :op1 \"Drake\")))",
      "(n / name\n   :op1 \"Drake\")",
      "(a / and\n   :op1 (t / tell-01\n           :ARG0 (s / security)\n           :ARG1 (c / capacity\n                    :ARG1-of (f / full-09)\n                    :domain (a2 / area))\n           :ARG2 (h / he)))",
      "(a / and\n   :op2 (d / deny-01\n           :ARG0 (s / security)\n           :ARG1 (a3 / admit-02\n                     :ARG1 (h / he))\n           :ARG2 h))",
      "(t / tell-01\n   :ARG0 (s / security)\n   :ARG1 (c / capacity\n            :ARG1-of (f / full-09)\n            :domain (a2 / area))\n   :ARG2 (h / he))",
      "(c / capacity\n   :ARG1-of (f / full-09))",
      "(c / capacity\n   :ARG1-of (f / full-09)\n   :domain (a2 / area))",
      "(d / deny-01\n   :ARG0 (s / security)\n   :ARG1 (a3 / admit-02\n             :ARG1 (h / he))\n   :ARG2 h)",
      "(a3 / admit-02\n    :ARG1 (h / he))",
      "(a / and\n   :op1 (e / erupt-01\n           :ARG1 (r / row)))",
      "(a / and\n   :op2 (t / try-01\n           :ARG0 (p / person\n                    :ARG0-of (h / have-org-role-91\n                                :ARG1 (o / organization\n                                         :name (n / name\n                                                  :op1 \"Coachella\"))\n                                :ARG2 (s / staffer)))\n           :ARG1 (g / get-05\n                    :ARG0 p\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Bieber\"))\n                    :ARG2 (g2 / gig))))",
      "(e / erupt-01\n   :ARG1 (r / row))",
      "(t / try-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (o / organization\n                                 :name (n / name\n                                          :op1 \"Coachella\"))\n                        :ARG2 (s / staffer)))\n   :ARG1 (g / get-05\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bieber\"))\n            :ARG2 (g2 / gig)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (o / organization\n                        :name (n / name\n                                 :op1 \"Coachella\"))\n               :ARG2 (s / staffer)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (o / organization\n                        :name (n / name\n                                 :op1 \"Coachella\"))\n               :ARG2 (s / staffer))\n   :name (n2 / name\n             :op1 \"Bieber\"))",
      "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n / name\n                     :op1 \"Coachella\"))\n   :ARG2 (s / staffer))",
      "(o / organization\n   :name (n / name\n            :op1 \"Coachella\"))",
      "(n / name\n   :op1 \"Coachella\")",
      "(n / name\n   :op1 \"Bieber\")",
      "(g / get-05\n   :ARG0 (p / person)\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bieber\"))\n   :ARG2 (g2 / gig))",
      "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (ii / intervene-01\n                     :ARG0 (s / security\n                              :mod (f / festival)))\n            :op2 (p / put-01\n                    :ARG0 s\n                    :ARG1 (p2 / person\n                              :ARG0-of (s2 / sing-01))\n                    :ARG2 (c2 / chokehold))\n            :op3 (r / remove-01\n                    :ARG0 s\n                    :ARG1 p2\n                    :ARG2 (a2 / area))\n            :time (t / then)))",
      "(a / and\n   :op1 (ii / intervene-01\n            :ARG0 (s / security\n                     :mod (f / festival))))",
      "(a / and\n   :op2 (p / put-01\n           :ARG0 (s / security)\n           :ARG1 (p2 / person\n                     :ARG0-of (s2 / sing-01))\n           :ARG2 (c2 / chokehold)))",
      "(a / and\n   :op3 (r / remove-01\n           :ARG0 (s / security)\n           :ARG1 (p2 / person)\n           :ARG2 (a2 / area)))",
      "(a / and\n   :time (t / then))",
      "(ii / intervene-01\n    :ARG0 (s / security\n             :mod (f / festival)))",
      "(s / security\n   :mod (f / festival))",
      "(p / put-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person\n             :ARG0-of (s2 / sing-01))\n   :ARG2 (c2 / chokehold))",
      "(p2 / person\n    :ARG0-of (s2 / sing-01))",
      "(r / remove-01\n   :ARG0 (s / security)\n   :ARG1 (p2 / person)\n   :ARG2 (a2 / area))"
    ],
    "smus": [
      "Singers arrived at the entrance of the artists.",
      "Singers arrived at the entrance of the artists.",
      "Singer.",
      "Drake.",
      "Artists' entrance",
      "People will gain entry to Drake's gig.",
      "People entered Drake's gig.",
      "Drake's gig.",
      "Drake.",
      "And Security told him the area was in full capacity.",
      "And Security denied him admission.",
      "Security told him the area was in full capacity.",
      "Full capacity.",
      "The area is in full capacity.",
      "Security denied him admission.",
      "He made an admission.",
      "And a row erupted.",
      "And a Coachella staffer tried to get Bieber a gig.",
      "The row erupted.",
      "Coachella staffer tried to get Bieber a gig.",
      "Coachella staffer",
      "Bieber is a Coachella staffer.",
      "Coachella staffer.",
      "Coachella.",
      "Coachella",
      "Bieber",
      "People will get Bieber a gig.",
      "But then festival security intervened, put the singer in a chokehold and removed him from the area.",
      "and festival security intervened.",
      "And security would put the singer in a chokehold.",
      "and security removed people from the area.",
      "and then...",
      "Festival security intervened.",
      "Festival security",
      "Security would put the singer in a chokehold.",
      "Singer.",
      "Security removed people from the area."
    ]
  },
  {
    "instance_id": "realsumm-49",
    "summary": "<t> Sir Philip Carter died at his home on Thursday morning after a short illness . </t> <t> Carter served Everton during three spells after first joining the club in 1977 . </t> <t> Toffees chairman Bill Kenwright pays tribute to a ' great man and leader ' </t>",
    "tree": [
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\")))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :location (h / home\n                :poss p))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :time (d2 / date-entity\n             :weekday (t / thursday)\n             :dayperiod (m / morning)))",
      "(d / die-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Philip\"\n                     :op3 \"Carter\"))\n   :time (a / after\n            :op1 (ii / ill-01\n                     :ARG1 p\n                     :ARG1-of (s / short-07))))",
      "(p / person\n   :name (n / name\n            :op1 \"Sir\"\n            :op2 \"Philip\"\n            :op3 \"Carter\"))",
      "(n / name\n   :op1 \"Sir\")",
      "(n / name\n   :op2 \"Philip\")",
      "(n / name\n   :op3 \"Carter\")",
      "(h / home\n   :poss (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\")))",
      "(d2 / date-entity\n    :weekday (t / thursday))",
      "(d2 / date-entity\n    :dayperiod (m / morning))",
      "(a / after\n   :op1 (ii / ill-01\n            :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\"))\n            :ARG1-of (s / short-07)))",
      "(ii / ill-01\n    :ARG1 (p / person :name (n / name :op1 \"Sir\" :op2 \"Philip\" :op3 \"Carter\"))\n    :ARG1-of (s / short-07))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\")))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :duration (s2 / spell\n                 :quant 3))",
      "(s / serve-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carter\"))\n   :ARG2 (t / team\n            :name (n2 / name\n                      :op1 \"Everton\"))\n   :time (a / after\n            :op1 (j / join-04\n                    :ARG0 p\n                    :ARG1 t\n                    :time (d / date-entity\n                             :year 1977)\n                    :ord (o / ordinal-entity\n                            :value 1))))",
      "(p / person\n   :name (n / name\n            :op1 \"Carter\"))",
      "(n / name\n   :op1 \"Carter\")",
      "(n / name\n   :op1 \"Everton\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"Everton\"))",
      "(s2 / spell\n    :quant 3)",
      "(a / after\n   :op1 (j / join-04\n           :ARG0 (p / person :name (n / name :op1 \"Carter\"))\n           :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))\n           :time (d / date-entity\n                    :year 1977)\n           :ord (o / ordinal-entity\n                   :value 1)))",
      "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Carter\"))\n   :ARG1 (t / team :name (n2 / name :op1 \"Everton\")))",
      "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Carter\"))\n   :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))\n   :time (d / date-entity\n            :year 1977))",
      "(j / join-04\n   :ARG0 (p / person :name (n / name :op1 \"Carter\"))\n   :ARG1 (t / team :name (n2 / name :op1 \"Everton\"))\n   :ord (o / ordinal-entity\n           :value 1))",
      "(d / date-entity\n   :year 1977)",
      "(o / ordinal-entity\n   :value 1)",
      "(p / pay\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"\n                      :op2 \"Kenwright\")\n             :ARG0-of (h / have-org-role-91\n                         :ARG1 (o / organization\n                                  :name (n2 / name\n                                            :op1 \"Toffees\"))\n                         :ARG2 (c / chairman)))\n   :ARG1 (a / and\n            :op1 (m / man\n                    :mod (g / great))\n            :op2 (p3 / person\n                     :ARG0-of (l / lead-02))))",
      "(p2 / person\n    :ARG0-of (h / have-org-role-91\n                :ARG1 (o / organization\n                         :name (n2 / name\n                                   :op1 \"Toffees\"))\n                :ARG2 (c / chairman))\n    :ARG0-of (l / lead-02))",
      "(p2 / person\n    :ARG0-of (h / have-org-role-91\n                :ARG1 (o / organization\n                         :name (n2 / name\n                                   :op1 \"Toffees\"))\n                :ARG2 (c / chairman))\n    :ARG0-of (l / lead-02)\n    :name (n / name\n             :op1 \"Bill\"\n             :op2 \"Kenwright\"))",
      "(n / name\n   :op1 \"Bill\")",
      "(n / name\n   :op2 \"Kenwright\")",
      "(n / name\n   :op1 \"Toffees\")",
      "(h / have-org-role-91\n   :ARG1 (o / organization\n            :name (n2 / name\n                      :op1 \"Toffees\"))\n   :ARG2 (c / chairman))",
      "(o / organization\n   :name (n2 / name\n             :op1 \"Toffees\"))",
      "(a / and\n   :op1 (m / man\n           :mod (g / great)))",
      "(a / and\n   :op2 (p3 / person\n            :ARG0-of (l / lead-02)))",
      "(m / man\n   :mod (g / great))"
    ],
    "smus": [
      "Sir Philip Carter died.",
      "Sir Philip Carter died in his home.",
      "Sir Philip Carter died Thursday morning.",
      "Sir Philip Carter died after a short illness.",
      "Sir Philip Carter",
      "Sir.",
      "Philip",
      "Carter.",
      "Sir Philip Carter's home",
      "Thursday",
      "Morning",
      "After Sir Philip Carter's short illness.",
      "Sir Philip Carter is short - ill.",
      "Carter served for Everton.",
      "Carter served for three spells with Everton.",
      "Carter served at Everton after joining the club in 1977 for the first time.",
      "Carter.",
      "Carter.",
      "Everton",
      "Everton",
      "Three spells.",
      "After joining Everton in 1977 for the first time.",
      "Carter is joining Everton.",
      "Carter joined Everton in 1977.",
      "Carter is joining Everton for the first time.",
      "1977.",
      "First..",
      "Toffees chairman Bill Kenwright pays great man and leader.",
      "The Toffees chairman is the leader.",
      "Bill Kenwright is the chairman and leader of the Toffees.",
      "Bill",
      "Kenwright",
      "Toffees",
      "The Toffees are the chairman.",
      "The Toffees",
      "And a great man.",
      "and the leader.",
      "Great man."
    ]
  },
  {
    "instance_id": "realsumm-50",
    "summary": "<t> Border collies Ace and Holly were caught on camera performing a gravity - defying feat together . </t> <t> The two pooches stood up on their hind legs while balancing on their owner and trainer Dai Aoki . </t> <t> They have appeared in a number of videos showing off their tricks . </t>",
    "tree": [
      "(c / catch-03\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Ace\")\n                    :mod (b / border-line))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Holly\")\n                     :mod b))\n   :ARG2 (p3 / perform-01\n             :ARG0 a\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 a\n                              :ARG1 (g / gravity)))\n             :manner (t / together)))",
      "(c / catch-03\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Ace\")\n                    :mod (b / border-line))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Holly\")\n                     :mod b))\n   :ARG2 (p3 / perform-01\n             :ARG0 a\n             :ARG1 (f / feat\n                      :mod (d / defy-01\n                              :ARG0 a\n                              :ARG1 (g / gravity)))\n             :manner (t / together))\n   :medium (c2 / camera))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Ace\")\n           :mod (b / border-line)))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Holly\")\n            :mod (b / border-line)))",
      "(p / person\n   :name (n / name\n            :op1 \"Ace\"))",
      "(p / person\n   :mod (b / border-line))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Holly\"))",
      "(p / person\n   :mod (b / border-line))",
      "(n / name\n   :op1 \"Ace\")",
      "(n / name\n   :op1 \"Holly\")",
      "(p3 / perform-01\n    :ARG0 (a / and)\n    :ARG1 (f / feat\n             :mod (d / defy-01\n                     :ARG0 a\n                     :ARG1 (g / gravity))))",
      "(p3 / perform-01\n    :ARG0 (a / and)\n    :ARG1 (f / feat\n             :mod (d / defy-01\n                     :ARG0 a\n                     :ARG1 (g / gravity)))\n    :manner (t / together))",
      "(f / feat\n   :mod (d / defy-01\n           :ARG0 (a / and)\n           :ARG1 (g / gravity)))",
      "(d / defy-01\n   :ARG0 (a / and)\n   :ARG1 (g / gravity))",
      "(s / stand-up-07\n   :ARG1 (p / pooche\n            :quant 2\n            :part (l / leg\n                     :mod (h / hind))))",
      "(s / stand-up-07\n   :ARG1 (p / pooche\n            :quant 2\n            :part (l / leg\n                     :mod (h / hind)))\n   :time (b / balance-01\n            :ARG1 p\n            :ARG2 (p2 / person\n                      :name (n / name\n                               :op1 \"Dai\"\n                               :op2 \"Aoki\")\n                      :ARG0-of (o / own-01\n                                  :ARG1 p)\n                      :ARG0-of (t / train-01\n                                  :ARG2 p))))",
      "(p / pooche\n   :quant 2)",
      "(p / pooche\n   :part (l / leg\n            :mod (h / hind)))",
      "(l / leg\n   :mod (h / hind))",
      "(b / balance-01\n   :ARG1 (p / pooche)\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"Dai\"\n                      :op2 \"Aoki\")\n             :ARG0-of (o / own-01\n                         :ARG1 p)\n             :ARG0-of (t / train-01\n                         :ARG2 p)))",
      "(p2 / person\n    :ARG0-of (o / own-01\n                :ARG1 (p / pooche))\n    :ARG0-of (t / train-01\n                :ARG2 p))",
      "(p2 / person\n    :ARG0-of (o / own-01\n                :ARG1 (p / pooche))\n    :ARG0-of (t / train-01\n                :ARG2 p)\n    :name (n / name\n             :op1 \"Dai\"\n             :op2 \"Aoki\"))",
      "(n / name\n   :op1 \"Dai\")",
      "(n / name\n   :op2 \"Aoki\")",
      "(o / own-01\n   :ARG1 (p / pooche))",
      "(t / train-01\n   :ARG2 (p / pooche))",
      "(a / appear-01\n   :ARG1 (t / they))",
      "(a / appear-01\n   :ARG1 (t / they)\n   :medium (v / video\n              :quant (n / number)\n              :ARG0-of (s / show-off-03\n                          :ARG1 (t2 / trick-01\n                                    :ARG0 t))))",
      "(v / video\n   :ARG0-of (s / show-off-03\n               :ARG1 (t2 / trick-01\n                         :ARG0 (t / they))))",
      "(v / video\n   :ARG0-of (s / show-off-03\n               :ARG1 (t2 / trick-01\n                         :ARG0 (t / they)))\n   :quant (n / number))",
      "(s / show-off-03\n   :ARG1 (t2 / trick-01\n             :ARG0 (t / they)))",
      "(t2 / trick-01\n    :ARG0 (t / they))"
    ],
    "smus": [
      "Borderline Ace and Holly were caught performing a feat of defying gravity together.",
      "Borderline Ace and Holly were caught on camera performing a feat of defying gravity together.",
      "And the borderline Ace.",
      "and the borderline Holly.",
      "Ace",
      "Borderliner.",
      "Holly",
      "Borderliner.",
      "Ace",
      "Holly.",
      "and performing a feat of defying gravity.",
      "Together, they are performing a feat of defying gravity.",
      "A feat of defiance to gravity.",
      "The defying of gravity.",
      "Two pooches on the hind legs stood up.",
      "Two pooches, both on hind legs, stood up while balancing with their owner and trainer, Dai Aoki.",
      "Two pooches.",
      "pooches on hind legs.",
      "hind legs",
      "Pooches are balancing with their owner and trainer Dai Aoki.",
      "Pooch owners and trainers.",
      "pooche owners and trainers Dai Aoki",
      "Dai",
      "Aoki",
      "Pooch owners.",
      "Pooch training.",
      "They have appeared.",
      "They have appeared in a number of videos showing off their tricks.",
      "Videos showing off their tricks.",
      "There are a number of videos showing off their tricks.",
      "Showing off their tricks.",
      "They do tricks."
    ]
  },
  {
    "instance_id": "realsumm-51",
    "summary": "<t> Dayna Dobias , 19 , has created a video in which she dances despite having a disability that makes it difficult for her to walk . </t> <t> She loves TV , film and fashion , and says she \u2019s not happy with how people with disabilities are represented . </t> <t> The teen has created several videos during the past year aimed at changing stereotypes . </t>",
    "tree": [
      "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium-of (d / dance-01\n                          :ARG0 p)))",
      "(c / create-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dayna\"\n                     :op2 \"Dobias\")\n            :age (t / temporal-quantity\n                    :quant 19\n                    :unit (y / year)))\n   :ARG1 (v / video\n            :medium-of (d / dance-01\n                          :ARG0 p))\n   :concession (h / have-03\n                  :ARG0 p\n                  :ARG1 (d2 / disability\n                            :ARG0-of (m / make-02\n                                        :ARG1 (d3 / difficult\n                                                  :domain (w / walk-01\n                                                             :ARG0 p))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Dayna\"\n            :op2 \"Dobias\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 19\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Dayna\")",
      "(n / name\n   :op2 \"Dobias\")",
      "(t / temporal-quantity\n   :quant 19)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(v / video\n   :medium-of (d / dance-01\n                 :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))))",
      "(d / dance-01\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))",
      "(h / have-03\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))\n   :ARG1 (d2 / disability\n             :ARG0-of (m / make-02\n                         :ARG1 (d3 / difficult\n                                   :domain (w / walk-01\n                                              :ARG0 p)))))",
      "(d2 / disability\n    :ARG0-of (m / make-02\n                :ARG1 (d3 / difficult\n                          :domain (w / walk-01\n                                     :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))))))",
      "(m / make-02\n   :ARG1 (d3 / difficult\n             :domain (w / walk-01\n                        :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))))",
      "(d3 / difficult\n    :domain (w / walk-01\n               :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\")))))",
      "(w / walk-01\n   :ARG0 (p / person :name (n / name :op1 \"Dayna\" :op2 \"Dobias\"))))",
      "(a / and\n   :op1 (l / love-01\n           :ARG0 (s / she)\n           :ARG1 (a2 / and\n                     :op1 (t / television)\n                     :op2 (f / film)\n                     :op3 (f2 / fashion))))",
      "(a / and\n   :op1 (t / television))",
      "(a / and\n   :op2 (f / film))",
      "(a / and\n   :op3 (f2 / fashion))",
      "(a / and\n   :op2 (s2 / say-01\n            :ARG0 (s / she)\n            :ARG1 (h / happy-01\n                     :polarity -\n                     :ARG0 (t2 / thing\n                               :ARG2-of (r / represent-01\n                                           :ARG1 (p / person\n                                                    :ARG0-of (h2 / have-03\n                                                                 :ARG1 (d / disability)))))\n                     :ARG1 s)))",
      "(l / love-01\n   :ARG0 (s / she)\n   :ARG1 (a2 / and\n             :op1 (t / television)\n             :op2 (f / film)\n             :op3 (f2 / fashion)))",
      "(s2 / say-01\n    :ARG0 (s / she)\n    :ARG1 (h / happy-01\n             :polarity -\n             :ARG0 (t2 / thing\n                       :ARG2-of (r / represent-01\n                                   :ARG1 (p / person\n                                            :ARG0-of (h2 / have-03\n                                                         :ARG1 (d / disability)))))\n             :ARG1 s))",
      "(h / happy-01\n   :ARG0 (t2 / thing\n             :ARG2-of (r / represent-01\n                         :ARG1 (p / person\n                                  :ARG0-of (h2 / have-03\n                                               :ARG1 (d / disability)))))\n   :ARG1 (s / she))",
      "(h / happy-01\n   :ARG0 (t2 / thing\n             :ARG2-of (r / represent-01\n                         :ARG1 (p / person\n                                  :ARG0-of (h2 / have-03\n                                               :ARG1 (d / disability)))))\n   :ARG1 (s / she)\n   :polarity -)",
      "(t2 / thing\n    :ARG2-of (r / represent-01\n                :ARG1 (p / person\n                         :ARG0-of (h2 / have-03\n                                      :ARG1 (d / disability)))))",
      "(r / represent-01\n   :ARG1 (p / person\n            :ARG0-of (h2 / have-03\n                         :ARG1 (d / disability))))",
      "(p / person\n   :ARG0-of (h2 / have-03\n                :ARG1 (d / disability)))",
      "(h2 / have-03\n    :ARG1 (d / disability))",
      "(c / create-01\n   :ARG0 (t / teen)\n   :ARG1 (v / video\n            :ARG0-of (a / aim-02\n                        :ARG1 (c2 / change-01\n                                  :ARG1 (s / stereotype-01)))\n            :quant (s2 / several)))",
      "(c / create-01\n   :ARG0 (t / teen)\n   :ARG1 (v / video\n            :ARG0-of (a / aim-02\n                        :ARG1 (c2 / change-01\n                                  :ARG1 (s / stereotype-01)))\n            :quant (s2 / several))\n   :time (y / year\n            :mod (p / past)))",
      "(v / video\n   :ARG0-of (a / aim-02\n               :ARG1 (c2 / change-01\n                         :ARG1 (s / stereotype-01))))",
      "(v / video\n   :ARG0-of (a / aim-02\n               :ARG1 (c2 / change-01\n                         :ARG1 (s / stereotype-01)))\n   :quant (s2 / several))",
      "(a / aim-02\n   :ARG1 (c2 / change-01\n             :ARG1 (s / stereotype-01)))",
      "(c2 / change-01\n    :ARG1 (s / stereotype-01))",
      "(y / year\n   :mod (p / past))"
    ],
    "smus": [
      "The video in which Dayna Dobias dances was created by 19-year-old Dayna Dobias.",
      "Dayna Dobias, 19, has created a video in which she dances, though she has a disability that makes it difficult for her to walk.",
      "Dayna Dobias",
      "19",
      "Dayna",
      "Dobias",
      "19",
      "Year.",
      "a href=\"http://www.youtube.com/watch?v=dobias_1\">Video: Dayna Dobias Dances/a>",
      "Dayna Dobias dances.",
      "Dayna Dobias has a disability that makes it difficult for her to walk.",
      "A disability that makes Dayna Dobias difficult to walk.",
      "Makes Dayna Dobias difficult to walk.",
      "Dayna Dobias is difficult to walk.",
      "Dayna Dobias will walk.",
      "And she loves TV, film and fashion.",
      "And TV.",
      "And the film.",
      "and fashion",
      "And she says she is not happy with what represents people with disabilities.",
      "She loves TV, film and fashion.",
      "She says she is not happy with what represents people with disabilities.",
      "She is happy with the representation of people with disabilities.",
      "She is not happy with what disability represents.",
      "Disability representation",
      "representing people with disabilities",
      "disabled",
      "having disabilities.",
      "The teen has created several videos aimed at changing stereotypes.",
      "The teen has created several videos in the past year aimed at changing stereotypes.",
      "Videos aimed at changing stereotypes.",
      "There are several videos aimed at changing stereotypes.",
      "aimed at changing stereotypes.",
      "Changing Stereotypes",
      "past year"
    ]
  },
  {
    "instance_id": "realsumm-52",
    "summary": "<t> Manchester United take on Manchester City on Sunday . </t> <t> Match will begin at 4 pm local time at United 's Old Trafford home . </t> <t> Police have no objections to kick - off being so late in the afternoon . </t> <t> Last late afternoon weekend kick - off in the Manchester derby saw 34 fans arrested at Wembley in 2011 FA Cup semi - final . </t>",
    "tree": [
      "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\")))",
      "(t / take-on-09\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Manchester\"\n                      :op2 \"United\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Manchester\"\n                       :op2 \"City\"))\n   :time (d / date-entity\n            :weekday (s / sunday)))",
      "(t2 / team\n    :name (n / name\n             :op1 \"Manchester\"\n             :op2 \"United\"))",
      "(t2 / team\n    :name (n2 / name\n              :op1 \"Manchester\"\n              :op2 \"City\"))",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op2 \"United\")",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op2 \"City\")",
      "(d / date-entity\n   :weekday (s / sunday))",
      "(b / begin-01\n   :ARG1 (m / match-03))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :location (h / home\n                :poss (t / team\n                         :name (n / name\n                                  :op1 \"United\"))\n                :mod (s / sports-facility\n                        :name n\n                        :op1 \"Old\"\n                        :op2 \" Trafford\")))",
      "(b / begin-01\n   :ARG1 (m / match-03)\n   :time (d / date-entity\n            :time \"16:00\"\n            :timezone (l / local-02)))",
      "(h / home\n   :poss (t / team\n            :name (n / name\n                     :op1 \"United\")))",
      "(h / home\n   :mod (s / sports-facility\n           :name (n / name)\n           :op1 \"Old\"\n           :op2 \" Trafford\"))",
      "(t / team\n   :name (n / name\n            :op1 \"United\"))",
      "(n / name\n   :op1 \"United\")",
      "(s / sports-facility\n   :name (n / name))",
      "(s / sports-facility\n   :op1 \"Old\")",
      "(s / sports-facility\n   :op2 \" Trafford\")",
      "(d / date-entity\n   :time \"16:00\")",
      "(d / date-entity\n   :timezone (l / local-02))",
      "(o / object-01\n   :ARG0 (p / police)\n   :ARG1 (k / kick-off-04\n            :time (l / late\n                     :op1 (d / date-entity\n                             :dayperiod (a / afternoon))\n                     :degree (s / so))))",
      "(o / object-01\n   :ARG0 (p / police)\n   :ARG1 (k / kick-off-04\n            :time (l / late\n                     :op1 (d / date-entity\n                             :dayperiod (a / afternoon))\n                     :degree (s / so)))\n   :polarity -)",
      "(k / kick-off-04\n   :time (l / late\n            :op1 (d / date-entity\n                    :dayperiod (a / afternoon))\n            :degree (s / so)))",
      "(l / late\n   :op1 (d / date-entity\n           :dayperiod (a / afternoon)))",
      "(l / late\n   :degree (s / so))",
      "(d / date-entity\n   :dayperiod (a / afternoon))",
      "(s / see-01\n   :ARG0 (k / kick-off-04\n            :ARG1 (d / derby\n                     :mod (c / city\n                             :name (n / name\n                                      :op1 \"Manchester\")))\n            :time (w / weekend)\n            :time (d2 / date-entity\n                      :dayperiod (a / afternoon)\n                      :mod (l / late))\n            :mod (l2 / last))\n   :ARG1 (a2 / arrest-01\n             :ARG1 (f / fan\n                      :quant 34)\n             :location (s2 / sports-facility\n                           :name (n2 / name\n                                     :op1 \"Wembley\"))\n             :time (f2 / final\n                       :mod (s3 / semi)\n                       :subevent-of (g / game\n                                       :name (n3 / name\n                                                 :op1 \"FA\"\n                                                 :op2 \"Cup\")\n                                       :time (d3 / date-entity\n                                                 :year 2011)))))",
      "(k / kick-off-04\n   :ARG1 (d / derby\n            :mod (c / city\n                    :name (n / name\n                             :op1 \"Manchester\"))))",
      "(k / kick-off-04\n   :ARG1 (d / derby\n            :mod (c / city\n                    :name (n / name\n                             :op1 \"Manchester\")))\n   :time (w / weekend))",
      "(k / kick-off-04\n   :ARG1 (d / derby\n            :mod (c / city\n                    :name (n / name\n                             :op1 \"Manchester\")))\n   :time (d2 / date-entity\n             :dayperiod (a / afternoon)\n             :mod (l / late)))",
      "(k / kick-off-04\n   :ARG1 (d / derby\n            :mod (c / city\n                    :name (n / name\n                             :op1 \"Manchester\")))\n   :mod (l2 / last))",
      "(d / derby\n   :mod (c / city\n           :name (n / name\n                    :op1 \"Manchester\")))",
      "(c / city\n   :name (n / name\n            :op1 \"Manchester\"))",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op1 \"Wembley\")",
      "(n / name\n   :op1 \"FA\")",
      "(n / name\n   :op2 \"Cup\")",
      "(d2 / date-entity\n    :dayperiod (a / afternoon))",
      "(d2 / date-entity\n    :mod (l / late))",
      "(d2 / date-entity\n    :year 2011)",
      "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34))",
      "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34)\n    :location (s2 / sports-facility\n                  :name (n2 / name\n                            :op1 \"Wembley\")))",
      "(a2 / arrest-01\n    :ARG1 (f / fan\n             :quant 34)\n    :time (f2 / final\n              :mod (s3 / semi)\n              :subevent-of (g / game\n                              :name (n3 / name\n                                        :op1 \"FA\"\n                                        :op2 \"Cup\")\n                              :time (d3 / date-entity\n                                        :year 2011))))",
      "(f / fan\n   :quant 34)",
      "(s2 / sports-facility\n    :name (n2 / name\n              :op1 \"Wembley\"))",
      "(f2 / final\n    :mod (s3 / semi))",
      "(f2 / final\n    :subevent-of (g / game\n                    :name (n3 / name\n                              :op1 \"FA\"\n                              :op2 \"Cup\")\n                    :time (d3 / date-entity\n                              :year 2011)))",
      "(g / game\n   :name (n3 / name\n             :op1 \"FA\"\n             :op2 \"Cup\"))",
      "(g / game\n   :time (d3 / date-entity\n             :year 2011))"
    ],
    "smus": [
      "Manchester United will take on Manchester City.",
      "Manchester United will take on Manchester City on Sunday.",
      "Manchester United",
      "Manchester City",
      "Manchester",
      "United States",
      "Manchester",
      "City",
      "Sunday",
      "The Match will begin.",
      "The Match will begin at Old Trafford home to the United.",
      "The Match will begin at 6pm local time.",
      "United home.",
      "Home to Old Trafford.",
      "United",
      "United States",
      "@soccer,",
      "Old.",
      "Trafford",
      "16.00",
      "Local time",
      "Police objected to the fact that the kickoff was so late in the afternoon.",
      "Police objected to the fact that the kickoff was so late in the afternoon.",
      "Kicking off so late in the afternoon.",
      "late afternoon",
      "So late.",
      "afternoon",
      "Last weekend's Manchester derby kick-off late afternoon saw 34 fans arrested at Wembley in the semi-final of the 2011 FA Cup.",
      "kicks off Manchester derby",
      "The Manchester derby kicks off over the weekend.",
      "The Manchester derby kicks off late afternoon.",
      "The last kick off for the Manchester derby.",
      "Manchester derby",
      "Manchester",
      "Manchester",
      "Wembley",
      "FA",
      "Cup.",
      "afternoon",
      "late.",
      "2011-03-09",
      "34 fans were arrested.",
      "34 fans were arrested at Windsor.",
      "34 fans were arrested in the semi-finals of the 2011 FA Cup.",
      "34 fans",
      "-Wembley",
      "Semi-final",
      "The FA Cup final will take place in 2011.",
      "The FA Cup",
      "The game will be in 2011."
    ]
  },
  {
    "instance_id": "realsumm-53",
    "summary": "<t> Kamal criticised umpires ' decision to award controversial no - ball against Rohit Sharma in India 's World Cup match with Bangladesh . </t> <t> The Bangladeshi president alleged India had used its influence in the ICC . </t> <t> Governing body asked him to withdraw his statement or apologise . </t> <t> But Kamal confirmed his intention to step down . </t>",
    "tree": [
      "(c / criticize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kamal\"))\n   :ARG1 (d / decide-01\n            :ARG0 (u / umpire)\n            :ARG1 (a / award-01\n                     :ARG0 u\n                     :ARG1 (b / ball\n                              :mod (c2 / controversy))\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Rohit\"\n                                         :op2 \"Sharma\"))\n                     :time (m / match-03\n                              :ARG0 (c3 / country\n                                        :name (n3 / name\n                                                  :op1 \"India\"))\n                              :ARG1 (c4 / country\n                                        :name (n4 / name\n                                                  :op1 \"Bangladesh\"))\n                              :subevent-of (g / game\n                                              :name (n5 / name\n                                                        :op1 \"World\"\n                                                        :op2 \"Cup\"))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Kamal\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Rohit\"\n             :op2 \"Sharma\"))",
      "(n / name\n   :op1 \"Kamal\")",
      "(n / name\n   :op1 \"Rohit\")",
      "(n / name\n   :op2 \"Sharma\")",
      "(n / name\n   :op1 \"India\")",
      "(n / name\n   :op1 \"Bangladesh\")",
      "(n / name\n   :op1 \"World\")",
      "(n / name\n   :op2 \"Cup\")",
      "(d / decide-01\n   :ARG0 (u / umpire)\n   :ARG1 (a / award-01\n            :ARG0 u\n            :ARG1 (b / ball\n                     :mod (c2 / controversy))\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Rohit\"\n                                :op2 \"Sharma\"))\n            :time (m / match-03\n                     :ARG0 (c3 / country\n                               :name (n3 / name\n                                         :op1 \"India\"))\n                     :ARG1 (c4 / country\n                               :name (n4 / name\n                                         :op1 \"Bangladesh\"))\n                     :subevent-of (g / game\n                                     :name (n5 / name\n                                               :op1 \"World\"\n                                               :op2 \"Cup\")))))",
      "(a / award-01\n   :ARG0 (u / umpire)\n   :ARG1 (b / ball\n            :mod (c2 / controversy))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Rohit\"\n                       :op2 \"Sharma\")))",
      "(a / award-01\n   :ARG0 (u / umpire)\n   :ARG1 (b / ball\n            :mod (c2 / controversy))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Rohit\"\n                       :op2 \"Sharma\"))\n   :time (m / match-03\n            :ARG0 (c3 / country\n                      :name (n3 / name\n                                :op1 \"India\"))\n            :ARG1 (c4 / country\n                      :name (n4 / name\n                                :op1 \"Bangladesh\"))\n            :subevent-of (g / game\n                            :name (n5 / name\n                                      :op1 \"World\"\n                                      :op2 \"Cup\"))))",
      "(b / ball\n   :mod (c2 / controversy))",
      "(m / match-03\n   :ARG0 (c3 / country\n             :name (n3 / name\n                       :op1 \"India\"))\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\")))",
      "(m / match-03\n   :ARG0 (c3 / country\n             :name (n3 / name\n                       :op1 \"India\"))\n   :ARG1 (c4 / country\n             :name (n4 / name\n                       :op1 \"Bangladesh\"))\n   :subevent-of (g / game\n                   :name (n5 / name\n                             :op1 \"World\"\n                             :op2 \"Cup\")))",
      "(c3 / country\n    :name (n3 / name\n              :op1 \"India\"))",
      "(c3 / country\n    :name (n4 / name\n              :op1 \"Bangladesh\"))",
      "(g / game\n   :name (n5 / name\n             :op1 \"World\"\n             :op2 \"Cup\"))",
      "(a / allege-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (c / country\n                                 :name (n / name\n                                          :op1 \"Bangladesh\"))\n                        :ARG2 (p2 / president)))\n   :ARG1 (u / use-01\n            :ARG0 (c2 / country\n                      :name (n2 / name\n                                :op1 \"India\"))\n            :ARG1 (ii / influence-01\n                      :ARG0 c2\n                      :ARG1 (o / organization\n                               :name (n3 / name\n                                         :op1 \"ICC\")))))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (c / country\n                        :name (n / name\n                                 :op1 \"Bangladesh\"))\n               :ARG2 (p2 / president)))",
      "(h / have-org-role-91\n   :ARG1 (c / country\n            :name (n / name\n                     :op1 \"Bangladesh\"))\n   :ARG2 (p2 / president))",
      "(c / country\n   :name (n / name\n            :op1 \"Bangladesh\"))",
      "(c / country\n   :name (n2 / name\n             :op1 \"India\"))",
      "(n / name\n   :op1 \"Bangladesh\")",
      "(n / name\n   :op1 \"India\")",
      "(n / name\n   :op1 \"ICC\")",
      "(u / use-01\n   :ARG0 (c2 / country\n             :name (n2 / name\n                       :op1 \"India\"))\n   :ARG1 (ii / influence-01\n             :ARG0 c2\n             :ARG1 (o / organization\n                      :name (n3 / name\n                                :op1 \"ICC\"))))",
      "(ii / influence-01\n    :ARG0 (c2 / country :name (n2 / name :op1 \"India\"))\n    :ARG1 (o / organization\n             :name (n3 / name\n                       :op1 \"ICC\")))",
      "(o / organization\n   :name (n3 / name\n             :op1 \"ICC\"))",
      "(a / ask-02\n   :ARG0 (b / body\n            :ARG0-of (g / govern-01))\n   :ARG1 (o / or\n            :op1 (w / withdraw-01\n                    :ARG0 (h / he)\n                    :ARG1 (s / state-01\n                             :ARG0 h))\n            :op2 (a2 / apologize-01\n                     :ARG0 h))\n   :ARG2 h)",
      "(b / body\n   :ARG0-of (g / govern-01))",
      "(o / or\n   :op1 (w / withdraw-01\n           :ARG0 (h / he)\n           :ARG1 (s / state-01\n                    :ARG0 h)))",
      "(o / or\n   :op2 (a2 / apologize-01\n            :ARG0 (h / he)))",
      "(w / withdraw-01\n   :ARG0 (h / he)\n   :ARG1 (s / state-01\n            :ARG0 h))",
      "(s / state-01\n   :ARG0 (h / he))",
      "(a2 / apologize-01\n    :ARG0 (h / he))",
      "(c / contrast-01\n   :ARG2 (c2 / confirm-01\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Kamal\"))\n             :ARG1 (ii / intend-01\n                       :ARG0 p\n                       :ARG1 (s / step-down-04\n                                :ARG0 p))))",
      "(c2 / confirm-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Kamal\"))\n    :ARG1 (ii / intend-01\n              :ARG0 p\n              :ARG1 (s / step-down-04\n                       :ARG0 p)))",
      "(p / person\n   :name (n / name\n            :op1 \"Kamal\"))",
      "(n / name\n   :op1 \"Kamal\")",
      "(ii / intend-01\n    :ARG0 (p / person :name (n / name :op1 \"Kamal\"))\n    :ARG1 (s / step-down-04\n             :ARG0 p))",
      "(s / step-down-04\n   :ARG0 (p / person :name (n / name :op1 \"Kamal\")))"
    ],
    "smus": [
      "Kamal criticized the decision of umpires to award Rohit Sharma the controversial ball in India - Bangladesh World Cup match",
      "Kamal",
      "Rohit Sharma",
      "Kamal",
      "Rohit",
      "Sharma.",
      "India (IN)",
      "Bangladesh (BD)",
      "World.",
      "Cup.",
      "The umpires' decision to award Rohit Sharma the controversial ball in India - Bangladesh match of the World Cup.",
      "The umpires will award the controversial ball to Rohit Sharma.",
      "Umpires will award Rohit Sharma the controversial ball in the World Cup match between India and Bangladesh.",
      "The controversy ball.",
      "India v Bangladesh match",
      "India v Bangladesh match of the World Cup",
      "India (IN)",
      "Bangladesh (BD)",
      "World Cup",
      "Bangladesh's president alleged India had used influence over the ICC.",
      "Bangladesh's president",
      "Bangladesh's president.",
      "Bangladesh (BD)",
      "India (IN)",
      "Bangladesh",
      "India (IN)",
      "ICC",
      "India has used its influence on the ICC.",
      "India has influence over the ICC.",
      "ICC",
      "The governing body asked him to withdraw his statement or make an apology.",
      "Government body",
      "Or withdraw his statement.",
      "Or he made an apology.",
      "He did withdraw his statement.",
      "He made the statement.",
      "He made an apology.",
      "But Kamal confirmed his intention to step down.",
      "Kamal confirmed his intention to step down.",
      "Kamal",
      "Kamal",
      "Kamal had the intention to step down.",
      "Kamal will step down."
    ]
  },
  {
    "instance_id": "realsumm-54",
    "summary": "<t> Floyd Mayweather and Manny Pacquiao face off in Las Vegas on May 2 . </t> <t> Joe Calzaghe believes Mayweather 's unbeaten record is a burden . </t> <t> Despite that , the Welshman thinks Mayweather will beat his opponent . </t> <t> READ : Ricky Hatton gives his prediction to Jeff Powell ahead of the fight . </t> <t> READ : Floyd Mayweather vs Manny Pacquiao tickets FINALLY go on sale . </t>",
    "tree": [
      "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))",
      "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :location (c / city\n                :name (n3 / name\n                          :op1 \"Las\"\n                          :op2 \"Vegas\")))",
      "(f / face-off-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\"))\n   :time (d / date-entity\n            :day 2\n            :month 5))",
      "(p / person\n   :name (n / name\n            :op1 \"Floyd\"\n            :op2 \"Mayweather\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Manny\"\n             :op2 \"Pacquiao\"))",
      "(n / name\n   :op1 \"Floyd\")",
      "(n / name\n   :op2 \"Mayweather\")",
      "(n / name\n   :op1 \"Manny\")",
      "(n / name\n   :op2 \"Pacquiao\")",
      "(n / name\n   :op1 \"Las\")",
      "(n / name\n   :op2 \"Vegas\")",
      "(c / city\n   :name (n3 / name\n             :op1 \"Las\"\n             :op2 \"Vegas\"))",
      "(d / date-entity\n   :day 2)",
      "(d / date-entity\n   :month 5)",
      "(b / believe-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joe\"\n                     :op2 \"Calzaghe\"))\n   :ARG1 (b2 / burden-01\n             :ARG2 (r / record\n                      :poss (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Mayweather\"))\n                      :ARG1-of (b3 / beat-03\n                                   :polarity -))))",
      "(p / person\n   :name (n / name\n            :op1 \"Joe\"\n            :op2 \"Calzaghe\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Mayweather\"))",
      "(n / name\n   :op1 \"Joe\")",
      "(n / name\n   :op2 \"Calzaghe\")",
      "(n / name\n   :op1 \"Mayweather\")",
      "(b2 / burden-01\n    :ARG2 (r / record\n             :poss (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Mayweather\"))\n             :ARG1-of (b3 / beat-03\n                          :polarity -)))",
      "(r / record\n   :ARG1-of (b3 / beat-03\n                :polarity -))",
      "(r / record\n   :ARG1-of (b3 / beat-03\n                :polarity -)\n   :poss (p2 / person\n             :name (n2 / name\n                       :op1 \"Mayweather\")))",
      "(b3 / beat-03\n    :polarity -)",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mayweather\"))\n            :ARG1 (p3 / person\n                      :ARG0-of (o / oppose-01\n                                  :ARG1 p2))))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Walesman\"))\n   :ARG1 (b / beat-03\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mayweather\"))\n            :ARG1 (p3 / person\n                      :ARG0-of (o / oppose-01\n                                  :ARG1 p2)))\n   :concession (t2 / that))",
      "(p / person\n   :ARG0-of (o / oppose-01\n               :ARG1 (p2 / person :name (n2 / name :op1 \"Mayweather\"))))",
      "(p / person\n   :ARG0-of (o / oppose-01\n               :ARG1 (p2 / person :name (n2 / name :op1 \"Mayweather\")))\n   :name (n / name\n            :op1 \"Walesman\"))",
      "(p / person\n   :ARG0-of (o / oppose-01\n               :ARG1 (p2 / person :name (n2 / name :op1 \"Mayweather\")))\n   :name (n2 / name\n             :op1 \"Mayweather\"))",
      "(n / name\n   :op1 \"Walesman\")",
      "(n / name\n   :op1 \"Mayweather\")",
      "(b / beat-03\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mayweather\"))\n   :ARG1 (p3 / person\n             :ARG0-of (o / oppose-01\n                         :ARG1 p2)))",
      "(o / oppose-01\n   :ARG1 (p2 / person :name (n2 / name :op1 \"Mayweather\")))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Ricky\"\n                               :op2 \"Hatton\"))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Jeff\"\n                                :op2 \"Powell\"))\n            :time (a / ahead\n                     :op1 (f / fight-01))))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (p / predict-01\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Ricky\"\n                               :op2 \"Hatton\"))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Jeff\"\n                                :op2 \"Powell\"))\n            :time (a / ahead\n                     :op1 (f / fight-01)))\n   :mode imperative)",
      "(p / predict-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Ricky\"\n                      :op2 \"Hatton\"))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jeff\"\n                       :op2 \"Powell\")))",
      "(p / predict-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Ricky\"\n                      :op2 \"Hatton\"))\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jeff\"\n                       :op2 \"Powell\"))\n   :time (a / ahead\n            :op1 (f / fight-01)))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Ricky\"\n             :op2 \"Hatton\"))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Jeff\"\n              :op2 \"Powell\"))",
      "(n / name\n   :op1 \"Ricky\")",
      "(n / name\n   :op2 \"Hatton\")",
      "(n / name\n   :op1 \"Jeff\")",
      "(n / name\n   :op2 \"Powell\")",
      "(a / ahead\n   :op1 (f / fight-01))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                     :mod (o / oppose-01\n                             :ARG0 (p / person\n                                      :name (n / name\n                                               :op1 \"Floyd\"\n                                               :op2 \"Mayweather\"))\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Manny\"\n                                                 :op2 \"Pacquiao\"))))\n            :time (f / final)))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (s / sell-01\n            :ARG1 (t / ticket\n                     :mod (o / oppose-01\n                             :ARG0 (p / person\n                                      :name (n / name\n                                               :op1 \"Floyd\"\n                                               :op2 \"Mayweather\"))\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Manny\"\n                                                 :op2 \"Pacquiao\"))))\n            :time (f / final))\n   :mode imperative)",
      "(s / sell-01\n   :ARG1 (t / ticket\n            :mod (o / oppose-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Floyd\"\n                                      :op2 \"Mayweather\"))\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Manny\"\n                                        :op2 \"Pacquiao\")))))",
      "(s / sell-01\n   :ARG1 (t / ticket\n            :mod (o / oppose-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Floyd\"\n                                      :op2 \"Mayweather\"))\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Manny\"\n                                        :op2 \"Pacquiao\"))))\n   :time (f / final))",
      "(t / ticket\n   :mod (o / oppose-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Floyd\"\n                             :op2 \"Mayweather\"))\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Manny\"\n                               :op2 \"Pacquiao\"))))",
      "(o / oppose-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Floyd\"\n                     :op2 \"Mayweather\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Manny\"\n                       :op2 \"Pacquiao\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Floyd\"\n            :op2 \"Mayweather\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Manny\"\n             :op2 \"Pacquiao\"))",
      "(n / name\n   :op1 \"Floyd\")",
      "(n / name\n   :op2 \"Mayweather\")",
      "(n / name\n   :op1 \"Manny\")",
      "(n / name\n   :op2 \"Pacquiao\")"
    ],
    "smus": [
      "Floyd Mayweather and Manny Pacquiao face off.",
      "Floyd Mayweather and Manny Pacquiao face off in Las Vegas.",
      "Floyd Mayweather and Manny Pacquiao face off on May 2.",
      "Floyd Mayweather",
      "Manny Pacquiao",
      "Floyd",
      "Mayweather",
      "Manny",
      "Pacquiao.",
      "Last.",
      "Vegas.",
      "Las Vegas",
      "2nd",
      "May",
      "Joe Calzaghe believes Mayweather's unbeatable record is a burden.",
      "Joe Calzaghe",
      "Mayweather",
      "Joe",
      "Calzaghe",
      "Mayweather",
      "The burden is on Mayweather's unbeaten record.",
      "Unbeaten record.",
      "Mayweather's unbeaten record",
      "Not beat.",
      "Walesman thinks Mayweather will beat his opponent.",
      "That said, Walesman thinks Mayweather will beat his opponent.",
      "Anti-Mayweather.",
      "Walesman is Mayweather's opponent.",
      "Mayweather is the anti-weather.",
      "Welshman",
      "Mayweather",
      "Mayweather will beat his opponent.",
      "Anti-Mayweather.",
      "You've read that Ricky Hatton is predicting Jeff Powell ahead of the fight.",
      "Read Ricky Hatton's prediction for Jeff Powell ahead of the fight.",
      "Ricky Hatton's prediction for Jeff Powell:",
      "Ricky Hatton predicts Jeff Powell ahead of the fight.",
      "Ricky Hatton",
      "Jeff Powell",
      "Ricky",
      "Hatton",
      "Jeff",
      "Powell.",
      "The fight is ahead.",
      "You've read that Floyd Mayweather and Manny Pacquiao tickets are finally being sold.",
      "Have you read the final sales of Floyd Mayweather v. Manny Pacquiao tickets.",
      "Tickets to Floyd Mayweather v. Manny Pacquiao were sold.",
      "The Floyd Mayweather v. Manny Pacquiao tickets were finally sold.",
      "Floyd Mayweather v. Manny Pacquiao tickets",
      "Floyd Mayweather is against Manny Pacquiao.",
      "Floyd Mayweather",
      "Manny Pacquiao",
      "Floyd",
      "Mayweather",
      "Manny",
      "Pacquiao"
    ]
  },
  {
    "instance_id": "realsumm-55",
    "summary": "<t> Winchester Council in Hampshire claimed annual clean - up hit by new rules . </t> <t> But the Health and Safety Executive denied tightening rules and added that councils were \u2018 over - interpreting \u2019 legislation . </t> <t> Poet Laureate Sir Andrew Motion accused town hall bosses and Highways Agency of ruining the countryside by failing to remove rubbish . </t>",
    "tree": [
      "(c / claim-01\n   :ARG0 (c2 / council\n             :mod (c3 / city\n                      :name (n / name\n                               :op1 \"Winchester\")\n                      :location (c4 / county\n                                    :name (n2 / name\n                                              :op1 \"Hampshire\"))))\n   :ARG1 (c5 / clean-up-02\n             :ARG1-of (h / hit-01\n                         :ARG0 (r / rule\n                                  :ARG1-of (n3 / new-01)))\n             :frequency (r2 / rate-entity-91\n                            :ARG3 (t / temporal-quantity\n                                     :quant 1\n                                     :unit (y / year)))))",
      "(c2 / council\n    :mod (c3 / city\n             :name (n / name\n                      :op1 \"Winchester\")\n             :location (c4 / county\n                           :name (n2 / name\n                                     :op1 \"Hampshire\"))))",
      "(c3 / city\n    :name (n / name\n             :op1 \"Winchester\"))",
      "(c3 / city\n    :location (c4 / county\n                  :name (n2 / name\n                            :op1 \"Hampshire\")))",
      "(n / name\n   :op1 \"Winchester\")",
      "(n / name\n   :op1 \"Hampshire\")",
      "(c4 / county\n    :name (n2 / name\n              :op1 \"Hampshire\"))",
      "(c5 / clean-up-02\n    :ARG1-of (h / hit-01\n                :ARG0 (r / rule\n                         :ARG1-of (n3 / new-01))))",
      "(c5 / clean-up-02\n    :ARG1-of (h / hit-01\n                :ARG0 (r / rule\n                         :ARG1-of (n3 / new-01)))\n    :frequency (r2 / rate-entity-91\n                   :ARG3 (t / temporal-quantity\n                            :quant 1\n                            :unit (y / year))))",
      "(h / hit-01\n   :ARG0 (r / rule\n            :ARG1-of (n3 / new-01)))",
      "(r / rule\n   :ARG1-of (n3 / new-01))",
      "(r2 / rate-entity-91\n    :ARG3 (t / temporal-quantity\n             :quant 1\n             :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 1)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (d / deny-01\n                    :ARG0 (g / government-organization\n                             :name (n / name\n                                      :op1 \"Health\"\n                                      :op2 \"and\"\n                                      :op3 \"Safety\"\n                                      :op4 \"Executive\"))\n                    :ARG1 (t / tighten-01\n                             :ARG1 (r / rule)))\n            :op2 (a2 / add-01\n                     :ARG0 g\n                     :ARG1 (ii / interpret-01\n                               :ARG0 (c2 / council)\n                               :ARG1 (l / legislate-01)\n                               :ARG1-of (o / over-03)))))",
      "(a / and\n   :op1 (d / deny-01\n           :ARG0 (g / government-organization\n                    :name (n / name\n                             :op1 \"Health\"\n                             :op2 \"and\"\n                             :op3 \"Safety\"\n                             :op4 \"Executive\"))\n           :ARG1 (t / tighten-01\n                    :ARG1 (r / rule))))",
      "(a / and\n   :op2 (a2 / add-01\n            :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n            :ARG1 (ii / interpret-01\n                      :ARG0 (c2 / council)\n                      :ARG1 (l / legislate-01)\n                      :ARG1-of (o / over-03))))",
      "(d / deny-01\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Health\"\n                     :op2 \"and\"\n                     :op3 \"Safety\"\n                     :op4 \"Executive\"))\n   :ARG1 (t / tighten-01\n            :ARG1 (r / rule)))",
      "(g / government-organization\n   :name (n / name\n            :op1 \"Health\"\n            :op2 \"and\"\n            :op3 \"Safety\"\n            :op4 \"Executive\"))",
      "(n / name\n   :op1 \"Health\")",
      "(n / name\n   :op2 \"and\")",
      "(n / name\n   :op3 \"Safety\")",
      "(n / name\n   :op4 \"Executive\")",
      "(t / tighten-01\n   :ARG1 (r / rule))",
      "(a2 / add-01\n    :ARG0 (g / government-organization :name (n / name :op1 \"Health\" :op2 \"and\" :op3 \"Safety\" :op4 \"Executive\"))\n    :ARG1 (ii / interpret-01\n              :ARG0 (c2 / council)\n              :ARG1 (l / legislate-01)\n              :ARG1-of (o / over-03)))",
      "(ii / interpret-01\n    :ARG0 (c2 / council)\n    :ARG1 (l / legislate-01)\n    :ARG1-of (o / over-03))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (l / laureate\n                                 :mod (p2 / poet))))\n   :ARG1 (a2 / and\n             :op1 (p3 / person\n                      :ARG0-of h\n                      :ARG1 (h2 / hall\n                                :mod (t / town))\n                      :ARG2 (b / boss)))\n   :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                     :ARG0 a2\n                     :ARG1 (r2 / remove-01\n                               :ARG0 a2\n                               :ARG1 (r3 / rubbish)))))",
      "(a / accuse-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sir\"\n                     :op2 \"Andrew\"\n                     :op3 \"Motion\")\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (l / laureate\n                                 :mod (p2 / poet))))\n   :ARG1 (a2 / and\n             :op1 (p3 / person\n                      :ARG0-of h\n                      :ARG1 (h2 / hall\n                                :mod (t / town))\n                      :ARG2 (b / boss)))\n   :ARG2 (r / ruin-01\n            :ARG0 a2\n            :ARG1 (c / countryside)\n            :ARG3 (f / fail-01\n                     :ARG0 a2\n                     :ARG1 (r2 / remove-01\n                               :ARG0 a2\n                               :ARG1 (r3 / rubbish))))\n   :op2 (g / government-organization\n           :name (n2 / name\n                     :op1 \"Highways\"\n                     :op2 \"Agency\")))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (l / laureate\n                        :mod (p2 / poet)))\n   :ARG0-of h\n   :ARG1 (h2 / hall\n             :mod (t / town))\n   :ARG2 (b / boss))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (l / laureate\n                        :mod (p2 / poet)))\n   :ARG0-of h\n   :ARG1 (h2 / hall\n             :mod (t / town))\n   :ARG2 (b / boss)\n   :name (n / name\n            :op1 \"Sir\"\n            :op2 \"Andrew\"\n            :op3 \"Motion\"))",
      "(n / name\n   :op1 \"Sir\")",
      "(n / name\n   :op2 \"Andrew\")",
      "(n / name\n   :op3 \"Motion\")",
      "(n / name\n   :op1 \"Highways\")",
      "(n / name\n   :op2 \"Agency\")",
      "(h / have-org-role-91\n   :ARG2 (l / laureate\n            :mod (p2 / poet)))",
      "(l / laureate\n   :mod (p2 / poet))",
      "(a2 / and\n    :op1 (p3 / person\n             :ARG0-of (h / have-org-role-91)\n             :ARG1 (h2 / hall\n                       :mod (t / town))\n             :ARG2 (b / boss)))",
      "(h2 / hall\n    :mod (t / town))",
      "(g / government-organization\n   :name (n2 / name\n             :op1 \"Highways\"\n             :op2 \"Agency\"))",
      "(r / ruin-01\n   :ARG0 (a2 / and)\n   :ARG1 (c / countryside)\n   :ARG3 (f / fail-01\n            :ARG0 a2\n            :ARG1 (r2 / remove-01\n                      :ARG0 a2\n                      :ARG1 (r3 / rubbish))))",
      "(f / fail-01\n   :ARG0 (a2 / and)\n   :ARG1 (r2 / remove-01\n             :ARG0 a2\n             :ARG1 (r3 / rubbish)))",
      "(r2 / remove-01\n    :ARG0 (a2 / and)\n    :ARG1 (r3 / rubbish))"
    ],
    "smus": [
      "The Winchester, Hampshire, Council claimed the new rules had hit the clean-ups every year.",
      "b>Winchester Council/b> (Hampshire)",
      "Winchester",
      "HAMPSHIRE:",
      "Winchester",
      "Hampshire",
      "Hampshire",
      "Clean up hit by new rules",
      "The clean up is hit by new rules every year.",
      "New rules have hit.",
      "New rules.",
      "Every year.",
      "One.",
      "Year.",
      "But the Health and Safety Executive denied tightening the rules and added that the councils were overinterpreting the legislation.",
      "And the Health and Safety Executive denied tightening the rules.",
      "And the Health and Safety Executive added that the councils were overinterpreting the legislation.",
      "The Health and Safety Executive denied tightening the rules.",
      "HEALTH AND SECURITY EXECUTION",
      "Health",
      "and...",
      "Safety",
      "Executive",
      "tightening the rules.",
      "The Health and Safety Executive added that the councils were overinterpreting the legislation.",
      "Councils are overinterpreting legislation.",
      "Poetry laureate Sir Andrew Motion accused the bosses of the town hall of ruining the countryside by failing to remove rubbish.",
      "Poetry laureate Sir Andrew Motion accused town hall bosses of ruining the countryside by failing to remove rubbish and the Highways Agency.",
      "The poet laureate is the boss of the town hall.",
      "Sir Andrew Motion is the poet laureate of the town hall bosses.",
      "Sir.",
      "Andrew",
      "Motion",
      "Highways",
      "Agency",
      "Poetry laureate",
      "Poetry Laureate",
      "And the bosses of the town hall.",
      "town hall",
      "The Highways Agency",
      "The countryside is ruined by the countryside failing to remove rubbish.",
      "and failing to remove rubbish.",
      "and remove the rubbish."
    ]
  },
  {
    "instance_id": "realsumm-56",
    "summary": "<t> Simon Wood , 38 , from Oldham won Masterchef last Friday . </t> <t> Father - of - four got cooking skills by feeding culinary creations to his kids . </t> <t> The award - winning chef says one of his favourite meals is a plain omelette . </t>",
    "tree": [
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\")))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Simon\"\n                     :op2 \"Wood\")\n            :age (t / temporal-quantity\n                    :quant 38\n                    :unit (y / year))\n            :source (c / city\n                       :name (n2 / name\n                                 :op1 \"Oldham\")))\n   :ARG1 (a / award\n            :name (n3 / name\n                      :op1 \"Masterchef\"))\n   :time (d / date-entity\n            :weekday (f / friday)\n            :mod (l / last)))",
      "(p / person\n   :name (n / name\n            :op1 \"Simon\"\n            :op2 \"Wood\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 38\n           :unit (y / year)))",
      "(p / person\n   :source (c / city\n              :name (n2 / name\n                        :op1 \"Oldham\")))",
      "(n / name\n   :op1 \"Simon\")",
      "(n / name\n   :op2 \"Wood\")",
      "(n / name\n   :op1 \"Oldham\")",
      "(n / name\n   :op1 \"Masterchef\")",
      "(t / temporal-quantity\n   :quant 38)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(c / city\n   :name (n2 / name\n             :op1 \"Oldham\"))",
      "(a / award\n   :name (n3 / name\n             :op1 \"Masterchef\"))",
      "(d / date-entity\n   :weekday (f / friday))",
      "(d / date-entity\n   :mod (l / last))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p2 / person\n                                  :quant 4)\n                        :ARG2 (f / father)))\n   :ARG1 (s / skill\n            :topic (c / cook-01)))",
      "(g / get-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p2 / person\n                                  :quant 4)\n                        :ARG2 (f / father)))\n   :ARG1 (s / skill\n            :topic (c / cook-01))\n   :manner (f2 / feed-01\n               :ARG0 p\n               :ARG1 (t / thing\n                        :ARG1-of (c2 / create-01\n                                     :mod (c3 / culinary)))\n               :ARG2 (p3 / person\n                         :ARG0-of (h2 / have-rel-role-91\n                                      :ARG1 p\n                                      :ARG2 (k / kid)))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (p2 / person\n                         :quant 4)\n               :ARG2 (f / father))\n   :ARG0-of (h2 / have-rel-role-91\n                :ARG1 p\n                :ARG2 (k / kid)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (p2 / person\n                         :quant 4)\n               :ARG2 (f / father))\n   :ARG0-of (h2 / have-rel-role-91\n                :ARG1 p\n                :ARG2 (k / kid))\n   :quant 4)",
      "(h / have-rel-role-91\n   :ARG1 (p2 / person\n             :quant 4)\n   :ARG2 (f / father)\n   :ARG1 (p / person)\n   :ARG2 (k / kid))",
      "(s / skill\n   :topic (c / cook-01))",
      "(f2 / feed-01\n    :ARG0 (p / person)\n    :ARG1 (t / thing\n             :ARG1-of (c2 / create-01\n                          :mod (c3 / culinary)))\n    :ARG2 (p3 / person\n              :ARG0-of (h2 / have-rel-role-91\n                           :ARG1 p\n                           :ARG2 (k / kid))))",
      "(t / thing\n   :ARG1-of (c2 / create-01\n                :mod (c3 / culinary)))",
      "(c2 / create-01\n    :mod (c3 / culinary))",
      "(s / say-01\n   :ARG0 (c / chef\n            :ARG0-of (w / win-01\n                        :ARG1 (a / award)))\n   :ARG1 (o / omelette\n            :mod (p / plain)\n            :domain (m / meal\n                       :ARG1-of (ii / include-91\n                                    :ARG2 (m2 / meal\n                                              :ARG1-of (f / favor-01\n                                                          :ARG0 c))))))",
      "(c / chef\n   :ARG0-of (w / win-01\n               :ARG1 (a / award)))",
      "(w / win-01\n   :ARG1 (a / award))",
      "(o / omelette\n   :mod (p / plain))",
      "(o / omelette\n   :domain (m / meal\n              :ARG1-of (ii / include-91\n                           :ARG2 (m2 / meal\n                                     :ARG1-of (f / favor-01\n                                                 :ARG0 (c / chef))))))",
      "(m / meal\n   :ARG1-of (ii / include-91\n                :ARG2 (m2 / meal\n                          :ARG1-of (f / favor-01\n                                      :ARG0 (c / chef))))\n   :ARG1-of (f / favor-01\n               :ARG0 c))",
      "(ii / include-91\n    :ARG2 (m2 / meal\n              :ARG1-of (f / favor-01\n                          :ARG0 (c / chef))))",
      "(f / favor-01\n   :ARG0 (c / chef))"
    ],
    "smus": [
      "Simon Wood, 38, of Oldham won the Masterchef.",
      "Simon Wood, 38, of Oldham, won the Masterchef last Friday.",
      "Simon Wood",
      "38.",
      "@Oldham,",
      "Simon",
      "Wood.",
      "Oldham",
      "Masterchef.",
      "38",
      "Year.",
      "Oldham",
      "Masterchef.",
      "Friday",
      "Last.",
      "The 4 Fathers got cooking skills.",
      "The 4 Fathers got cooking skills by feeding their kids culinary creations.",
      "The father of four kids.",
      "Four kids with four fathers.",
      "The kids are the 4th father.",
      "Cooking skills",
      "People feeding their kids culinary creations.",
      "culinary creations",
      "culinary creations",
      "\"One of my favorite meals was plain omelette,\" says the award-winning chef.",
      "the chef won an award",
      "winning the award",
      "plain omelette.",
      "One of the chef's favorite meals is the omelette.",
      "One of the chef's favorite meals.",
      "One of the chef's favorite meals.",
      "The chef is a favorit."
    ]
  },
  {
    "instance_id": "realsumm-57",
    "summary": "<t> Swansea 's Gerhard Tremmel in goal behind the Free Agents ' 4 - 4 - 2 . </t> <t> Glen Johnson , Kolo Toure , Ron Vlaar and Luke Garbutt at the back . </t> <t> James Milner , Mikel Arteta , Tom Cleverley and Jonas Gutierrez in midfield . </t> <t> Burnley 's Danny Ings and Manchester United 's James Wilson up front . </t>",
    "tree": [
      "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Gerhard\"\n                     :op2 \"Tremmel\")\n            :poss (t / team\n                     :name (n2 / name\n                               :op1 \"Swansea\")))\n   :ARG2 (g / goal))",
      "(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Gerhard\"\n                     :op2 \"Tremmel\")\n            :poss (t / team\n                     :name (n2 / name\n                               :op1 \"Swansea\")))\n   :ARG2 (g / goal)\n   :location (b2 / behind\n                 :op1 (t2 / team\n                          :ARG1-of (f / free-04)\n                          :quant (s / score-entity\n                                    :op1 4\n                                    :op2 4\n                                    :op3 2))))",
      "(p / person\n   :name (n / name\n            :op1 \"Gerhard\"\n            :op2 \"Tremmel\"))",
      "(p / person\n   :poss (t / team\n            :name (n2 / name\n                      :op1 \"Swansea\")))",
      "(n / name\n   :op1 \"Gerhard\")",
      "(n / name\n   :op2 \"Tremmel\")",
      "(n / name\n   :op1 \"Swansea\")",
      "(t / team\n   :ARG1-of (f / free-04))",
      "(t / team\n   :ARG1-of (f / free-04)\n   :name (n2 / name\n             :op1 \"Swansea\"))",
      "(t / team\n   :ARG1-of (f / free-04)\n   :quant (s / score-entity\n             :op1 4\n             :op2 4\n             :op3 2))",
      "(b2 / behind\n    :op1 (t2 / team\n             :ARG1-of (f / free-04)\n             :quant (s / score-entity\n                       :op1 4\n                       :op2 4\n                       :op3 2)))",
      "(s / score-entity\n   :op1 4)",
      "(s / score-entity\n   :op2 4)",
      "(s / score-entity\n   :op3 2)",
      "(b / be-located-at-91\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Glen\"\n                             :op2 \"Johnson\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Kolo\"\n                               :op2 \"Toure\"))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Ron\"\n                               :op2 \"Vlaar\"))\n            :op4 (p4 / person\n                     :name (n4 / name\n                               :op1 \"Luke\"\n                               :op2 \"Garbutt\")))\n   :ARG2 (b2 / back))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Glen\"\n                    :op2 \"Johnson\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Kolo\"\n                      :op2 \"Toure\")))",
      "(a / and\n   :op3 (p3 / person\n            :name (n3 / name\n                      :op1 \"Ron\"\n                      :op2 \"Vlaar\")))",
      "(a / and\n   :op4 (p4 / person\n            :name (n4 / name\n                      :op1 \"Luke\"\n                      :op2 \"Garbutt\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Glen\"\n            :op2 \"Johnson\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Kolo\"\n             :op2 \"Toure\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Ron\"\n             :op2 \"Vlaar\"))",
      "(p / person\n   :name (n4 / name\n             :op1 \"Luke\"\n             :op2 \"Garbutt\"))",
      "(n / name\n   :op1 \"Glen\")",
      "(n / name\n   :op2 \"Johnson\")",
      "(n / name\n   :op1 \"Kolo\")",
      "(n / name\n   :op2 \"Toure\")",
      "(n / name\n   :op1 \"Ron\")",
      "(n / name\n   :op2 \"Vlaar\")",
      "(n / name\n   :op1 \"Luke\")",
      "(n / name\n   :op2 \"Garbutt\")",
      "(b / be-located-at-91\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"Milner\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Mikel\"\n                               :op2 \"Arteta\"))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Tom\"\n                               :op2 \"Cleverley\"))\n            :op4 (p4 / person\n                     :name (n4 / name\n                               :op1 \"Jonas\"\n                               :op2 \"Gutierrez\")))\n   :ARG2 (m / midfield))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"James\"\n                    :op2 \"Milner\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Mikel\"\n                      :op2 \"Arteta\")))",
      "(a / and\n   :op3 (p3 / person\n            :name (n3 / name\n                      :op1 \"Tom\"\n                      :op2 \"Cleverley\")))",
      "(a / and\n   :op4 (p4 / person\n            :name (n4 / name\n                      :op1 \"Jonas\"\n                      :op2 \"Gutierrez\")))",
      "(p / person\n   :name (n / name\n            :op1 \"James\"\n            :op2 \"Milner\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Mikel\"\n             :op2 \"Arteta\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Tom\"\n             :op2 \"Cleverley\"))",
      "(p / person\n   :name (n4 / name\n             :op1 \"Jonas\"\n             :op2 \"Gutierrez\"))",
      "(n / name\n   :op1 \"James\")",
      "(n / name\n   :op2 \"Milner\")",
      "(n / name\n   :op1 \"Mikel\")",
      "(n / name\n   :op2 \"Arteta\")",
      "(n / name\n   :op1 \"Tom\")",
      "(n / name\n   :op2 \"Cleverley\")",
      "(n / name\n   :op1 \"Jonas\")",
      "(n / name\n   :op2 \"Gutierrez\")",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Danny\"\n                    :op2 \"Ingers\")\n           :poss (t / team\n                    :name (n2 / name\n                              :op1 \"Burnley\"))))",
      "(a / and\n   :op2 (p2 / person\n            :name (n3 / name\n                      :op1 \"James\"\n                      :op2 \"Wilson\")\n            :poss (t2 / team\n                      :name (n4 / name\n                                :op1 \"Manchester\"\n                                :op2 \"United\"))))",
      "(a / and\n   :location (u / up-front))",
      "(p / person\n   :name (n / name\n            :op1 \"Danny\"\n            :op2 \"Ingers\"))",
      "(p / person\n   :poss (t / team\n            :name (n2 / name\n                      :op1 \"Burnley\")))",
      "(p / person\n   :name (n3 / name\n             :op1 \"James\"\n             :op2 \"Wilson\"))",
      "(p / person\n   :poss (t2 / team\n             :name (n4 / name\n                       :op1 \"Manchester\"\n                       :op2 \"United\")))",
      "(n / name\n   :op1 \"Danny\")",
      "(n / name\n   :op2 \"Ingers\")",
      "(n / name\n   :op1 \"Burnley\")",
      "(n / name\n   :op1 \"James\")",
      "(n / name\n   :op2 \"Wilson\")",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op2 \"United\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"Burnley\"))",
      "(t / team\n   :name (n4 / name\n             :op1 \"Manchester\"\n             :op2 \"United\"))"
    ],
    "smus": [
      "Swansea's Gerhard Tremmel is in goal.",
      "Swansea's Gerhard Tr\u00fcmmel is in goal behind the 4-4 Free Team with 2 goals.",
      "Gerhard Tremmel",
      "Swansea",
      "Gerhard",
      "-Tremmel",
      "Swansea",
      "Free Team.",
      "Swansea are a free agent.",
      "4-4, 2 Free teams.",
      "Behind 4-4 and 2 Free teams.",
      "4",
      "4",
      "2",
      "Glen Johnson, Kolo Toure, Ron Vaar and Luke Garbutt are back.",
      "And Glen Johnson.",
      "And Kolo Toure.",
      "And Ron Vlaar.",
      "And Luke Garbutt.",
      "Glen Johnson",
      "Kolo Toure",
      "Ron Vlaar",
      "Luke Garbutt",
      "Glen",
      "Johnson",
      "Kolo",
      "Toure",
      "Ron",
      "Vlaar",
      "Luke",
      "Garbutt",
      "James Milner, Micel Arteta, Tom Cleverley and Jonathan Gutierrez are in midfield.",
      "and James Milner.",
      "and Mikel Arteta.",
      "and Tom Cleverley.",
      "And Jonas Gutierrez.",
      "James Miller",
      "Mikkel Arteta",
      "Tom Cleverley",
      "Jonas Gutierrez",
      "James",
      "Miller",
      "Mikkel",
      "Arteta",
      "Tom",
      "Cleverley",
      "Jonas",
      "Gutierrez",
      "And Burnley's Danny Ingers.",
      "And Manchester United's James Wilson.",
      "and up front.",
      "Danny Ingers",
      "Burnley",
      "James Wilson",
      "Manchester United",
      "Danny",
      "Ingers",
      "Burnley",
      "James",
      "Wilson",
      "Manchester",
      "United States",
      "Burnley",
      "Manchester United"
    ]
  },
  {
    "instance_id": "realsumm-58",
    "summary": "<t> Michigan high school students Mikenzy Snell and Matt Pliska who has Down syndrome , made plans to go to their junior prom together last year . </t> <t> For their prom picture , the pair held up a sign which read : ' Real friends do n't count chromosomes ' . </t> <t> The sign references the fact that people with Down syndrome have an extra copy of chromosome 21 . </t>",
    "tree": [
      "(p / plan-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"Mikenzy\"\n                              :op2 \"Snell\")\n                     :ARG0-of (s / study-01\n                                 :location (h / high-school\n                                              :location (s2 / state\n                                                            :name (n2 / name\n                                                                      :op1 \"Michigan\")))))\n            :op2 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Matt\"\n                               :op2 \"Pliska\")\n                     :ARG0-of (h2 / have-03\n                                  :ARG1 (m / medical-condition\n                                           :name (n4 / name\n                                                     :op1 \"Down\"\n                                                     :op2 \"Syndrome\")))))\n   :ARG1 (g / go-02\n            :ARG0 a\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :poss a)\n            :manner (t / together)))",
      "(p / plan-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"Mikenzy\"\n                              :op2 \"Snell\")\n                     :ARG0-of (s / study-01\n                                 :location (h / high-school\n                                              :location (s2 / state\n                                                            :name (n2 / name\n                                                                      :op1 \"Michigan\")))))\n            :op2 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Matt\"\n                               :op2 \"Pliska\")\n                     :ARG0-of (h2 / have-03\n                                  :ARG1 (m / medical-condition\n                                           :name (n4 / name\n                                                     :op1 \"Down\"\n                                                     :op2 \"Syndrome\")))))\n   :ARG1 (g / go-02\n            :ARG0 a\n            :ARG4 (p4 / prom\n                      :mod (j / junior)\n                      :poss a)\n            :manner (t / together))\n   :time (y / year\n            :mod (l / last)))",
      "(a / and\n   :op1 (p2 / person\n            :name (n / name\n                     :op1 \"Mikenzy\"\n                     :op2 \"Snell\")\n            :ARG0-of (s / study-01\n                        :location (h / high-school\n                                     :location (s2 / state\n                                                   :name (n2 / name\n                                                             :op1 \"Michigan\"))))))",
      "(a / and\n   :op2 (p3 / person\n            :name (n3 / name\n                      :op1 \"Matt\"\n                      :op2 \"Pliska\")\n            :ARG0-of (h2 / have-03\n                         :ARG1 (m / medical-condition\n                                  :name (n4 / name\n                                            :op1 \"Down\"\n                                            :op2 \"Syndrome\")))))",
      "(p2 / person\n    :ARG0-of (s / study-01\n                :location (h / high-school\n                             :location (s2 / state\n                                           :name (n2 / name\n                                                     :op1 \"Michigan\"))))\n    :ARG0-of (h2 / have-03\n                 :ARG1 (m / medical-condition\n                          :name (n4 / name\n                                    :op1 \"Down\"\n                                    :op2 \"Syndrome\"))))",
      "(p2 / person\n    :ARG0-of (s / study-01\n                :location (h / high-school\n                             :location (s2 / state\n                                           :name (n2 / name\n                                                     :op1 \"Michigan\"))))\n    :ARG0-of (h2 / have-03\n                 :ARG1 (m / medical-condition\n                          :name (n4 / name\n                                    :op1 \"Down\"\n                                    :op2 \"Syndrome\")))\n    :name (n / name\n             :op1 \"Mikenzy\"\n             :op2 \"Snell\"))",
      "(p2 / person\n    :ARG0-of (s / study-01\n                :location (h / high-school\n                             :location (s2 / state\n                                           :name (n2 / name\n                                                     :op1 \"Michigan\"))))\n    :ARG0-of (h2 / have-03\n                 :ARG1 (m / medical-condition\n                          :name (n4 / name\n                                    :op1 \"Down\"\n                                    :op2 \"Syndrome\")))\n    :name (n3 / name\n              :op1 \"Matt\"\n              :op2 \"Pliska\"))",
      "(n / name\n   :op1 \"Mikenzy\")",
      "(n / name\n   :op2 \"Snell\")",
      "(n / name\n   :op1 \"Michigan\")",
      "(n / name\n   :op1 \"Matt\")",
      "(n / name\n   :op2 \"Pliska\")",
      "(n / name\n   :op1 \"Down\")",
      "(n / name\n   :op2 \"Syndrome\")",
      "(s / study-01\n   :location (h / high-school\n                :location (s2 / state\n                              :name (n2 / name\n                                        :op1 \"Michigan\"))))",
      "(h / high-school\n   :location (s2 / state\n                 :name (n2 / name\n                           :op1 \"Michigan\")))",
      "(s2 / state\n    :name (n2 / name\n              :op1 \"Michigan\"))",
      "(h2 / have-03\n    :ARG1 (m / medical-condition\n             :name (n4 / name\n                       :op1 \"Down\"\n                       :op2 \"Syndrome\")))",
      "(m / medical-condition\n   :name (n4 / name\n             :op1 \"Down\"\n             :op2 \"Syndrome\"))",
      "(g / go-02\n   :ARG0 (a / and)\n   :ARG4 (p4 / prom\n             :mod (j / junior)\n             :poss a))",
      "(g / go-02\n   :ARG0 (a / and)\n   :ARG4 (p4 / prom\n             :mod (j / junior)\n             :poss a)\n   :manner (t / together))",
      "(p4 / prom\n    :mod (j / junior))",
      "(p4 / prom\n    :poss (a / and))",
      "(y / year\n   :mod (l / last))",
      "(h / hold-up-10\n   :ARG0 (p / pair)\n   :ARG1 (s / sign\n            :ARG1-of (r / read-01\n                        :ARG3 (c / count-01\n                                 :polarity -\n                                 :ARG0 (p2 / person\n                                           :ARG0-of (h2 / have-rel-role-91\n                                                        :ARG2 (f / friend\n                                                                 :ARG1-of (r2 / real-04))))\n                                 :ARG1 (c2 / chromosome)))))",
      "(h / hold-up-10\n   :ARG0 (p / pair)\n   :ARG1 (s / sign\n            :ARG1-of (r / read-01\n                        :ARG3 (c / count-01\n                                 :polarity -\n                                 :ARG0 (p2 / person\n                                           :ARG0-of (h2 / have-rel-role-91\n                                                        :ARG2 (f / friend\n                                                                 :ARG1-of (r2 / real-04))))\n                                 :ARG1 (c2 / chromosome)))))",
      "(s / sign\n   :ARG1-of (r / read-01\n               :ARG3 (c / count-01\n                        :polarity -\n                        :ARG0 (p2 / person\n                                  :ARG0-of (h2 / have-rel-role-91\n                                               :ARG2 (f / friend\n                                                        :ARG1-of (r2 / real-04))))\n                        :ARG1 (c2 / chromosome))))",
      "(r / read-01\n   :ARG3 (c / count-01\n            :polarity -\n            :ARG0 (p2 / person\n                      :ARG0-of (h2 / have-rel-role-91\n                                   :ARG2 (f / friend\n                                            :ARG1-of (r2 / real-04))))\n            :ARG1 (c2 / chromosome)))",
      "(c / count-01\n   :ARG0 (p2 / person\n             :ARG0-of (h2 / have-rel-role-91\n                          :ARG2 (f / friend\n                                   :ARG1-of (r2 / real-04))))\n   :ARG1 (c2 / chromosome))",
      "(c / count-01\n   :ARG0 (p2 / person\n             :ARG0-of (h2 / have-rel-role-91\n                          :ARG2 (f / friend\n                                   :ARG1-of (r2 / real-04))))\n   :ARG1 (c2 / chromosome)\n   :polarity -)",
      "(p2 / person\n    :ARG0-of (h2 / have-rel-role-91\n                 :ARG2 (f / friend\n                          :ARG1-of (r2 / real-04))))",
      "(h2 / have-rel-role-91\n    :ARG2 (f / friend\n             :ARG1-of (r2 / real-04)))",
      "(f / friend\n   :ARG1-of (r2 / real-04))",
      "(p3 / picture-01\n    :ARG1 (p / pair))",
      "(p3 / picture-01\n    :ARG1 (p / pair)\n    :mod (p4 / prom))",
      "(r / reference-04\n   :ARG0 (s / sign)\n   :ARG1 (h / have-03\n            :ARG0 (p / person\n                     :ARG1 (m / medical-condition\n                              :name (n / name\n                                       :op1 \"Down\"\n                                       :op2 \"Syndrome\")))\n            :ARG0 p)\n   :ARG1 (c / copy-01\n            :ARG1 (c2 / chromosome\n                      :mod 21)\n            :mod (e / extra)))",
      "(h / have-03\n   :ARG0 (p / person\n            :ARG1 (m / medical-condition\n                     :name (n / name\n                              :op1 \"Down\"\n                              :op2 \"Syndrome\")))\n   :ARG0 p)",
      "(p / person\n   :ARG1 (m / medical-condition\n            :name (n / name\n                     :op1 \"Down\"\n                     :op2 \"Syndrome\")))",
      "(m / medical-condition\n   :name (n / name\n            :op1 \"Down\"\n            :op2 \"Syndrome\"))",
      "(n / name\n   :op1 \"Down\")",
      "(n / name\n   :op2 \"Syndrome\")",
      "(c / copy-01\n   :ARG1 (c2 / chromosome\n             :mod 21))",
      "(c / copy-01\n   :ARG1 (c2 / chromosome\n             :mod 21)\n   :mod (e / extra))",
      "(c2 / chromosome\n    :mod 21)"
    ],
    "smus": [
      "Mikenzy Snell, a high school student in Michigan, and Matt Pliska, who has Down Syndrome, plan to go to their junior prom together.",
      "Mikenzy Snell, a high school student in Michigan, and Matt Pliska, who has Down Syndrome, made plans last year to go to their junior prom together.",
      "And Mikenzy Snell, a high school student in Michigan.",
      "And Matt Pliska, who has Down Syndrome.",
      "Students in high school in Michigan with Down Syndrome.",
      "MIKEZY SNEEL is a Michigan high school student with Down Syndrome.",
      "Matt Pliska is a high school student in Michigan who has Down Syndrome.",
      "Mikenzy",
      "Snell",
      "Michigan",
      "Matt",
      "Pliska",
      "Down.",
      "Syndrome.",
      "Studying in high school in Michigan.",
      "High school in Michigan.",
      "Michigan (MI)",
      "has Down syndrome.",
      "Down syndrome.",
      "and go to their junior prom.",
      "and go to their junior prom together.",
      "Junior prom",
      "Their prom.",
      "Last year.",
      "The pair held up a sign that read \"real friends don't count chromosomes.\"",
      "The pair held up a sign that read \"real friends don't count chromosomes.\"",
      "A sign that reads \"real friends don't count chromosomes.\"",
      "Read: Real friends don't count chromosomes.",
      "Real friends will count on chromosomes.",
      "Real friends don't count chromosomes.",
      "Real friends.",
      "Real friends.",
      "Real friends.",
      "The pair are in the picture.",
      "a pair of prom pictures",
      "The sign references people with Down Syndrome who have an extra copy of chromosome 21.",
      "People with Down syndrome have it.",
      "Down syndrome.",
      "Down syndrome.",
      "Down.",
      "Syndrome.",
      "a copy of chromosome 21",
      "An extra copy of chromosome 21.",
      "chromosome 21"
    ]
  },
  {
    "instance_id": "realsumm-59",
    "summary": "<t> Police say Michael Scott Shemansky came to their attention after he failed to appear for a supervised visit with his son Saturday . </t> <t> That same day mother Sandra Shemansky , 57 , was found dead at the home they shared in Winter Garden , Florida . </t> <t> Michael Shemansky was going through a difficult divorce and neighbors believe the stress may have caused him to snap . </t>",
    "tree": [
      "(s / say-01\n   :ARG0 (p / police)\n   :ARG1 (c / come-01\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Michael\"\n                               :op2 \"Scott\"\n                               :op3 \"Shemansky\"))\n            :ARG4 (a / attend-02\n                     :ARG0 p\n                     :ARG1 p2\n                     :time (a2 / after\n                               :op1 (f / fail-01\n                                       :ARG1 p2\n                                       :ARG2 (a3 / appear-01\n                                                 :ARG1 p2\n                                                 :purpose (v / visit-01\n                                                             :ARG0 p2\n                                                             :ARG1 (p3 / person\n                                                                       :ARG0-of (h / have-rel-role-91\n                                                                                   :ARG1 p2\n                                                                                   :ARG2 (s2 / son)))\n                                                             :ARG1-of (s3 / supervise-01))\n                                                 :time (d / date-entity\n                                                          :weekday (s4 / saturday))))))))",
      "(c / come-01\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Michael\"\n                      :op2 \"Scott\"\n                      :op3 \"Shemansky\"))\n   :ARG4 (a / attend-02\n            :ARG0 (p / police)\n            :ARG1 p2\n            :time (a2 / after\n                      :op1 (f / fail-01\n                              :ARG1 p2\n                              :ARG2 (a3 / appear-01\n                                        :ARG1 p2\n                                        :purpose (v / visit-01\n                                                    :ARG0 p2\n                                                    :ARG1 (p3 / person\n                                                              :ARG0-of (h / have-rel-role-91\n                                                                          :ARG1 p2\n                                                                          :ARG2 (s2 / son)))\n                                                    :ARG1-of (s3 / supervise-01))\n                                        :time (d / date-entity\n                                                 :weekday (s4 / saturday)))))))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG1 p2\n                :ARG2 (s2 / son)))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG1 p2\n                :ARG2 (s2 / son))\n    :name (n / name\n             :op1 \"Michael\"\n             :op2 \"Scott\"\n             :op3 \"Shemansky\"))",
      "(n / name\n   :op1 \"Michael\")",
      "(n / name\n   :op2 \"Scott\")",
      "(n / name\n   :op3 \"Shemansky\")",
      "(a / attend-02\n   :ARG0 (p / police)\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))",
      "(a / attend-02\n   :ARG0 (p / police)\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :time (a2 / after\n             :op1 (f / fail-01\n                     :ARG1 p2\n                     :ARG2 (a3 / appear-01\n                               :ARG1 p2\n                               :purpose (v / visit-01\n                                           :ARG0 p2\n                                           :ARG1 (p3 / person\n                                                     :ARG0-of (h / have-rel-role-91\n                                                                 :ARG1 p2\n                                                                 :ARG2 (s2 / son)))\n                                           :ARG1-of (s3 / supervise-01))\n                               :time (d / date-entity\n                                        :weekday (s4 / saturday))))))",
      "(a2 / after\n    :op1 (f / fail-01\n            :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n            :ARG2 (a3 / appear-01\n                      :ARG1 p2\n                      :purpose (v / visit-01\n                                  :ARG0 p2\n                                  :ARG1 (p3 / person\n                                            :ARG0-of (h / have-rel-role-91\n                                                        :ARG1 p2\n                                                        :ARG2 (s2 / son)))\n                                  :ARG1-of (s3 / supervise-01))\n                      :time (d / date-entity\n                               :weekday (s4 / saturday)))))",
      "(f / fail-01\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG2 (a3 / appear-01\n             :ARG1 p2\n             :purpose (v / visit-01\n                         :ARG0 p2\n                         :ARG1 (p3 / person\n                                   :ARG0-of (h / have-rel-role-91\n                                               :ARG1 p2\n                                               :ARG2 (s2 / son)))\n                         :ARG1-of (s3 / supervise-01))\n             :time (d / date-entity\n                      :weekday (s4 / saturday))))",
      "(a3 / appear-01\n    :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))",
      "(a3 / appear-01\n    :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\")))",
      "(a3 / appear-01\n    :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n    :time (d / date-entity\n             :weekday (s4 / saturday)))",
      "(v / visit-01\n   :ARG0 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG1 (p3 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 p2\n                         :ARG2 (s2 / son)))\n   :ARG1-of (s3 / supervise-01))",
      "(h / have-rel-role-91\n   :ARG1 (p2 / person :name (n / name :op1 \"Michael\" :op2 \"Scott\" :op3 \"Shemansky\"))\n   :ARG2 (s2 / son))",
      "(d / date-entity\n   :weekday (s4 / saturday))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\")\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                    :quant 57\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\")\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                    :quant 57\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :time (d2 / day\n             :ARG1-of (s / same-01)\n             :mod (t2 / that)))",
      "(f / find-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"\n                     :op2 \"Shemansky\")\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (m / mother))\n            :age (t / temporal-quantity\n                    :quant 57\n                    :unit (y / year)))\n   :ARG2 (d / die-01\n            :ARG1 p)\n   :location (h2 / home\n                 :ARG1-of (s2 / share-01\n                              :ARG0 p\n                              :ARG2 p)\n                 :location (c / city\n                              :name (n2 / name\n                                        :op1 \"Winter\"\n                                        :op2 \"Garden\")\n                              :location (s3 / state\n                                            :name (n3 / name\n                                                      :op1 \"Florida\")))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (m / mother)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (m / mother))\n   :name (n / name\n            :op1 \"Sandra\"\n            :op2 \"Shemansky\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG2 (m / mother))\n   :age (t / temporal-quantity\n           :quant 57\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Sandra\")",
      "(n / name\n   :op2 \"Shemansky\")",
      "(n / name\n   :op1 \"Winter\")",
      "(n / name\n   :op2 \"Garden\")",
      "(n / name\n   :op1 \"Florida\")",
      "(h / have-rel-role-91\n   :ARG2 (m / mother))",
      "(t / temporal-quantity\n   :quant 57)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(d / die-01\n   :ARG1 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\"))))",
      "(d2 / day\n    :ARG1-of (s / same-01))",
      "(d2 / day\n    :ARG1-of (s / same-01)\n    :mod (t2 / that))",
      "(h2 / home\n    :ARG1-of (s2 / share-01\n                 :ARG0 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\")))\n                 :ARG2 p))",
      "(h2 / home\n    :ARG1-of (s2 / share-01\n                 :ARG0 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\")))\n                 :ARG2 p)\n    :location (c / city\n                 :name (n2 / name\n                           :op1 \"Winter\"\n                           :op2 \"Garden\")\n                 :location (s3 / state\n                               :name (n3 / name\n                                         :op1 \"Florida\"))))",
      "(s2 / share-01\n    :ARG0 (p / person :name (n / name :op1 \"Sandra\" :op2 \"Shemansky\")))\n    :ARG2 p)",
      "(c / city\n   :name (n2 / name\n             :op1 \"Winter\"\n             :op2 \"Garden\"))",
      "(c / city\n   :location (s3 / state\n                 :name (n3 / name\n                           :op1 \"Florida\")))",
      "(s3 / state\n    :name (n3 / name\n              :op1 \"Florida\"))",
      "(a / and\n   :op1 (g / go-through-20\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Michael\"\n                             :op2 \"Shemansky\"))\n           :ARG1 (d / divorce-01\n                    :ARG0 p\n                    :mod (d2 / difficult))))",
      "(a / and\n   :op2 (b / believe-01\n           :ARG0 (p2 / person\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))\n                                 :ARG2 (n2 / neighbor)))\n           :ARG1 (p3 / possible-01\n                     :ARG1 (c / cause-01\n                              :ARG0 (s / stress-02)\n                              :ARG1 (s2 / snap-04\n                                        :ARG1 p)))))",
      "(g / go-through-20\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michael\"\n                     :op2 \"Shemansky\"))\n   :ARG1 (d / divorce-01\n            :ARG0 p\n            :mod (d2 / difficult)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n2 / neighbor)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n2 / neighbor))\n   :name (n / name\n            :op1 \"Michael\"\n            :op2 \"Shemansky\"))",
      "(n / name\n   :op1 \"Michael\")",
      "(n / name\n   :op2 \"Shemansky\")",
      "(d / divorce-01\n   :ARG0 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\")))",
      "(d / divorce-01\n   :ARG0 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))\n   :mod (d2 / difficult))",
      "(b / believe-01\n   :ARG0 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))\n                         :ARG2 (n2 / neighbor)))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c / cause-01\n                      :ARG0 (s / stress-02)\n                      :ARG1 (s2 / snap-04\n                                :ARG1 p))))",
      "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))\n   :ARG2 (n2 / neighbor))",
      "(p3 / possible-01\n    :ARG1 (c / cause-01\n             :ARG0 (s / stress-02)\n             :ARG1 (s2 / snap-04\n                       :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\")))))",
      "(c / cause-01\n   :ARG0 (s / stress-02)\n   :ARG1 (s2 / snap-04\n             :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\"))))",
      "(s2 / snap-04\n    :ARG1 (p / person :name (n / name :op1 \"Michael\" :op2 \"Shemansky\")))"
    ],
    "smus": [
      "Police say Michael Scott Shemansky came under attention after he failed to appear for a surveillance visit to his son Saturday.",
      "Michael Scott Shemansky came under police attention after he failed to appear for a surveillance visit to his son Saturday.",
      "son",
      "Michael Scott Shemansky is the son of the man.",
      "Michael",
      "Scott",
      "Shemansky.",
      "Police were paying attention to Michael Scott Shemansky.",
      "Police paid attention to Michael Scott Shemansky after he failed to appear for a surveillance visit to his son Saturday.",
      "After Michael Scott Shemansky failed to appear for a supervised visit to his son Saturday,",
      "Michael Scott Shemansky failed to appear Saturday for a supervised visit to his son.",
      "Michael Scott Shemansky did appear.",
      "Michael Scott Shemansky did appear.",
      "Michael Scott Shemansky will appear Saturday.",
      "Michael Scott Shemansky made a supervised visit to his son.",
      "Michael Scott Shemansky is the son of the late Shemansky.",
      "Saturday",
      "Sandra Shemansky, 57, was found dead.",
      "On that same day, 57-year-old mother Sandra Shemansky was found dead.",
      "Sandra Shemansky, 57, was found dead in a shared home in Winter Garden, Florida.",
      "Mother",
      "Sandra Shemansky is the mother.",
      "The mother is 57.",
      "Sandra",
      "Shemansky.",
      "Winter",
      "Garden",
      "Florida",
      "mother",
      "57",
      "Year.",
      "Sandra Shemansky died.",
      "Same day.",
      "That same day.",
      "Sandra Shemansky shared her home.",
      "Sandra Shemansky shared her home in Winter Garden, Florida.",
      "Sandra Shemansky shared her.",
      "Winter Garden",
      "FLORIDA:",
      "FLORIDA:",
      "Michael Shemansky went through a difficult divorce and:",
      "And Michael Shemansky's neighbors believe that stress may have caused him to snap.",
      "Michael Shemansky went through a difficult divorce.",
      "My neighbors.",
      "Michael Shemansky is one of my neighbors.",
      "Michael",
      "Shemansky.",
      "Michael Shemansky's divorce",
      "Michael Shemansky had a difficult divorce.",
      "Michael Shemansky's neighbors believe stress may have caused him to snap.",
      "Michael Shemansky is one of his neighbors.",
      "The stress could have caused Michael Shemansky to snap.",
      "The stress has caused Michael Shemansky to snap.",
      "Snap Michael Shemansky."
    ]
  },
  {
    "instance_id": "realsumm-60",
    "summary": "<t> Bayern Munich beat Porto 6 - 1 in the Champions League on Tuesday . </t> <t> Pep Guardiola 's side progressed 7 - 4 on aggregate to reach semi - finals . </t> <t> Thomas Muller scored 27th Champions League goal to pass Mario Gomez . </t> <t> Muller is now the leading German scorer in the competition . </t> <t> After game Muller led the celebrations with supporters using a megaphone . </t>",
    "tree": [
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\")))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))",
      "(b / beat-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Bayern\"\n                     :op2 \"Munich\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Porto\"))\n   :ARG2 (g / game\n            :name (n3 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\"))\n   :quant (s / score-entity\n             :op1 6\n             :op2 1))",
      "(t / team\n   :name (n / name\n            :op1 \"Bayern\"\n            :op2 \"Munich\"))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Porto\"))",
      "(n / name\n   :op1 \"Bayern\")",
      "(n / name\n   :op2 \"Munich\")",
      "(n / name\n   :op1 \"Porto\")",
      "(n / name\n   :op1 \"Champions\")",
      "(n / name\n   :op2 \"League\")",
      "(g / game\n   :name (n3 / name\n             :op1 \"Champions\"\n             :op2 \"League\"))",
      "(d / date-entity\n   :weekday (t3 / tuesday))",
      "(s / score-entity\n   :op1 6)",
      "(s / score-entity\n   :op2 1)",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :ARG4 (r / reach-01\n            :ARG0 s\n            :ARG1 (f / final\n                     :mod (s2 / semi)))\n   :ARG4-of (a / aggregate-01))",
      "(p / progress-01\n   :ARG1 (s / side\n            :poss (p2 / person\n                      :name (n / name\n                               :op1 \"Pep\"\n                               :op2 \"Guardiola\")))\n   :ARG4 (r / reach-01\n            :ARG0 s\n            :ARG1 (f / final\n                     :mod (s2 / semi)))\n   :ARG4-of (a / aggregate-01)\n   :manner (s3 / score-entity\n               :op1 7\n               :op2 4))",
      "(s / side\n   :poss (p2 / person\n             :name (n / name\n                      :op1 \"Pep\"\n                      :op2 \"Guardiola\")))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Pep\"\n             :op2 \"Guardiola\"))",
      "(n / name\n   :op1 \"Pep\")",
      "(n / name\n   :op2 \"Guardiola\")",
      "(r / reach-01\n   :ARG0 (s / side)\n   :ARG1 (f / final\n            :mod (s2 / semi)))",
      "(f / final\n   :mod (s2 / semi))",
      "(s3 / score-entity\n    :op1 7)",
      "(s3 / score-entity\n    :op2 4)",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Thomas\"\n                     :op2 \"Muller\"))\n   :ARG1 (g / goal\n            :ord (o / ordinal-entity\n                    :value 27)\n            :mod (g2 / game\n                     :name (n2 / name\n                               :op1 \"Champions\"\n                               :op2 \"League\")))\n   :ARG2-of (p2 / pass-03\n                :ARG0 p\n                :ARG1 (p3 / person\n                          :name (n3 / name\n                                    :op1 \"Mario\"\n                                    :op2 \"Gomez\"))))",
      "(p / person\n   :name (n / name\n            :op1 \"Thomas\"\n            :op2 \"Muller\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Mario\"\n             :op2 \"Gomez\"))",
      "(n / name\n   :op1 \"Thomas\")",
      "(n / name\n   :op2 \"Muller\")",
      "(n / name\n   :op1 \"Champions\")",
      "(n / name\n   :op2 \"League\")",
      "(n / name\n   :op1 \"Mario\")",
      "(n / name\n   :op2 \"Gomez\")",
      "(g / goal\n   :ord (o / ordinal-entity\n           :value 27))",
      "(g / goal\n   :mod (g2 / game\n            :name (n2 / name\n                      :op1 \"Champions\"\n                      :op2 \"League\")))",
      "(o / ordinal-entity\n   :value 27)",
      "(g2 / game\n    :name (n2 / name\n              :op1 \"Champions\"\n              :op2 \"League\"))",
      "(p2 / pass-03\n    :ARG0 (p / person :name (n / name :op1 \"Thomas\" :op2 \"Muller\"))\n    :ARG1 (p3 / person\n              :name (n3 / name\n                        :op1 \"Mario\"\n                        :op2 \"Gomez\")))",
      "(p / person\n   :ARG0-of (s / score-01\n               :ARG2 (p2 / person\n                         :ARG0-of (c / compete-01))\n               :ARG3 (l / lead-01\n                        :ARG0 p\n                        :ARG1 p2))\n   :ARG0-of (c / compete-01))",
      "(p / person\n   :ARG0-of (s / score-01\n               :ARG2 (p2 / person\n                         :ARG0-of (c / compete-01))\n               :ARG3 (l / lead-01\n                        :ARG0 p\n                        :ARG1 p2))\n   :ARG0-of (c / compete-01)\n   :name (n / name\n            :op1 \"Muller\"))",
      "(p / person\n   :ARG0-of (s / score-01\n               :ARG2 (p2 / person\n                         :ARG0-of (c / compete-01))\n               :ARG3 (l / lead-01\n                        :ARG0 p\n                        :ARG1 p2))\n   :ARG0-of (c / compete-01)\n   :mod (c2 / country\n            :name (n2 / name\n                      :op1 \"Germany\")))",
      "(p / person\n   :ARG0-of (s / score-01\n               :ARG2 (p2 / person\n                         :ARG0-of (c / compete-01))\n               :ARG3 (l / lead-01\n                        :ARG0 p\n                        :ARG1 p2))\n   :ARG0-of (c / compete-01)\n   :time (n3 / now))",
      "(n / name\n   :op1 \"Muller\")",
      "(n / name\n   :op1 \"Germany\")",
      "(s / score-01\n   :ARG2 (p2 / person\n             :ARG0-of (c / compete-01))\n   :ARG3 (l / lead-01\n            :ARG0 (p / person :name (n / name :op1 \"Muller\")))\n            :ARG1 p2))",
      "(l / lead-01\n   :ARG0 (p / person :name (n / name :op1 \"Muller\")))\n   :ARG1 (p2 / person))",
      "(c2 / country\n    :name (n2 / name\n              :op1 \"Germany\"))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0-of (s / support-01)\n                             :ARG0-of (u / use-01\n                                         :ARG1 (m / megaphone)))))",
      "(l / lead-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muller\"))\n   :ARG1 (c / celebrate-02\n            :accompanier (p2 / person\n                             :ARG0-of (s / support-01)\n                             :ARG0-of (u / use-01\n                                         :ARG1 (m / megaphone))))\n   :time (a / after\n            :op1 (g / game)))",
      "(p / person\n   :ARG0-of (s / support-01)\n   :ARG0-of (u / use-01\n               :ARG1 (m / megaphone)))",
      "(p / person\n   :ARG0-of (s / support-01)\n   :ARG0-of (u / use-01\n               :ARG1 (m / megaphone))\n   :name (n / name\n            :op1 \"Muller\"))",
      "(n / name\n   :op1 \"Muller\")",
      "(c / celebrate-02\n   :accompanier (p2 / person\n                    :ARG0-of (s / support-01)\n                    :ARG0-of (u / use-01\n                                :ARG1 (m / megaphone))))",
      "(u / use-01\n   :ARG1 (m / megaphone))",
      "(a / after\n   :op1 (g / game))"
    ],
    "smus": [
      "Bayern Munich beat Porto 1-0 in the Champions League.",
      "Bayern Munich beat Porto 2-0 in the Champions League on Tuesday.",
      "Bayern M\u00fcnchen beat Porto 6-0 in the Champions League.",
      "Bayern Munich",
      "Porto",
      "Bayern.",
      "M\u00fcnchen",
      "Porto",
      "Champions",
      "League",
      "The Champions League",
      "Tuesday",
      "6",
      "1",
      "Pep Guardiola's side progressed in aggregate to reach the semi-finals.",
      "Pep Guardiola's side progressed on aggregate to reach the semi-finals with a 7-4 aggregate.",
      "Pep Guardiola's side",
      "Pep Guardiola",
      "Pep",
      "Guardiola",
      "The side will reach the semi-finals.",
      "Semi-finals",
      "7",
      "4",
      "Thomas Muller scored the 27th goal in the Champions League to pass Mario Gomez.",
      "Thomas Muller",
      "Mario Gomez",
      "Thomas",
      "Muller.",
      "Champions",
      "League",
      "Mario",
      "Gomez",
      "The goal is 27.",
      "Goal in the Champions League",
      "27",
      "The Champions League",
      "Thomas Muller will pass Mario Gomez.",
      "Competitors who scored the highest in the competition leading the competition.",
      "Muller is the competitor who scored the leading score.",
      "The German competitor with the leading score in the competition.",
      "Now the competitor is the one scoring and leading the competition.",
      "Muller.",
      "Germany",
      "The competition scored with Muller leading the way.",
      "Muller is leading people.",
      "Germany (DE)",
      "Muller led celebrations with supporters using the megaphone.",
      "After the game, Muller led celebrations with supporters using the megaphone.",
      "Supporters using a megaphone",
      "Muller is a supporter using a megaphone.",
      "Muller.",
      "Celebrations with supporters using the megaphone",
      "using a megaphone",
      "After the game."
    ]
  },
  {
    "instance_id": "realsumm-61",
    "summary": "<t> Domenico Rancadore given a seven - year sentence by Italian court in 1999 . </t> <t> He was convicted for role as a ' man of honour ' , taking bribes from builders . </t> <t> In February the Sicilian Mafia fugitive lost battle against extradition to Italy . </t> <t> Today it emerged that the 65-year - old 's case expired in October last year . </t>",
    "tree": [
      "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year)))",
      "(s / sentence-01\n   :ARG0 (c / court\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"Italy\")))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Domenico\"\n                      :op2 \"Rancadore\"))\n   :ARG2 (t / temporal-quantity\n            :quant 7\n            :unit (y / year))\n   :time (d / date-entity\n            :year 1999))",
      "(c / court\n   :mod (c2 / country\n            :name (n / name\n                     :op1 \"Italy\")))",
      "(c2 / country\n    :name (n / name\n             :op1 \"Italy\"))",
      "(n / name\n   :op1 \"Italy\")",
      "(n / name\n   :op1 \"Domenico\")",
      "(n / name\n   :op2 \"Rancadore\")",
      "(p / person\n   :name (n2 / name\n             :op1 \"Domenico\"\n             :op2 \"Rancadore\"))",
      "(t / temporal-quantity\n   :quant 7)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(d / date-entity\n   :year 1999)",
      "(c / convict-01\n   :ARG1 (h / he)\n   :ARG2 (a / and\n            :op1 (r / role\n                    :mod (m / man\n                            :mod (h2 / honor))\n                    :domain h)\n            :op2 (b / bribe-01\n                    :ARG0 h\n                    :ARG1 (p / person\n                             :ARG0-of (b2 / build-01)))))",
      "(a / and\n   :op1 (r / role\n           :mod (m / man\n                   :mod (h2 / honor))\n           :domain (h / he)))",
      "(a / and\n   :op2 (b / bribe-01\n           :ARG0 (h / he)\n           :ARG1 (p / person\n                    :ARG0-of (b2 / build-01))))",
      "(r / role\n   :mod (m / man\n           :mod (h2 / honor)))",
      "(r / role\n   :domain (h / he))",
      "(m / man\n   :mod (h2 / honor))",
      "(b / bribe-01\n   :ARG0 (h / he)\n   :ARG1 (p / person\n            :ARG0-of (b2 / build-01)))",
      "(p / person\n   :ARG0-of (b2 / build-01))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\"))\n            :mod (ii / island\n                     :name (n2 / name\n                               :op1 \"Sicily\")))\n   :ARG1 (b / battle-01\n            :ARG0 f\n            :ARG1 (e / extradite-01\n                     :ARG1 f\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\")))))",
      "(l / lose-03\n   :ARG0 (f / fugitive\n            :mod (c / criminal-organization\n                    :name (n / name\n                             :op1 \"Mafia\"))\n            :mod (ii / island\n                     :name (n2 / name\n                               :op1 \"Sicily\")))\n   :ARG1 (b / battle-01\n            :ARG0 f\n            :ARG1 (e / extradite-01\n                     :ARG1 f\n                     :ARG3 (c2 / country\n                               :name (n3 / name\n                                         :op1 \"Italy\"))))\n   :time (d / date-entity\n            :month 2))",
      "(f / fugitive\n   :mod (c / criminal-organization\n           :name (n / name\n                    :op1 \"Mafia\")))",
      "(f / fugitive\n   :mod (ii / island\n            :name (n2 / name\n                      :op1 \"Sicily\")))",
      "(c / criminal-organization\n   :name (n / name\n            :op1 \"Mafia\"))",
      "(n / name\n   :op1 \"Mafia\")",
      "(n / name\n   :op1 \"Sicily\")",
      "(n / name\n   :op1 \"Italy\")",
      "(ii / island\n    :name (n2 / name\n              :op1 \"Sicily\"))",
      "(b / battle-01\n   :ARG0 (f / fugitive)\n   :ARG1 (e / extradite-01\n            :ARG1 f\n            :ARG3 (c2 / country\n                      :name (n3 / name\n                                :op1 \"Italy\"))))",
      "(e / extradite-01\n   :ARG1 (f / fugitive)\n   :ARG3 (c2 / country\n             :name (n3 / name\n                       :op1 \"Italy\")))",
      "(c2 / country\n    :name (n3 / name\n              :op1 \"Italy\"))",
      "(d / date-entity\n   :month 2)",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c / case-03\n                      :ARG2 (p / person\n                               :age (t / temporal-quantity\n                                       :quant 65\n                                       :unit (y / year))))\n             :time (d / date-entity\n                      :month 10\n                      :mod (y2 / year\n                               :mod (l / last)))))",
      "(e / emerge-02\n   :ARG1 (e2 / expire-01\n             :ARG1 (c / case-03\n                      :ARG2 (p / person\n                               :age (t / temporal-quantity\n                                       :quant 65\n                                       :unit (y / year))))\n             :time (d / date-entity\n                      :month 10\n                      :mod (y2 / year\n                               :mod (l / last))))\n   :time (t2 / today))",
      "(e2 / expire-01\n    :ARG1 (c / case-03\n             :ARG2 (p / person\n                      :age (t / temporal-quantity\n                              :quant 65\n                              :unit (y / year)))))",
      "(e2 / expire-01\n    :ARG1 (c / case-03\n             :ARG2 (p / person\n                      :age (t / temporal-quantity\n                              :quant 65\n                              :unit (y / year))))\n    :time (d / date-entity\n             :month 10\n             :mod (y2 / year\n                      :mod (l / last))))",
      "(c / case-03\n   :ARG2 (p / person\n            :age (t / temporal-quantity\n                    :quant 65\n                    :unit (y / year))))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 65\n           :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 65)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(d / date-entity\n   :month 10)",
      "(d / date-entity\n   :mod (y2 / year\n            :mod (l / last)))",
      "(y2 / year\n    :mod (l / last))"
    ],
    "smus": [
      "A court in Italy sentenced Domenico Rancadore to seven years.",
      "In 1999 an Italian court sentenced Domenico Rancadore to seven years.",
      "The Italian court.",
      "Italy (IT)",
      "Italy",
      "Domenico",
      "Rancadore",
      "Domenico Rancadore",
      "7",
      "Year.",
      "1999.",
      "He was convicted of a role of honor man and bribery to builders.",
      "He is the role of honor man.",
      "And he bribes builders.",
      "The role of honor man.",
      "He was in the role.",
      "Honorable man.",
      "He bribes builders.",
      "Builders.",
      "The fugitive Italian Mafia fugitive lost the battle over extradition to Italy.",
      "The fugitive Italian Mafia fugitive lost a battle in February over extradition to Italy.",
      "Mafia fugitive",
      "fugitive of Sicily",
      "Mafia.",
      "Mafia.",
      "Sicily",
      "Italy (IT)",
      "Sicily",
      "The fugitive is in battle over extradition to Italy.",
      "The fugitive was extradited to Italy.",
      "Italy (IT)",
      "February",
      "The case of the 65 year old emerged in October of last year.",
      "Today it emerged that the case of the 65 year old was expired in October of last year.",
      "The case of the 65 year old has expired.",
      "The case of the 65 year old expired in October of last year.",
      "In the case of the 65 year old.",
      "65 year old",
      "65",
      "Year.",
      "October",
      "last year",
      "Last year."
    ]
  },
  {
    "instance_id": "realsumm-62",
    "summary": "<t> Baron the German Shepard was filmed as he helped get the dishes done at home in California . </t> <t> The pup was professionally trained at the Hill Country K9 school . </t> <t> To date the clip of Baron dishwashing has been watched over 27,000 times . </t> <t> Many viewers have deemed the dog 's cleaning antics ' cute ' and adorable ' </t>",
    "tree": [
      "(f / film-01\n   :ARG1 (a / animal\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\")))",
      "(f / film-01\n   :ARG1 (a / animal\n            :name (n / name\n                     :op1 \"Baron\"\n                     :op2 \"the\"\n                     :op3 \"German\"\n                     :op4 \"Shepard\"))\n   :time (h / help-01\n            :ARG0 a\n            :ARG1 (d / do-02\n                     :ARG1 (d2 / dish)\n                     :location (h2 / home\n                                   :location (s / state\n                                                :name (n2 / name\n                                                          :op1 \"California\"))))))",
      "(a / animal\n   :name (n / name\n            :op1 \"Baron\"\n            :op2 \"the\"\n            :op3 \"German\"\n            :op4 \"Shepard\"))",
      "(n / name\n   :op1 \"Baron\")",
      "(n / name\n   :op2 \"the\")",
      "(n / name\n   :op3 \"German\")",
      "(n / name\n   :op4 \"Shepard\")",
      "(n / name\n   :op1 \"California\")",
      "(h / help-01\n   :ARG0 (a / animal :name (n / name :op1 \"Baron\" :op2 \"the\" :op3 \"German\" :op4 \"Shepard\"))\n   :ARG1 (d / do-02\n            :ARG1 (d2 / dish)\n            :location (h2 / home\n                          :location (s / state\n                                       :name (n2 / name\n                                                 :op1 \"California\")))))",
      "(d / do-02\n   :ARG1 (d2 / dish))",
      "(d / do-02\n   :ARG1 (d2 / dish)\n   :location (h2 / home\n                 :location (s / state\n                              :name (n2 / name\n                                        :op1 \"California\"))))",
      "(h2 / home\n    :location (s / state\n                 :name (n2 / name\n                           :op1 \"California\")))",
      "(s / state\n   :name (n2 / name\n             :op1 \"California\"))",
      "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\"))\n   :ARG2 (p / pup))",
      "(t / train-01\n   :ARG0 (s / school\n            :name (n / name\n                     :op1 \"Hill\"\n                     :op2 \"Country\"\n                     :op3 \"K9\"))\n   :ARG2 (p / pup)\n   :manner (p2 / professional))",
      "(s / school\n   :name (n / name\n            :op1 \"Hill\"\n            :op2 \"Country\"\n            :op3 \"K9\"))",
      "(n / name\n   :op1 \"Hill\")",
      "(n / name\n   :op2 \"Country\")",
      "(n / name\n   :op3 \"K9\")",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))\n                       :ARG1 (d / dish))))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))\n                       :ARG1 (d / dish)))\n   :time (t / to-date))",
      "(w / watch-01\n   :ARG1 (c / clip\n            :topic (w2 / wash-01\n                       :ARG0 (p / person\n                                :name (n / name\n                                         :op1 \"Baron\"))\n                       :ARG1 (d / dish)))\n   :quant (o / over\n             :op1 27000))",
      "(c / clip\n   :topic (w2 / wash-01\n              :ARG0 (p / person\n                       :name (n / name\n                                :op1 \"Baron\"))\n              :ARG1 (d / dish)))",
      "(w2 / wash-01\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Baron\"))\n    :ARG1 (d / dish))",
      "(p / person\n   :name (n / name\n            :op1 \"Baron\"))",
      "(n / name\n   :op1 \"Baron\")",
      "(o / over\n   :op1 27000)",
      "(d / deem-01\n   :ARG0 (p / person\n            :ARG0-of (v / view-01)\n            :quant (m / many))\n   :ARG1 (a / and\n            :op1 (c / cute)\n            :op2 (a2 / adorable)\n            :domain (a3 / antics\n                        :topic (c2 / clean-01\n                                   :ARG0 (d2 / dog)))))",
      "(p / person\n   :ARG0-of (v / view-01))",
      "(p / person\n   :ARG0-of (v / view-01)\n   :quant (m / many))",
      "(a / and\n   :op1 (c / cute))",
      "(a / and\n   :op2 (a2 / adorable))",
      "(a / and\n   :domain (a3 / antics\n               :topic (c2 / clean-01\n                          :ARG0 (d2 / dog))))",
      "(a3 / antics\n    :topic (c2 / clean-01\n               :ARG0 (d2 / dog)))",
      "(c2 / clean-01\n    :ARG0 (d2 / dog))"
    ],
    "smus": [
      "Baron the German Shepard was filmed.",
      "Baron the German Shepard was filmed as he helped do the dishes at his California home.",
      "Baron the German Shepard.",
      "Baron.",
      "The",
      "German.",
      "Shepard.",
      "California.",
      "Baron the German Shepard helped do the dishes at his California home.",
      "The dishes were done.",
      "The dishes are done in a home in California.",
      "home in California",
      "California (CA)",
      "The Hill Country K9 school has trained the pup.",
      "The Hill Country K9 school has professionally trained the pup.",
      "Hill Country K9",
      "Hill",
      "Country.",
      "K9",
      "Watched the clip of Baron washing the dish.",
      "To date, there has been a clip watched about Baron washing the dish.",
      "Over 27,000 watched the clip of Baron washing the dish.",
      "a href=\"http://www.youtube.com/watch?v=bgwgw\">Clip: Baron Washing Dishes/a>",
      "Baron washed the dish.",
      "Baron.",
      "Baron.",
      "over 270,000",
      "Many viewers have deemed the dog's cleaning antics cute and adorable.",
      "Viewers",
      "There are many viewers.",
      "And cute.",
      "And adorable.",
      "And the dog cleaning antics.",
      "tics of the dog cleaning",
      "Dog cleaning"
    ]
  },
  {
    "instance_id": "realsumm-63",
    "summary": "<t> Jihadis face fines , whipping or even jail time for wearing Nike products . </t> <t> Ban is also partly due to the brand sharing its name with a Greek Goddess . </t> <t> Commanders say the name also sounds like sexual slang words in Arabic . </t> <t> Those living under ISIS are already banned from wearing jeans or items of clothing carrying provocative language or swear words . </t>",
    "tree": [
      "(f / face-01\n   :ARG0 (j / jihadi)\n   :ARG1 (o / or\n            :op1 (f2 / fine-01)\n            :op2 (w / whip-01)\n            :op3 (j2 / jail-01\n                     :mod (e / even)))\n   :ARG1-of (c / cause-01\n               :ARG0 (w2 / wear-01\n                         :ARG0 j\n                         :ARG1 (p / product\n                                  :mod (c2 / company\n                                           :name (n / name\n                                                    :op1 \"Nike\"))))))",
      "(o / or\n   :op1 (f2 / fine-01))",
      "(o / or\n   :op2 (w / whip-01))",
      "(o / or\n   :op3 (j2 / jail-01\n            :mod (e / even)))",
      "(j2 / jail-01\n    :mod (e / even))",
      "(c / cause-01\n   :ARG0 (w2 / wear-01\n             :ARG0 (j / jihadi)\n             :ARG1 (p / product\n                      :mod (c2 / company\n                               :name (n / name\n                                        :op1 \"Nike\")))))",
      "(w2 / wear-01\n    :ARG0 (j / jihadi)\n    :ARG1 (p / product\n             :mod (c2 / company\n                      :name (n / name\n                               :op1 \"Nike\"))))",
      "(p / product\n   :mod (c2 / company\n            :name (n / name\n                     :op1 \"Nike\")))",
      "(c2 / company\n    :name (n / name\n             :op1 \"Nike\"))",
      "(n / name\n   :op1 \"Nike\")",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (b / brand)\n            :ARG1 (n / name\n                     :poss b)\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Goddess\")\n                     :mod (c2 / country\n                              :name (n3 / name\n                                        :op1 \"Greece\"))))\n   :ARG1 (b2 / ban-01))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (b / brand)\n            :ARG1 (n / name\n                     :poss b)\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Goddess\")\n                     :mod (c2 / country\n                              :name (n3 / name\n                                        :op1 \"Greece\"))))\n   :ARG1 (b2 / ban-01)\n   :degree (p2 / part))",
      "(c / cause-01\n   :ARG0 (s / share-01\n            :ARG0 (b / brand)\n            :ARG1 (n / name\n                     :poss b)\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Goddess\")\n                     :mod (c2 / country\n                              :name (n3 / name\n                                        :op1 \"Greece\"))))\n   :ARG1 (b2 / ban-01)\n   :mod (a / also))",
      "(s / share-01\n   :ARG0 (b / brand)\n   :ARG1 (n / name\n            :poss b)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Goddess\")\n            :mod (c2 / country\n                     :name (n3 / name\n                               :op1 \"Greece\"))))",
      "(n / name\n   :poss (b / brand))",
      "(n / name\n   :op1 \"Goddess\")",
      "(n / name\n   :op1 \"Greece\")",
      "(p / person\n   :name (n2 / name\n             :op1 \"Goddess\"))",
      "(p / person\n   :mod (c2 / country\n            :name (n3 / name\n                      :op1 \"Greece\")))",
      "(c2 / country\n    :name (n3 / name\n              :op1 \"Greece\"))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (c / commander)))\n   :ARG1 (s2 / sound-01\n             :ARG1 (n / name)\n             :ARG2 (w / word\n                      :mod (s3 / slang\n                               :mod (s4 / sex))\n                      :medium (l / language\n                                 :name (n2 / name\n                                           :op1 \"Arabic\")))\n             :mod (a / also)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (c / commander)))",
      "(h / have-org-role-91\n   :ARG2 (c / commander))",
      "(s2 / sound-01\n    :ARG1 (n / name)\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\"))))",
      "(s2 / sound-01\n    :ARG1 (n / name)\n    :ARG2 (w / word\n             :mod (s3 / slang\n                      :mod (s4 / sex))\n             :medium (l / language\n                        :name (n2 / name\n                                  :op1 \"Arabic\")))\n    :mod (a / also))",
      "(w / word\n   :mod (s3 / slang\n            :mod (s4 / sex)))",
      "(w / word\n   :medium (l / language\n              :name (n2 / name\n                        :op1 \"Arabic\")))",
      "(s3 / slang\n    :mod (s4 / sex))",
      "(l / language\n   :name (n2 / name\n             :op1 \"Arabic\"))",
      "(n2 / name\n    :op1 \"Arabic\")",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :mod (t / that)\n                     :ARG0-of (l / live-01\n                                 :location (u / under\n                                              :op1 (c / criminal-organization\n                                                      :name (n / name\n                                                               :op1 \"ISIS\")))))\n            :ARG1 (o / or\n                     :op1 (j / jeans)\n                     :op2 (ii / item\n                              :ARG2-of (c2 / clothe-01))\n                     :ARG0-of (c3 / carry-01\n                                  :ARG1 (o2 / or\n                                            :op1 (l2 / language\n                                                     :ARG0-of (p2 / provoke-01))\n                                            :op2 (w2 / word\n                                                     :ARG1-of (s / swear-01))))))\n   :ARG2 p)",
      "(b / ban-01\n   :ARG1 (w / wear-01\n            :ARG0 (p / person\n                     :mod (t / that)\n                     :ARG0-of (l / live-01\n                                 :location (u / under\n                                              :op1 (c / criminal-organization\n                                                      :name (n / name\n                                                               :op1 \"ISIS\")))))\n            :ARG1 (o / or\n                     :op1 (j / jeans)\n                     :op2 (ii / item\n                              :ARG2-of (c2 / clothe-01))\n                     :ARG0-of (c3 / carry-01\n                                  :ARG1 (o2 / or\n                                            :op1 (l2 / language\n                                                     :ARG0-of (p2 / provoke-01))\n                                            :op2 (w2 / word\n                                                     :ARG1-of (s / swear-01))))))\n   :ARG2 p\n   :time (a / already))",
      "(w / wear-01\n   :ARG0 (p / person\n            :mod (t / that)\n            :ARG0-of (l / live-01\n                        :location (u / under\n                                     :op1 (c / criminal-organization\n                                             :name (n / name\n                                                      :op1 \"ISIS\")))))\n   :ARG1 (o / or\n            :op1 (j / jeans)\n            :op2 (ii / item\n                     :ARG2-of (c2 / clothe-01))\n            :ARG0-of (c3 / carry-01\n                         :ARG1 (o2 / or\n                                   :op1 (l2 / language\n                                            :ARG0-of (p2 / provoke-01))\n                                   :op2 (w2 / word\n                                            :ARG1-of (s / swear-01))))))",
      "(p / person\n   :ARG0-of (l / live-01\n               :location (u / under\n                            :op1 (c / criminal-organization\n                                    :name (n / name\n                                             :op1 \"ISIS\")))))",
      "(p / person\n   :ARG0-of (l / live-01\n               :location (u / under\n                            :op1 (c / criminal-organization\n                                    :name (n / name\n                                             :op1 \"ISIS\"))))\n   :mod (t / that))",
      "(l / live-01\n   :location (u / under\n                :op1 (c / criminal-organization\n                        :name (n / name\n                                 :op1 \"ISIS\"))))",
      "(u / under\n   :op1 (c / criminal-organization\n           :name (n / name\n                    :op1 \"ISIS\")))",
      "(c / criminal-organization\n   :name (n / name\n            :op1 \"ISIS\"))",
      "(n / name\n   :op1 \"ISIS\")",
      "(o / or\n   :ARG0-of (c3 / carry-01\n                :ARG1 (o2 / or\n                          :op1 (l2 / language\n                                   :ARG0-of (p2 / provoke-01))\n                          :op2 (w2 / word\n                                   :ARG1-of (s / swear-01)))))",
      "(o / or\n   :ARG0-of (c3 / carry-01\n                :ARG1 (o2 / or\n                          :op1 (l2 / language\n                                   :ARG0-of (p2 / provoke-01))\n                          :op2 (w2 / word\n                                   :ARG1-of (s / swear-01))))\n   :op1 (j / jeans))",
      "(o / or\n   :ARG0-of (c3 / carry-01\n                :ARG1 (o2 / or\n                          :op1 (l2 / language\n                                   :ARG0-of (p2 / provoke-01))\n                          :op2 (w2 / word\n                                   :ARG1-of (s / swear-01))))\n   :op2 (ii / item\n            :ARG2-of (c2 / clothe-01)))",
      "(o / or\n   :ARG0-of (c3 / carry-01\n                :ARG1 (o2 / or\n                          :op1 (l2 / language\n                                   :ARG0-of (p2 / provoke-01))\n                          :op2 (w2 / word\n                                   :ARG1-of (s / swear-01))))\n   :op1 (l2 / language\n            :ARG0-of (p2 / provoke-01)))",
      "(o / or\n   :ARG0-of (c3 / carry-01\n                :ARG1 (o2 / or\n                          :op1 (l2 / language\n                                   :ARG0-of (p2 / provoke-01))\n                          :op2 (w2 / word\n                                   :ARG1-of (s / swear-01))))\n   :op2 (w2 / word\n            :ARG1-of (s / swear-01)))",
      "(ii / item\n    :ARG2-of (c2 / clothe-01))",
      "(c3 / carry-01\n    :ARG1 (o2 / or\n              :op1 (l2 / language\n                       :ARG0-of (p2 / provoke-01))\n              :op2 (w2 / word\n                       :ARG1-of (s / swear-01))))",
      "(l2 / language\n    :ARG0-of (p2 / provoke-01))",
      "(w2 / word\n    :ARG1-of (s / swear-01))"
    ],
    "smus": [
      "Jihadis face fines, whipping or even jail for wearing Nike products.",
      "Or fines.",
      "or whipping.",
      "Or even jail.",
      "Even jail.",
      "Because Jihadis are wearing Nike products.",
      "Jihadi was wearing Nike products.",
      "Nike products",
      "Nike",
      "Nike",
      "The ban was because the brand was sharing its name with the Greek Goddess.",
      "The ban was partly due to the brand sharing its name with the Greek godds.",
      "The ban was also due to the brand sharing its name with the Greek goddaughter.",
      "The brand is sharing its name with the Goddess of Greece.",
      "Brand name.",
      "Godds name.",
      "Greece (GR)",
      "Godds.",
      "Greek",
      "Greece (GR)",
      "Commanders say the name also sounds like sex slang words in Arabic.",
      "Commanders",
      "Commanders",
      "The name sounds like sex slang words in Arabic.",
      "The name also sounds like sex slang words in Arabic.",
      "Words of sex slang.",
      "In Arabic words.",
      "Sexual Slang.",
      "Arabic",
      "Arabic",
      "Those living under ISIS are banned from wearing jeans or other clothing items carrying provocative language or swearing wors.",
      "Those living under ISIS are already banned from wearing jeans or other clothing items carrying provocative language or swearing wors.",
      "Those living under ISIS are wearing jeans or other clothing items carrying provocative language or swearing wors.",
      "People living under ISIS.",
      "Those living under ISIS.",
      "Living under ISIS.",
      "Under ISIS.",
      "ISIS.",
      "ISIS.",
      "or carrying provocative language or swearing wor.",
      "or jeans carrying provocative language or swearing wor.",
      "carrying provocative language or swearing wors or clothing items.",
      "Provoking language or swearing language carrying",
      "Carrying provocative language or swearing wor.",
      "Clothing items",
      "carrying provocative language or swearing wors.",
      "Provocative language.",
      "swearing wor."
    ]
  },
  {
    "instance_id": "realsumm-64",
    "summary": "<t> Lorraine Bracco was asked by The Sopranos creator to be Carmela . </t> <t> The actress turned him down because she played a mobster 's wife in Martin Scorsese 's Goodfellas in 1990 . </t> <t> Convinced showrunner David Chase to let her play the role of Dr. Jennifer Melfi . </t>",
    "tree": [
      "(a / ask-02\n   :ARG0 (p / person\n            :ARG0-of (c / create-01\n                        :ARG1 (b / broadcast-program\n                                 :name (n / name\n                                          :op1 \"The\"\n                                          :op2 \"Sopranos\"))))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carmela\")\n             :domain (p3 / person\n                         :name (n3 / name\n                                   :op1 \"Lorraine\"\n                                   :op2 \"Bracco\")))\n   :ARG2 p3)",
      "(p / person\n   :ARG0-of (c / create-01\n               :ARG1 (b / broadcast-program\n                        :name (n / name\n                                 :op1 \"The\"\n                                 :op2 \"Sopranos\"))))",
      "(p / person\n   :ARG0-of (c / create-01\n               :ARG1 (b / broadcast-program\n                        :name (n / name\n                                 :op1 \"The\"\n                                 :op2 \"Sopranos\")))\n   :name (n2 / name\n             :op1 \"Carmela\"))",
      "(p / person\n   :ARG0-of (c / create-01\n               :ARG1 (b / broadcast-program\n                        :name (n / name\n                                 :op1 \"The\"\n                                 :op2 \"Sopranos\")))\n   :domain (p3 / person\n               :name (n3 / name\n                         :op1 \"Lorraine\"\n                         :op2 \"Bracco\")))",
      "(p / person\n   :ARG0-of (c / create-01\n               :ARG1 (b / broadcast-program\n                        :name (n / name\n                                 :op1 \"The\"\n                                 :op2 \"Sopranos\")))\n   :name (n3 / name\n             :op1 \"Lorraine\"\n             :op2 \"Bracco\"))",
      "(c / create-01\n   :ARG1 (b / broadcast-program\n            :name (n / name\n                     :op1 \"The\"\n                     :op2 \"Sopranos\")))",
      "(b / broadcast-program\n   :name (n / name\n            :op1 \"The\"\n            :op2 \"Sopranos\"))",
      "(n / name\n   :op1 \"The\")",
      "(n / name\n   :op2 \"Sopranos\")",
      "(n / name\n   :op1 \"Carmela\")",
      "(n / name\n   :op1 \"Lorraine\")",
      "(n / name\n   :op2 \"Bracco\")",
      "(t / turn-down-05\n   :ARG0 (p / person\n            :ARG0-of (a / act-01))\n   :ARG1 (h / he)\n   :ARG1-of (c / cause-01\n               :ARG0 (p2 / play-02\n                         :ARG0 p\n                         :ARG1 (p3 / person\n                                   :ARG0-of (h2 / have-rel-role-91\n                                                :ARG1 (m / mobster)\n                                                :ARG2 (w / wife)))\n                         :time (w2 / work-of-art\n                                   :name (n / name\n                                            :op1 \"Goodfellas\")\n                                   :poss (p4 / person\n                                             :name (n2 / name\n                                                       :op1 \"Martin\"\n                                                       :op2 \"Scorsese\"))\n                                   :time (d / date-entity\n                                            :year 1990)))))",
      "(p / person\n   :ARG0-of (a / act-01)\n   :ARG0-of (h2 / have-rel-role-91\n                :ARG1 (m / mobster)\n                :ARG2 (w / wife)))",
      "(p / person\n   :ARG0-of (a / act-01)\n   :ARG0-of (h2 / have-rel-role-91\n                :ARG1 (m / mobster)\n                :ARG2 (w / wife))\n   :name (n2 / name\n             :op1 \"Martin\"\n             :op2 \"Scorsese\"))",
      "(c / cause-01\n   :ARG0 (p2 / play-02\n             :ARG0 (p / person)\n             :ARG1 (p3 / person\n                       :ARG0-of (h2 / have-rel-role-91\n                                    :ARG1 (m / mobster)\n                                    :ARG2 (w / wife)))\n             :time (w2 / work-of-art\n                       :name (n / name\n                                :op1 \"Goodfellas\")\n                       :poss (p4 / person\n                                 :name (n2 / name\n                                           :op1 \"Martin\"\n                                           :op2 \"Scorsese\"))\n                       :time (d / date-entity\n                                :year 1990))))",
      "(p2 / play-02\n    :ARG0 (p / person)\n    :ARG1 (p3 / person\n              :ARG0-of (h2 / have-rel-role-91\n                           :ARG1 (m / mobster)\n                           :ARG2 (w / wife))))",
      "(p2 / play-02\n    :ARG0 (p / person)\n    :ARG1 (p3 / person\n              :ARG0-of (h2 / have-rel-role-91\n                           :ARG1 (m / mobster)\n                           :ARG2 (w / wife)))\n    :time (w2 / work-of-art\n              :name (n / name\n                       :op1 \"Goodfellas\")\n              :poss (p4 / person\n                        :name (n2 / name\n                                  :op1 \"Martin\"\n                                  :op2 \"Scorsese\"))\n              :time (d / date-entity\n                       :year 1990)))",
      "(h2 / have-rel-role-91\n    :ARG1 (m / mobster)\n    :ARG2 (w / wife))",
      "(w2 / work-of-art\n    :name (n / name\n             :op1 \"Goodfellas\"))",
      "(w2 / work-of-art\n    :poss (p4 / person\n              :name (n2 / name\n                        :op1 \"Martin\"\n                        :op2 \"Scorsese\")))",
      "(w2 / work-of-art\n    :time (d / date-entity\n             :year 1990))",
      "(n / name\n   :op1 \"Goodfellas\")",
      "(n / name\n   :op1 \"Martin\")",
      "(n / name\n   :op2 \"Scorsese\")",
      "(d / date-entity\n   :year 1990)",
      "(c / convince-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Chase\")\n            :ARG0-of (r / run-01\n                        :ARG1 (s / show)))\n   :ARG2 (l / let-01\n            :ARG0 p\n            :ARG1 (p2 / play-02\n                      :ARG0 (s2 / she)\n                      :ARG1 (p3 / person\n                                :name (n2 / name\n                                          :op1 \"Dr.\"\n                                          :op2 \"Jennifer\"\n                                          :op3 \"Melfi\")))))",
      "(p / person\n   :ARG0-of (r / run-01\n               :ARG1 (s / show)))",
      "(p / person\n   :ARG0-of (r / run-01\n               :ARG1 (s / show))\n   :name (n / name\n            :op1 \"David\"\n            :op2 \"Chase\"))",
      "(p / person\n   :ARG0-of (r / run-01\n               :ARG1 (s / show))\n   :name (n2 / name\n             :op1 \"Dr.\"\n             :op2 \"Jennifer\"\n             :op3 \"Melfi\"))",
      "(n / name\n   :op1 \"David\")",
      "(n / name\n   :op2 \"Chase\")",
      "(n / name\n   :op1 \"Dr.\")",
      "(n / name\n   :op2 \"Jennifer\")",
      "(n / name\n   :op3 \"Melfi\")",
      "(r / run-01\n   :ARG1 (s / show))",
      "(l / let-01\n   :ARG0 (p / person :name (n / name :op1 \"David\" :op2 \"Chase\")))\n   :ARG1 (p2 / play-02\n             :ARG0 (s2 / she)\n             :ARG1 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Dr.\"\n                                 :op2 \"Jennifer\"\n                                 :op3 \"Melfi\"))))",
      "(p2 / play-02\n    :ARG0 (s2 / she)\n    :ARG1 (p3 / person\n              :name (n2 / name\n                        :op1 \"Dr.\"\n                        :op2 \"Jennifer\"\n                        :op3 \"Melfi\")))"
    ],
    "smus": [
      "The creator of The Sopranos has asked her to be Carmela Lorraine Bracco.",
      "The creator of The Sopranos.",
      "The Sopranos creator is Carmela.",
      "Lorraine Bracco was the creator of The Sopranos.",
      "Lorraine Bracco is the creator of The Sopranos.",
      "The Sopranos was a creation.",
      "The Sopranos.",
      "The",
      "Sopranos",
      "Carmela",
      "Lorraine",
      "BRUCKS",
      "He was turned down by the actor because he played the wife of a mobster in Martin Scorsese's Goodfellas in 1990.",
      "Actress wife of mobster.",
      "Martin Scorsese is an actor who is the wife of a mobster.",
      "Because in Martin Scorsese's Goodfellas in 1990, people played the wife of a mobster.",
      "People played the wife of a mobster.",
      "In Martin Scorsese's Goodfellas (1990), people played the wife of a mobster.",
      "The mobster's wife.",
      "Goodfellas.",
      "Martin Scorsese's work of art",
      "1990 work of art",
      "Goodfellas.",
      "Martin",
      "Sparsese.",
      "1990.",
      "Showrunner David Chase was convinced to let her play Dr. Jennifer Melfi.",
      "Showrunner.",
      "David Chase is the show's runter.",
      "Dr. Jennifer Melfi, showrunner.",
      "David",
      "Choice.",
      "Dr.",
      "Jennifer",
      "Melfi",
      "The show is running.",
      "David Chase will let her play Dr. Jennifer Melfi.",
      "She'll play Dr. Jennifer Melfi."
    ]
  },
  {
    "instance_id": "realsumm-65",
    "summary": "<t> Kevin Carr set off on his epic journey from Haytor , Dartmoor in July 2013 . </t> <t> He is now less than 24 hours away from completing his epic trip . </t> <t> Mr Carr ran around the world unsupported - taking his own tent with him . </t> <t> He is set to break the previous record held by an Australian by 24 hours . </t>",
    "tree": [
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic)))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic))\n   :source (l / location\n              :name (n2 / name\n                        :op1 \"Haytor\")\n              :part-of (ii / island\n                           :name (n3 / name\n                                     :op1 \"Dartmoor\"))))",
      "(s / set-off-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"\n                     :op2 \"Carr\"))\n   :ARG1 (j / journey-01\n            :ARG0 p\n            :mod (e / epic))\n   :time (d / date-entity\n            :month 7\n            :year 2013))",
      "(p / person\n   :name (n / name\n            :op1 \"Kevin\"\n            :op2 \"Carr\"))",
      "(n / name\n   :op1 \"Kevin\")",
      "(n / name\n   :op2 \"Carr\")",
      "(n / name\n   :op1 \"Haytor\")",
      "(n / name\n   :op1 \"Dartmoor\")",
      "(j / journey-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\")))",
      "(j / journey-01\n   :ARG0 (p / person :name (n / name :op1 \"Kevin\" :op2 \"Carr\"))\n   :mod (e / epic))",
      "(l / location\n   :name (n2 / name\n             :op1 \"Haytor\"))",
      "(l / location\n   :part-of (ii / island\n                :name (n3 / name\n                          :op1 \"Dartmoor\")))",
      "(ii / island\n    :name (n3 / name\n              :op1 \"Dartmoor\"))",
      "(d / date-entity\n   :month 7)",
      "(d / date-entity\n   :year 2013)",
      "(b / be-temporally-at-91\n   :ARG1 (h / he)\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 h\n                    :ARG1 (t / trip-03\n                             :ARG0 h\n                             :mod (e / epic)))\n            :quant (l / less-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 24\n                               :unit (h2 / hour)))))",
      "(b / be-temporally-at-91\n   :ARG1 (h / he)\n   :ARG2 (a / away\n            :op1 (c / complete-01\n                    :ARG0 h\n                    :ARG1 (t / trip-03\n                             :ARG0 h\n                             :mod (e / epic)))\n            :quant (l / less-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 24\n                               :unit (h2 / hour))))\n   :time (n / now))",
      "(a / away\n   :op1 (c / complete-01\n           :ARG0 (h / he)\n           :ARG1 (t / trip-03\n                    :ARG0 h\n                    :mod (e / epic))))",
      "(a / away\n   :quant (l / less-than\n             :op1 (t2 / temporal-quantity\n                      :quant 24\n                      :unit (h2 / hour))))",
      "(c / complete-01\n   :ARG0 (h / he)\n   :ARG1 (t / trip-03\n            :ARG0 h\n            :mod (e / epic)))",
      "(t / trip-03\n   :ARG0 (h / he))",
      "(t / trip-03\n   :ARG0 (h / he)\n   :mod (e / epic))",
      "(l / less-than\n   :op1 (t2 / temporal-quantity\n            :quant 24\n            :unit (h2 / hour)))",
      "(t2 / temporal-quantity\n    :quant 24)",
      "(t2 / temporal-quantity\n    :unit (h2 / hour))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\"))\n   :ARG1 (a / around\n            :op1 (w / world)))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\"))\n   :ARG1 (a / around\n            :op1 (w / world))\n   :manner (s / support-01\n              :polarity -\n              :ARG1 p))",
      "(r / run-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"\n                     :op2 \"Carr\"))\n   :ARG1 (a / around\n            :op1 (w / world))\n   :manner (t / take-01\n              :ARG0 p\n              :ARG1 (t2 / tent\n                        :poss p)\n              :accompanier w))",
      "(p / person\n   :name (n / name\n            :op1 \"Mr\"\n            :op2 \"Carr\"))",
      "(n / name\n   :op1 \"Mr\")",
      "(n / name\n   :op2 \"Carr\")",
      "(a / around\n   :op1 (w / world))",
      "(s / support-01\n   :ARG1 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\")))",
      "(s / support-01\n   :ARG1 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))\n   :polarity -)",
      "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))\n   :ARG1 (t2 / tent\n             :poss p))",
      "(t / take-01\n   :ARG0 (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\"))\n   :ARG1 (t2 / tent\n             :poss p)\n   :accompanier (w / world))",
      "(t2 / tent\n    :poss (p / person :name (n / name :op1 \"Mr\" :op2 \"Carr\")))",
      "(s / set-08\n   :ARG1 (h / he)\n   :ARG2 (b / break-02\n            :ARG0 h\n            :ARG1 (r / record\n                     :time (p / previous)\n                     :ARG1-of (h2 / hold-01\n                                  :ARG0 (p2 / person\n                                            :mod (c / country\n                                                    :name (n / name\n                                                             :op1 \"Australia\")))))\n            :extent (t / temporal-quantity\n                       :quant 24\n                       :unit (h3 / hour))))",
      "(b / break-02\n   :ARG0 (h / he)\n   :ARG1 (r / record\n            :time (p / previous)\n            :ARG1-of (h2 / hold-01\n                         :ARG0 (p2 / person\n                                   :mod (c / country\n                                           :name (n / name\n                                                    :op1 \"Australia\"))))))",
      "(b / break-02\n   :ARG0 (h / he)\n   :ARG1 (r / record\n            :time (p / previous)\n            :ARG1-of (h2 / hold-01\n                         :ARG0 (p2 / person\n                                   :mod (c / country\n                                           :name (n / name\n                                                    :op1 \"Australia\")))))\n   :extent (t / temporal-quantity\n              :quant 24\n              :unit (h3 / hour)))",
      "(r / record\n   :ARG1-of (h2 / hold-01\n                :ARG0 (p2 / person\n                          :mod (c / country\n                                  :name (n / name\n                                           :op1 \"Australia\")))))",
      "(r / record\n   :ARG1-of (h2 / hold-01\n                :ARG0 (p2 / person\n                          :mod (c / country\n                                  :name (n / name\n                                           :op1 \"Australia\"))))\n   :time (p / previous))",
      "(h2 / hold-01\n    :ARG0 (p2 / person\n              :mod (c / country\n                      :name (n / name\n                               :op1 \"Australia\"))))",
      "(p2 / person\n    :mod (c / country\n            :name (n / name\n                     :op1 \"Australia\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Australia\"))",
      "(n / name\n   :op1 \"Australia\")",
      "(t / temporal-quantity\n   :quant 24)",
      "(t / temporal-quantity\n   :unit (h3 / hour))"
    ],
    "smus": [
      "Kevin Carr has set off on an epic journey.",
      "Kevin Carr set off on an epic journey from Haytor on Dartmoor.",
      "Kevin Carr set off on an epic journey in July 2013.",
      "Kevin Carr",
      "Kevin",
      "Carr.",
      "Haytor",
      "Dartmoor",
      "Kevin Carr's journey",
      "Kevin Carr's journey has been epic.",
      "Haytor",
      "Dartmoor, location:",
      "Dartmoor",
      "July",
      "2013-00-00",
      "He was less than 24 hours away from completing his epic trip.",
      "He is now less than 24 hours away from completing his epic trip.",
      "He's away from completing his epic trip.",
      "less than 24 hours away.",
      "He is completing his epic trip.",
      "He's on a trip.",
      "He had an epic trip.",
      "less than 24 hours",
      "24",
      "Hours",
      "Mr Carr ran around the world.",
      "Mr Carr ran around the world without support.",
      "Mr Carr ran around the world taking his tent with him.",
      "Mr Carr",
      "Mr.",
      "Carr.",
      "Around the world.",
      "Mr Carr is supportive.",
      "Mr Carr is not supported.",
      "Mr Carr took his tent.",
      "Mr Carr took his tent with the world.",
      "Mr Carr's tent",
      "He has set a previous record held by the Australians to 24 hours.",
      "He will break the previous record held by the Australians.",
      "He will break the previous record held by the Australians in 24 hours.",
      "The record held by the Australians.",
      "The previous record held by Australians.",
      "Australians are being held.",
      "Australian",
      "Australia (AU)",
      "Australia (AU)",
      "24",
      "Hours"
    ]
  },
  {
    "instance_id": "realsumm-66",
    "summary": "<t> David Axelrod masterminded two Obama presidential election victories . </t> <t> He was hired by Labour leader Ed Miliband amid great fanfare last year . </t> <t> Revealed at a book launch that he is not resident for tax purposes in UK . </t> <t> Labour confirms it pays Mr Axelrod in dollars through consultancy firm . </t>",
    "tree": [
      "(m / mastermind-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"\n                     :op2 \"Axelrod\"))\n   :ARG1 (w / win-01\n            :quant 2\n            :ARG1 (e / elect-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Obama\"))\n                     :ARG2 (p3 / president))))",
      "(p / person\n   :name (n / name\n            :op1 \"David\"\n            :op2 \"Axelrod\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Obama\"))",
      "(n / name\n   :op1 \"David\")",
      "(n / name\n   :op2 \"Axelrod\")",
      "(n / name\n   :op1 \"Obama\")",
      "(w / win-01\n   :ARG1 (e / elect-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Obama\"))\n            :ARG2 (p3 / president)))",
      "(w / win-01\n   :ARG1 (e / elect-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Obama\"))\n            :ARG2 (p3 / president))\n   :quant 2)",
      "(e / elect-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Obama\"))\n   :ARG2 (p3 / president))",
      "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\")\n            :ARG0-of (l / lead-02\n                        :ARG1 (p2 / political-party\n                                  :name (n2 / name\n                                            :op1 \"Labour\"))))\n   :ARG1 (h2 / he))",
      "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\")\n            :ARG0-of (l / lead-02\n                        :ARG1 (p2 / political-party\n                                  :name (n2 / name\n                                            :op1 \"Labour\"))))\n   :ARG1 (h2 / he)\n   :time (y / year\n            :mod (l2 / last)))",
      "(h / hire-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ed\"\n                     :op2 \"Miliband\")\n            :ARG0-of (l / lead-02\n                        :ARG1 (p2 / political-party\n                                  :name (n2 / name\n                                            :op1 \"Labour\"))))\n   :ARG1 (h2 / he)\n   :manner (f / fanfare\n              :mod (g / great)))",
      "(p / person\n   :ARG0-of (l / lead-02\n               :ARG1 (p2 / political-party\n                         :name (n2 / name\n                                   :op1 \"Labour\"))))",
      "(p / person\n   :ARG0-of (l / lead-02\n               :ARG1 (p2 / political-party\n                         :name (n2 / name\n                                   :op1 \"Labour\")))\n   :name (n / name\n            :op1 \"Ed\"\n            :op2 \"Miliband\"))",
      "(n / name\n   :op1 \"Ed\")",
      "(n / name\n   :op2 \"Miliband\")",
      "(n / name\n   :op1 \"Labour\")",
      "(l / lead-02\n   :ARG1 (p2 / political-party\n             :name (n2 / name\n                       :op1 \"Labour\")))",
      "(p2 / political-party\n    :name (n2 / name\n              :op1 \"Labour\"))",
      "(y / year\n   :mod (l2 / last))",
      "(f / fanfare\n   :mod (g / great))",
      "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -\n             :ARG0 (h / he)\n             :ARG1 (c / country\n                      :name (n / name\n                               :op1 \"UK\"))\n             :purpose (t / tax-01)))",
      "(r / reveal-01\n   :ARG1 (r2 / reside-01\n             :polarity -\n             :ARG0 (h / he)\n             :ARG1 (c / country\n                      :name (n / name\n                               :op1 \"UK\"))\n             :purpose (t / tax-01))\n   :location (l / launch-01\n                :ARG1 (b / book)))",
      "(r2 / reside-01\n    :ARG0 (h / he)\n    :ARG1 (c / country\n             :name (n / name\n                      :op1 \"UK\")))",
      "(r2 / reside-01\n    :ARG0 (h / he)\n    :ARG1 (c / country\n             :name (n / name\n                      :op1 \"UK\"))\n    :polarity -)",
      "(r2 / reside-01\n    :ARG0 (h / he)\n    :ARG1 (c / country\n             :name (n / name\n                      :op1 \"UK\")))",
      "(c / country\n   :name (n / name\n            :op1 \"UK\"))",
      "(n / name\n   :op1 \"UK\")",
      "(l / launch-01\n   :ARG1 (b / book))",
      "(c / confirm-01\n   :ARG0 (p / political-party\n            :name (n / name\n                     :op1 \"Labour\"))\n   :ARG1 (p2 / pay-01\n             :ARG0 p\n             :ARG2 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Mr\"\n                                 :op2 \"Axelrod\"))\n             :manner (d / dollar)\n             :instrument (f / firm\n                            :ARG0-of (c2 / consult-01))))",
      "(p / political-party\n   :name (n / name\n            :op1 \"Labour\"))",
      "(n / name\n   :op1 \"Labour\")",
      "(n / name\n   :op1 \"Mr\")",
      "(n / name\n   :op2 \"Axelrod\")",
      "(p2 / pay-01\n    :ARG0 (p / political-party :name (n / name :op1 \"Labour\"))\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\")))",
      "(p2 / pay-01\n    :ARG0 (p / political-party :name (n / name :op1 \"Labour\"))\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\"))\n    :manner (d / dollar))",
      "(p2 / pay-01\n    :ARG0 (p / political-party :name (n / name :op1 \"Labour\"))\n    :ARG2 (p3 / person\n              :name (n2 / name\n                        :op1 \"Mr\"\n                        :op2 \"Axelrod\"))\n    :instrument (f / firm\n                   :ARG0-of (c2 / consult-01)))",
      "(p3 / person\n    :name (n2 / name\n              :op1 \"Mr\"\n              :op2 \"Axelrod\"))",
      "(f / firm\n   :ARG0-of (c2 / consult-01))"
    ],
    "smus": [
      "David Axelrod masterminded two victories in Obama's presidential election.",
      "David Axelrod",
      "Obama.",
      "David",
      "Axelrod",
      "Obama.",
      "Obama's presidential election is a victory.",
      "Obama's presidential election has won two.",
      "Obama's presidential election",
      "Labour leader Ed Miliband has hired him.",
      "Labour leader Ed Miliband hired him last year.",
      "Labour leader Ed Miliband has hired him with great fanfare.",
      "Labour leader",
      "Labour leader Ed Miliband",
      "Ed",
      "Miliband.",
      "Labour.",
      "Labour leadership",
      "Labour.",
      "Last year.",
      "Great fanfare.",
      "It was revealed that he was not resident in the UK for tax purposes.",
      "At the book launch, it was revealed that he was not residing in the UK for tax purposes.",
      "He is a resident of the UK.",
      "He is not residing in the UK.",
      "He is a resident of the UK.",
      "UK (UK)",
      "UK",
      "The book will be launched.",
      "Labour confirms it pays Mr Axelrod with dollars through a consulting firm.",
      "Labour.",
      "Labour.",
      "Mr.",
      "Axelrod",
      "Labour pays Mr Axelrod.",
      "Labour pays Mr Axelrod dollars.",
      "Labour pays Mr Axelrod through a consulting firm.",
      "Mr Axelrod",
      "a consulting firm"
    ]
  },
  {
    "instance_id": "realsumm-67",
    "summary": "<t> HBO is the US network behind Game of Thrones and the Sopranos . </t> <t> Service is available on Apple TV and iOS exclusively for three months . </t> <t> Apple has also cut the price of Apple TV system from $ 99 ( \u00a3 65 ) to $ 69 . </t>",
    "tree": [
      "(n / network\n   :domain (b / broadcast-program\n              :name (n2 / name\n                        :op1 \"HBO\")))",
      "(n / network\n   :mod (c / country\n           :name (n3 / name\n                     :op1 \"US\")))",
      "(n / network\n   :location (b2 / behind\n                 :op1 (a / and\n                         :op1 (b3 / broadcast-program\n                                  :name (n4 / name\n                                            :op1 \"Game\"\n                                            :op2 \"of\"\n                                            :op3 \"Thrones\"))\n                         :op2 (b4 / broadcast-program\n                                  :name (n5 / name\n                                            :op1 \"The\"\n                                            :op2 \"Sapranos\")))))",
      "(b / broadcast-program\n   :name (n2 / name\n             :op1 \"HBO\"))",
      "(b / broadcast-program\n   :name (n4 / name\n             :op1 \"Game\"\n             :op2 \"of\"\n             :op3 \"Thrones\"))",
      "(b / broadcast-program\n   :name (n5 / name\n             :op1 \"The\"\n             :op2 \"Sapranos\"))",
      "(n2 / name\n    :op1 \"HBO\")",
      "(n2 / name\n    :op1 \"US\")",
      "(n2 / name\n    :op1 \"Game\")",
      "(n2 / name\n    :op2 \"of\")",
      "(n2 / name\n    :op3 \"Thrones\")",
      "(n2 / name\n    :op1 \"The\")",
      "(n2 / name\n    :op2 \"Sapranos\")",
      "(c / country\n   :name (n3 / name\n             :op1 \"US\"))",
      "(b2 / behind\n    :op1 (a / and\n            :op1 (b3 / broadcast-program\n                     :name (n4 / name\n                               :op1 \"Game\"\n                               :op2 \"of\"\n                               :op3 \"Thrones\"))\n            :op2 (b4 / broadcast-program\n                     :name (n5 / name\n                               :op1 \"The\"\n                               :op2 \"Sapranos\"))))",
      "(a / and\n   :op1 (b3 / broadcast-program\n            :name (n4 / name\n                      :op1 \"Game\"\n                      :op2 \"of\"\n                      :op3 \"Thrones\")))",
      "(a / and\n   :op2 (b4 / broadcast-program\n            :name (n5 / name\n                      :op1 \"The\"\n                      :op2 \"Sapranos\")))",
      "(a / available-02\n   :ARG2 (s / service))",
      "(a / available-02\n   :ARG2 (s / service)\n   :location (a2 / and\n                 :op1 (p / product\n                         :name (n / name\n                                  :op1 \"Apple\"\n                                  :op2 \"TV\"))\n                 :op2 (p2 / product\n                          :name (n2 / name\n                                    :op1 \"iOS\"))))",
      "(a / available-02\n   :ARG2 (s / service)\n   :duration (t / temporal-quantity\n                :quant 3\n                :unit (m / month)\n                :ARG0-of (e / exclusive-02)))",
      "(a2 / and\n    :op1 (p / product\n            :name (n / name\n                     :op1 \"Apple\"\n                     :op2 \"TV\")))",
      "(a2 / and\n    :op2 (p2 / product\n             :name (n2 / name\n                       :op1 \"iOS\")))",
      "(p / product\n   :name (n / name\n            :op1 \"Apple\"\n            :op2 \"TV\"))",
      "(p / product\n   :name (n2 / name\n             :op1 \"iOS\"))",
      "(n / name\n   :op1 \"Apple\")",
      "(n / name\n   :op2 \"TV\")",
      "(n / name\n   :op1 \"iOS\")",
      "(t / temporal-quantity\n   :ARG0-of (e / exclusive-02))",
      "(t / temporal-quantity\n   :ARG0-of (e / exclusive-02)\n   :quant 3)",
      "(t / temporal-quantity\n   :ARG0-of (e / exclusive-02)\n   :unit (m / month))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :ARG3 (m / monetary-quantity\n            :quant 99\n            :unit (d / dollar))\n   :ARG4 (m2 / monetary-quantity\n             :quant 69\n             :unit (d2 / dollar)))",
      "(c / cut-02\n   :ARG0 (c2 / company\n             :name (n / name\n                      :op1 \"Apple\"))\n   :ARG1 (p / price-01\n            :ARG1 (s / system\n                     :mod (p2 / product\n                              :name (n2 / name\n                                        :op1 \"Apple\"\n                                        :op2 \"TV\"))))\n   :ARG3 (m / monetary-quantity\n            :quant 99\n            :unit (d / dollar))\n   :ARG4 (m2 / monetary-quantity\n             :quant 69\n             :unit (d2 / dollar))\n   :mod (a / also))",
      "(c2 / company\n    :name (n / name\n             :op1 \"Apple\"))",
      "(n / name\n   :op1 \"Apple\")",
      "(n / name\n   :op1 \"Apple\")",
      "(n / name\n   :op2 \"TV\")",
      "(p / price-01\n   :ARG1 (s / system\n            :mod (p2 / product\n                     :name (n2 / name\n                               :op1 \"Apple\"\n                               :op2 \"TV\"))))",
      "(s / system\n   :mod (p2 / product\n            :name (n2 / name\n                      :op1 \"Apple\"\n                      :op2 \"TV\")))",
      "(p2 / product\n    :name (n2 / name\n              :op1 \"Apple\"\n              :op2 \"TV\"))",
      "(m / monetary-quantity\n   :quant 99)",
      "(m / monetary-quantity\n   :unit (d / dollar))",
      "(m / monetary-quantity\n   :quant 69)",
      "(m / monetary-quantity\n   :unit (d2 / dollar))"
    ],
    "smus": [
      "HBO is a network.",
      "US network",
      "The network behind Game of Thrones and The Sapranos.",
      "HBO",
      "The Game of Thrones.",
      "The Sapranos",
      "HBO",
      "US",
      "Game",
      "of.",
      "Thrones",
      "The",
      "a href=\"http://www.sapranos.com/2011/06/07/sapranos/\">Sapranos/a>",
      "US",
      "Behind Game of Thrones and The Sapranos.",
      "And the Game of Thrones.",
      "And The Sapranos.",
      "Service is available.",
      "Service is available on Apple TV and iOS.",
      "The Service will be available exclusively for 3 months.",
      "And Apple TV.",
      "and iOS.",
      "Apple TV",
      "IOS.",
      "Apple",
      "TV",
      "IOS",
      "Exclusively.",
      "Exclusively three.",
      "Exclusively in months.",
      "Apple has cut the price of the Apple TV system from $99 to $69.",
      "Apple has also cut the price of the Apple TV system from $99 to $69.",
      "Apple",
      "Apple",
      "Apple",
      "TV",
      "The price for the Apple TV system is $9.99.",
      "Apple TV system",
      "Apple TV",
      "99",
      "$",
      "69",
      "$"
    ]
  },
  {
    "instance_id": "realsumm-68",
    "summary": "<t> Huma Abedin came under fire for not tipping at Chipotle in Iowa . </t> <t> She is Hillary Clinton 's most trusted aide for the 2016 campaign . </t> <t> On Saturday , she and husband Anthony Weiner went for Mexican lunch . </t> <t> It is one of their final weekends before the campaign gets into swing . </t>",
    "tree": [
      "(f / fire-02\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Huma\"\n                     :op2 \"Abedin\"))\n   :ARG2 (t / tip-02\n            :polarity -\n            :ARG0 p\n            :location (c / company\n                         :name (n2 / name\n                                   :op1 \"Chipotle\")\n                         :location (s / state\n                                      :name (n3 / name\n                                                :op1 \"Iowa\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Huma\"\n            :op2 \"Abedin\"))",
      "(n / name\n   :op1 \"Huma\")",
      "(n / name\n   :op2 \"Abedin\")",
      "(n / name\n   :op1 \"Chipotle\")",
      "(n / name\n   :op1 \"Iowa\")",
      "(t / tip-02\n   :ARG0 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\")))",
      "(t / tip-02\n   :ARG0 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n   :polarity -)",
      "(t / tip-02\n   :ARG0 (p / person :name (n / name :op1 \"Huma\" :op2 \"Abedin\"))\n   :location (c / company\n                :name (n2 / name\n                          :op1 \"Chipotle\")\n                :location (s / state\n                             :name (n3 / name\n                                       :op1 \"Iowa\"))))",
      "(c / company\n   :name (n2 / name\n             :op1 \"Chipotle\"))",
      "(c / company\n   :location (s / state\n                :name (n3 / name\n                          :op1 \"Iowa\")))",
      "(s / state\n   :name (n3 / name\n             :op1 \"Iowa\"))",
      "(h / have-org-role-91\n   :ARG0 (s / she)\n   :ARG1 (c / campaign-01\n            :time (d / date-entity\n                     :year 2016))\n   :ARG2 (a / aide\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Hillary\"\n                              :op2 \"Clinton\"))\n            :ARG1-of (t / trust-02\n                        :ARG2-of (h2 / have-degree-91\n                                     :ARG1 a\n                                     :ARG3 (m / most)))))",
      "(c / campaign-01\n   :time (d / date-entity\n            :year 2016))",
      "(d / date-entity\n   :year 2016)",
      "(a / aide\n   :ARG1-of (t / trust-02\n               :ARG2-of (h2 / have-degree-91\n                            :ARG1 a\n                            :ARG3 (m / most))))",
      "(a / aide\n   :ARG1-of (t / trust-02\n               :ARG2-of (h2 / have-degree-91\n                            :ARG1 a\n                            :ARG3 (m / most)))\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Hillary\"\n                     :op2 \"Clinton\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Hillary\"\n            :op2 \"Clinton\"))",
      "(n / name\n   :op1 \"Hillary\")",
      "(n / name\n   :op2 \"Clinton\")",
      "(t / trust-02\n   :ARG2-of (h2 / have-degree-91\n                :ARG1 (a / aide)\n                :ARG3 (m / most)))",
      "(h2 / have-degree-91\n    :ARG1 (a / aide)\n    :ARG3 (m / most))",
      "(g / go-02\n   :ARG0 (a / and\n            :op1 (s / she)\n            :op2 (p / person\n                    :name (n / name\n                             :op1 \"Anthony\"\n                             :op2 \"Weiner\")\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 s\n                                :ARG2 (h2 / husband))))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Mexico\"))))",
      "(g / go-02\n   :ARG0 (a / and\n            :op1 (s / she)\n            :op2 (p / person\n                    :name (n / name\n                             :op1 \"Anthony\"\n                             :op2 \"Weiner\")\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 s\n                                :ARG2 (h2 / husband))))\n   :ARG4 (l / lunch\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Mexico\")))\n   :time (d / date-entity\n            :weekday (s2 / saturday)))",
      "(a / and\n   :op1 (s / she))",
      "(a / and\n   :op2 (p / person\n           :name (n / name\n                    :op1 \"Anthony\"\n                    :op2 \"Weiner\")\n           :ARG0-of (h / have-rel-role-91\n                       :ARG1 (s / she)\n                       :ARG2 (h2 / husband))))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (s / she)\n               :ARG2 (h2 / husband)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (s / she)\n               :ARG2 (h2 / husband))\n   :name (n / name\n            :op1 \"Anthony\"\n            :op2 \"Weiner\"))",
      "(n / name\n   :op1 \"Anthony\")",
      "(n / name\n   :op2 \"Weiner\")",
      "(n / name\n   :op1 \"Mexico\")",
      "(h / have-rel-role-91\n   :ARG1 (s / she)\n   :ARG2 (h2 / husband))",
      "(l / lunch\n   :mod (c / country\n           :name (n2 / name\n                     :op1 \"Mexico\")))",
      "(c / country\n   :name (n2 / name\n             :op1 \"Mexico\"))",
      "(d / date-entity\n   :weekday (s2 / saturday))",
      "(w / weekend\n   :ARG1-of (ii / include-91\n                :ARG2 (w2 / weekend\n                          :poss (t / they)\n                          :mod (f / final)\n                          :time (b / before\n                                   :op1 (s / swing-06\n                                           :ARG1 (c / campaign-01))))))",
      "(w / weekend\n   :ARG1-of (ii / include-91\n                :ARG2 (w2 / weekend\n                          :poss (t / they)\n                          :mod (f / final)\n                          :time (b / before\n                                   :op1 (s / swing-06\n                                           :ARG1 (c / campaign-01)))))\n   :poss (t / they))",
      "(w / weekend\n   :ARG1-of (ii / include-91\n                :ARG2 (w2 / weekend\n                          :poss (t / they)\n                          :mod (f / final)\n                          :time (b / before\n                                   :op1 (s / swing-06\n                                           :ARG1 (c / campaign-01)))))\n   :mod (f / final))",
      "(w / weekend\n   :ARG1-of (ii / include-91\n                :ARG2 (w2 / weekend\n                          :poss (t / they)\n                          :mod (f / final)\n                          :time (b / before\n                                   :op1 (s / swing-06\n                                           :ARG1 (c / campaign-01)))))\n   :time (b / before\n            :op1 (s / swing-06\n                    :ARG1 (c / campaign-01))))",
      "(w / weekend\n   :ARG1-of (ii / include-91\n                :ARG2 (w2 / weekend\n                          :poss (t / they)\n                          :mod (f / final)\n                          :time (b / before\n                                   :op1 (s / swing-06\n                                           :ARG1 (c / campaign-01)))))\n   :domain (ii2 / it))",
      "(ii / include-91\n    :ARG2 (w2 / weekend\n              :poss (t / they)\n              :mod (f / final)\n              :time (b / before\n                       :op1 (s / swing-06\n                               :ARG1 (c / campaign-01)))))",
      "(b / before\n   :op1 (s / swing-06\n           :ARG1 (c / campaign-01)))",
      "(s / swing-06\n   :ARG1 (c / campaign-01))"
    ],
    "smus": [
      "Huma Abedin was fired for not tipping at Chipotle in Iowa.",
      "Huma Abedin",
      "Huma.",
      "Abedin",
      "Chipotle.",
      "Iowa",
      "Kuma Abedin is tipped.",
      "Kuma Abedin is not tipped.",
      "Kuma Abedin was tipped at Chipotle in Iowa.",
      "Chipotle.",
      "Iowa company",
      "Iowa",
      "She was Hillary Clinton's most trusted aide during the 2016 campaign.",
      "The campaign is in 2016.",
      "2016-03-09",
      "The most trusted aide.",
      "Hillary Clinton's most trusted aide",
      "Hillary Clinton",
      "Hillary",
      "Clinton.",
      "The aide was the most trusted.",
      "the aide was the most.",
      "She and her husband, Anthony Weiner, went to a Mexican lunch.",
      "She and her husband, Anthony Weiner, went to a Mexican lunch Saturday.",
      "And she is.",
      "And her husband, Anthony Weiner.",
      "Her husband.",
      "Her husband is Anthony Weiner.",
      "Anthony",
      "Weiner",
      "Mexico (MX)",
      "She is husband.",
      "Mexican lunch",
      "Mexico (MX)",
      "Saturday",
      "One of their final weekends before the campaign swings in.",
      "One of their final weekends before the campaign swings.",
      "Final weekends of their final weekends before the campaign swing.",
      "One of their final weekends before the campaign swing was before the campaign swing.",
      "It was one of their final weekends before the campaign swing.",
      "One of their final weekends before the campaign swings in.",
      "before the campaign swings.",
      "Campaign in swing."
    ]
  },
  {
    "instance_id": "realsumm-69",
    "summary": "<t> Gary fell from 147th most popular British name in 1996 to 1,001st in 2013 . </t> <t> Reached height of its popularity in 1964 , when it was ranked 16th . </t> <t> Meanwhile , names including Dexter and Jenson are now in the top 100 . </t>",
    "tree": [
      "(f / fall-01\n   :ARG1 (n / name\n            :name (n2 / name\n                      :op1 \"Gary\"))\n   :ARG3 (r / rank-01\n            :ARG2 147\n            :ARG1 n\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (p / popular-02\n                                 :ARG1 n)\n                        :ARG3 (m / most)\n                        :ARG5 (n3 / name\n                                  :mod (c / country\n                                          :name (n4 / name\n                                                    :op1 \"Britain\"))))\n            :time (d / date-entity\n                     :year 1996))\n   :ARG4 (r2 / rank-01\n             :ARG2 1091\n             :ARG1 n\n             :time (d2 / date-entity\n                       :year 2013)))",
      "(n / name\n   :name (n2 / name\n             :op1 \"Gary\"))",
      "(n / name\n   :op1 \"Gary\")",
      "(n / name\n   :mod (c / country\n           :name (n4 / name\n                     :op1 \"Britain\")))",
      "(n / name\n   :op1 \"Britain\")",
      "(r / rank-01\n   :ARG2 147\n   :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))\n   :ARG1-of (h / have-degree-91\n               :ARG2 (p / popular-02\n                        :ARG1 n)\n               :ARG3 (m / most)\n               :ARG5 (n3 / name\n                         :mod (c / country\n                                 :name (n4 / name\n                                           :op1 \"Britain\"))))\n   :ARG2 1091\n   :ARG1 n)",
      "(r / rank-01\n   :ARG2 147\n   :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))\n   :ARG1-of (h / have-degree-91\n               :ARG2 (p / popular-02\n                        :ARG1 n)\n               :ARG3 (m / most)\n               :ARG5 (n3 / name\n                         :mod (c / country\n                                 :name (n4 / name\n                                           :op1 \"Britain\"))))\n   :ARG2 1091\n   :ARG1 n\n   :time (d / date-entity\n            :year 1996))",
      "(r / rank-01\n   :ARG2 147\n   :ARG1 (n / name :name (n2 / name :op1 \"Gary\"))\n   :ARG1-of (h / have-degree-91\n               :ARG2 (p / popular-02\n                        :ARG1 n)\n               :ARG3 (m / most)\n               :ARG5 (n3 / name\n                         :mod (c / country\n                                 :name (n4 / name\n                                           :op1 \"Britain\"))))\n   :ARG2 1091\n   :ARG1 n\n   :time (d2 / date-entity\n             :year 2013))",
      "(h / have-degree-91\n   :ARG2 (p / popular-02\n            :ARG1 (n / name :name (n2 / name :op1 \"Gary\")))\n   :ARG3 (m / most)\n   :ARG5 (n3 / name\n             :mod (c / country\n                     :name (n4 / name\n                               :op1 \"Britain\"))))",
      "(p / popular-02\n   :ARG1 (n / name :name (n2 / name :op1 \"Gary\")))",
      "(c / country\n   :name (n4 / name\n             :op1 \"Britain\"))",
      "(d / date-entity\n   :year 1996)",
      "(d / date-entity\n   :year 2013)",
      "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :poss (ii / it))))",
      "(r / reach-01\n   :ARG1 (h / high-02\n            :ARG1 (p / popularity\n                     :poss (ii / it)))\n   :time (d / date-entity\n            :year 1964\n            :time-of (r2 / rank-01\n                         :ARG1 ii\n                         :ARG2 16)))",
      "(h / high-02\n   :ARG1 (p / popularity\n            :poss (ii / it)))",
      "(p / popularity\n   :poss (ii / it))",
      "(d / date-entity\n   :year 1964)",
      "(d / date-entity\n   :time-of (r2 / rank-01\n                :ARG1 (ii / it)\n                :ARG2 16))",
      "(r2 / rank-01\n    :ARG1 (ii / it)\n    :ARG2 16)",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2-of (ii / include-01\n                         :ARG1 (a / and\n                                  :op1 (p / person\n                                          :name (n2 / name\n                                                    :op1 \"Dexter\"))\n                                  :op2 (p2 / person\n                                           :name (n3 / name\n                                                     :op1 \"Jenson\")))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100)))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2-of (ii / include-01\n                         :ARG1 (a / and\n                                  :op1 (p / person\n                                          :name (n2 / name\n                                                    :op1 \"Dexter\"))\n                                  :op2 (p2 / person\n                                           :name (n3 / name\n                                                     :op1 \"Jenson\")))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100))\n   :time (n4 / now))",
      "(b / be-located-at-91\n   :ARG1 (n / name\n            :ARG2-of (ii / include-01\n                         :ARG1 (a / and\n                                  :op1 (p / person\n                                          :name (n2 / name\n                                                    :op1 \"Dexter\"))\n                                  :op2 (p2 / person\n                                           :name (n3 / name\n                                                     :op1 \"Jenson\")))))\n   :ARG2 (t / top\n            :ord (o / ordinal-entity\n                    :value 100))\n   :time (m / meanwhile))",
      "(n / name\n   :ARG2-of (ii / include-01\n                :ARG1 (a / and\n                         :op1 (p / person\n                                 :name (n2 / name\n                                           :op1 \"Dexter\"))\n                         :op2 (p2 / person\n                                  :name (n3 / name\n                                            :op1 \"Jenson\")))))",
      "(n / name\n   :ARG2-of (ii / include-01\n                :ARG1 (a / and\n                         :op1 (p / person\n                                 :name (n2 / name\n                                           :op1 \"Dexter\"))\n                         :op2 (p2 / person\n                                  :name (n3 / name\n                                            :op1 \"Jenson\"))))\n   :op1 \"Dexter\")",
      "(n / name\n   :ARG2-of (ii / include-01\n                :ARG1 (a / and\n                         :op1 (p / person\n                                 :name (n2 / name\n                                           :op1 \"Dexter\"))\n                         :op2 (p2 / person\n                                  :name (n3 / name\n                                            :op1 \"Jenson\"))))\n   :op1 \"Jenson\")",
      "(ii / include-01\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n2 / name\n                               :op1 \"Dexter\"))\n             :op2 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Jenson\"))))",
      "(a / and\n   :op1 (p / person\n           :name (n2 / name\n                     :op1 \"Dexter\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n3 / name\n                      :op1 \"Jenson\")))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Dexter\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Jenson\"))",
      "(t / top\n   :ord (o / ordinal-entity\n           :value 100))",
      "(o / ordinal-entity\n   :value 100)"
    ],
    "smus": [
      "Gary fell from number 147 in 1996 to number 1091 in 2013 and is the most popular British name.",
      "Gary",
      "Gary",
      "British name",
      "British name.",
      "Gary is the most popular British name at 147 out of 1091.",
      "Gary was ranked number 147th most popular British name in 1996 at 1091.",
      "Gary is the most popular British name in 2013 at 147.",
      "Gary is the most popular British name.",
      "Gary is a popular name.",
      "British name",
      "1996.",
      "2013-00-00",
      "Its popularitiy reached high.",
      "It reached a high in popularitie in 1964 when it was ranked 16th.",
      "Its popularity is high.",
      "It's popularit.",
      "1964.",
      "It was the 16th-ranked.",
      "It's ranked 16th.",
      "Names including Dexter and Johnson are in the top 100.",
      "Now, names including Dexter and Johnson are in the top 100.",
      "Meanwhile, names including Dexter and Johnson are in the top 100.",
      "names including deexter and jenson.",
      "*Dexter * Johnson * Johnson * Johnson",
      "Jenson: including Dexter and Johnson.",
      "including Dexter and Johnson.",
      "and the name of the dexter.",
      "And so did Johnson.",
      "-Dexter",
      "-Jenson",
      "Top 100",
      "100"
    ]
  },
  {
    "instance_id": "realsumm-70",
    "summary": "<t> Leanne Mitchell has been dropped by her label and sings at a holiday camp . </t> <t> Andrea Begley and Jermain Jackman are yet to become household names . </t> <t> Will 2015 winner Stevie become a chart success or another Voice flop ? </t> <t> . </t>",
    "tree": [
      "(a / and\n   :op1 (d / drop-05\n           :ARG0 (l / label\n                    :poss (p / person\n                             :name (n / name\n                                      :op1 \"Leanne\"\n                                      :op2 \"Mitchell\")))\n           :ARG1 p))",
      "(a / and\n   :op2 (s / sing-01\n           :ARG0 (p / person :name (n / name :op1 \"Leanne\" :op2 \"Mitchell\"))\n           :location (c / camp\n                        :mod (h / holiday))))",
      "(d / drop-05\n   :ARG0 (l / label\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Leanne\"\n                              :op2 \"Mitchell\")))\n   :ARG1 p)",
      "(l / label\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Leanne\"\n                     :op2 \"Mitchell\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Leanne\"\n            :op2 \"Mitchell\"))",
      "(n / name\n   :op1 \"Leanne\")",
      "(n / name\n   :op2 \"Mitchell\")",
      "(s / sing-01\n   :ARG0 (p / person :name (n / name :op1 \"Leanne\" :op2 \"Mitchell\")))",
      "(s / sing-01\n   :ARG0 (p / person :name (n / name :op1 \"Leanne\" :op2 \"Mitchell\"))\n   :location (c / camp\n                :mod (h / holiday)))",
      "(c / camp\n   :mod (h / holiday))",
      "(h / have-11\n   :ARG0 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrea\"\n                             :op2 \"Begley\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Jermain\"\n                               :op2 \"Jackman\")))\n   :ARG1 (y / yet)\n   :ARG2 (b / become-01\n            :ARG1 a\n            :ARG2 (n3 / name\n                      :mod (h2 / household))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Andrea\"\n                    :op2 \"Begley\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Jermain\"\n                      :op2 \"Jackman\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Andrea\"\n            :op2 \"Begley\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Jermain\"\n             :op2 \"Jackman\"))",
      "(n / name\n   :op1 \"Andrea\")",
      "(n / name\n   :op2 \"Begley\")",
      "(n / name\n   :op1 \"Jermain\")",
      "(n / name\n   :op2 \"Jackman\")",
      "(n / name\n   :mod (h2 / household))",
      "(b / become-01\n   :ARG1 (a / and)\n   :ARG2 (n3 / name\n             :mod (h2 / household)))",
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Stevie\")\n            :ARG0-of (w / win-01\n                        :time (d / date-entity\n                                 :year 2015)))\n   :ARG2 (a / amr-choice\n            :op1 (s / succeed-01\n                    :ARG0 p\n                    :ARG1 (c / chart-01))\n            :op2 (f / flop-01\n                    :ARG1 p\n                    :mod (v / voice-01)\n                    :mod (a2 / another))))",
      "(p / person\n   :ARG0-of (w / win-01\n               :time (d / date-entity\n                        :year 2015)))",
      "(p / person\n   :ARG0-of (w / win-01\n               :time (d / date-entity\n                        :year 2015))\n   :name (n / name\n            :op1 \"Stevie\"))",
      "(n / name\n   :op1 \"Stevie\")",
      "(w / win-01\n   :time (d / date-entity\n            :year 2015))",
      "(d / date-entity\n   :year 2015)",
      "(a / amr-choice\n   :op1 (s / succeed-01\n           :ARG0 (p / person :name (n / name :op1 \"Stevie\")))\n           :ARG1 (c / chart-01)))",
      "(a / amr-choice\n   :op2 (f / flop-01\n           :ARG1 (p / person :name (n / name :op1 \"Stevie\")))\n           :mod (v / voice-01)\n           :mod (a2 / another)))",
      "(s / succeed-01\n   :ARG0 (p / person :name (n / name :op1 \"Stevie\")))\n   :ARG1 (c / chart-01))",
      "(f / flop-01\n   :ARG1 (p / person :name (n / name :op1 \"Stevie\"))))",
      "(f / flop-01\n   :ARG1 (p / person :name (n / name :op1 \"Stevie\")))\n   :mod (v / voice-01))",
      "(f / flop-01\n   :ARG1 (p / person :name (n / name :op1 \"Stevie\")))\n   :mod (a2 / another))"
    ],
    "smus": [
      "And Leanne Mitchell's label has dropped her.",
      "And Leanne Mitchell sings at a holiday camp.",
      "Leanne Mitchell's label has dropped her.",
      "Leanne Mitchell's label.",
      "Leanne Mitchell",
      "Leanne",
      "Mitchell",
      "Leanne Mitchell sings.",
      "Leanne Mitchell sings at a holiday camp.",
      "Holiday camp.",
      "Andrea Begley and Jerry Jackson have yet to become household names.",
      "Andrea Begley",
      "And the names of Jerry Jackson and...",
      "Andrea Begley",
      "-Jermain Jackson",
      "Andrea",
      "Begley",
      "Jermain",
      "Jackson",
      "household name",
      "and become a household name.",
      "Steve, the 2015 winner, became either a chart success or another Voice flop.",
      "the winner in 2015.",
      "Steve is the 2015 winner.",
      "Steve",
      "The win in 2015",
      "2015",
      "Is Steve's success on the chart?",
      "Or is Steve a Voice Flop?",
      "Steve's success on the chart.",
      "Steve was a flop.",
      "Steve is a Voice Flop.",
      "Another Steve flop."
    ]
  },
  {
    "instance_id": "realsumm-71",
    "summary": "<t> Romanian - born Alexandra Harra , 28 , has become an Instagram star . </t> <t> Model , who 's posed for Playboy , posts selfies with inspirational messages . </t> <t> After dyeing locks black , being hailed as a rival to Kim Kardashian . </t>",
    "tree": [
      "(b / become-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Alexandra\"\n                     :op2 \"Harra\")\n            :ARG1-of (b2 / bear-02\n                         :location (c / country\n                                      :name (n2 / name\n                                                :op1 \"Romania\")))\n            :age (t / temporal-quantity\n                    :quant 28\n                    :unit (y / year)))\n   :ARG2 (s / star\n            :mod (p2 / publication\n                     :name (n3 / name\n                               :op1 \"Instagram\"))))",
      "(p / person\n   :ARG1-of (b2 / bear-02\n                :location (c / country\n                             :name (n2 / name\n                                       :op1 \"Romania\"))))",
      "(p / person\n   :ARG1-of (b2 / bear-02\n                :location (c / country\n                             :name (n2 / name\n                                       :op1 \"Romania\")))\n   :name (n / name\n            :op1 \"Alexandra\"\n            :op2 \"Harra\"))",
      "(p / person\n   :ARG1-of (b2 / bear-02\n                :location (c / country\n                             :name (n2 / name\n                                       :op1 \"Romania\")))\n   :age (t / temporal-quantity\n           :quant 28\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Alexandra\")",
      "(n / name\n   :op2 \"Harra\")",
      "(n / name\n   :op1 \"Romania\")",
      "(n / name\n   :op1 \"Instagram\")",
      "(b2 / bear-02\n    :location (c / country\n                 :name (n2 / name\n                           :op1 \"Romania\")))",
      "(c / country\n   :name (n2 / name\n             :op1 \"Romania\"))",
      "(t / temporal-quantity\n   :quant 28)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(s / star\n   :mod (p2 / publication\n            :name (n3 / name\n                      :op1 \"Instagram\")))",
      "(p2 / publication\n    :name (n3 / name\n              :op1 \"Instagram\"))",
      "(p / post-01\n   :ARG0 (m / model\n            :ARG0-of (p2 / pose-01\n                         :ARG2 (m2 / magazine\n                                   :name (n / name\n                                            :op1 \"Playboy\"))))\n   :ARG1 (s / selfie\n            :accompanier (m3 / message-01\n                             :ARG0-of (ii / inspire-01))))",
      "(m / model\n   :ARG0-of (p2 / pose-01\n                :ARG2 (m2 / magazine\n                          :name (n / name\n                                   :op1 \"Playboy\"))))",
      "(p2 / pose-01\n    :ARG2 (m2 / magazine\n              :name (n / name\n                       :op1 \"Playboy\")))",
      "(m2 / magazine\n    :name (n / name\n             :op1 \"Playboy\"))",
      "(n / name\n   :op1 \"Playboy\")",
      "(s / selfie\n   :accompanier (m3 / message-01\n                    :ARG0-of (ii / inspire-01)))",
      "(m3 / message-01\n    :ARG0-of (ii / inspire-01))",
      "(h / hail-02\n   :ARG1 (r / rival-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"\n                              :op2 \"Kardinez\"))))",
      "(h / hail-02\n   :ARG1 (r / rival-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"\n                              :op2 \"Kardinez\")))\n   :time (a / after\n            :op1 (d / dye-01\n                    :ARG1 (l / lock)\n                    :ARG2 (b / black-04\n                             :ARG1 l))))",
      "(r / rival-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kim\"\n                     :op2 \"Kardinez\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Kim\"\n            :op2 \"Kardinez\"))",
      "(n / name\n   :op1 \"Kim\")",
      "(n / name\n   :op2 \"Kardinez\")",
      "(a / after\n   :op1 (d / dye-01\n           :ARG1 (l / lock)\n           :ARG2 (b / black-04\n                    :ARG1 l)))",
      "(d / dye-01\n   :ARG1 (l / lock)\n   :ARG2 (b / black-04\n            :ARG1 l))",
      "(b / black-04\n   :ARG1 (l / lock))"
    ],
    "smus": [
      "Romanian-born 28-year-old Alexandra Harra has become an Instagram star.",
      "Romanian-born",
      "Romanian-born Alexandra Harra",
      "Romanian-born 28 year old",
      "Anna.",
      "Harra",
      "Romania (RU)",
      "Instagram",
      "Born in Romania.",
      "Romania (RU)",
      "28",
      "Year.",
      "Instagram star",
      "Instagram",
      "The Model Posing for Playboy posts selfies with inspiring messages.",
      "Model posing for Playboy",
      "Posing for Playboy.",
      "Playboy.",
      "Playboy",
      "selfies with inspiring messages",
      "inspiring messages",
      "Kim Kardinez's rivalry was hailed.",
      "Kim Kardinez's rivalry was hailed after the locks were dyed black.",
      "Kim Kardinez is a rival.",
      "Kim Kardinez",
      "Kim",
      "Kardinez",
      "After the locks are dyed black.",
      "The locks were dyed black.",
      "The locks are black."
    ]
  },
  {
    "instance_id": "realsumm-72",
    "summary": "<t> Nadir Ciftci celebrated by blowing a kiss at rival goalkeeper Scott Bain . </t> <t> However , Ciftci was left blushing as rivals earned impressive victory . </t> <t> Win gave hosts Dundee their first derby win in more than a decade . </t> <t> Goals from Greg Stewart , Jake McPake and Paul Heffernen secured win . </t>",
    "tree": [
      "(c / celebrate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nadir\"\n                     :op2 \"Ciftci\")))",
      "(c / celebrate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nadir\"\n                     :op2 \"Ciftci\"))\n   :manner (b / blow-01\n              :ARG0 p\n              :ARG1 (k / kiss-01\n                       :ARG0 p\n                       :ARG1 (p2 / person\n                                 :name (n2 / name\n                                           :op1 \"Scott\"\n                                           :op2 \"Bain\")\n                                 :ARG0-of (g / goalkeeper-01)\n                                 :ARG0-of (r / rival-01\n                                             :ARG1 p)))))",
      "(p / person\n   :ARG0-of (g / goalkeeper-01)\n   :ARG0-of (r / rival-01\n               :ARG1 p))",
      "(p / person\n   :ARG0-of (g / goalkeeper-01)\n   :ARG0-of (r / rival-01\n               :ARG1 p)\n   :name (n / name\n            :op1 \"Nadir\"\n            :op2 \"Ciftci\"))",
      "(p / person\n   :ARG0-of (g / goalkeeper-01)\n   :ARG0-of (r / rival-01\n               :ARG1 p)\n   :name (n2 / name\n             :op1 \"Scott\"\n             :op2 \"Bain\"))",
      "(n / name\n   :op1 \"Nadir\")",
      "(n / name\n   :op2 \"Ciftci\")",
      "(n / name\n   :op1 \"Scott\")",
      "(n / name\n   :op2 \"Bain\")",
      "(b / blow-01\n   :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))\n   :ARG1 (k / kiss-01\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Scott\"\n                                :op2 \"Bain\")\n                      :ARG0-of (g / goalkeeper-01)\n                      :ARG0-of (r / rival-01\n                                  :ARG1 p))))",
      "(k / kiss-01\n   :ARG0 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Scott\"\n                       :op2 \"Bain\")\n             :ARG0-of (g / goalkeeper-01)\n             :ARG0-of (r / rival-01\n                         :ARG1 p)))",
      "(r / rival-01\n   :ARG1 (p / person :name (n / name :op1 \"Nadir\" :op2 \"Ciftci\")))",
      "(c / contrast-01\n   :ARG2 (l / leave-13\n            :ARG0 (e / earn-01\n                     :ARG0 (r / rival)\n                     :ARG1 (w / win-01\n                              :ARG0 r\n                              :ARG0-of (ii / impress-01)))\n            :ARG1 (b / blush-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Ciftci\")))))",
      "(l / leave-13\n   :ARG0 (e / earn-01\n            :ARG0 (r / rival)\n            :ARG1 (w / win-01\n                     :ARG0 r\n                     :ARG0-of (ii / impress-01)))\n   :ARG1 (b / blush-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Ciftci\"))))",
      "(e / earn-01\n   :ARG0 (r / rival)\n   :ARG1 (w / win-01\n            :ARG0 r\n            :ARG0-of (ii / impress-01)))",
      "(w / win-01\n   :ARG0 (r / rival)\n   :ARG0-of (ii / impress-01))",
      "(b / blush-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ciftci\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Ciftci\"))",
      "(n / name\n   :op1 \"Ciftci\")",
      "(g / give-01\n   :ARG0 (w / win-01)\n   :ARG1 (w2 / win-01\n             :ARG0 (t / team\n                      :name (n / name\n                               :op1 \"Dundee\")\n                      :ARG0-of (h / host-01))\n             :mod (d / derby)\n             :ord (o / ordinal-entity\n                     :value 1\n                     :range (m / more-than\n                               :op1 (t2 / temporal-quantity\n                                        :quant 1\n                                        :unit (d2 / decade)))))\n   :ARG2 t)",
      "(w2 / win-01\n    :ARG0 (t / team\n             :name (n / name\n                      :op1 \"Dundee\")\n             :ARG0-of (h / host-01)))",
      "(w2 / win-01\n    :ARG0 (t / team\n             :name (n / name\n                      :op1 \"Dundee\")\n             :ARG0-of (h / host-01))\n    :mod (d / derby))",
      "(w2 / win-01\n    :ARG0 (t / team\n             :name (n / name\n                      :op1 \"Dundee\")\n             :ARG0-of (h / host-01))\n    :ord (o / ordinal-entity\n            :value 1\n            :range (m / more-than\n                      :op1 (t2 / temporal-quantity\n                               :quant 1\n                               :unit (d2 / decade)))))",
      "(t / team\n   :ARG0-of (h / host-01))",
      "(t / team\n   :ARG0-of (h / host-01)\n   :name (n / name\n            :op1 \"Dundee\"))",
      "(n / name\n   :op1 \"Dundee\")",
      "(o / ordinal-entity\n   :value 1)",
      "(o / ordinal-entity\n   :range (m / more-than\n             :op1 (t2 / temporal-quantity\n                      :quant 1\n                      :unit (d2 / decade))))",
      "(m / more-than\n   :op1 (t2 / temporal-quantity\n            :quant 1\n            :unit (d2 / decade)))",
      "(t2 / temporal-quantity\n    :quant 1)",
      "(t2 / temporal-quantity\n    :unit (d2 / decade))",
      "(s / secure-02\n   :ARG0 (g / goal\n            :source (a / and\n                       :op1 (p / person\n                               :name (n / name\n                                        :op1 \"Greg\"\n                                        :op2 \"Stewart\"))\n                       :op2 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Jake\"\n                                          :op2 \"McPake\"))\n                       :op3 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Paul\"\n                                          :op2 \"Heffernen\"))))\n   :ARG1 (w / win-01))",
      "(g / goal\n   :source (a / and\n              :op1 (p / person\n                      :name (n / name\n                               :op1 \"Greg\"\n                               :op2 \"Stewart\"))\n              :op2 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Jake\"\n                                 :op2 \"McPake\"))\n              :op3 (p3 / person\n                       :name (n3 / name\n                                 :op1 \"Paul\"\n                                 :op2 \"Heffernen\"))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Greg\"\n                    :op2 \"Stewart\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Jake\"\n                      :op2 \"McPake\")))",
      "(a / and\n   :op3 (p3 / person\n            :name (n3 / name\n                      :op1 \"Paul\"\n                      :op2 \"Heffernen\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Greg\"\n            :op2 \"Stewart\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Jake\"\n             :op2 \"McPake\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Paul\"\n             :op2 \"Heffernen\"))",
      "(n / name\n   :op1 \"Greg\")",
      "(n / name\n   :op2 \"Stewart\")",
      "(n / name\n   :op1 \"Jake\")",
      "(n / name\n   :op2 \"McPake\")",
      "(n / name\n   :op1 \"Paul\")",
      "(n / name\n   :op2 \"Heffernen\")"
    ],
    "smus": [
      "Nadir Ciftci was celebrated.",
      "Nadir ciftci was celebrated by blowing a kiss to rival goalkeeper Scott Bain.",
      "rival goalkeeper",
      "Nadir Cifitci is a rival goalkeeper.",
      "Scott Bain is a rival goalkeeper.",
      "Nadir.",
      "Ciiftci",
      "Scott",
      "Bain.",
      "Nadir ciftci was blowing a kiss from his rival goalkeeper, Scott Bain.",
      "Nadir ciftci kisses rival goalkeeper Scott Bain.",
      "Nadir Cifitci is rival.",
      "But the fact that rivals earned an impressive victory has left Ciftci blushing.",
      "The fact that rivals earned an impressive victory has left Ciftci blushing.",
      "The rivals earned an impressive victory.",
      "The rivals' victory was impressive.",
      "Ciftci is blushing.",
      "Ciftci",
      "Ciftci",
      "The win gave the hosts Dundee their first derby win in more than a decade.",
      "Host Dundee won",
      "The hosts, Dundee, won the derby.",
      "The hosts, Dundee, won their first win in more than a decade.",
      "hosts",
      "Dundee hosts",
      "Dundee.",
      "First..",
      "more than a decade",
      "more than a decade",
      "One.",
      "decade",
      "The goals of Greg Stewart, Jake McPake and Paul Heffernen secured the victory.",
      "Goals from Greg Stewart, Jake McPake and Paul Heffernen:",
      "and Greg Stewart.",
      "And Jake McPake.",
      "And Paul Heffernen.",
      "Greg Stewart",
      "Jake McPake",
      "Paul Heffernen",
      "Greg",
      "Stewart",
      "Jake",
      "McPake.",
      "Paul",
      "Heffernen."
    ]
  },
  {
    "instance_id": "realsumm-73",
    "summary": "<t> Mercedes - Benz Fashion Week Australia 2015 came to a close on Thursday night in Sydney . </t> <t> Stand - out shows included Maticevski , Romance Was Born , Tome , Steven Khalil and Johanna Johnson . </t> <t> Sheer and metallic fabrics and slouchy and voluminous silhouettes were recurring trends . </t>",
    "tree": [
      "(c / close-01\n   :ARG1 (e / event\n            :name (n / name\n                     :op1 \"Mercedes-Benz\"\n                     :op2 \"Fashion\"\n                     :op3 \"Week\"\n                     :op4 \"Australia\")\n            :time (d / date-entity\n                     :year 2015\n                     :weekday (t / thursday)\n                     :dayperiod (n2 / night))\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"Sydney\"))))",
      "(e / event\n   :name (n / name\n            :op1 \"Mercedes-Benz\"\n            :op2 \"Fashion\"\n            :op3 \"Week\"\n            :op4 \"Australia\"))",
      "(e / event\n   :time (d / date-entity\n            :year 2015\n            :weekday (t / thursday)\n            :dayperiod (n2 / night)))",
      "(e / event\n   :location (c2 / city\n                 :name (n3 / name\n                           :op1 \"Sydney\")))",
      "(n / name\n   :op1 \"Mercedes-Benz\")",
      "(n / name\n   :op2 \"Fashion\")",
      "(n / name\n   :op3 \"Week\")",
      "(n / name\n   :op4 \"Australia\")",
      "(n / name\n   :op1 \"Sydney\")",
      "(d / date-entity\n   :year 2015)",
      "(d / date-entity\n   :weekday (t / thursday))",
      "(d / date-entity\n   :dayperiod (n2 / night))",
      "(c2 / city\n    :name (n3 / name\n              :op1 \"Sydney\"))",
      "(ii / include-91\n    :ARG1 (a / and\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Maticevski\"))\n             :op2 (w / work-of-art\n                     :name (n2 / name\n                               :op1 \"Romance\"\n                               :op2 \"Was\"\n                               :op3 \"Born\"))\n             :op3 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Tome\"))\n             :op4 (p3 / person\n                      :name (n4 / name\n                                :op1 \"Steven\"\n                                :op2 \"Khalil\"))\n             :op5 (p4 / person\n                      :name (n5 / name\n                                :op1 \"Johanna\"\n                                :op2 \"Johnson\")))\n    :ARG2 (s / show-04\n             :ARG1-of (s2 / stand-out-06)))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Maticevski\")))",
      "(a / and\n   :op2 (w / work-of-art\n           :name (n2 / name\n                     :op1 \"Romance\"\n                     :op2 \"Was\"\n                     :op3 \"Born\")))",
      "(a / and\n   :op3 (p2 / person\n            :name (n3 / name\n                      :op1 \"Tome\")))",
      "(a / and\n   :op4 (p3 / person\n            :name (n4 / name\n                      :op1 \"Steven\"\n                      :op2 \"Khalil\")))",
      "(a / and\n   :op5 (p4 / person\n            :name (n5 / name\n                      :op1 \"Johanna\"\n                      :op2 \"Johnson\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Maticevski\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Tome\"))",
      "(p / person\n   :name (n4 / name\n             :op1 \"Steven\"\n             :op2 \"Khalil\"))",
      "(p / person\n   :name (n5 / name\n             :op1 \"Johanna\"\n             :op2 \"Johnson\"))",
      "(n / name\n   :op1 \"Maticevski\")",
      "(n / name\n   :op1 \"Romance\")",
      "(n / name\n   :op2 \"Was\")",
      "(n / name\n   :op3 \"Born\")",
      "(n / name\n   :op1 \"Tome\")",
      "(n / name\n   :op1 \"Steven\")",
      "(n / name\n   :op2 \"Khalil\")",
      "(n / name\n   :op1 \"Johanna\")",
      "(n / name\n   :op2 \"Johnson\")",
      "(w / work-of-art\n   :name (n2 / name\n             :op1 \"Romance\"\n             :op2 \"Was\"\n             :op3 \"Born\"))",
      "(s / show-04\n   :ARG1-of (s2 / stand-out-06))",
      "(t / trend\n   :ARG1-of (r / repeat-01))",
      "(t / trend\n   :ARG1-of (r / repeat-01)\n   :domain (a / and\n              :op1 (f / fabric\n                      :mod (s / sheer)\n                      :mod (m / metallic))\n              :op2 (s2 / silhouette\n                       :mod (s3 / slouchy)\n                       :mod (v / voluminous))))",
      "(a / and\n   :op1 (f / fabric\n           :mod (s / sheer)\n           :mod (m / metallic)))",
      "(a / and\n   :op2 (s2 / silhouette\n            :mod (s3 / slouchy)\n            :mod (v / voluminous)))",
      "(f / fabric\n   :mod (s / sheer))",
      "(f / fabric\n   :mod (m / metallic))",
      "(s2 / silhouette\n    :mod (s3 / slouchy))",
      "(s2 / silhouette\n    :mod (v / voluminous))"
    ],
    "smus": [
      "Mercedes-Benz Fashion Week Australia will close in Sydney on Thursday night, 2015",
      "Mercedes-Benz Fashion Week Australia",
      "Thursday night, 2015",
      "SYDNEY:",
      "Mercedes-Benz",
      "Fashion",
      "Week",
      "Australia (AU)",
      "Sydney",
      "2015",
      "Thursday",
      "Night.",
      "Sydney",
      "Shows that stood out included Mariuszki, Romance Was Born, Tome, Steven Halil and Johanna Johnson.",
      "And Matias Mazevski.",
      "And Romance Was Born.",
      "and tome.",
      "and Steven Khalil.",
      "And so did Johanna Johnson.",
      "Mariuszevski",
      "Tome",
      "Steven Khalil",
      "-Johanna Johnson",
      "maticevski",
      "Romance.",
      "Was.",
      "Born.",
      "Tome.",
      "Steve",
      "Khalil",
      "Johanna",
      "Johnson",
      "Romance Was Born",
      "Stand out shows.",
      "Repeated trends.",
      "Metallic sheer fabrics and voluminous slouchy silhouettes are repeat trends.",
      "and sheer metallic fabrics.",
      "and voluminous slouchy silhouettes.",
      "sheer fabrics",
      "metallic fabrics",
      "slouchy silhouettes",
      "Voluminous silhouettes."
    ]
  },
  {
    "instance_id": "realsumm-74",
    "summary": "<t> Lindsay Sandiford fears she will be next to face the firing squad . </t> <t> Andrew Chan and Myuran Sukumaran killed after a final KFC bucket meal . </t> <t> The 58-year - old has been on death row in Bali since 2012 . </t> <t> She was convicted of attempting to smuggle \u00a3 1.6million of cocaine in 2012 . </t>",
    "tree": [
      "(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lindsay\"\n                     :op2 \"Sandiford\"))\n   :ARG1 (n2 / next\n             :domain p\n             :location-of (f2 / face-01\n                              :ARG0 p\n                              :ARG1 (s / squad\n                                       :ARG0-of (f3 / fire-01)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Lindsay\"\n            :op2 \"Sandiford\"))",
      "(n / name\n   :op1 \"Lindsay\")",
      "(n / name\n   :op2 \"Sandiford\")",
      "(n2 / next\n    :domain (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\")))",
      "(n2 / next\n    :location-of (f2 / face-01\n                     :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n                     :ARG1 (s / squad\n                              :ARG0-of (f3 / fire-01))))",
      "(f2 / face-01\n    :ARG0 (p / person :name (n / name :op1 \"Lindsay\" :op2 \"Sandiford\"))\n    :ARG1 (s / squad\n             :ARG0-of (f3 / fire-01)))",
      "(s / squad\n   :ARG0-of (f3 / fire-01))",
      "(k / kill-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrew\"\n                             :op2 \"Chan\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Myuran\"\n                               :op2 \"Sukumaran\"))))",
      "(k / kill-01\n   :ARG1 (a / and\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Andrew\"\n                             :op2 \"Chan\"))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Myuran\"\n                               :op2 \"Sukumaran\")))\n   :time (a2 / after\n             :op1 (m / meal\n                     :mod (b / bucket)\n                     :mod (c / company\n                             :name (n3 / name\n                                       :op1 \"KFC\"))\n                     :mod (f / final))))",
      "(a / and\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Andrew\"\n                    :op2 \"Chan\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n2 / name\n                      :op1 \"Myuran\"\n                      :op2 \"Sukumaran\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Andrew\"\n            :op2 \"Chan\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Myuran\"\n             :op2 \"Sukumaran\"))",
      "(n / name\n   :op1 \"Andrew\")",
      "(n / name\n   :op2 \"Chan\")",
      "(n / name\n   :op1 \"Myuran\")",
      "(n / name\n   :op2 \"Sukumaran\")",
      "(n / name\n   :op1 \"KFC\")",
      "(a2 / after\n    :op1 (m / meal\n            :mod (b / bucket)\n            :mod (c / company\n                    :name (n3 / name\n                              :op1 \"KFC\"))\n            :mod (f / final)))",
      "(m / meal\n   :mod (b / bucket))",
      "(m / meal\n   :mod (c / company\n           :name (n3 / name\n                     :op1 \"KFC\")))",
      "(m / meal\n   :mod (f / final))",
      "(c / company\n   :name (n3 / name\n             :op1 \"KFC\"))",
      "(b / be-located-at-91\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 58\n                    :unit (y / year)))\n   :ARG2 (r / row\n            :mod (d / die-01)))",
      "(b / be-located-at-91\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 58\n                    :unit (y / year)))\n   :ARG2 (r / row\n            :mod (d / die-01))\n   :location (ii / island\n                 :name (n / name\n                          :op1 \"Bali\")))",
      "(b / be-located-at-91\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 58\n                    :unit (y / year)))\n   :ARG2 (r / row\n            :mod (d / die-01))\n   :time (s / since\n            :op1 (d2 / date-entity\n                     :year 2012)))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 58\n           :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 58)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(r / row\n   :mod (d / die-01))",
      "(ii / island\n    :name (n / name\n             :op1 \"Bali\"))",
      "(n / name\n   :op1 \"Bali\")",
      "(s / since\n   :op1 (d2 / date-entity\n            :year 2012))",
      "(d2 / date-entity\n    :year 2012)",
      "(c / convict-01\n   :ARG1 (s / she)\n   :ARG2 (a / attempt-01\n            :ARG0 s\n            :ARG1 (s2 / smuggle-01\n                      :ARG0 s\n                      :ARG1 (c2 / cocaine\n                                :quant (m / monetary-quantity\n                                          :quant 1600000\n                                          :unit (p / pound))))\n            :time (d / date-entity\n                     :year 2012)))",
      "(a / attempt-01\n   :ARG0 (s / she)\n   :ARG1 (s2 / smuggle-01\n             :ARG0 s\n             :ARG1 (c2 / cocaine\n                       :quant (m / monetary-quantity\n                                 :quant 1600000\n                                 :unit (p / pound)))))",
      "(a / attempt-01\n   :ARG0 (s / she)\n   :ARG1 (s2 / smuggle-01\n             :ARG0 s\n             :ARG1 (c2 / cocaine\n                       :quant (m / monetary-quantity\n                                 :quant 1600000\n                                 :unit (p / pound))))\n   :time (d / date-entity\n            :year 2012))",
      "(s2 / smuggle-01\n    :ARG0 (s / she)\n    :ARG1 (c2 / cocaine\n              :quant (m / monetary-quantity\n                        :quant 1600000\n                        :unit (p / pound))))",
      "(c2 / cocaine\n    :quant (m / monetary-quantity\n              :quant 1600000\n              :unit (p / pound)))",
      "(m / monetary-quantity\n   :quant 1600000)",
      "(m / monetary-quantity\n   :unit (p / pound))",
      "(d / date-entity\n   :year 2012)"
    ],
    "smus": [
      "Lindsay Sandiford fears he will be the next to face a firing squad.",
      "Lindsay Sandiford",
      "Lindsay",
      "Sandyford",
      "Lindsay Sandiford is next.",
      "Lindsay Sandiford will next face a firing squad.",
      "Lindsay Sandiford will face a firing squad.",
      "A firing squad.",
      "Andrew Chan and Myuran Susumaran killed.",
      "Andrew Chan and Myuran Susumaran killed after the final bucket meal at KFC.",
      "And Andrew Chan.",
      "and Myuran Susumaran.",
      "Andrew Chan",
      "Myuran Susumaran",
      "Andrew",
      "Chan",
      "Myuran",
      "Sukumaran",
      "KFC",
      "After the final bucket meal at KFC.",
      "bucket meal.",
      "KFC meal",
      "The final meal.",
      "KFC",
      "58 year old on death row",
      "58 year old on death row in Bali",
      "A 58 year old has been on death row since 2012.",
      "58 year old",
      "58",
      "Year.",
      "Death row.",
      "Bali",
      "Bali",
      "since 2012",
      "2012-03-09",
      "She was convicted of attempting to smuggle 160,000 pounds of cocaine in 2012.",
      "She was attempting to smuggle 160,000 pounds of cocaine.",
      "In 2012 she was attempting to smuggle 160,000 pounds of cocaine.",
      "She would smuggle 160,000 pounds of cocaine.",
      "1.16 million pounds of cocaine.",
      "1600,000.",
      "PS",
      "2012"
    ]
  },
  {
    "instance_id": "realsumm-75",
    "summary": "<t> Abby Bishop took in her two - day - old niece Zala in August 2013 . </t> <t> Now Zala is 20 months old and she follows Bishop as she travels the world playing for professional basketball teams . </t> <t> Bishop said it was a big decision but she would n't change anything . </t> <t> Zala will go with her when she starts playing in the U.S. WNBA in May. </t>",
    "tree": [
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Zala\")\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 p\n                         :ARG2 (n3 / niece))\n             :age (t2 / temporal-quantity\n                      :quant 2\n                      :unit (d / day))))",
      "(t / take-in-06\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Abby\"\n                     :op2 \"Bishop\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Zala\")\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 p\n                         :ARG2 (n3 / niece))\n             :age (t2 / temporal-quantity\n                      :quant 2\n                      :unit (d / day)))\n   :time (d2 / date-entity\n             :month 8\n             :year 2013))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n3 / niece)))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n3 / niece))\n   :name (n / name\n            :op1 \"Abby\"\n            :op2 \"Bishop\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n3 / niece))\n   :name (n2 / name\n             :op1 \"Zala\"))",
      "(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 p\n               :ARG2 (n3 / niece))\n   :age (t2 / temporal-quantity\n            :quant 2\n            :unit (d / day)))",
      "(n / name\n   :op1 \"Abby\")",
      "(n / name\n   :op2 \"Bishop\")",
      "(n / name\n   :op1 \"Zala\")",
      "(h / have-rel-role-91\n   :ARG1 (p / person :name (n / name :op1 \"Abby\" :op2 \"Bishop\"))\n   :ARG2 (n3 / niece))",
      "(t2 / temporal-quantity\n    :quant 2)",
      "(t2 / temporal-quantity\n    :unit (d / day))",
      "(d2 / date-entity\n    :month 8)",
      "(d2 / date-entity\n    :year 2013)",
      "(a / and\n   :op1 (a2 / age-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Zala\"))\n            :ARG2 (t / temporal-quantity\n                     :quant 20\n                     :unit (m / month))\n            :time (n2 / now)))",
      "(a / and\n   :op2 (f / follow-01\n           :ARG1 (p / person :name (n / name :op1 \"Zala\"))\n           :ARG2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Bishop\"))\n           :time (t2 / travel-01\n                     :ARG0 p\n                     :ARG1 (w / world)\n                     :manner (p3 / play-01\n                                 :ARG0 p\n                                 :ARG2 (t3 / team\n                                           :mod (b / basketball)\n                                           :mod (p4 / professional))))))",
      "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\"))\n    :ARG2 (t / temporal-quantity\n             :quant 20\n             :unit (m / month)))",
      "(a2 / age-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Zala\"))\n    :ARG2 (t / temporal-quantity\n             :quant 20\n             :unit (m / month))\n    :time (n2 / now))",
      "(p / person\n   :name (n / name\n            :op1 \"Zala\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Bishop\"))",
      "(n / name\n   :op1 \"Zala\")",
      "(n / name\n   :op1 \"Bishop\")",
      "(t / temporal-quantity\n   :quant 20)",
      "(t / temporal-quantity\n   :unit (m / month))",
      "(f / follow-01\n   :ARG1 (p / person :name (n / name :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Bishop\")))",
      "(f / follow-01\n   :ARG1 (p / person :name (n / name :op1 \"Zala\"))\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Bishop\"))\n   :time (t2 / travel-01\n             :ARG0 p\n             :ARG1 (w / world)\n             :manner (p3 / play-01\n                         :ARG0 p\n                         :ARG2 (t3 / team\n                                   :mod (b / basketball)\n                                   :mod (p4 / professional)))))",
      "(t2 / travel-01\n    :ARG0 (p / person :name (n / name :op1 \"Zala\"))\n    :ARG1 (w / world))",
      "(t2 / travel-01\n    :ARG0 (p / person :name (n / name :op1 \"Zala\"))\n    :ARG1 (w / world)\n    :manner (p3 / play-01\n                :ARG0 p\n                :ARG2 (t3 / team\n                          :mod (b / basketball)\n                          :mod (p4 / professional))))",
      "(p3 / play-01\n    :ARG0 (p / person :name (n / name :op1 \"Zala\"))\n    :ARG2 (t3 / team\n              :mod (b / basketball)\n              :mod (p4 / professional)))",
      "(t3 / team\n    :mod (b / basketball))",
      "(t3 / team\n    :mod (p4 / professional))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bishop\"))\n   :ARG1 (c / contrast-01\n            :ARG1 (d / decide-01\n                     :ARG1 (ii / it)\n                     :mod (b / big))\n            :ARG2 (c2 / change-01\n                      :polarity -\n                      :ARG0 p\n                      :ARG1 (a / anything))))",
      "(p / person\n   :name (n / name\n            :op1 \"Bishop\"))",
      "(n / name\n   :op1 \"Bishop\")",
      "(c / contrast-01\n   :ARG1 (d / decide-01\n            :ARG1 (ii / it)\n            :mod (b / big))\n   :ARG2 (c2 / change-01\n             :polarity -\n             :ARG0 (p / person :name (n / name :op1 \"Bishop\"))\n             :ARG1 (a / anything)))",
      "(d / decide-01\n   :ARG1 (ii / it))",
      "(d / decide-01\n   :ARG1 (ii / it)\n   :mod (b / big))",
      "(c2 / change-01\n    :ARG0 (p / person :name (n / name :op1 \"Bishop\"))\n    :ARG1 (a / anything))",
      "(c2 / change-01\n    :ARG0 (p / person :name (n / name :op1 \"Bishop\"))\n    :ARG1 (a / anything)\n    :polarity -)",
      "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Zala\")))",
      "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :accompanier (s / she))",
      "(g / go-02\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Zala\"))\n   :time (s2 / start-01\n             :ARG0 (s / she)\n             :ARG1 (p2 / play-01\n                       :ARG0 s\n                       :ARG3 (l / league\n                                :name (n2 / name\n                                          :op1 \"WNBA\")\n                                :mod (c / country\n                                        :name (n3 / name\n                                                  :op1 \"U.S.\"))))\n             :time (d / date-entity\n                      :month 5)))",
      "(p / person\n   :name (n / name\n            :op1 \"Zala\"))",
      "(n / name\n   :op1 \"Zala\")",
      "(n / name\n   :op1 \"WNBA\")",
      "(n / name\n   :op1 \"U.S.\")",
      "(s2 / start-01\n    :ARG0 (s / she)\n    :ARG1 (p2 / play-01\n              :ARG0 s\n              :ARG3 (l / league\n                       :name (n2 / name\n                                 :op1 \"WNBA\")\n                       :mod (c / country\n                               :name (n3 / name\n                                         :op1 \"U.S.\")))))",
      "(s2 / start-01\n    :ARG0 (s / she)\n    :ARG1 (p2 / play-01\n              :ARG0 s\n              :ARG3 (l / league\n                       :name (n2 / name\n                                 :op1 \"WNBA\")\n                       :mod (c / country\n                               :name (n3 / name\n                                         :op1 \"U.S.\"))))\n    :time (d / date-entity\n             :month 5))",
      "(p2 / play-01\n    :ARG0 (s / she)\n    :ARG3 (l / league\n             :name (n2 / name\n                       :op1 \"WNBA\")\n             :mod (c / country\n                     :name (n3 / name\n                               :op1 \"U.S.\"))))",
      "(l / league\n   :name (n2 / name\n             :op1 \"WNBA\"))",
      "(l / league\n   :mod (c / country\n           :name (n3 / name\n                     :op1 \"U.S.\")))",
      "(c / country\n   :name (n3 / name\n             :op1 \"U.S.\"))",
      "(d / date-entity\n   :month 5)"
    ],
    "smus": [
      "Abby Bishop took in his two-day-old niece, Sala.",
      "Abby Bishop took in her two-day-old niece, Sala, in August.",
      "My niece",
      "Abby Bishop is her niece.",
      "Zala is his niece.",
      "My niece is 2 days old.",
      "Abby",
      "Bishop",
      "Sala.",
      "Abby Bishop is the niece.",
      "Two.",
      "day",
      "August",
      "February",
      "and Sala is now 20 months old.",
      "And when he travels the world playing for professional basketball teams, Sala follows Bishop.",
      "Sala is 20 months old.",
      "Sala is now 20 months old.",
      "Sala",
      "Bishop",
      "Sala.",
      "Bishop",
      "20",
      "Months",
      "Sala follows Bishop.",
      "When he travels the world playing for professional basketball teams, Sala follows Bishop.",
      "Sala travels the world.",
      "Sala travels the world playing for professional basketball teams.",
      "Sala is playing for professional basketball teams.",
      "Basketball teams",
      "Professional teams.",
      "It was a big decision, but he didn't change anything, Bishop said.",
      "Bishop",
      "Bishop",
      "It was a big decision, but Bishop didn't change anything.",
      "It was a decision.",
      "It's a big decision.",
      "Bishop would change anything.",
      "Bishop didn't change anything.",
      "Sala will go.",
      "Sala would go with her.",
      "Sala will go when she starts playing in the U.S. WNBA in May.",
      "Sala",
      "Sala.",
      "WNBA",
      "U.S.",
      "She starts playing in the U.S. WNBA.",
      "She starts playing in the U.S. WNBA in May.",
      "She's playing in the U.S. WNBA.",
      "WNBA",
      "U.S. League",
      "U.S.",
      "May"
    ]
  },
  {
    "instance_id": "realsumm-76",
    "summary": "<t> ONE Pro Cycling preparing to take on Team Sky and Sir Bradley Wiggins . </t> <t> Tour de Yorkshire runs over three stages starting in Bridlington on May 1 . </t> <t> Prior 's team and Yorkshire race inspired by Tour de France Grand Depart . </t>",
    "tree": [
      "(p / prepare-02\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"One\"\n                     :op2 \"Pro\"\n                     :op3 \"Cycling\"))\n   :ARG1 (t / take-on-21\n            :ARG0 o\n            :ARG1 (a / and\n                     :op1 (t2 / team\n                              :name (n2 / name\n                                        :op1 \"Team\"\n                                        :op2 \"Sky\"))\n                     :op2 (p2 / person\n                              :name (n3 / name\n                                        :op1 \"Sir\"\n                                        :op2 \"Bradley\"\n                                        :op3 \"Wiggins\")))))",
      "(o / organization\n   :name (n / name\n            :op1 \"One\"\n            :op2 \"Pro\"\n            :op3 \"Cycling\"))",
      "(n / name\n   :op1 \"One\")",
      "(n / name\n   :op2 \"Pro\")",
      "(n / name\n   :op3 \"Cycling\")",
      "(n / name\n   :op1 \"Team\")",
      "(n / name\n   :op2 \"Sky\")",
      "(n / name\n   :op1 \"Sir\")",
      "(n / name\n   :op2 \"Bradley\")",
      "(n / name\n   :op3 \"Wiggins\")",
      "(t / take-on-21\n   :ARG0 (o / organization :name (n / name :op1 \"One\" :op2 \"Pro\" :op3 \"Cycling\"))\n   :ARG1 (a / and\n            :op1 (t2 / team\n                     :name (n2 / name\n                               :op1 \"Team\"\n                               :op2 \"Sky\"))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Sir\"\n                               :op2 \"Bradley\"\n                               :op3 \"Wiggins\"))))",
      "(a / and\n   :op1 (t2 / team\n            :name (n2 / name\n                      :op1 \"Team\"\n                      :op2 \"Sky\")))",
      "(a / and\n   :op2 (p2 / person\n            :name (n3 / name\n                      :op1 \"Sir\"\n                      :op2 \"Bradley\"\n                      :op3 \"Wiggins\")))",
      "(t2 / team\n    :name (n2 / name\n              :op1 \"Team\"\n              :op2 \"Sky\"))",
      "(p2 / person\n    :name (n3 / name\n              :op1 \"Sir\"\n              :op2 \"Bradley\"\n              :op3 \"Wiggins\"))",
      "(r / run-over-04\n   :ARG1 (t / tour\n            :name (n / name\n                     :op1 \"Tour\"\n                     :op2 \"de\"\n                     :op3 \"Yorkshire\"))\n   :ARG2 (s / stage\n            :quant 3)\n   :ARG1-of (s2 / start-01\n                :location (c / city\n                             :name (n2 / name\n                                       :op1 \"Bridlington\"))\n                :time (d / date-entity\n                         :day 1\n                         :month 5)))",
      "(t / tour\n   :name (n / name\n            :op1 \"Tour\"\n            :op2 \"de\"\n            :op3 \"Yorkshire\"))",
      "(n / name\n   :op1 \"Tour\")",
      "(n / name\n   :op2 \"de\")",
      "(n / name\n   :op3 \"Yorkshire\")",
      "(n / name\n   :op1 \"Bridlington\")",
      "(s / stage\n   :quant 3)",
      "(s2 / start-01\n    :location (c / city\n                 :name (n2 / name\n                           :op1 \"Bridlington\")))",
      "(s2 / start-01\n    :time (d / date-entity\n             :day 1\n             :month 5))",
      "(c / city\n   :name (n2 / name\n             :op1 \"Bridlington\"))",
      "(d / date-entity\n   :day 1)",
      "(d / date-entity\n   :month 5)",
      "(ii / inspire-01\n    :ARG0 (t / tour\n             :name (n / name\n                      :op1 \"Tour\"\n                      :op2 \"de\"\n                      :op3 \"France\"\n                      :op4 \"Grand\"\n                      :op5 \"Depart\"))\n    :ARG1 (a / and\n             :op1 (t2 / team\n                      :poss (p / person\n                               :name (n2 / name\n                                         :op1 \"Prior\")))\n             :op2 (r / race-02\n                     :ARG0 p\n                     :location (c / county\n                                  :name (n3 / name\n                                            :op1 \"Yorkshire\")))))",
      "(t / tour\n   :name (n / name\n            :op1 \"Tour\"\n            :op2 \"de\"\n            :op3 \"France\"\n            :op4 \"Grand\"\n            :op5 \"Depart\"))",
      "(n / name\n   :op1 \"Tour\")",
      "(n / name\n   :op2 \"de\")",
      "(n / name\n   :op3 \"France\")",
      "(n / name\n   :op4 \"Grand\")",
      "(n / name\n   :op5 \"Depart\")",
      "(n / name\n   :op1 \"Prior\")",
      "(n / name\n   :op1 \"Yorkshire\")",
      "(a / and\n   :op1 (t2 / team\n            :poss (p / person\n                     :name (n2 / name\n                               :op1 \"Prior\"))))",
      "(a / and\n   :op2 (r / race-02\n           :ARG0 (p / person :name (n2 / name :op1 \"Prior\"))\n           :location (c / county\n                        :name (n3 / name\n                                  :op1 \"Yorkshire\"))))",
      "(t2 / team\n    :poss (p / person\n             :name (n2 / name\n                       :op1 \"Prior\")))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Prior\"))",
      "(r / race-02\n   :ARG0 (p / person :name (n2 / name :op1 \"Prior\")))",
      "(r / race-02\n   :ARG0 (p / person :name (n2 / name :op1 \"Prior\"))\n   :location (c / county\n                :name (n3 / name\n                          :op1 \"Yorkshire\")))",
      "(c / county\n   :name (n3 / name\n             :op1 \"Yorkshire\"))"
    ],
    "smus": [
      "One Pro Cycling is preparing to take on Team Sky and Sir Bradley Wiggins.",
      "One Pro Cycling.",
      "One.",
      "Pro",
      "Cycling.",
      "Team.",
      "Sky.",
      "Sir.",
      "Bradley",
      "Wiggins",
      "One Pro Cycling will take on Team Sky and Sir Bradley Wiggins.",
      "Team Sky.",
      "and Sir Bradley Wiggins.",
      "Team Sky",
      "Sir Bradley Wiggins",
      "Tour de Yorkshire has run over three stages starting May 1 in Bridlington.",
      "Tour de Yorkshire",
      "Tour",
      "de",
      "Yorkshire",
      "Burlington",
      "Three stages.",
      "Starting in Burlington.",
      "Starting May 1.",
      "- Burlington",
      "1st",
      "May",
      "The Tour de France Grand D\u00e9part has inspired the team of Prior and his race in Yorkshire.",
      "Tour de France Grand D\u00e9part",
      "Tour",
      "de",
      "France",
      "Grand.",
      "Depart.",
      "Prior",
      "Yorkshire",
      "and Prior's team.",
      "And in Yorkshire, the Prior race.",
      "Prior's team",
      "Prior.",
      "Prior is in the race.",
      "Prior is in the race in Yorkshire.",
      "Yorkshire"
    ]
  },
  {
    "instance_id": "realsumm-77",
    "summary": "<t> Woman reported ' someone ' had been run over , but victim was a squirrel . </t> <t> Another man dialled 999 to say he dropped a burger which was ' bleeding ' East of England ambulance service warned hoax calls can cost lives . </t>",
    "tree": [
      "(c / contrast-01\n   :ARG1 (r / report-01\n            :ARG0 (w / woman)\n            :ARG1 (r2 / run-over-12\n                      :ARG1 (s / someone)))\n   :ARG2 (s2 / squirrel\n             :domain (v / victim)))",
      "(r / report-01\n   :ARG0 (w / woman)\n   :ARG1 (r2 / run-over-12\n             :ARG1 (s / someone)))",
      "(r2 / run-over-12\n    :ARG1 (s / someone))",
      "(s2 / squirrel\n    :domain (v / victim))",
      "(m / multi-sentence\n   :snt1 (d / dial-01\n            :ARG0 (m2 / man\n                      :mod (a / another))\n            :ARG1 (p / phone-number-entity\n                     :value 999)\n            :purpose (s / say-01\n                        :ARG0 m2\n                        :ARG1 (d2 / drop-01\n                                  :ARG0 m2\n                                  :ARG1 (b / burger\n                                           :ARG1-of (b2 / bleed-01))))))",
      "(m / multi-sentence\n   :snt2 (w / warn-01\n            :ARG0 (s2 / service\n                      :mod (a2 / ambulance)\n                      :mod (c / country-region\n                              :name (n / name\n                                       :op1 \"East\"\n                                       :op2 \"of\"\n                                       :op3 \"England\")))\n            :ARG1 (p2 / possible-01\n                      :ARG1 (c2 / cost-01\n                                :ARG1 (c3 / call-02\n                                          :mod (h / hoax-01))\n                                :ARG2 (l / live-01)))))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :ARG1 (p / phone-number-entity\n            :value 999))",
      "(d / dial-01\n   :ARG0 (m2 / man\n             :mod (a / another))\n   :ARG1 (p / phone-number-entity\n            :value 999))",
      "(m2 / man\n    :mod (a / another))",
      "(p / phone-number-entity\n   :value 999)",
      "(s / say-01\n   :ARG0 (m2 / man)\n   :ARG1 (d2 / drop-01\n             :ARG0 m2\n             :ARG1 (b / burger\n                      :ARG1-of (b2 / bleed-01))))",
      "(d2 / drop-01\n    :ARG0 (m2 / man)\n    :ARG1 (b / burger\n             :ARG1-of (b2 / bleed-01)))",
      "(b / burger\n   :ARG1-of (b2 / bleed-01))",
      "(w / warn-01\n   :ARG0 (s2 / service\n             :mod (a2 / ambulance)\n             :mod (c / country-region\n                     :name (n / name\n                              :op1 \"East\"\n                              :op2 \"of\"\n                              :op3 \"England\")))\n   :ARG1 (p2 / possible-01\n             :ARG1 (c2 / cost-01\n                       :ARG1 (c3 / call-02\n                                 :mod (h / hoax-01))\n                       :ARG2 (l / live-01))))",
      "(s2 / service\n    :mod (a2 / ambulance))",
      "(s2 / service\n    :mod (c / country-region\n            :name (n / name\n                     :op1 \"East\"\n                     :op2 \"of\"\n                     :op3 \"England\")))",
      "(c / country-region\n   :name (n / name\n            :op1 \"East\"\n            :op2 \"of\"\n            :op3 \"England\"))",
      "(n / name\n   :op1 \"East\")",
      "(n / name\n   :op2 \"of\")",
      "(n / name\n   :op3 \"England\")",
      "(p2 / possible-01\n    :ARG1 (c2 / cost-01\n              :ARG1 (c3 / call-02\n                        :mod (h / hoax-01))\n              :ARG2 (l / live-01)))",
      "(c2 / cost-01\n    :ARG1 (c3 / call-02\n              :mod (h / hoax-01))\n    :ARG2 (l / live-01))",
      "(c3 / call-02\n    :mod (h / hoax-01))"
    ],
    "smus": [
      "The woman reported someone being run over but the victim was a squirrel.",
      "The woman reported someone being run over.",
      "Someone was run over.",
      "The victim is a squirrel.",
      "Another man dialled 999 to say he dropped a bleeding burger.",
      "The East of England ambulance service warned that hoax calls could cost lives.",
      "Another man dialed 999.",
      "Another man dialed 999.",
      "Another man.",
      "999",
      "The man would say he dropped a bleeding burger.",
      "The man dropped a bleeding burger.",
      "a bleeding burger",
      "The East of England ambulance service warned that hoax calls could cost lives.",
      "ambulance service",
      "East of England service",
      "East of England (EE)",
      "East",
      "of.",
      "England",
      "Hoax calls can cost lives.",
      "Hoax calls will cost lives.",
      "Hoax calls."
    ]
  },
  {
    "instance_id": "realsumm-78",
    "summary": "<t> Ben Flower returned from his six - month ban on Thursday night . </t> <t> Wales forward made first appearance since he punched St Helens ' Lance Hohaia in the opening moments of last season 's Grand Final . </t> <t> 27-year - old received a brilliant reception during 's Wigan 's 30 - 20 victory against Warrington . </t>",
    "tree": [
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                         :quant 6\n                         :unit (m / month))))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ben\"\n                     :op2 \"Flower\"))\n   :ARG3 (b / ban-01\n            :ARG2 p\n            :duration (t / temporal-quantity\n                         :quant 6\n                         :unit (m / month)))\n   :time (d / date-entity\n            :weekday (t2 / thursday)\n            :dayperiod (n2 / night)))",
      "(p / person\n   :name (n / name\n            :op1 \"Ben\"\n            :op2 \"Flower\"))",
      "(n / name\n   :op1 \"Ben\")",
      "(n / name\n   :op2 \"Flower\")",
      "(b / ban-01\n   :ARG2 (p / person :name (n / name :op1 \"Ben\" :op2 \"Flower\")))",
      "(b / ban-01\n   :ARG2 (p / person :name (n / name :op1 \"Ben\" :op2 \"Flower\"))\n   :duration (t / temporal-quantity\n                :quant 6\n                :unit (m / month)))",
      "(t / temporal-quantity\n   :quant 6)",
      "(t / temporal-quantity\n   :unit (m / month))",
      "(d / date-entity\n   :weekday (t2 / thursday))",
      "(d / date-entity\n   :dayperiod (n2 / night))",
      "(a / appear-01\n   :ARG1 (f / forward\n            :part-of (t / team\n                        :name (n / name\n                                 :op1 \"Wales\"))))",
      "(a / appear-01\n   :ARG1 (f / forward\n            :part-of (t / team\n                        :name (n / name\n                                 :op1 \"Wales\")))\n   :ord (o / ordinal-entity\n           :value 1\n           :range (s / since\n                     :op1 (p / punch-01\n                             :ARG0 f\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Lance\"\n                                                 :op2 \"Hohaia\")\n                                       :part-of (t2 / team\n                                                    :name (n3 / name\n                                                              :op1 \"St\"\n                                                              :op2 \"Helens\")))\n                             :time (m / moment\n                                      :ARG0-of (o2 / open-02\n                                                   :ARG1 (g / game\n                                                            :name (n4 / name\n                                                                      :op1 \"Grand\"\n                                                                      :op2 \"Final\")\n                                                            :time (s2 / season\n                                                                      :mod (l / last)))))))))",
      "(f / forward\n   :part-of (t / team\n               :name (n / name\n                        :op1 \"Wales\")))",
      "(t / team\n   :name (n / name\n            :op1 \"Wales\"))",
      "(t / team\n   :name (n3 / name\n             :op1 \"St\"\n             :op2 \"Helens\"))",
      "(n / name\n   :op1 \"Wales\")",
      "(n / name\n   :op1 \"Lance\")",
      "(n / name\n   :op2 \"Hohaia\")",
      "(n / name\n   :op1 \"St\")",
      "(n / name\n   :op2 \"Helens\")",
      "(n / name\n   :op1 \"Grand\")",
      "(n / name\n   :op2 \"Final\")",
      "(o / ordinal-entity\n   :value 1)",
      "(o / ordinal-entity\n   :range (s / since\n             :op1 (p / punch-01\n                     :ARG0 (f / forward)\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Lance\"\n                                         :op2 \"Hohaia\")\n                               :part-of (t2 / team\n                                            :name (n3 / name\n                                                      :op1 \"St\"\n                                                      :op2 \"Helens\")))\n                     :time (m / moment\n                              :ARG0-of (o2 / open-02\n                                           :ARG1 (g / game\n                                                    :name (n4 / name\n                                                              :op1 \"Grand\"\n                                                              :op2 \"Final\")\n                                                    :time (s2 / season\n                                                              :mod (l / last))))))))",
      "(s / since\n   :op1 (p / punch-01\n           :ARG0 (f / forward)\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Lance\"\n                               :op2 \"Hohaia\")\n                     :part-of (t2 / team\n                                  :name (n3 / name\n                                            :op1 \"St\"\n                                            :op2 \"Helens\")))\n           :time (m / moment\n                    :ARG0-of (o2 / open-02\n                                 :ARG1 (g / game\n                                          :name (n4 / name\n                                                    :op1 \"Grand\"\n                                                    :op2 \"Final\")\n                                          :time (s2 / season\n                                                    :mod (l / last)))))))",
      "(p / punch-01\n   :ARG0 (f / forward)\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Lance\"\n                       :op2 \"Hohaia\")\n             :part-of (t2 / team\n                          :name (n3 / name\n                                    :op1 \"St\"\n                                    :op2 \"Helens\"))))",
      "(p / punch-01\n   :ARG0 (f / forward)\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Lance\"\n                       :op2 \"Hohaia\")\n             :part-of (t2 / team\n                          :name (n3 / name\n                                    :op1 \"St\"\n                                    :op2 \"Helens\")))\n   :time (m / moment\n            :ARG0-of (o2 / open-02\n                         :ARG1 (g / game\n                                  :name (n4 / name\n                                            :op1 \"Grand\"\n                                            :op2 \"Final\")\n                                  :time (s2 / season\n                                            :mod (l / last))))))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Lance\"\n              :op2 \"Hohaia\"))",
      "(p2 / person\n    :part-of (t2 / team\n                 :name (n3 / name\n                           :op1 \"St\"\n                           :op2 \"Helens\")))",
      "(m / moment\n   :ARG0-of (o2 / open-02\n                :ARG1 (g / game\n                         :name (n4 / name\n                                   :op1 \"Grand\"\n                                   :op2 \"Final\")\n                         :time (s2 / season\n                                   :mod (l / last)))))",
      "(o2 / open-02\n    :ARG1 (g / game\n             :name (n4 / name\n                       :op1 \"Grand\"\n                       :op2 \"Final\")\n             :time (s2 / season\n                       :mod (l / last))))",
      "(g / game\n   :name (n4 / name\n             :op1 \"Grand\"\n             :op2 \"Final\"))",
      "(g / game\n   :time (s2 / season\n             :mod (l / last)))",
      "(s2 / season\n    :mod (l / last))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (r2 / reception\n             :ARG1-of (b / brilliant-01)))",
      "(r / receive-01\n   :ARG0 (p / person\n            :age (t / temporal-quantity\n                    :quant 27\n                    :unit (y / year)))\n   :ARG1 (r2 / reception\n             :ARG1-of (b / brilliant-01))\n   :time (w / win-01\n            :ARG0 (t2 / team\n                      :name (n / name\n                               :op1 \"Wigan\"))\n            :ARG4 (t3 / team\n                      :name (n2 / name\n                                :op1 \"Warrington\"))\n            :manner (s / score-entity\n                       :op1 30\n                       :op2 20)))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 27\n           :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 27)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(r2 / reception\n    :ARG1-of (b / brilliant-01))",
      "(w / win-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Wigan\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Warrington\")))",
      "(w / win-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Wigan\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Warrington\"))\n   :manner (s / score-entity\n              :op1 30\n              :op2 20))",
      "(t2 / team\n    :name (n / name\n             :op1 \"Wigan\"))",
      "(t2 / team\n    :name (n2 / name\n              :op1 \"Warrington\"))",
      "(n / name\n   :op1 \"Wigan\")",
      "(n / name\n   :op1 \"Warrington\")",
      "(s / score-entity\n   :op1 30)",
      "(s / score-entity\n   :op2 20)"
    ],
    "smus": [
      "Ben Flower returned from a six-month ban.",
      "Ben Flower returned Thursday night from a six-month ban.",
      "Ben Flower",
      "Ben",
      "Flower",
      "Ben Flower got a ban.",
      "Ben Flower has been banned for 6 months.",
      "6",
      "a month",
      "Thursday",
      "Night.",
      "Wales forward appearance",
      "Wales' forward appearance is the first since punching St Helens' Lance Hohaia at the moments of the opening moments of last season's Grand Final.",
      "Wales forward.",
      "Wales",
      "St Helens",
      "Wales",
      "Lanc\u00f4me.",
      "Hohaia.",
      "St.",
      "Helens",
      "Grand.",
      "Final",
      "First..",
      "Since St Helens forward Lance Hohaia punched in the opening moments of last season's Grand Final, it's been the norm.",
      "Since the forward punched St Helens defender Lanance Hohaia in the opening moments of last season's Grand Final.",
      "Stanislas Hohaia of St Helens was pounced forward.",
      "St Helens forward Lance Hohaia pounded in the opening moments of last season's Grand Final.",
      "Lance Hohaia",
      "St Helens",
      "Moments of opening the Grand Final last season.",
      "The Grand Final of last season is open.",
      "Grand Final",
      "Last season's game",
      "Last season.",
      "The 27 year old received a brilliant reception.",
      "The 27-year-old received a brilliant reception when Warrington beat Waigan 30-20.",
      "27 year old",
      "27",
      "Year.",
      "Brilliant reception.",
      "Wigan v Warrington",
      "Wigan beat Warrington 30-20",
      "Wigan",
      "Warrington",
      "Wigan",
      "Warrington",
      "30",
      "20"
    ]
  },
  {
    "instance_id": "realsumm-79",
    "summary": "<t> Inspired by the aesthetic of the Belle Epoque era , the Jacques Garcia designed hotel is both opulent and edgy . </t> <t> A mix of Arabian and Napoleon III decor , the Pigalle haunt harkens back to the city 's pleasure houses of yesteryear . </t> <t> Also available for guest use : a charming conservatory , library bar and celestial spa available for private rental . </t>",
    "tree": [
      "(a / and\n   :ARG1-of (ii / inspire-01\n                :ARG0 (a2 / aesthetic\n                          :poss (e2 / era\n                                    :name (n2 / name\n                                              :op1 \"Belle\"\n                                              :op2 \"Epoque\")))))",
      "(a / and\n   :ARG1-of (ii / inspire-01\n                :ARG0 (a2 / aesthetic\n                          :poss (e2 / era\n                                    :name (n2 / name\n                                              :op1 \"Belle\"\n                                              :op2 \"Epoque\"))))\n   :op1 (o / opulent\n           :domain (h / hotel\n                      :ARG1-of (d / design-01\n                                  :ARG0 (p / person\n                                           :name (n / name\n                                                    :op1 \"Jacques\"\n                                                    :op2 \"Garcia\"))))))",
      "(a / and\n   :ARG1-of (ii / inspire-01\n                :ARG0 (a2 / aesthetic\n                          :poss (e2 / era\n                                    :name (n2 / name\n                                              :op1 \"Belle\"\n                                              :op2 \"Epoque\"))))\n   :op2 (e / edgy\n           :domain (h / hotel)))",
      "(o / opulent\n   :domain (h / hotel\n              :ARG1-of (d / design-01\n                          :ARG0 (p / person\n                                   :name (n / name\n                                            :op1 \"Jacques\"\n                                            :op2 \"Garcia\")))))",
      "(h / hotel\n   :ARG1-of (d / design-01\n               :ARG0 (p / person\n                        :name (n / name\n                                 :op1 \"Jacques\"\n                                 :op2 \"Garcia\"))))",
      "(d / design-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jacques\"\n                     :op2 \"Garcia\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Jacques\"\n            :op2 \"Garcia\"))",
      "(n / name\n   :op1 \"Jacques\")",
      "(n / name\n   :op2 \"Garcia\")",
      "(n / name\n   :op1 \"Belle\")",
      "(n / name\n   :op2 \"Epoque\")",
      "(e / edgy\n   :domain (h / hotel))",
      "(ii / inspire-01\n    :ARG0 (a2 / aesthetic\n              :poss (e2 / era\n                        :name (n2 / name\n                                  :op1 \"Belle\"\n                                  :op2 \"Epoque\"))))",
      "(a2 / aesthetic\n    :poss (e2 / era\n              :name (n2 / name\n                        :op1 \"Belle\"\n                        :op2 \"Epoque\")))",
      "(e2 / era\n    :name (n2 / name\n              :op1 \"Belle\"\n              :op2 \"Epoque\"))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\"))\n             :ARG2-of (m / mix-01\n                         :ARG1 (d / decor\n                                  :mod (w / world-region\n                                          :name (n2 / name\n                                                    :op1 \"Arabia\")))\n                         :ARG3 (d2 / decor\n                                   :mod (p / person\n                                           :name (n3 / name\n                                                     :op1 \"Napoleon\"\n                                                     :op2 \"III\")))))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure)\n             :poss c\n             :time (y / yesteryear)))",
      "(h / harken-01\n   :ARG0 (h2 / haunt-01\n             :location (c / city-district\n                          :name (n / name\n                                   :op1 \"Pigalle\"))\n             :ARG2-of (m / mix-01\n                         :ARG1 (d / decor\n                                  :mod (w / world-region\n                                          :name (n2 / name\n                                                    :op1 \"Arabia\")))\n                         :ARG3 (d2 / decor\n                                   :mod (p / person\n                                           :name (n3 / name\n                                                     :op1 \"Napoleon\"\n                                                     :op2 \"III\")))))\n   :ARG1 (h3 / house\n             :mod (p2 / pleasure)\n             :poss c\n             :time (y / yesteryear))\n   :direction (b / back))",
      "(h2 / haunt-01\n    :ARG2-of (m / mix-01\n                :ARG1 (d / decor\n                         :mod (w / world-region\n                                 :name (n2 / name\n                                           :op1 \"Arabia\")))\n                :ARG3 (d2 / decor\n                          :mod (p / person\n                                  :name (n3 / name\n                                            :op1 \"Napoleon\"\n                                            :op2 \"III\")))))",
      "(h2 / haunt-01\n    :ARG2-of (m / mix-01\n                :ARG1 (d / decor\n                         :mod (w / world-region\n                                 :name (n2 / name\n                                           :op1 \"Arabia\")))\n                :ARG3 (d2 / decor\n                          :mod (p / person\n                                  :name (n3 / name\n                                            :op1 \"Napoleon\"\n                                            :op2 \"III\"))))\n    :location (c / city-district\n                 :name (n / name\n                          :op1 \"Pigalle\")))",
      "(c / city-district\n   :name (n / name\n            :op1 \"Pigalle\"))",
      "(n / name\n   :op1 \"Pigalle\")",
      "(n / name\n   :op1 \"Arabia\")",
      "(n / name\n   :op1 \"Napoleon\")",
      "(n / name\n   :op2 \"III\")",
      "(m / mix-01\n   :ARG1 (d / decor\n            :mod (w / world-region\n                    :name (n2 / name\n                              :op1 \"Arabia\")))\n   :ARG3 (d2 / decor\n             :mod (p / person\n                     :name (n3 / name\n                               :op1 \"Napoleon\"\n                               :op2 \"III\"))))",
      "(d / decor\n   :mod (w / world-region\n           :name (n2 / name\n                     :op1 \"Arabia\")))",
      "(d / decor\n   :mod (p / person\n           :name (n3 / name\n                     :op1 \"Napoleon\"\n                     :op2 \"III\")))",
      "(w / world-region\n   :name (n2 / name\n             :op1 \"Arabia\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Napoleon\"\n             :op2 \"III\"))",
      "(h3 / house\n    :mod (p2 / pleasure))",
      "(h3 / house\n    :poss (c / city-district :name (n / name :op1 \"Pigalle\")))",
      "(h3 / house\n    :time (y / yesteryear))",
      "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (a2 / and\n                      :op1 (c / conservatory\n                              :ARG0-of (c2 / charm-01))\n                      :op2 (b / bar\n                              :mod (l / library))\n                      :op3 (s / spa\n                              :mod (c3 / celestial))\n                      :ARG2-of (a3 / available-02\n                                   :ARG2 (r / rent-01\n                                            :ARG1 a2\n                                            :ARG1-of (p / private-03)))))\n   :ARG2 (r / rent-01\n            :ARG1 a2\n            :ARG1-of (p / private-03)))",
      "(a / available-02\n   :ARG2 (u / use-01\n            :ARG0 (g / guest)\n            :ARG1 (a2 / and\n                      :op1 (c / conservatory\n                              :ARG0-of (c2 / charm-01))\n                      :op2 (b / bar\n                              :mod (l / library))\n                      :op3 (s / spa\n                              :mod (c3 / celestial))\n                      :ARG2-of (a3 / available-02\n                                   :ARG2 (r / rent-01\n                                            :ARG1 a2\n                                            :ARG1-of (p / private-03)))))\n   :ARG2 (r / rent-01\n            :ARG1 a2\n            :ARG1-of (p / private-03))\n   :mod (a4 / also))",
      "(u / use-01\n   :ARG0 (g / guest)\n   :ARG1 (a2 / and\n             :op1 (c / conservatory\n                     :ARG0-of (c2 / charm-01))\n             :op2 (b / bar\n                     :mod (l / library))\n             :op3 (s / spa\n                     :mod (c3 / celestial))\n             :ARG2-of (a3 / available-02\n                          :ARG2 (r / rent-01\n                                   :ARG1 a2\n                                   :ARG1-of (p / private-03)))))",
      "(a2 / and\n    :ARG2-of (a3 / available-02\n                 :ARG2 (r / rent-01\n                          :ARG1 a2\n                          :ARG1-of (p / private-03))))",
      "(a2 / and\n    :ARG2-of (a3 / available-02\n                 :ARG2 (r / rent-01\n                          :ARG1 a2\n                          :ARG1-of (p / private-03)))\n    :op1 (c / conservatory\n            :ARG0-of (c2 / charm-01)))",
      "(a2 / and\n    :ARG2-of (a3 / available-02\n                 :ARG2 (r / rent-01\n                          :ARG1 a2\n                          :ARG1-of (p / private-03)))\n    :op2 (b / bar\n            :mod (l / library)))",
      "(a2 / and\n    :ARG2-of (a3 / available-02\n                 :ARG2 (r / rent-01\n                          :ARG1 a2\n                          :ARG1-of (p / private-03)))\n    :op3 (s / spa\n            :mod (c3 / celestial)))",
      "(c / conservatory\n   :ARG0-of (c2 / charm-01))",
      "(b / bar\n   :mod (l / library))",
      "(s / spa\n   :mod (c3 / celestial))",
      "(r / rent-01\n   :ARG1 (a2 / and)\n   :ARG1-of (p / private-03))"
    ],
    "smus": [
      "and inspired by the aesthetic of the Belle Epoque era.",
      "The opulent hotel Jacques Garcia designed was inspired by the aesthetic of the Belle Epoque era.",
      "Inspired by the aesthetic of the Belle Epoque era, and the hotel is edgy.",
      "The opulent hotel Jacques Garcia designed is.",
      "The hotel was designed by Jacques Garcia.",
      "Jacques Garcia designed.",
      "Jacques Garcia",
      "Jacques",
      "Garcia",
      "Belle",
      "Epoque",
      "The hotel is edgy.",
      "The aesthetic of the Belle Epoque era is inspired.",
      "The aesthetic of the Belle Epoque era.",
      "The Belle Epoque era.",
      "The Pigalle haunt, a mix of Arab and Napoleonic decor, harkens back to the pleasure houses of yesteryear.",
      "The Pigalle haunt, a mix of Arab and Napoleonic decor, harkens back to the pleasure houses of yesteryear.",
      "a href=\"http://www.thehuffingtonpost.com/2011/03/arabic-decor-mix-with-napoleon-III-decor-mix.html\">Handloom: A Mix of Arab and Napoleonic Decor/a>",
      "In Pigalle, a mix of Arab and Napoleonic decor is the haunt.",
      "Pigalle",
      "Pigalle",
      "Arab",
      "Napoleon.",
      "III.",
      "Arab decor mixed with Napoleon III decor",
      "Arab decor",
      "Napoleon III decor",
      "Arab",
      "Napoleon III",
      "pleasure houses",
      "Pigalle houses",
      "yesteryear houses",
      "The charming conservatory, library bar and celestial spa available for private rent is available for guest use.",
      "The charming conservatory, library bar and celestial spa are also available for private rental for guest use.",
      "The guest will use the charming conservatory, library bar and celestial spa available for private rent.",
      "and available for private rent.",
      "A charming conservatory is available for private rent.",
      "There is a private rental available and there is a Library bar.",
      "Private rental is available and there is a celestial spa.",
      "Charming conservatory.",
      "Library bar.",
      "a celestial spa",
      "Private rental."
    ]
  },
  {
    "instance_id": "realsumm-80",
    "summary": "<t> Steven Finn was left out of the England squad for the West Indies tour . </t> <t> The Middlesex quick bowler has regained form after a tough 12 months . </t> <t> Finn said he 's back to bowling like he was as ' a carefree 21-year - old ' His last of 23 Test caps came for England back in 2013 . </t>",
    "tree": [
      "(l / leave-out-03\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Steven\"\n                     :op2 \"Finn\"))\n   :ARG2 (s / squad\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))\n            :subevent-of (t / tour-01\n                            :ARG0 c\n                            :ARG1 (c2 / country\n                                      :name (n3 / name\n                                                :op1 \"West\"\n                                                :op2 \"Indies\")))))",
      "(p / person\n   :name (n / name\n            :op1 \"Steven\"\n            :op2 \"Finn\"))",
      "(n / name\n   :op1 \"Steven\")",
      "(n / name\n   :op2 \"Finn\")",
      "(n / name\n   :op1 \"England\")",
      "(n / name\n   :op1 \"West\")",
      "(n / name\n   :op2 \"Indies\")",
      "(s / squad\n   :mod (c / country\n           :name (n2 / name\n                     :op1 \"England\")))",
      "(s / squad\n   :subevent-of (t / tour-01\n                   :ARG0 (c / country :name (n2 / name :op1 \"England\"))\n                   :ARG1 (c2 / country\n                             :name (n3 / name\n                                       :op1 \"West\"\n                                       :op2 \"Indies\"))))",
      "(c / country\n   :name (n2 / name\n             :op1 \"England\"))",
      "(c / country\n   :name (n3 / name\n             :op1 \"West\"\n             :op2 \"Indies\"))",
      "(t / tour-01\n   :ARG0 (c / country :name (n2 / name :op1 \"England\"))\n   :ARG1 (c2 / country\n             :name (n3 / name\n                       :op1 \"West\"\n                       :op2 \"Indies\")))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1-of (q / quick-02)\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :ARG1 (f / form))",
      "(r / regain-01\n   :ARG0 (b / bowler\n            :ARG1-of (q / quick-02)\n            :mod (t / team\n                    :name (n / name\n                             :op1 \"Middlesex\")))\n   :ARG1 (f / form)\n   :time (a / after\n            :op1 (t2 / temporal-quantity\n                     :quant 12\n                     :unit (m / month)\n                     :ARG1-of (t3 / tough-02))))",
      "(b / bowler\n   :ARG1-of (q / quick-02))",
      "(b / bowler\n   :ARG1-of (q / quick-02)\n   :mod (t / team\n           :name (n / name\n                    :op1 \"Middlesex\")))",
      "(t / team\n   :name (n / name\n            :op1 \"Middlesex\"))",
      "(n / name\n   :op1 \"Middlesex\")",
      "(a / after\n   :op1 (t2 / temporal-quantity\n            :quant 12\n            :unit (m / month)\n            :ARG1-of (t3 / tough-02)))",
      "(t2 / temporal-quantity\n    :ARG1-of (t3 / tough-02))",
      "(t2 / temporal-quantity\n    :ARG1-of (t3 / tough-02)\n    :quant 12)",
      "(t2 / temporal-quantity\n    :ARG1-of (t3 / tough-02)\n    :unit (m / month))",
      "(m / multi-sentence\n   :snt1 (s / say-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Finn\"))\n            :ARG1 (g / go-back-19\n                     :ARG1 p\n                     :ARG2 (b / bowl-01\n                              :ARG0 p\n                              :ARG1-of (r / resemble-01\n                                          :ARG2 (b2 / bowl-01\n                                                    :ARG0 p\n                                                    :time (p2 / person\n                                                              :age (t / temporal-quantity\n                                                                      :quant 21\n                                                                      :unit (y / year))\n                                                              :ARG1-of (c / care-free-03))))))))",
      "(m / multi-sentence\n   :snt2 (c2 / come-01\n             :ARG1 (c3 / cap\n                       :mod (l / last)\n                       :ARG1-of (ii / include-91\n                                    :ARG2 (c4 / cap\n                                              :quant 23\n                                              :mod (t2 / test)))\n                       :poss (c5 / country\n                                 :name (n2 / name\n                                           :op1 \"England\")))\n             :time (d / date-entity\n                      :year 2013\n                      :mod (b3 / back))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Finn\"))\n   :ARG1 (g / go-back-19\n            :ARG1 p\n            :ARG2 (b / bowl-01\n                     :ARG0 p\n                     :ARG1-of (r / resemble-01\n                                 :ARG2 (b2 / bowl-01\n                                           :ARG0 p\n                                           :time (p2 / person\n                                                     :age (t / temporal-quantity\n                                                             :quant 21\n                                                             :unit (y / year))\n                                                     :ARG1-of (c / care-free-03)))))))",
      "(p / person\n   :ARG1-of (c / care-free-03))",
      "(p / person\n   :ARG1-of (c / care-free-03)\n   :name (n / name\n            :op1 \"Finn\"))",
      "(p / person\n   :ARG1-of (c / care-free-03)\n   :age (t / temporal-quantity\n           :quant 21\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Finn\")",
      "(n / name\n   :op1 \"England\")",
      "(g / go-back-19\n   :ARG1 (p / person :name (n / name :op1 \"Finn\"))\n   :ARG2 (b / bowl-01\n            :ARG0 p\n            :ARG1-of (r / resemble-01\n                        :ARG2 (b2 / bowl-01\n                                  :ARG0 p\n                                  :time (p2 / person\n                                            :age (t / temporal-quantity\n                                                    :quant 21\n                                                    :unit (y / year))\n                                            :ARG1-of (c / care-free-03))))))",
      "(b / bowl-01\n   :ARG0 (p / person :name (n / name :op1 \"Finn\"))\n   :ARG1-of (r / resemble-01\n               :ARG2 (b2 / bowl-01\n                         :ARG0 p\n                         :time (p2 / person\n                                   :age (t / temporal-quantity\n                                           :quant 21\n                                           :unit (y / year))\n                                   :ARG1-of (c / care-free-03))))\n   :ARG0 p)",
      "(b / bowl-01\n   :ARG0 (p / person :name (n / name :op1 \"Finn\"))\n   :ARG1-of (r / resemble-01\n               :ARG2 (b2 / bowl-01\n                         :ARG0 p\n                         :time (p2 / person\n                                   :age (t / temporal-quantity\n                                           :quant 21\n                                           :unit (y / year))\n                                   :ARG1-of (c / care-free-03))))\n   :ARG0 p\n   :time (p2 / person\n             :age (t / temporal-quantity\n                     :quant 21\n                     :unit (y / year))\n             :ARG1-of (c / care-free-03)))",
      "(r / resemble-01\n   :ARG2 (b2 / bowl-01\n             :ARG0 (p / person :name (n / name :op1 \"Finn\"))\n             :time (p2 / person\n                       :age (t / temporal-quantity\n                               :quant 21\n                               :unit (y / year))\n                       :ARG1-of (c / care-free-03))))",
      "(t / temporal-quantity\n   :quant 21)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(c2 / come-01\n    :ARG1 (c3 / cap\n              :mod (l / last)\n              :ARG1-of (ii / include-91\n                           :ARG2 (c4 / cap\n                                     :quant 23\n                                     :mod (t2 / test)))\n              :poss (c5 / country\n                        :name (n2 / name\n                                  :op1 \"England\"))))",
      "(c2 / come-01\n    :ARG1 (c3 / cap\n              :mod (l / last)\n              :ARG1-of (ii / include-91\n                           :ARG2 (c4 / cap\n                                     :quant 23\n                                     :mod (t2 / test)))\n              :poss (c5 / country\n                        :name (n2 / name\n                                  :op1 \"England\")))\n    :time (d / date-entity\n             :year 2013\n             :mod (b3 / back)))",
      "(c3 / cap\n    :ARG1-of (ii / include-91\n                 :ARG2 (c4 / cap\n                           :quant 23\n                           :mod (t2 / test))))",
      "(c3 / cap\n    :ARG1-of (ii / include-91\n                 :ARG2 (c4 / cap\n                           :quant 23\n                           :mod (t2 / test)))\n    :mod (l / last))",
      "(c3 / cap\n    :ARG1-of (ii / include-91\n                 :ARG2 (c4 / cap\n                           :quant 23\n                           :mod (t2 / test)))\n    :quant 23)",
      "(c3 / cap\n    :ARG1-of (ii / include-91\n                 :ARG2 (c4 / cap\n                           :quant 23\n                           :mod (t2 / test)))\n    :mod (t2 / test))",
      "(c3 / cap\n    :ARG1-of (ii / include-91\n                 :ARG2 (c4 / cap\n                           :quant 23\n                           :mod (t2 / test)))\n    :poss (c5 / country\n              :name (n2 / name\n                        :op1 \"England\")))",
      "(ii / include-91\n    :ARG2 (c4 / cap\n              :quant 23\n              :mod (t2 / test)))",
      "(c5 / country\n    :name (n2 / name\n              :op1 \"England\"))",
      "(d / date-entity\n   :year 2013)",
      "(d / date-entity\n   :mod (b3 / back))"
    ],
    "smus": [
      "Steven Finn was left out of the England squad for the West Indies tour.",
      "Steven Finn",
      "Steve",
      "Finn.",
      "England",
      "West",
      "the indies",
      "The English squad",
      "The squad for England's tour of the West Indies.",
      "England (EE)",
      "West Indies (WI)",
      "England on tour of West Indies",
      "Middlesex's quick bowler has regained form.",
      "Middlesex's quick bowler has regained form after 12 tough months.",
      "Quick bowler.",
      "Middlesex quick bowler",
      "Middlesex",
      "Middlesex.",
      "After tough 12 months.",
      "Tough.",
      "12 tough days.",
      "tough months.",
      "\"I'm going back to bowling like a carefree 21 year old,\" Finn said.",
      "The last of England's 23 test caps came back in 2013...",
      "\"I went back to bowling like a carefree 21 year old,\" Finn said.",
      "Carefree.",
      "-Finn, the carefree.",
      "21 year old carefree.",
      "Finn.",
      "England",
      "Finn went back to bowling like a carefree 21 year old.",
      "Finn bowled like a carefree 21 year old.",
      "Finn bowled like a carefree 21 year old.",
      "Like Finn bowling when he was carefree, 21.",
      "21",
      "Year.",
      "The last of England's 23 test caps came from the UK.",
      "The last of England's 23 test caps came back in 2013",
      "One of 23 test caps.",
      "The last of 23 test caps.",
      "23 of the 23 test caps.",
      "23 of the test caps are test caps.",
      "England has 23 test caps.",
      "23 of the test caps.",
      "England (EE)",
      "2013-03-07",
      "Back in the day."
    ]
  },
  {
    "instance_id": "realsumm-81",
    "summary": "<t> Paul Armstrong flew to Cyprus to celebrate new job as IT project manager . </t> <t> Was stopped at airport with stun gun , baton and knuckle duster in his bag . </t> <t> Pleaded guilty to possession of a firearm and lost his job before starting it . </t> <t> 26-year - old was sentenced to eight months in jail , suspended for two years . </t>",
    "tree": [
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\")))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\"))\n   :destination (c / country\n                   :name (n2 / name\n                             :op1 \"Cyprus\")))",
      "(f / fly-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Paul\"\n                     :op2 \"Armstrong\")))",
      "(p / person\n   :ARG0-of (m / manage-01\n               :ARG1 (p3 / project\n                         :mod (t / technology\n                                 :mod (ii / information)))))",
      "(p / person\n   :ARG0-of (m / manage-01\n               :ARG1 (p3 / project\n                         :mod (t / technology\n                                 :mod (ii / information))))\n   :name (n / name\n            :op1 \"Paul\"\n            :op2 \"Armstrong\"))",
      "(n / name\n   :op1 \"Paul\")",
      "(n / name\n   :op2 \"Armstrong\")",
      "(n / name\n   :op1 \"Cyprus\")",
      "(c / country\n   :name (n2 / name\n             :op1 \"Cyprus\"))",
      "(c2 / celebrate-01\n    :ARG0 (p / person :name (n / name :op1 \"Paul\" :op2 \"Armstrong\"))\n    :ARG1 (j / job\n             :ARG1-of (n3 / new-01)\n             :topic (p2 / person\n                        :ARG0-of (m / manage-01\n                                    :ARG1 (p3 / project\n                                              :mod (t / technology\n                                                      :mod (ii / information)))))))",
      "(j / job\n   :ARG1-of (n3 / new-01))",
      "(j / job\n   :ARG1-of (n3 / new-01)\n   :topic (p2 / person\n              :ARG0-of (m / manage-01\n                          :ARG1 (p3 / project\n                                    :mod (t / technology\n                                            :mod (ii / information))))))",
      "(m / manage-01\n   :ARG1 (p3 / project\n             :mod (t / technology\n                     :mod (ii / information))))",
      "(p3 / project\n    :mod (t / technology\n            :mod (ii / information)))",
      "(t / technology\n   :mod (ii / information))",
      "(s / stop-01\n   :ARG1 (h / he))",
      "(s / stop-01\n   :ARG1 (h / he)\n   :location (a / airport))",
      "(s / stop-01\n   :ARG1 (h / he)\n   :instrument (a2 / and\n                   :op1 (g / gun\n                           :ARG2-of (s2 / stun-01))\n                   :op2 (b / baton)\n                   :op3 (d / duster\n                           :mod (k / knuckle))\n                   :location (b2 / bag\n                                 :poss h)))",
      "(a2 / and\n    :op1 (g / gun\n            :ARG2-of (s2 / stun-01)))",
      "(a2 / and\n    :op2 (b / baton))",
      "(a2 / and\n    :op3 (d / duster\n            :mod (k / knuckle)))",
      "(a2 / and\n    :location (b2 / bag\n                  :poss (h / he)))",
      "(g / gun\n   :ARG2-of (s2 / stun-01))",
      "(d / duster\n   :mod (k / knuckle))",
      "(b2 / bag\n    :poss (h / he))",
      "(a / and\n   :op1 (p / plead-02\n           :ARG1 (g / guilty-01\n                    :ARG1 (h / he)\n                    :ARG2 (p2 / possess-01\n                              :ARG0 h\n                              :ARG1 (f / firearm)))))",
      "(a / and\n   :op2 (l / lose-02\n           :ARG0 (h / he)\n           :ARG1 (j / job\n                    :poss h)\n           :time (b / before\n                    :op1 (s / start-01\n                            :ARG0 h\n                            :ARG1 (ii / it)))))",
      "(p / plead-02\n   :ARG1 (g / guilty-01\n            :ARG1 (h / he)\n            :ARG2 (p2 / possess-01\n                      :ARG0 h\n                      :ARG1 (f / firearm))))",
      "(g / guilty-01\n   :ARG1 (h / he)\n   :ARG2 (p2 / possess-01\n             :ARG0 h\n             :ARG1 (f / firearm)))",
      "(p2 / possess-01\n    :ARG0 (h / he)\n    :ARG1 (f / firearm))",
      "(l / lose-02\n   :ARG0 (h / he)\n   :ARG1 (j / job\n            :poss h))",
      "(l / lose-02\n   :ARG0 (h / he)\n   :ARG1 (j / job\n            :poss h)\n   :time (b / before\n            :op1 (s / start-01\n                    :ARG0 h\n                    :ARG1 (ii / it))))",
      "(j / job\n   :poss (h / he))",
      "(b / before\n   :op1 (s / start-01\n           :ARG0 (h / he)\n           :ARG1 (ii / it)))",
      "(s / start-01\n   :ARG0 (h / he)\n   :ARG1 (ii / it))",
      "(s / sentence-01\n   :ARG1 (p / person\n            :age (t / temporal-quantity\n                    :quant 26\n                    :unit (y / year)))\n   :ARG2 (a / and\n            :op1 (t2 / temporal-quantity\n                     :quant 8\n                     :unit (m / month)\n                     :location (j / jail))\n            :op2 (s2 / suspend-01\n                     :ARG1 t2\n                     :duration (t3 / temporal-quantity\n                                   :quant 2\n                                   :unit (y2 / year)))))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 26\n           :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 26)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(t / temporal-quantity\n   :quant 8)",
      "(t / temporal-quantity\n   :unit (m / month))",
      "(t / temporal-quantity\n   :location (j / jail))",
      "(t / temporal-quantity\n   :quant 2)",
      "(t / temporal-quantity\n   :unit (y2 / year))",
      "(a / and\n   :op1 (t2 / temporal-quantity\n            :quant 8\n            :unit (m / month)\n            :location (j / jail)))",
      "(a / and\n   :op2 (s2 / suspend-01\n            :ARG1 (t2 / temporal-quantity)\n            :duration (t3 / temporal-quantity\n                          :quant 2\n                          :unit (y2 / year))))",
      "(s2 / suspend-01\n    :ARG1 (t2 / temporal-quantity))",
      "(s2 / suspend-01\n    :ARG1 (t2 / temporal-quantity)\n    :duration (t3 / temporal-quantity\n                  :quant 2\n                  :unit (y2 / year)))"
    ],
    "smus": [
      "Paul Armstrong flew.",
      "Paul Armstrong flew to Cyprus.",
      "Paul Armstrong flew.",
      "a manager of an information technology project",
      "Paul Armstrong is the manager of an information technology project.",
      "Paul",
      "Armstrong",
      "Cyprus",
      "Cyprus (CY)",
      "Paul Armstrong will celebrate a new job as IT project manager.",
      "New job.",
      "A new job for the IT project manager.",
      "Management of an information technology project.",
      "IT project",
      "Information technology (IT)",
      "He was stopped.",
      "He was stopped at the airport.",
      "He was stopped with a stun gun, a baton and a knuckle duster in his bag.",
      "And a stun gun.",
      "and the baton.",
      "and a knuckle duster.",
      "and in his bag.",
      "A stun gun.",
      "knuckle duster",
      "His bag.",
      "And he pleaded guilty to possession of a firearm.",
      "And before he was starting it he lost his job.",
      "He pleaded guilty to possession of a firearm.",
      "He was guilty of possession of a firearm.",
      "He was in possession of a firearm.",
      "He lost his job.",
      "He lost his job before starting it.",
      "His job.",
      "before he started it.",
      "He's starting it.",
      "Two years old, the sentence was eight months in jail suspended for two years.",
      "2 years old",
      "2",
      "Years.",
      "8",
      "Months",
      "In jail.",
      "Two.",
      "Years.",
      "8 months in jail.",
      "And the suspension of the two years.",
      "The suspension was made.",
      "The suspension was for two years."
    ]
  },
  {
    "instance_id": "realsumm-82",
    "summary": "<t> Australian fashion designer Alex Perry wo n't show at this year 's MBFWA . </t> <t> The designer is excited to kick back and enjoy the shows from front row . </t> <t> This will be the designer 's second MBFWA he has missed in two decades . </t> <t> Perry is now focusing on global expansion in Asia and Middle East . </t>",
    "tree": [
      "(s / show-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                        :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\"))))",
      "(s / show-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                        :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :polarity -)",
      "(s / show-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Alex\"\n                     :op2 \"Perry\")\n            :ARG0-of (d / design-01\n                        :ARG1 (f / fashion))\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"Australia\")))\n   :time (e / event\n            :name (n3 / name\n                      :op1 \"MBFWA\")\n            :mod (y / year\n                    :mod (t / this))))",
      "(p / person\n   :ARG0-of (d / design-01\n               :ARG1 (f / fashion)))",
      "(p / person\n   :ARG0-of (d / design-01\n               :ARG1 (f / fashion))\n   :name (n / name\n            :op1 \"Alex\"\n            :op2 \"Perry\"))",
      "(p / person\n   :ARG0-of (d / design-01\n               :ARG1 (f / fashion))\n   :mod (c / country\n           :name (n2 / name\n                     :op1 \"Australia\")))",
      "(n / name\n   :op1 \"Alex\")",
      "(n / name\n   :op2 \"Perry\")",
      "(n / name\n   :op1 \"Australia\")",
      "(n / name\n   :op1 \"MBFWA\")",
      "(d / design-01\n   :ARG1 (f / fashion))",
      "(c / country\n   :name (n2 / name\n             :op1 \"Australia\"))",
      "(e / event\n   :name (n3 / name\n             :op1 \"MBFWA\"))",
      "(e / event\n   :mod (y / year\n           :mod (t / this)))",
      "(y / year\n   :mod (t / this))",
      "(e / excite-01\n   :ARG0 (a / and\n            :op1 (k / kick-01\n                    :ARG0 (p / person\n                             :ARG0-of (d / design-01))\n                    :direction (b / back))\n            :op2 (e2 / enjoy-01\n                     :ARG0 p\n                     :ARG1 (s / show-04)\n                     :location (r / row\n                                  :mod (f / front))))\n   :ARG1 p)",
      "(a / and\n   :op1 (k / kick-01\n           :ARG0 (p / person\n                    :ARG0-of (d / design-01))\n           :direction (b / back)))",
      "(a / and\n   :op2 (e2 / enjoy-01\n            :ARG0 (p / person)\n            :ARG1 (s / show-04)\n            :location (r / row\n                         :mod (f / front))))",
      "(k / kick-01\n   :ARG0 (p / person\n            :ARG0-of (d / design-01)))",
      "(k / kick-01\n   :ARG0 (p / person\n            :ARG0-of (d / design-01))\n   :direction (b / back))",
      "(p / person\n   :ARG0-of (d / design-01))",
      "(e2 / enjoy-01\n    :ARG0 (p / person)\n    :ARG1 (s / show-04))",
      "(e2 / enjoy-01\n    :ARG0 (p / person)\n    :ARG1 (s / show-04)\n    :location (r / row\n                 :mod (f / front)))",
      "(r / row\n   :mod (f / front))",
      "(m / miss-01\n   :ARG0 (p / person\n            :ARG0-of (d / design-01))\n   :ARG1 (m2 / magazine\n             :name (n / name\n                      :op1 \"MBFWA\")))",
      "(m / miss-01\n   :ARG0 (p / person\n            :ARG0-of (d / design-01))\n   :ARG1 (m2 / magazine\n             :name (n / name\n                      :op1 \"MBFWA\"))\n   :ord (o / ordinal-entity\n           :value 2\n           :range (t / temporal-quantity\n                     :quant 2\n                     :unit (d2 / decade))))",
      "(m / miss-01\n   :ARG0 (p / person\n            :ARG0-of (d / design-01))\n   :ARG1 (m2 / magazine\n             :name (n / name\n                      :op1 \"MBFWA\"))\n   :domain (t2 / this))",
      "(p / person\n   :ARG0-of (d / design-01))",
      "(m2 / magazine\n    :name (n / name\n             :op1 \"MBFWA\"))",
      "(n / name\n   :op1 \"MBFWA\")",
      "(o / ordinal-entity\n   :value 2)",
      "(o / ordinal-entity\n   :range (t / temporal-quantity\n             :quant 2\n             :unit (d2 / decade)))",
      "(t / temporal-quantity\n   :quant 2)",
      "(t / temporal-quantity\n   :unit (d2 / decade))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :ARG1 (e / expand-01\n            :ARG1 p\n            :ARG2 (g / globe)\n            :location (a / and\n                         :op1 (c / continent\n                                 :name (n2 / name\n                                           :op1 \"Asia\"))\n                         :op2 (w / world-region\n                                 :name (n3 / name\n                                           :op1 \"Middle\"\n                                           :op2 \"East\")))))",
      "(f / focus-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Perry\"))\n   :ARG1 (e / expand-01\n            :ARG1 p\n            :ARG2 (g / globe)\n            :location (a / and\n                         :op1 (c / continent\n                                 :name (n2 / name\n                                           :op1 \"Asia\"))\n                         :op2 (w / world-region\n                                 :name (n3 / name\n                                           :op1 \"Middle\"\n                                           :op2 \"East\"))))\n   :time (n4 / now))",
      "(p / person\n   :name (n / name\n            :op1 \"Perry\"))",
      "(n / name\n   :op1 \"Perry\")",
      "(n / name\n   :op1 \"Asia\")",
      "(n / name\n   :op1 \"Middle\")",
      "(n / name\n   :op2 \"East\")",
      "(e / expand-01\n   :ARG1 (p / person :name (n / name :op1 \"Perry\"))\n   :ARG2 (g / globe))",
      "(e / expand-01\n   :ARG1 (p / person :name (n / name :op1 \"Perry\"))\n   :ARG2 (g / globe)\n   :location (a / and\n                :op1 (c / continent\n                        :name (n2 / name\n                                  :op1 \"Asia\"))\n                :op2 (w / world-region\n                        :name (n3 / name\n                                  :op1 \"Middle\"\n                                  :op2 \"East\"))))",
      "(a / and\n   :op1 (c / continent\n           :name (n2 / name\n                     :op1 \"Asia\")))",
      "(a / and\n   :op2 (w / world-region\n           :name (n3 / name\n                     :op1 \"Middle\"\n                     :op2 \"East\")))",
      "(c / continent\n   :name (n2 / name\n             :op1 \"Asia\"))",
      "(w / world-region\n   :name (n3 / name\n             :op1 \"Middle\"\n             :op2 \"East\"))"
    ],
    "smus": [
      "Australian fashion designer Alex Perry will show.",
      "Australian fashion designer Alex Perry didn't show.",
      "Australian fashion designer Alex Perry will show at this year's MBFWA.",
      "fashion designer",
      "fashion designer Alex Perry",
      "Australian fashion designer",
      "Alex",
      "Perry.",
      "Australia (AU)",
      "MBFWA",
      "fashion design",
      "Australia (AU)",
      "MBFWA",
      "This year.",
      "This year.",
      "The designer was excited to kick back and enjoy the shows in the front row.",
      "And the designer will kick back.",
      "And people will enjoy the shows in front row.",
      "Kick the designer.",
      "The designer will kick back.",
      "Designer.",
      "People will enjoy the shows.",
      "People will enjoy the shows in front row.",
      "Front row.",
      "The designer has missed MBFWA.",
      "The designer has missed MBFWA for the second time in two decades.",
      "This is the designer missing from MBFWA.",
      "Designer.",
      "MBFWA",
      "MBFWA",
      "2.",
      "2 decades.",
      "Two.",
      "decades.",
      "Perry is focusing on global expansion in Asia and the Middle East.",
      "Perry is now focusing on his global expansion in Asia and the Middle East.",
      "Perry",
      "Perry.",
      "Asia",
      "Middle.",
      "East",
      "Perry's expansion is global.",
      "Perry's global expansion is in Asia and the Middle East.",
      "and Asia.",
      "and the Middle East.",
      "Asia (AS)",
      "Middle East"
    ]
  },
  {
    "instance_id": "realsumm-83",
    "summary": "<t> An Indiana public school performance of American Pie ended in tragedy Wednesday when a riser buckled just as dozens danced on - stage . </t> <t> More than a dozen people were injured at the Westfield High performance and one student was taken to a hospital in critical condition . </t> <t> Students said there had been no issues when they previously practiced the song on the stage with the same number of people . </t>",
    "tree": [
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))\n                     :ARG1-of (p2 / public-02))\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :ARG2 (t / tragedy))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))\n                     :ARG1-of (p2 / public-02))\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :ARG2 (t / tragedy)\n   :time (d / date-entity\n            :weekday (w / wednesday)))",
      "(e / end-01\n   :ARG1 (p / perform-01\n            :ARG0 (s / school\n                     :location (s2 / state\n                                   :name (n / name\n                                            :op1 \"Indiana\"))\n                     :ARG1-of (p2 / public-02))\n            :ARG1 (m / music\n                     :name (n2 / name\n                               :op1 \"American\"\n                               :op2 \"Pie\")))\n   :ARG2 (t / tragedy)\n   :time (b / buckle-01\n            :ARG1 (p3 / person\n                      :ARG0-of (r / rise-01))\n            :time (d2 / dance-01\n                      :ARG0 (p4 / person\n                                :quant (m2 / multiple\n                                           :op1 12))\n                      :location (s3 / stage))))",
      "(p / perform-01\n   :ARG0 (s / school\n            :location (s2 / state\n                          :name (n / name\n                                   :op1 \"Indiana\"))\n            :ARG1-of (p2 / public-02))\n   :ARG1 (m / music\n            :name (n2 / name\n                      :op1 \"American\"\n                      :op2 \"Pie\")))",
      "(s / school\n   :ARG1-of (p2 / public-02))",
      "(s / school\n   :ARG1-of (p2 / public-02)\n   :location (s2 / state\n                 :name (n / name\n                          :op1 \"Indiana\")))",
      "(s2 / state\n    :name (n / name\n             :op1 \"Indiana\"))",
      "(n / name\n   :op1 \"Indiana\")",
      "(n / name\n   :op1 \"American\")",
      "(n / name\n   :op2 \"Pie\")",
      "(m / music\n   :name (n2 / name\n             :op1 \"American\"\n             :op2 \"Pie\"))",
      "(d / date-entity\n   :weekday (w / wednesday))",
      "(b / buckle-01\n   :ARG1 (p3 / person\n             :ARG0-of (r / rise-01)))",
      "(b / buckle-01\n   :ARG1 (p3 / person\n             :ARG0-of (r / rise-01))\n   :time (d2 / dance-01\n             :ARG0 (p4 / person\n                       :quant (m2 / multiple\n                                  :op1 12))\n             :location (s3 / stage)))",
      "(p3 / person\n    :ARG0-of (r / rise-01))",
      "(p3 / person\n    :ARG0-of (r / rise-01)\n    :quant (m2 / multiple\n               :op1 12))",
      "(d2 / dance-01\n    :ARG0 (p4 / person\n              :quant (m2 / multiple\n                         :op1 12)))",
      "(d2 / dance-01\n    :ARG0 (p4 / person\n              :quant (m2 / multiple\n                         :op1 12))\n    :location (s3 / stage))",
      "(m2 / multiple\n    :op1 12)",
      "(a / and\n   :op1 (ii / injure-01\n            :ARG1 (p / person\n                     :quant (m / more-than\n                               :op1 12))\n            :time (p2 / perform-01\n                      :ARG0 (h / high-school\n                               :name (n / name\n                                        :op1 \"Westfield\"\n                                        :op2 \"High\")))))",
      "(a / and\n   :op2 (t / take-01\n           :ARG1 (p3 / person\n                     :quant 1\n                     :ARG0-of (s / study-01))\n           :ARG3 (h2 / hospital)\n           :manner (c / condition\n                      :ARG1-of (c2 / critical-03))))",
      "(ii / injure-01\n    :ARG1 (p / person\n             :quant (m / more-than\n                       :op1 12)))",
      "(ii / injure-01\n    :ARG1 (p / person\n             :quant (m / more-than\n                       :op1 12))\n    :time (p2 / perform-01\n              :ARG0 (h / high-school\n                       :name (n / name\n                                :op1 \"Westfield\"\n                                :op2 \"High\"))))",
      "(p / person\n   :ARG0-of (s / study-01))",
      "(p / person\n   :ARG0-of (s / study-01)\n   :quant (m / more-than\n             :op1 12))",
      "(p / person\n   :ARG0-of (s / study-01)\n   :quant 1)",
      "(m / more-than\n   :op1 12)",
      "(p2 / perform-01\n    :ARG0 (h / high-school\n             :name (n / name\n                      :op1 \"Westfield\"\n                      :op2 \"High\")))",
      "(h / high-school\n   :name (n / name\n            :op1 \"Westfield\"\n            :op2 \"High\"))",
      "(n / name\n   :op1 \"Westfield\")",
      "(n / name\n   :op2 \"High\")",
      "(t / take-01\n   :ARG1 (p3 / person\n             :quant 1\n             :ARG0-of (s / study-01))\n   :ARG3 (h2 / hospital))",
      "(t / take-01\n   :ARG1 (p3 / person\n             :quant 1\n             :ARG0-of (s / study-01))\n   :ARG3 (h2 / hospital)\n   :manner (c / condition\n              :ARG1-of (c2 / critical-03)))",
      "(c / condition\n   :ARG1-of (c2 / critical-03))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (s2 / study-01))\n   :ARG1 (ii / issue-02\n             :polarity -\n             :time (p2 / practice-01\n                       :ARG0 p\n                       :ARG1 (s3 / song)\n                       :location (s4 / stage)\n                       :accompanier (p3 / person\n                                        :quant (n / number\n                                                  :ARG1-of (s5 / same-01)))\n                       :time (p4 / previous))))",
      "(p / person\n   :ARG0-of (s2 / study-01))",
      "(p / person\n   :ARG0-of (s2 / study-01)\n   :quant (n / number\n             :ARG1-of (s5 / same-01)))",
      "(ii / issue-02\n    :polarity -)",
      "(ii / issue-02\n    :time (p2 / practice-01\n              :ARG0 (p / person)\n              :ARG1 (s3 / song)\n              :location (s4 / stage)\n              :accompanier (p3 / person\n                               :quant (n / number\n                                         :ARG1-of (s5 / same-01)))\n              :time (p4 / previous)))",
      "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (s3 / song))",
      "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (s3 / song)\n    :location (s4 / stage))",
      "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (s3 / song)\n    :accompanier (p3 / person\n                     :quant (n / number\n                               :ARG1-of (s5 / same-01))))",
      "(p2 / practice-01\n    :ARG0 (p / person)\n    :ARG1 (s3 / song)\n    :time (p4 / previous))",
      "(n / number\n   :ARG1-of (s5 / same-01))"
    ],
    "smus": [
      "The Indiana public school's performance of American Pie ended in tragedy.",
      "A public school in Indiana's American Pie performance ended in tragedy Wednesday.",
      "The Indiana public school's performance of American Pie ended in tragedy as the riser buckled as dozens danced on stage.",
      "A public school in Indiana performs American Pie.",
      "Public school.",
      "INDIA'S PUBLIC SHOOLS",
      "Indiana (IN)",
      "Indiana",
      "American.",
      "Pie",
      "American Pie.",
      "Wednesday",
      "The risers buckled.",
      "The riser buckled as dozens danced on stage.",
      "The riser.",
      "Dozens of risers.",
      "Dozens danced.",
      "Dozens danced on stage.",
      "Dozens.",
      "And more than one person was injured during Westfield High's performance.",
      "And one student was taken to hospital in critical condition.",
      "More than one person was injured.",
      "More than one person was injured during Westfield High's performance.",
      "Student.",
      "more than one student",
      "One student.",
      "More than one",
      "Westfield High School's performance",
      "Westfield High School",
      "Westfield",
      "High.",
      "One student was taken to a hospital.",
      "One student was taken to a hospital in critical condition.",
      "Critical condition.",
      "Students said there were no issues when they had previously practiced the song on stage with the same number of people.",
      "Students",
      "There are the same number of students.",
      "No issues.",
      "Issues occur when people have previously practiced a song on stage with the same number of people.",
      "People practice the song.",
      "People practicing the song on stage.",
      "People practice the song with the same number of people.",
      "People have previously been practicing the song.",
      "Same number."
    ]
  },
  {
    "instance_id": "realsumm-84",
    "summary": "<t> Manchester City have been linked with summer move for Raheem Sterling . </t> <t> Sterling has two years left on his contract and is stalling on a new deal . </t> <t> Brendan Rodgers says a move to City would not be step up for Sterling . </t> <t> Indicating it will take the Manchester club 20 years to eclipse Liverpool . </t>",
    "tree": [
      "(l / link-01\n   :ARG1 (m / move-03\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Manchester\"\n                              :op2 \"City\"))\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Raheem\"\n                               :op2 \"Sterling\"))\n            :time (d / date-entity\n                     :season (s / summer))))",
      "(m / move-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Manchester\"\n                     :op2 \"City\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Raheem\"\n                      :op2 \"Sterling\")))",
      "(m / move-03\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Manchester\"\n                     :op2 \"City\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Raheem\"\n                      :op2 \"Sterling\"))\n   :time (d / date-entity\n            :season (s / summer)))",
      "(t / team\n   :name (n / name\n            :op1 \"Manchester\"\n            :op2 \"City\"))",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op2 \"City\")",
      "(n / name\n   :op1 \"Raheem\")",
      "(n / name\n   :op2 \"Sterling\")",
      "(p / person\n   :name (n2 / name\n             :op1 \"Raheem\"\n             :op2 \"Sterling\"))",
      "(d / date-entity\n   :season (s / summer))",
      "(a / and\n   :op1 (l / leave-17\n           :ARG1 (c / contract\n                    :poss (p / person\n                             :name (n / name\n                                      :op1 \"Sterling\")))\n           :ARG2 (t / temporal-quantity\n                    :quant 2\n                    :unit (y / year))))",
      "(a / and\n   :op2 (s / stall-01\n           :ARG1 (p / person :name (n / name :op1 \"Sterling\"))\n           :ARG2 (d / deal\n                    :ARG1-of (n2 / new-01))))",
      "(l / leave-17\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Sterling\")))\n   :ARG2 (t / temporal-quantity\n            :quant 2\n            :unit (y / year)))",
      "(c / contract\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Sterling\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Sterling\"))",
      "(n / name\n   :op1 \"Sterling\")",
      "(t / temporal-quantity\n   :quant 2)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(s / stall-01\n   :ARG1 (p / person :name (n / name :op1 \"Sterling\"))\n   :ARG2 (d / deal\n            :ARG1-of (n2 / new-01)))",
      "(d / deal\n   :ARG1-of (n2 / new-01))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brendan\"\n                     :op2 \"Rodgers\"))\n   :ARG1 (s2 / step-01\n             :polarity -\n             :ARG4 (m / move-01\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Sterling\"))\n                      :ARG2 (c / city))\n             :direction (u / up)))",
      "(p / person\n   :name (n / name\n            :op1 \"Brendan\"\n            :op2 \"Rodgers\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Sterling\"))",
      "(n / name\n   :op1 \"Brendan\")",
      "(n / name\n   :op2 \"Rodgers\")",
      "(n / name\n   :op1 \"Sterling\")",
      "(s2 / step-01\n    :ARG4 (m / move-01\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sterling\"))\n             :ARG2 (c / city)))",
      "(s2 / step-01\n    :ARG4 (m / move-01\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sterling\"))\n             :ARG2 (c / city))\n    :polarity -)",
      "(s2 / step-01\n    :ARG4 (m / move-01\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Sterling\"))\n             :ARG2 (c / city))\n    :direction (u / up))",
      "(m / move-01\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sterling\"))\n   :ARG2 (c / city))",
      "(ii / indicate-01\n    :ARG1 (t / take-10\n             :ARG0 (e / eclipse-01\n                      :ARG0 (c / club\n                               :name (n / name\n                                        :op1 \"Manchester\"))\n                      :ARG1 (t2 / team\n                                :name (n2 / name\n                                          :op1 \"Liverpool\")))\n             :ARG1 (t3 / temporal-quantity\n                       :quant 20\n                       :unit (y / year))\n             :ARG2 c))",
      "(t / take-10\n   :ARG0 (e / eclipse-01\n            :ARG0 (c / club\n                     :name (n / name\n                              :op1 \"Manchester\"))\n            :ARG1 (t2 / team\n                      :name (n2 / name\n                                :op1 \"Liverpool\")))\n   :ARG1 (t3 / temporal-quantity\n             :quant 20\n             :unit (y / year))\n   :ARG2 c)",
      "(e / eclipse-01\n   :ARG0 (c / club\n            :name (n / name\n                     :op1 \"Manchester\"))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Liverpool\")))",
      "(c / club\n   :name (n / name\n            :op1 \"Manchester\"))",
      "(n / name\n   :op1 \"Manchester\")",
      "(n / name\n   :op1 \"Liverpool\")",
      "(t2 / team\n    :name (n2 / name\n              :op1 \"Liverpool\"))",
      "(t3 / temporal-quantity\n    :quant 20)",
      "(t3 / temporal-quantity\n    :unit (y / year))"
    ],
    "smus": [
      "The Manchester City move to Raheem Sterling in the summer was linked with the move.",
      "Manchester City have made a move for Raheem Sternling.",
      "Manchester City made the move for Raheem Sterling in the summer.",
      "Manchester City",
      "Manchester",
      "City",
      "Raheem",
      "-Sterling",
      "Raheem Sternling",
      "Summer.",
      "And Sternling's contract was left for 2 years.",
      "And Sterning is stalling the new deal.",
      "Sternling's contract was left for 2 years.",
      "Sternling's contract.",
      "Sternling.",
      "Sternling",
      "Two.",
      "Years.",
      "Sterning is stalling the new deal.",
      "New deal.",
      "\"Sterling's move up to the City is not a step up,\" Brenda Rodgers says.",
      "Brendan Rodgers",
      "Sternling.",
      "Brendan",
      "Rogers",
      "Sternling",
      "Step to Sternling's move to the City.",
      "Not a step toward Sterning moving to the City.",
      "Step up from Sternling's move to the City.",
      "Sternling moved to the City.",
      "indicating that it will take Manchester 20 years to eclipse liverpool.",
      "It will take Manchester 20 years to eclipse Liverpool.",
      "Manchester club to eclipse liverpool",
      "Manchester United",
      "Manchester",
      "Liverpool",
      "Liverpool",
      "20",
      "Years."
    ]
  },
  {
    "instance_id": "realsumm-85",
    "summary": "<t> Up to one in five Chinese eateries could be selling soup using illegal meat . </t> <t> Charity says it is often disguised on menu or only offered if requested . </t> <t> Loophole lets people bring 20 kg of meat into UK for personal consumption . </t>",
    "tree": [
      "(p / possible-01\n   :ARG1 (s / sell-01\n            :ARG0 (r / restaurant\n                     :mod (c / country\n                             :name (n / name\n                                      :op1 \"China\"))\n                     :ARG1-of (ii / include-91\n                                  :ARG2 (p2 / person\n                                            :ARG0-of (e / eat-01))\n                                  :ARG3 (u / up-to\n                                           :op1 \"1/5\")))\n            :ARG1 (s2 / soup\n                      :ARG1-of (u2 / use-01\n                                   :ARG0 r\n                                   :ARG2 (m / meat\n                                            :ARG1-of (l / legal-02\n                                                        :polarity -))))))",
      "(s / sell-01\n   :ARG0 (r / restaurant\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"China\"))\n            :ARG1-of (ii / include-91\n                         :ARG2 (p2 / person\n                                   :ARG0-of (e / eat-01))\n                         :ARG3 (u / up-to\n                                  :op1 \"1/5\")))\n   :ARG1 (s2 / soup\n             :ARG1-of (u2 / use-01\n                          :ARG0 r\n                          :ARG2 (m / meat\n                                   :ARG1-of (l / legal-02\n                                               :polarity -)))))",
      "(r / restaurant\n   :ARG1-of (ii / include-91\n                :ARG2 (p2 / person\n                          :ARG0-of (e / eat-01))\n                :ARG3 (u / up-to\n                         :op1 \"1/5\")))",
      "(r / restaurant\n   :ARG1-of (ii / include-91\n                :ARG2 (p2 / person\n                          :ARG0-of (e / eat-01))\n                :ARG3 (u / up-to\n                         :op1 \"1/5\"))\n   :mod (c / country\n           :name (n / name\n                    :op1 \"China\")))",
      "(c / country\n   :name (n / name\n            :op1 \"China\"))",
      "(n / name\n   :op1 \"China\")",
      "(ii / include-91\n    :ARG2 (p2 / person\n              :ARG0-of (e / eat-01))\n    :ARG3 (u / up-to\n             :op1 \"1/5\"))",
      "(p2 / person\n    :ARG0-of (e / eat-01))",
      "(u / up-to\n   :op1 \"1/5\")",
      "(s2 / soup\n    :ARG1-of (u2 / use-01\n                 :ARG0 (r / restaurant)\n                 :ARG2 (m / meat\n                          :ARG1-of (l / legal-02\n                                      :polarity -))))",
      "(u2 / use-01\n    :ARG0 (r / restaurant)\n    :ARG2 (m / meat\n             :ARG1-of (l / legal-02\n                         :polarity -)))",
      "(m / meat\n   :ARG1-of (l / legal-02\n               :polarity -))",
      "(l / legal-02\n   :polarity -)",
      "(s / say-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"Charity\"))\n   :ARG1 (o2 / or\n             :op1 (d / disguise-01\n                     :ARG1 (ii / it)\n                     :location (m / menu)\n                     :frequency (o3 / often))\n             :op2 (o4 / offer-01\n                      :ARG1 ii\n                      :mod (o5 / only)\n                      :condition (r / request-01\n                                    :ARG1 ii))))",
      "(o / organization\n   :name (n / name\n            :op1 \"Charity\"))",
      "(n / name\n   :op1 \"Charity\")",
      "(o2 / or\n    :op1 (d / disguise-01\n            :ARG1 (ii / it)\n            :location (m / menu)\n            :frequency (o3 / often)))",
      "(o2 / or\n    :op2 (o4 / offer-01\n             :ARG1 (ii / it)\n             :mod (o5 / only)\n             :condition (r / request-01\n                           :ARG1 ii)))",
      "(d / disguise-01\n   :ARG1 (ii / it))",
      "(d / disguise-01\n   :ARG1 (ii / it)\n   :location (m / menu))",
      "(d / disguise-01\n   :ARG1 (ii / it)\n   :frequency (o3 / often))",
      "(o4 / offer-01\n    :ARG1 (ii / it))",
      "(o4 / offer-01\n    :ARG1 (ii / it)\n    :mod (o5 / only))",
      "(o4 / offer-01\n    :ARG1 (ii / it)\n    :condition (r / request-01\n                  :ARG1 ii))",
      "(r / request-01\n   :ARG1 (ii / it))",
      "(l / let-01\n   :ARG0 (l2 / loophole)\n   :ARG1 (b / bring-01\n            :ARG0 (p / person)\n            :ARG1 (m / meat\n                     :quant (m2 / mass-quantity\n                                :quant 20\n                                :unit (k / kilogram)))\n            :ARG2 (c / country\n                     :name (n / name\n                              :op1 \"UK\"))\n            :purpose (c2 / consume-01\n                         :ARG0 p\n                         :ARG1 m\n                         :ARG1-of (p2 / personal-02))))",
      "(b / bring-01\n   :ARG0 (p / person)\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :quant 20\n                       :unit (k / kilogram)))\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"UK\")))",
      "(b / bring-01\n   :ARG0 (p / person)\n   :ARG1 (m / meat\n            :quant (m2 / mass-quantity\n                       :quant 20\n                       :unit (k / kilogram)))\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"UK\")))",
      "(m / meat\n   :quant (m2 / mass-quantity\n              :quant 20\n              :unit (k / kilogram)))",
      "(m2 / mass-quantity\n    :quant 20)",
      "(m2 / mass-quantity\n    :unit (k / kilogram))",
      "(c / country\n   :name (n / name\n            :op1 \"UK\"))",
      "(n / name\n   :op1 \"UK\")",
      "(c2 / consume-01\n    :ARG0 (p / person)\n    :ARG1 (m / meat)\n    :ARG1-of (p2 / personal-02))"
    ],
    "smus": [
      "Up to one fifth of the eaters in the Chinese restaurant could be selling soup using illegal meat.",
      "Up to one fifth of the eaters in the Chinese restaurant are selling soup using illegal meat.",
      "Up to one fifth of the eaters are in restaurants.",
      "Up to one fifth of the restaurant's customers are Chinese.",
      "China (CN)",
      "China (CN)",
      "Up to one fifth of the eaters.",
      "Eater.",
      "up to 1/5\"",
      "Soup restaurants using illegal meat.",
      "Restaurants using illegal meat.",
      "Illegal meat.",
      "Illegal.",
      "\"It is often disguised in the menu or offered only when requested,\" Charit or \"It is a 'Charit' or \"It is a Charit.\"",
      "Charitable or",
      "Charity.",
      "Or it is often disguised in the menu.",
      "Or offered only if requested.",
      "It's disguised.",
      "It's disguised in the menu.",
      "It is often disguised.",
      "It was offered.",
      "It was only offered.",
      "It was offered upon request.",
      "It was requested.",
      "The Loophole lets people bring 20kg of meat into the UK for personal consumption.",
      "People would bring 20 kilograms of meat to the UK.",
      "People would bring 20 kilograms of meat to the UK.",
      "20 kilograms of meat",
      "20",
      "kilo.",
      "UK (UK)",
      "UK",
      "People consume meat per capita."
    ]
  },
  {
    "instance_id": "realsumm-86",
    "summary": "<t> Two types of cereal in an Easter egg with marshmallows and brownies . </t> <t> Served at Black Milk cafe in Manchester 's Northern Quarter . ' </t> <t> Easter is less about what is used to mean , ' cafe owner Olly Taylor said . </t>",
    "tree": [
      "(c / cereal\n   :mod (t / type\n           :quant 2))",
      "(c / cereal\n   :location (e / egg\n                :mod (f / festival\n                        :name (n / name\n                                 :op1 \"Easter\"))))",
      "(c / cereal\n   :accompanier (a / and\n                   :op1 (m / marshmallow)\n                   :op2 (b / brownie)))",
      "(t / type\n   :quant 2)",
      "(e / egg\n   :mod (f / festival\n           :name (n / name\n                    :op1 \"Easter\")))",
      "(f / festival\n   :name (n / name\n            :op1 \"Easter\"))",
      "(n / name\n   :op1 \"Easter\")",
      "(a / and\n   :op1 (m / marshmallow))",
      "(a / and\n   :op2 (b / brownie))",
      "(s / serve-01\n   :location (c / cafe\n                :name (n / name\n                         :op1 \"Black\"\n                         :op2 \"Milk\")\n                :location (q / quarter\n                             :name (n2 / name\n                                       :op1 \"Northern\"\n                                       :op2 \"Quarter\")\n                             :part-of (c2 / city\n                                          :name (n3 / name\n                                                    :op1 \"Manchester\")))))",
      "(c / cafe\n   :name (n / name\n            :op1 \"Black\"\n            :op2 \"Milk\"))",
      "(c / cafe\n   :location (q / quarter\n                :name (n2 / name\n                          :op1 \"Northern\"\n                          :op2 \"Quarter\")\n                :part-of (c2 / city\n                             :name (n3 / name\n                                       :op1 \"Manchester\"))))",
      "(n / name\n   :op1 \"Black\")",
      "(n / name\n   :op2 \"Milk\")",
      "(n / name\n   :op1 \"Northern\")",
      "(n / name\n   :op2 \"Quarter\")",
      "(n / name\n   :op1 \"Manchester\")",
      "(q / quarter\n   :name (n2 / name\n             :op1 \"Northern\"\n             :op2 \"Quarter\"))",
      "(q / quarter\n   :part-of (c2 / city\n                :name (n3 / name\n                          :op1 \"Manchester\")))",
      "(c2 / city\n    :name (n3 / name\n              :op1 \"Manchester\"))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Olly\"\n                     :op2 \"Taylor\")\n            :ARG0-of (o / own-01\n                        :ARG1 (c / cafe)))\n   :ARG1 (c2 / concern-02\n             :ARG0 (f / festival\n                      :name (n2 / name\n                                :op1 \"Easter\"))\n             :ARG1 (t / thing\n                      :ARG2-of (m / mean-01\n                                  :ARG1 f\n                                  :time (u / use-03)))\n             :mod (l / less)))",
      "(p / person\n   :ARG0-of (o / own-01\n               :ARG1 (c / cafe)))",
      "(p / person\n   :ARG0-of (o / own-01\n               :ARG1 (c / cafe))\n   :name (n / name\n            :op1 \"Olly\"\n            :op2 \"Taylor\"))",
      "(n / name\n   :op1 \"Olly\")",
      "(n / name\n   :op2 \"Taylor\")",
      "(n / name\n   :op1 \"Easter\")",
      "(o / own-01\n   :ARG1 (c / cafe))",
      "(c2 / concern-02\n    :ARG0 (f / festival\n             :name (n2 / name\n                       :op1 \"Easter\"))\n    :ARG1 (t / thing\n             :ARG2-of (m / mean-01\n                         :ARG1 f\n                         :time (u / use-03))))",
      "(c2 / concern-02\n    :ARG0 (f / festival\n             :name (n2 / name\n                       :op1 \"Easter\"))\n    :ARG1 (t / thing\n             :ARG2-of (m / mean-01\n                         :ARG1 f\n                         :time (u / use-03)))\n    :mod (l / less))",
      "(f / festival\n   :name (n2 / name\n             :op1 \"Easter\"))",
      "(t / thing\n   :ARG2-of (m / mean-01\n               :ARG1 (f / festival :name (n2 / name :op1 \"Easter\"))\n               :time (u / use-03)))",
      "(m / mean-01\n   :ARG1 (f / festival :name (n2 / name :op1 \"Easter\")))",
      "(m / mean-01\n   :ARG1 (f / festival :name (n2 / name :op1 \"Easter\"))\n   :time (u / use-03))"
    ],
    "smus": [
      "Two types of cereal.",
      "cereal in an Easter egg",
      "cereal with marshmallows and brownies.",
      "Two types.",
      "Easter eggs",
      "Easter.",
      "Easter.",
      "and marshmallows.",
      "and brownies.",
      "Serving at the Black Milk cafe in Manchester's Northern Quarter.",
      "Black Milk Cafe",
      "A cafe in Manchester's Northern Quarter.",
      "Black.",
      "Milk.",
      "Northern",
      "Quarter",
      "Manchester",
      "Northern Quarter",
      "Manchester Quarter",
      "Manchester",
      "\"Easter is less about what it used to mean,\" said owner of the cafe, Ollie Taylor.",
      "Owner of the cafe.",
      "Owner of the cafe, Ollie Taylor.",
      "Ollie",
      "Taylor",
      "Easter.",
      "The cafe is owned by the cafe.",
      "As for what Easter used to mean...",
      "There's less concern about what Easter used to mean.",
      "Easter.",
      "What used to mean by Easter.",
      "Meaning Easter.",
      "used to mean Easter."
    ]
  },
  {
    "instance_id": "realsumm-87",
    "summary": "<t> The European Union will accuse Google of illegally abusing its supremacy . </t> <t> It could fine Google more than \u00a3 4 billion - 10 per cent of its annual revenue . </t> <t> Brussels to say it uses search engine to divert traffic to its own services . </t> <t> Google boasts a 90 per cent share in Europe 's search engine market . </t>",
    "tree": [
      "(a / accuse-01\n   :ARG0 (o / organization\n            :name (n / name\n                     :op1 \"European\"\n                     :op2 \"Union\"))\n   :ARG1 (c / company\n            :name (n2 / name\n                      :op1 \"Google\"))\n   :ARG2 (a2 / abuse-02\n             :ARG0 c\n             :ARG1 (s / supremacy\n                      :poss c)\n             :manner (l / law\n                        :polarity -)))",
      "(o / organization\n   :name (n / name\n            :op1 \"European\"\n            :op2 \"Union\"))",
      "(n / name\n   :op1 \"European\")",
      "(n / name\n   :op2 \"Union\")",
      "(n / name\n   :op1 \"Google\")",
      "(c / company\n   :name (n2 / name\n             :op1 \"Google\"))",
      "(a2 / abuse-02\n    :ARG0 (c / company :name (n2 / name :op1 \"Google\"))\n    :ARG1 (s / supremacy\n             :poss c))",
      "(a2 / abuse-02\n    :ARG0 (c / company :name (n2 / name :op1 \"Google\"))\n    :ARG1 (s / supremacy\n             :poss c)\n    :manner (l / law\n               :polarity -))",
      "(s / supremacy\n   :poss (c / company :name (n2 / name :op1 \"Google\")))",
      "(l / law\n   :polarity -)",
      "(p / possible-01\n   :ARG1 (f / fine-01\n            :ARG0 (ii / it)\n            :ARG1 (m / more-than\n                     :op1 (m2 / monetary-quantity\n                              :quant 4000000000\n                              :unit (p2 / pound)\n                              :ARG1-of (m3 / mean-01\n                                           :ARG2 (p3 / percentage-entity\n                                                     :value 10\n                                                     :ARG3-of (ii2 / include-91\n                                                                   :ARG2 (r / revenue\n                                                                            :poss (c / company\n                                                                                     :name (n / name\n                                                                                              :op1 \"Google\"))\n                                                                            :frequency (r2 / rate-entity-91\n                                                                                           :ARG3 (t / temporal-quantity\n                                                                                                    :quant 1\n                                                                                                    :unit (y / year)))))))))\n            :ARG2 c))",
      "(f / fine-01\n   :ARG0 (ii / it)\n   :ARG1 (m / more-than\n            :op1 (m2 / monetary-quantity\n                     :quant 4000000000\n                     :unit (p2 / pound)\n                     :ARG1-of (m3 / mean-01\n                                  :ARG2 (p3 / percentage-entity\n                                            :value 10\n                                            :ARG3-of (ii2 / include-91\n                                                          :ARG2 (r / revenue\n                                                                   :poss (c / company\n                                                                            :name (n / name\n                                                                                     :op1 \"Google\"))\n                                                                   :frequency (r2 / rate-entity-91\n                                                                                  :ARG3 (t / temporal-quantity\n                                                                                           :quant 1\n                                                                                           :unit (y / year)))))))))\n   :ARG2 c)",
      "(m / more-than\n   :op1 (m2 / monetary-quantity\n            :quant 4000000000\n            :unit (p2 / pound)\n            :ARG1-of (m3 / mean-01\n                         :ARG2 (p3 / percentage-entity\n                                   :value 10\n                                   :ARG3-of (ii2 / include-91\n                                                 :ARG2 (r / revenue\n                                                          :poss (c / company\n                                                                   :name (n / name\n                                                                            :op1 \"Google\"))\n                                                          :frequency (r2 / rate-entity-91\n                                                                         :ARG3 (t / temporal-quantity\n                                                                                  :quant 1\n                                                                                  :unit (y / year)))))))))",
      "(m2 / monetary-quantity\n    :ARG1-of (m3 / mean-01\n                 :ARG2 (p3 / percentage-entity\n                           :value 10\n                           :ARG3-of (ii2 / include-91\n                                         :ARG2 (r / revenue\n                                                  :poss (c / company\n                                                           :name (n / name\n                                                                    :op1 \"Google\"))\n                                                  :frequency (r2 / rate-entity-91\n                                                                 :ARG3 (t / temporal-quantity\n                                                                          :quant 1\n                                                                          :unit (y / year))))))))",
      "(m2 / monetary-quantity\n    :ARG1-of (m3 / mean-01\n                 :ARG2 (p3 / percentage-entity\n                           :value 10\n                           :ARG3-of (ii2 / include-91\n                                         :ARG2 (r / revenue\n                                                  :poss (c / company\n                                                           :name (n / name\n                                                                    :op1 \"Google\"))\n                                                  :frequency (r2 / rate-entity-91\n                                                                 :ARG3 (t / temporal-quantity\n                                                                          :quant 1\n                                                                          :unit (y / year)))))))\n    :quant 4000000000)",
      "(m2 / monetary-quantity\n    :ARG1-of (m3 / mean-01\n                 :ARG2 (p3 / percentage-entity\n                           :value 10\n                           :ARG3-of (ii2 / include-91\n                                         :ARG2 (r / revenue\n                                                  :poss (c / company\n                                                           :name (n / name\n                                                                    :op1 \"Google\"))\n                                                  :frequency (r2 / rate-entity-91\n                                                                 :ARG3 (t / temporal-quantity\n                                                                          :quant 1\n                                                                          :unit (y / year)))))))\n    :unit (p2 / pound))",
      "(m3 / mean-01\n    :ARG2 (p3 / percentage-entity\n              :value 10\n              :ARG3-of (ii2 / include-91\n                            :ARG2 (r / revenue\n                                     :poss (c / company\n                                              :name (n / name\n                                                       :op1 \"Google\"))\n                                     :frequency (r2 / rate-entity-91\n                                                    :ARG3 (t / temporal-quantity\n                                                             :quant 1\n                                                             :unit (y / year)))))))",
      "(p3 / percentage-entity\n    :ARG3-of (ii2 / include-91\n                  :ARG2 (r / revenue\n                           :poss (c / company\n                                    :name (n / name\n                                             :op1 \"Google\"))\n                           :frequency (r2 / rate-entity-91\n                                          :ARG3 (t / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y / year))))))",
      "(p3 / percentage-entity\n    :ARG3-of (ii2 / include-91\n                  :ARG2 (r / revenue\n                           :poss (c / company\n                                    :name (n / name\n                                             :op1 \"Google\"))\n                           :frequency (r2 / rate-entity-91\n                                          :ARG3 (t / temporal-quantity\n                                                   :quant 1\n                                                   :unit (y / year)))))\n    :value 10)",
      "(ii2 / include-91\n     :ARG2 (r / revenue\n              :poss (c / company\n                       :name (n / name\n                                :op1 \"Google\"))\n              :frequency (r2 / rate-entity-91\n                             :ARG3 (t / temporal-quantity\n                                      :quant 1\n                                      :unit (y / year)))))",
      "(r / revenue\n   :poss (c / company\n            :name (n / name\n                     :op1 \"Google\")))",
      "(r / revenue\n   :frequency (r2 / rate-entity-91\n                  :ARG3 (t / temporal-quantity\n                           :quant 1\n                           :unit (y / year))))",
      "(c / company\n   :name (n / name\n            :op1 \"Google\"))",
      "(n / name\n   :op1 \"Google\")",
      "(r2 / rate-entity-91\n    :ARG3 (t / temporal-quantity\n             :quant 1\n             :unit (y / year)))",
      "(t / temporal-quantity\n   :quant 1)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(s / say-01\n   :ARG0 (c / city\n            :name (n / name\n                     :op1 \"Brussels\"))\n   :ARG1 (u / use-01\n            :ARG0 c\n            :ARG1 (s2 / search-engine)\n            :ARG2 (d / divert-01\n                     :ARG0 c\n                     :ARG1 (t / traffic)\n                     :ARG3 (s3 / service\n                               :poss c))))",
      "(c / city\n   :name (n / name\n            :op1 \"Brussels\"))",
      "(n / name\n   :op1 \"Brussels\")",
      "(u / use-01\n   :ARG0 (c / city :name (n / name :op1 \"Brussels\"))\n   :ARG1 (s2 / search-engine)\n   :ARG2 (d / divert-01\n            :ARG0 c\n            :ARG1 (t / traffic)\n            :ARG3 (s3 / service\n                      :poss c)))",
      "(d / divert-01\n   :ARG0 (c / city :name (n / name :op1 \"Brussels\"))\n   :ARG1 (t / traffic)\n   :ARG3 (s3 / service\n             :poss c))",
      "(s3 / service\n    :poss (c / city :name (n / name :op1 \"Brussels\")))",
      "(b / boast-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Google\"))\n   :ARG1 (s / share-01\n            :ARG1 (m / market\n                     :mod (s2 / search-engine)\n                     :location (c2 / continent\n                                   :name (n2 / name\n                                             :op1 \"Europe\")))\n            :ARG2 c\n            :quant (p / percentage-entity\n                      :value 90)))",
      "(c / company\n   :name (n / name\n            :op1 \"Google\"))",
      "(n / name\n   :op1 \"Google\")",
      "(n / name\n   :op1 \"Europe\")",
      "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\")))\n   :ARG2 (c / company :name (n / name :op1 \"Google\")))",
      "(s / share-01\n   :ARG1 (m / market\n            :mod (s2 / search-engine)\n            :location (c2 / continent\n                          :name (n2 / name\n                                    :op1 \"Europe\")))\n   :ARG2 (c / company :name (n / name :op1 \"Google\"))\n   :quant (p / percentage-entity\n             :value 90))",
      "(m / market\n   :mod (s2 / search-engine))",
      "(m / market\n   :location (c2 / continent\n                 :name (n2 / name\n                           :op1 \"Europe\")))",
      "(c2 / continent\n    :name (n2 / name\n              :op1 \"Europe\"))",
      "(p / percentage-entity\n   :value 90)"
    ],
    "smus": [
      "The European Union will accuse Google of illegally abusing its supremacy.",
      "The European Union (EU)",
      "European.",
      "Union",
      "Google",
      "Google",
      "Google is abusing its supremacy.",
      "Google is illegally abusing its supremacy.",
      "Google supremacy.",
      "There is no law.",
      "It could fine Google more than PS4bn, or 10 percent of Google's annual revenue.",
      "It will fine Google more than PS4bn, or 10 percent of Google's annual revenue.",
      "More than PS4 billion, ten percent of Google's annual revenue.",
      "10% of Google's annual revenue.",
      "ten percent of Google's annual revenue is $4 billion.",
      "ten percent of Google's annual revenue is PS10.",
      "10% of Google's annual revenue = 10%.",
      "% of Google's annual revenue",
      "10% of Google's annual revenue",
      "Google's revenue is one year in total.",
      "Google's revenue.",
      "Revenue per year.",
      "Google",
      "Google",
      "every year",
      "One.",
      "Year.",
      "Brussels says it uses a search engine to divert traffic to its services.",
      "Brussels",
      "Brussels",
      "Brussels uses a search engine to divert traffic to its services.",
      "Brussels will divert traffic to its services.",
      "Brussels services",
      "Google boasts a 90 percent share of the European search engine market.",
      "Google",
      "Google",
      "Europe.",
      "Google has a share of the European search engine market.",
      "Google has a 90 percent share of the European search engine market.",
      "Search engine market",
      "The market in Europe.",
      "Europe",
      "90%"
    ]
  },
  {
    "instance_id": "realsumm-88",
    "summary": "<t> Phil Smith , 25 , forgot his keys and scaled fence to try to get in his flat . </t> <t> But teaching assistant fell and hit his head while climbing through window . </t> <t> He fractured his skull and suffered a bleed on the brain and a blood clot . </t> <t> Parents paid tribute to ' lovely son ' who worked at special needs school . </t>",
    "tree": [
      "(f / forget-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phil\"\n                     :op2 \"Smith\")\n            :age (t / temporal-quantity\n                    :quant 25\n                    :unit (y / year)))\n   :ARG1 (a / and\n            :op1 (k / key\n                    :poss p)\n            :op2 (s / scale-01\n                    :ARG0 p\n                    :ARG1 (f2 / fence)\n                    :purpose (t2 / try-01\n                                 :ARG0 p\n                                 :ARG1 (g / get-05\n                                          :ARG1 p\n                                          :ARG2 (f3 / flat\n                                                    :poss p))))))",
      "(p / person\n   :name (n / name\n            :op1 \"Phil\"\n            :op2 \"Smith\"))",
      "(p / person\n   :age (t / temporal-quantity\n           :quant 25\n           :unit (y / year)))",
      "(n / name\n   :op1 \"Phil\")",
      "(n / name\n   :op2 \"Smith\")",
      "(t / temporal-quantity\n   :quant 25)",
      "(t / temporal-quantity\n   :unit (y / year))",
      "(a / and\n   :op1 (k / key\n           :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))))",
      "(a / and\n   :op2 (s / scale-01\n           :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n           :ARG1 (f2 / fence)\n           :purpose (t2 / try-01\n                        :ARG0 p\n                        :ARG1 (g / get-05\n                                 :ARG1 p\n                                 :ARG2 (f3 / flat\n                                           :poss p)))))",
      "(k / key\n   :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\"))))",
      "(s / scale-01\n   :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n   :ARG1 (f2 / fence))",
      "(s / scale-01\n   :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n   :ARG1 (f2 / fence))",
      "(t2 / try-01\n    :ARG0 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n    :ARG1 (g / get-05\n             :ARG1 p\n             :ARG2 (f3 / flat\n                       :poss p)))",
      "(g / get-05\n   :ARG1 (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\")))\n   :ARG2 (f3 / flat\n             :poss p))",
      "(f3 / flat\n    :poss (p / person :name (n / name :op1 \"Phil\" :op2 \"Smith\"))))",
      "(c / contrast-01\n   :ARG2 (a / and\n            :op1 (f / fall-01\n                    :ARG1 (p / person\n                             :ARG0-of (a2 / assist-01\n                                          :ARG1 (t / teach-01))\n                             :part (h / head)))\n            :op2 (h2 / hit-01\n                     :ARG1 h)\n            :time (c2 / climb-01\n                      :ARG0 p\n                      :path (t2 / through\n                                :op1 (w / window)))))",
      "(a / and\n   :op1 (f / fall-01\n           :ARG1 (p / person\n                    :ARG0-of (a2 / assist-01\n                                 :ARG1 (t / teach-01))\n                    :part (h / head))))",
      "(a / and\n   :op2 (h2 / hit-01\n            :ARG1 (h / head)))",
      "(a / and\n   :time (c2 / climb-01\n             :ARG0 (p / person)\n             :path (t2 / through\n                       :op1 (w / window))))",
      "(f / fall-01\n   :ARG1 (p / person\n            :ARG0-of (a2 / assist-01\n                         :ARG1 (t / teach-01))\n            :part (h / head)))",
      "(p / person\n   :ARG0-of (a2 / assist-01\n                :ARG1 (t / teach-01)))",
      "(p / person\n   :ARG0-of (a2 / assist-01\n                :ARG1 (t / teach-01))\n   :part (h / head))",
      "(a2 / assist-01\n    :ARG1 (t / teach-01))",
      "(h2 / hit-01\n    :ARG1 (h / head))",
      "(c2 / climb-01\n    :ARG0 (p / person))",
      "(c2 / climb-01\n    :ARG0 (p / person)\n    :path (t2 / through\n              :op1 (w / window)))",
      "(t2 / through\n    :op1 (w / window))",
      "(a / and\n   :op1 (f / fracture-01\n           :ARG0 (h / he\n                    :part (s / skull))\n           :ARG1 s))",
      "(a / and\n   :op2 (s2 / suffer-01\n            :ARG0 (h / he)\n            :ARG1 (a2 / and\n                      :op1 (b / bleed-01\n                              :ARG1 (b2 / brain))\n                      :op2 (c / clot\n                              :mod (b3 / blood)))))",
      "(a / and\n   :op1 (b / bleed-01\n           :ARG1 (b2 / brain)))",
      "(a / and\n   :op2 (c / clot\n           :mod (b3 / blood)))",
      "(f / fracture-01\n   :ARG0 (h / he\n            :part (s / skull))\n   :ARG1 s)",
      "(h / he\n   :part (s / skull))",
      "(s2 / suffer-01\n    :ARG0 (h / he)\n    :ARG1 (a2 / and\n              :op1 (b / bleed-01\n                      :ARG1 (b2 / brain))\n              :op2 (c / clot\n                      :mod (b3 / blood))))",
      "(b / bleed-01\n   :ARG1 (b2 / brain))",
      "(c / clot\n   :mod (b3 / blood))",
      "(p / pay-01\n   :ARG0 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG2 (p3 / parent)))\n   :ARG1 (t / tribute)\n   :ARG2 (p4 / person\n             :ARG0-of (h2 / have-rel-role-91\n                          :ARG2 (s / son))\n             :mod (l / lovely)\n             :ARG0-of (w / work-01\n                         :ARG2 (s2 / school\n                                   :ARG1-of (n / need-01\n                                               :ARG1-of (s3 / special-02))))))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG2 (p3 / parent))\n    :ARG0-of (h2 / have-rel-role-91\n                 :ARG2 (s / son))\n    :ARG0-of (w / work-01\n                :ARG2 (s2 / school\n                          :ARG1-of (n / need-01\n                                      :ARG1-of (s3 / special-02)))))",
      "(p2 / person\n    :ARG0-of (h / have-rel-role-91\n                :ARG2 (p3 / parent))\n    :ARG0-of (h2 / have-rel-role-91\n                 :ARG2 (s / son))\n    :ARG0-of (w / work-01\n                :ARG2 (s2 / school\n                          :ARG1-of (n / need-01\n                                      :ARG1-of (s3 / special-02))))\n    :mod (l / lovely))",
      "(h / have-rel-role-91\n   :ARG2 (p3 / parent)\n   :ARG2 (s / son))",
      "(w / work-01\n   :ARG2 (s2 / school\n             :ARG1-of (n / need-01\n                         :ARG1-of (s3 / special-02))))",
      "(s2 / school\n    :ARG1-of (n / need-01\n                :ARG1-of (s3 / special-02)))",
      "(n / need-01\n   :ARG1-of (s3 / special-02))"
    ],
    "smus": [
      "Phil Smith, 25, forgot his keys and scaled the fence to try to get flat.",
      "Phil Smith",
      "25.",
      "Phil",
      "Smith",
      "25",
      "Year.",
      "And Phil Smith's keys.",
      "And Phil Smith has scaled the fence to try to get flat.",
      "Phil Smith's keys",
      "Phil Smith has scaled the fence.",
      "Phil Smith has scaled the fence.",
      "Phil Smith will try to get flat.",
      "Phil Smith will get his flat.",
      "Phil Smith's flat.",
      "But the teaching assistant fell and hit while climbing through the window.",
      "And the teaching assistant, on the head, fell.",
      "and hit the head.",
      "and as people were climbing through the window.",
      "The teaching assistant fell.",
      "Teaching assistant.",
      "Head Teacher Assistant",
      "Teaching assistance",
      "The head hit.",
      "People are climbing.",
      "People climbing through the window.",
      "through the window.",
      "And he fractured his skull.",
      "And he suffered a brain bleed and a blood clot.",
      "and brain bleed.",
      "and a blood clot.",
      "He fractured his skull.",
      "He's a skull.",
      "He suffered a brain bleed and a blood clot.",
      "Brain bleed.",
      "a blood clot",
      "Parents paid tribute to the lovely son who worked in a school with special needs.",
      "Parents with son who worked in a special needs school.",
      "Lovely parents with son who worked in a school with special needs.",
      "The parents of the son.",
      "Worked for a school with special needs.",
      "Special needs school.",
      "Special needs."
    ]
  },
  {
    "instance_id": "realsumm-89",
    "summary": "<t> Emmanuel Adebayor 's current Tottenham contract runs out in 2016 . </t> <t> The striker is unwilling to take anything less than his current \u00a3 5.2million salary before accepting a move out of White Hart Lane . </t> <t> Togolese forward has made just nine league starts this season . </t>",
    "tree": [
      "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\"))))",
      "(r / run-out-05\n   :ARG1 (c / contract\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Emmanuel\"\n                              :op2 \"Adebayor\"))\n            :time (c2 / current)\n            :mod (t / team\n                    :name (n2 / name\n                              :op1 \"Tottenham\")))\n   :time (d / date-entity\n            :year 2016))",
      "(c / contract\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Emmanuel\"\n                     :op2 \"Adebayor\")))",
      "(c / contract\n   :time (c2 / current))",
      "(c / contract\n   :mod (t / team\n           :name (n2 / name\n                     :op1 \"Tottenham\")))",
      "(p / person\n   :name (n / name\n            :op1 \"Emmanuel\"\n            :op2 \"Adebayor\"))",
      "(n / name\n   :op1 \"Emmanuel\")",
      "(n / name\n   :op2 \"Adebayor\")",
      "(n / name\n   :op1 \"Tottenham\")",
      "(t / team\n   :name (n2 / name\n             :op1 \"Tottenham\"))",
      "(d / date-entity\n   :year 2016)",
      "(w / will-02\n   :ARG0 (p / person\n            :ARG0-of (s / strike-02))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                     :ARG1-of (h / have-quant-91\n                                 :ARG3 (l / less)\n                                 :ARG4 (s2 / salary\n                                           :mod (m / monetary-quantity\n                                                   :quant 5500000\n                                                   :unit (p2 / pound))\n                                           :poss p\n                                           :time (c / current))))))",
      "(w / will-02\n   :ARG0 (p / person\n            :ARG0-of (s / strike-02))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                     :ARG1-of (h / have-quant-91\n                                 :ARG3 (l / less)\n                                 :ARG4 (s2 / salary\n                                           :mod (m / monetary-quantity\n                                                   :quant 5500000\n                                                   :unit (p2 / pound))\n                                           :poss p\n                                           :time (c / current)))))\n   :polarity -)",
      "(w / will-02\n   :ARG0 (p / person\n            :ARG0-of (s / strike-02))\n   :ARG1 (t / take-01\n            :ARG0 p\n            :ARG1 (a / anything\n                     :ARG1-of (h / have-quant-91\n                                 :ARG3 (l / less)\n                                 :ARG4 (s2 / salary\n                                           :mod (m / monetary-quantity\n                                                   :quant 5500000\n                                                   :unit (p2 / pound))\n                                           :poss p\n                                           :time (c / current)))))\n   :time (b / before\n            :op1 (a2 / accept-01\n                     :ARG0 p\n                     :ARG1 (m2 / move-01\n                               :ARG0 p\n                               :ARG2 (r / road\n                                        :name (n / name\n                                                 :op1 \"White\"\n                                                 :op2 \"Hart\"\n                                                 :op3 \"Lane\"))))))",
      "(p / person\n   :ARG0-of (s / strike-02))",
      "(t / take-01\n   :ARG0 (p / person)\n   :ARG1 (a / anything\n            :ARG1-of (h / have-quant-91\n                        :ARG3 (l / less)\n                        :ARG4 (s2 / salary\n                                  :mod (m / monetary-quantity\n                                          :quant 5500000\n                                          :unit (p2 / pound))\n                                  :poss p\n                                  :time (c / current)))))",
      "(a / anything\n   :ARG1-of (h / have-quant-91\n               :ARG3 (l / less)\n               :ARG4 (s2 / salary\n                         :mod (m / monetary-quantity\n                                 :quant 5500000\n                                 :unit (p2 / pound))\n                         :poss (p / person)\n                         :time (c / current))))",
      "(h / have-quant-91\n   :ARG3 (l / less)\n   :ARG4 (s2 / salary\n             :mod (m / monetary-quantity\n                     :quant 5500000\n                     :unit (p2 / pound))\n             :poss (p / person)\n             :time (c / current)))",
      "(s2 / salary\n    :mod (m / monetary-quantity\n            :quant 5500000\n            :unit (p2 / pound)))",
      "(s2 / salary\n    :poss (p / person))",
      "(s2 / salary\n    :time (c / current))",
      "(m / monetary-quantity\n   :quant 5500000)",
      "(m / monetary-quantity\n   :unit (p2 / pound))",
      "(b / before\n   :op1 (a2 / accept-01\n            :ARG0 (p / person)\n            :ARG1 (m2 / move-01\n                      :ARG0 p\n                      :ARG2 (r / road\n                               :name (n / name\n                                        :op1 \"White\"\n                                        :op2 \"Hart\"\n                                        :op3 \"Lane\")))))",
      "(a2 / accept-01\n    :ARG0 (p / person)\n    :ARG1 (m2 / move-01\n              :ARG0 p\n              :ARG2 (r / road\n                       :name (n / name\n                                :op1 \"White\"\n                                :op2 \"Hart\"\n                                :op3 \"Lane\"))))",
      "(m2 / move-01\n    :ARG0 (p / person)\n    :ARG2 (r / road\n             :name (n / name\n                      :op1 \"White\"\n                      :op2 \"Hart\"\n                      :op3 \"Lane\")))",
      "(r / road\n   :name (n / name\n            :op1 \"White\"\n            :op2 \"Hart\"\n            :op3 \"Lane\"))",
      "(n / name\n   :op1 \"White\")",
      "(n / name\n   :op2 \"Hart\")",
      "(n / name\n   :op3 \"Lane\")",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\"))))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :mod (l / league))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :quant (j / just\n             :op1 9))",
      "(s / start-01\n   :ARG0 (f / forward\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Togolese\")))\n   :time (s2 / season\n             :mod (t / this)))",
      "(f / forward\n   :mod (c / country\n           :name (n / name\n                    :op1 \"Togolese\")))",
      "(c / country\n   :name (n / name\n            :op1 \"Togolese\"))",
      "(n / name\n   :op1 \"Togolese\")",
      "(j / just\n   :op1 9)",
      "(s2 / season\n    :mod (t / this))"
    ],
    "smus": [
      "Emmanuel Adebayor's current Tottenham contract is running out.",
      "Emmanuel Adebayor's current Tottenham contract runs out in 2016.",
      "Emmanuel Adebayor's contract",
      "Current contract.",
      "The contract is with Tottenham.",
      "Emmanuel Adebayor",
      "Emmanuel",
      "Adebayor",
      "Tottenham",
      "Tottenham",
      "2016-03-09",
      "The strikers are willing to take anything less than their current PS5.50m salary.",
      "The strikers were not willing to take anything less than their current PS5.50m salary.",
      "The striker was willing to take anything less than his current PS5.5m salary before accepting the move to White Hart Lane.",
      "Striker.",
      "People will take anything less than their current PS5.50k salary.",
      "Anything less than the current PS55million salary of the people.",
      "less than the current PS55million salary of the people.",
      "PS55million salary",
      "People's salary",
      "Current salary",
      "5.15 million",
      "PS",
      "Before accepting a move to White Hart Lane.",
      "People are accepting the move to White Hart Lane.",
      "People are moving to White Hart Lane.",
      "White Hart Lane",
      "White.",
      "Hart.",
      "Lane",
      "The Togolese forwards starts.",
      "The Togolese forward starts in the league.",
      "The Togolese forward just starts with 9.",
      "The Togolese forward starts this season.",
      "Forward, the Togolese.",
      "Togolese",
      "Togolese",
      "Just 9.",
      "This is the season."
    ]
  },
  {
    "instance_id": "realsumm-90",
    "summary": "<t> John Helm was commentating on the game the day the fire broke out . </t> <t> He gives his insight into what cause the blaze 30 years ago . ' </t> <t> From everything I have been told there is n\u2019t a jot of evidence to suggest the blaze was caused deliberately , ' says Helm . </t>",
    "tree": [
      "(c / commentate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG3 (g / game))",
      "(c / commentate-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"\n                     :op2 \"Helm\"))\n   :ARG3 (g / game)\n   :time (b / break-out-30\n            :ARG1 (f / fire)))",
      "(p / person\n   :name (n / name\n            :op1 \"John\"\n            :op2 \"Helm\"))",
      "(n / name\n   :op1 \"John\")",
      "(n / name\n   :op2 \"Helm\")",
      "(b / break-out-30\n   :ARG1 (f / fire))",
      "(g / give-01\n   :ARG0 (h / he)\n   :ARG1 (ii / insight\n             :poss h\n             :topic (t / thing\n                       :ARG0-of (c / cause-01\n                                   :ARG1 (b / blaze-01\n                                            :time (b2 / before\n                                                      :op1 (n / now)\n                                                      :quant (t2 / temporal-quantity\n                                                                 :quant 30\n                                                                 :unit (y / year))))))))",
      "(ii / insight\n    :poss (h / he))",
      "(ii / insight\n    :topic (t / thing\n              :ARG0-of (c / cause-01\n                          :ARG1 (b / blaze-01\n                                   :time (b2 / before\n                                             :op1 (n / now)\n                                             :quant (t2 / temporal-quantity\n                                                        :quant 30\n                                                        :unit (y / year)))))))",
      "(t / thing\n   :ARG0-of (c / cause-01\n               :ARG1 (b / blaze-01\n                        :time (b2 / before\n                                  :op1 (n / now)\n                                  :quant (t2 / temporal-quantity\n                                             :quant 30\n                                             :unit (y / year))))))",
      "(c / cause-01\n   :ARG1 (b / blaze-01\n            :time (b2 / before\n                      :op1 (n / now)\n                      :quant (t2 / temporal-quantity\n                                 :quant 30\n                                 :unit (y / year)))))",
      "(b / blaze-01\n   :time (b2 / before\n             :op1 (n / now)\n             :quant (t2 / temporal-quantity\n                        :quant 30\n                        :unit (y / year))))",
      "(b2 / before\n    :op1 (n / now))",
      "(b2 / before\n    :quant (t2 / temporal-quantity\n               :quant 30\n               :unit (y / year)))",
      "(t2 / temporal-quantity\n    :quant 30)",
      "(t2 / temporal-quantity\n    :unit (y / year))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Helm\"))\n   :ARG1 (e / evidence-01\n            :polarity -\n            :quant (j / jot)\n            :ARG0-of (s2 / suggest-01\n                         :ARG1 (c / cause-01\n                                  :ARG1 (b / blaze-01)\n                                  :manner (d / deliberate)))\n            :source (e2 / everything\n                        :ARG1-of (t / tell-01\n                                    :ARG2 (ii / i)))))",
      "(p / person\n   :name (n / name\n            :op1 \"Helm\"))",
      "(n / name\n   :op1 \"Helm\")",
      "(e / evidence-01\n   :ARG0-of (s2 / suggest-01\n                :ARG1 (c / cause-01\n                         :ARG1 (b / blaze-01)\n                         :manner (d / deliberate))))",
      "(e / evidence-01\n   :ARG0-of (s2 / suggest-01\n                :ARG1 (c / cause-01\n                         :ARG1 (b / blaze-01)\n                         :manner (d / deliberate)))\n   :polarity -)",
      "(e / evidence-01\n   :ARG0-of (s2 / suggest-01\n                :ARG1 (c / cause-01\n                         :ARG1 (b / blaze-01)\n                         :manner (d / deliberate)))\n   :quant (j / jot))",
      "(e / evidence-01\n   :ARG0-of (s2 / suggest-01\n                :ARG1 (c / cause-01\n                         :ARG1 (b / blaze-01)\n                         :manner (d / deliberate)))\n   :source (e2 / everything\n               :ARG1-of (t / tell-01\n                           :ARG2 (ii / i))))",
      "(s2 / suggest-01\n    :ARG1 (c / cause-01\n             :ARG1 (b / blaze-01)\n             :manner (d / deliberate)))",
      "(c / cause-01\n   :ARG1 (b / blaze-01))",
      "(c / cause-01\n   :ARG1 (b / blaze-01)\n   :manner (d / deliberate))",
      "(e2 / everything\n    :ARG1-of (t / tell-01\n                :ARG2 (ii / i)))",
      "(t / tell-01\n   :ARG2 (ii / i))"
    ],
    "smus": [
      "John Helm commentating on the game.",
      "John Hell was commentating on the game when the fire broke out.",
      "John Helm",
      "John",
      "Helm.",
      "The fire broke out.",
      "He gives his own insight into the cause of the blaze of the past 30 years.",
      "His insight.",
      "An insight into the cause of the blaze of the past 30 years.",
      "The cause of the blaze of 30 years ago.",
      "The cause of the blaze has been 30 years ago.",
      "30 years ago, there was a blaze.",
      "Earlier.",
      "30 years ago",
      "30",
      "Years.",
      "\"From everything I've told, there's not a jot of evidence to suggest that the blaze was deliriously caused,\" Helm says.",
      "Helm.",
      "Helm.",
      "evidence to suggest that the blaze was caused deliriously.",
      "evi deliriously causing the blaze?",
      "evi jot to suggest the blaze was deliriously caused.",
      "From everythi I've told, evidence would suggest that the blaze was deliriously caused.",
      "Suggestion: deliriously caused blaze",
      "caused a blaze.",
      "The blaze was caused deliriously.",
      "Everythi, I've been told.",
      "I was told."
    ]
  },
  {
    "instance_id": "realsumm-91",
    "summary": "<t> Rory McIlroy faced with Fifty Shades of Grey 's Jamie Dornan . </t> <t> McIlroy and Dornan took part in the first Circular Soccer Showdown of 2015 . </t> <t> McIlroy finished strongly to finish an impressive fourth at the Masters . </t> <t> READ : It wo n't be too long before McIlroy wins a Masters . </t>",
    "tree": [
      "(f / face-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rory\"\n                     :op2 \"McIlroy\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jamie\"\n                       :op2 \"Dornan\")\n             :ARG0-of (h / have-org-role-91\n                         :ARG1 (b / book\n                                  :name (n3 / name\n                                            :op1 \"Fifty\"\n                                            :op2 \" Shades\"\n                                            :op3 \"of\"\n                                            :op4 \"Grey\")))))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (b / book\n                        :name (n3 / name\n                                  :op1 \"Fifty\"\n                                  :op2 \" Shades\"\n                                  :op3 \"of\"\n                                  :op4 \"Grey\"))))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (b / book\n                        :name (n3 / name\n                                  :op1 \"Fifty\"\n                                  :op2 \" Shades\"\n                                  :op3 \"of\"\n                                  :op4 \"Grey\")))\n   :name (n / name\n            :op1 \"Rory\"\n            :op2 \"McIlroy\"))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (b / book\n                        :name (n3 / name\n                                  :op1 \"Fifty\"\n                                  :op2 \" Shades\"\n                                  :op3 \"of\"\n                                  :op4 \"Grey\")))\n   :name (n2 / name\n             :op1 \"Jamie\"\n             :op2 \"Dornan\"))",
      "(n / name\n   :op1 \"Rory\")",
      "(n / name\n   :op2 \"McIlroy\")",
      "(n / name\n   :op1 \"Jamie\")",
      "(n / name\n   :op2 \"Dornan\")",
      "(n / name\n   :op1 \"Fifty\")",
      "(n / name\n   :op2 \" Shades\")",
      "(n / name\n   :op3 \"of\")",
      "(n / name\n   :op4 \"Grey\")",
      "(h / have-org-role-91\n   :ARG1 (b / book\n            :name (n3 / name\n                      :op1 \"Fifty\"\n                      :op2 \" Shades\"\n                      :op3 \"of\"\n                      :op4 \"Grey\")))",
      "(b / book\n   :name (n3 / name\n             :op1 \"Fifty\"\n             :op2 \" Shades\"\n             :op3 \"of\"\n             :op4 \"Grey\"))",
      "(p / participate-01\n   :ARG0 (a / and\n            :op1 (p2 / person\n                     :name (n / name\n                              :op1 \"McIlroy\"))\n            :op2 (p3 / person\n                     :name (n2 / name\n                               :op1 \"Dornan\")))\n   :ARG1 (g / game\n            :name (n3 / name\n                      :op1 \"Circular\"\n                      :op2 \"Soccer\"\n                      :op3 \"Showdown\")\n            :ord (o / ordinal-entity\n                    :value 1)\n            :time (d / date-entity\n                     :year 2015)))",
      "(a / and\n   :op1 (p2 / person\n            :name (n / name\n                     :op1 \"McIlroy\")))",
      "(a / and\n   :op2 (p3 / person\n            :name (n2 / name\n                      :op1 \"Dornan\")))",
      "(p2 / person\n    :name (n / name\n             :op1 \"McIlroy\"))",
      "(p2 / person\n    :name (n2 / name\n              :op1 \"Dornan\"))",
      "(n / name\n   :op1 \"McIlroy\")",
      "(n / name\n   :op1 \"Dornan\")",
      "(n / name\n   :op1 \"Circular\")",
      "(n / name\n   :op2 \"Soccer\")",
      "(n / name\n   :op3 \"Showdown\")",
      "(g / game\n   :name (n3 / name\n             :op1 \"Circular\"\n             :op2 \"Soccer\"\n             :op3 \"Showdown\"))",
      "(g / game\n   :ord (o / ordinal-entity\n           :value 1))",
      "(g / game\n   :time (d / date-entity\n            :year 2015))",
      "(o / ordinal-entity\n   :value 1)",
      "(d / date-entity\n   :year 2015)",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1-of (s / strong-02)\n   :ARG0 p\n   :ARG2 (f3 / fourth\n             :ARG0-of (ii / impress-01)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1-of (s / strong-02)\n   :ARG0 p\n   :ARG2 (f3 / fourth\n             :ARG0-of (ii / impress-01)))",
      "(f / finish-07\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1-of (s / strong-02)\n   :ARG0 p\n   :ARG2 (f3 / fourth\n             :ARG0-of (ii / impress-01))\n   :location (g / game\n                :name (n2 / name\n                          :op1 \"Masters\")))",
      "(p / person\n   :name (n / name\n            :op1 \"McIlroy\"))",
      "(n / name\n   :op1 \"McIlroy\")",
      "(n / name\n   :op1 \"Masters\")",
      "(f3 / fourth\n    :ARG0-of (ii / impress-01))",
      "(g / game\n   :name (n2 / name\n             :op1 \"Masters\"))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (b / before\n            :op1 (w / win-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"McIlroy\"))\n                    :ARG1 (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\")))\n            :ARG1-of (l / long-03\n                        :polarity -\n                        :ARG2-of (h / have-degree-91\n                                    :ARG1 b\n                                    :ARG3 (t / too)))))",
      "(r / read-01\n   :ARG0 (y / you)\n   :ARG1 (b / before\n            :op1 (w / win-01\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"McIlroy\"))\n                    :ARG1 (g / game\n                             :name (n2 / name\n                                       :op1 \"Masters\")))\n            :ARG1-of (l / long-03\n                        :polarity -\n                        :ARG2-of (h / have-degree-91\n                                    :ARG1 b\n                                    :ARG3 (t / too))))\n   :mode imperative)",
      "(b / before\n   :ARG1-of (l / long-03\n               :polarity -\n               :ARG2-of (h / have-degree-91\n                           :ARG1 b\n                           :ARG3 (t / too))))",
      "(b / before\n   :ARG1-of (l / long-03\n               :polarity -\n               :ARG2-of (h / have-degree-91\n                           :ARG1 b\n                           :ARG3 (t / too)))\n   :op1 (w / win-01\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"McIlroy\"))\n           :ARG1 (g / game\n                    :name (n2 / name\n                              :op1 \"Masters\"))))",
      "(w / win-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"McIlroy\"))\n   :ARG1 (g / game\n            :name (n2 / name\n                      :op1 \"Masters\")))",
      "(p / person\n   :name (n / name\n            :op1 \"McIlroy\"))",
      "(n / name\n   :op1 \"McIlroy\")",
      "(n / name\n   :op1 \"Masters\")",
      "(g / game\n   :name (n2 / name\n             :op1 \"Masters\"))",
      "(l / long-03\n   :ARG2-of (h / have-degree-91\n               :ARG1 (b / before)\n               :ARG3 (t / too)))",
      "(l / long-03\n   :ARG2-of (h / have-degree-91\n               :ARG1 (b / before)\n               :ARG3 (t / too))\n   :polarity -)",
      "(h / have-degree-91\n   :ARG1 (b / before)\n   :ARG3 (t / too))"
    ],
    "smus": [
      "-Rory McIlroy faced Jamie Dornan of fifty shades of grey.",
      "a href=\"http://www.fiftyshadeofgrey.com/2011/06/08/fiftyshadeofgrey/\">Fifty Shades of Grey/a>",
      "Fifty Shades of Grey author Ryan McIlroy",
      "Jamie Dornan * fifty shades of grey",
      "Ry.",
      "McIlroy",
      "Jamie",
      "Dornan.",
      "fifty",
      "Shades",
      "of.",
      "Grey",
      "fifty shades of grey",
      "fifty shades of grey",
      "McIlroy and Dunnan will be part of the first Circular Soccer Showdown in 2015.",
      "And McIlroy.",
      "And Dornan.",
      "McIlroy",
      "Dornan.",
      "McIlroy",
      "Dornan.",
      "Circular.",
      "Soccer",
      "Showdown.",
      "Circular Soccer Showdown",
      "First game.",
      "The game will be in 2015.",
      "First..",
      "2015",
      "McIlroy will finish strongly in the impressive fourth.",
      "McIlroy will finish strongly in the impressive fourth.",
      "McIlroy will finish strongly in the Masters for an impressive fourth.",
      "McIlroy",
      "McIlroy",
      "Masters",
      "An impressive fourth.",
      "Masters",
      "You've read that not too long before McIlroy wins the Masters.",
      "Read not too long before McIlroy wins the Masters.",
      "Not too long before.",
      "Not too long before McIlroy wins the Masters.",
      "McIlroy wins the Masters.",
      "McIlroy",
      "McIlroy",
      "Masters",
      "Masters",
      "Too long before.",
      "Not too long before.",
      "too before."
    ]
  },
  {
    "instance_id": "realsumm-92",
    "summary": "<t> Chris Christie appeared on The Tonight Show and called out Jimmy Fallon for his weight jokes about the governor . </t> <t> Later in the program he hoarded a pint of ice cream Fallon brought out for the two to share . </t> <t> When asked if he would run for president , Christie said ; ' I \u2019ve got a day job which keeps me busy ' . </t>",
    "tree": [
      "(a / and\n   :op1 (a2 / appear-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Chris\"\n                              :op2 \"Christie\"))\n            :location (b / broadcast-program\n                         :name (n2 / name\n                                   :op1 \"The\"\n                                   :op2 \"Tonight\"\n                                   :op3 \"Show\"))))",
      "(a / and\n   :op2 (c / call-out-15\n           :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n           :ARG1 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Jimmy\"\n                               :op2 \"Fallon\"))\n           :ARG2 (j / joke-01\n                    :ARG0 p2\n                    :ARG2 (w / weight)\n                    :topic (p3 / person\n                               :ARG0-of (h / have-org-role-91\n                                           :ARG2 (g / governor))))))",
      "(a2 / appear-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Chris\"\n                      :op2 \"Christie\")))",
      "(a2 / appear-01\n    :ARG1 (p / person\n             :name (n / name\n                      :op1 \"Chris\"\n                      :op2 \"Christie\"))\n    :location (b / broadcast-program\n                 :name (n2 / name\n                           :op1 \"The\"\n                           :op2 \"Tonight\"\n                           :op3 \"Show\")))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (g / governor)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (g / governor))\n   :name (n / name\n            :op1 \"Chris\"\n            :op2 \"Christie\"))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (g / governor))\n   :name (n3 / name\n             :op1 \"Jimmy\"\n             :op2 \"Fallon\"))",
      "(n / name\n   :op1 \"Chris\")",
      "(n / name\n   :op2 \"Christie\")",
      "(n / name\n   :op1 \"The\")",
      "(n / name\n   :op2 \"Tonight\")",
      "(n / name\n   :op3 \"Show\")",
      "(n / name\n   :op1 \"Jimmy\")",
      "(n / name\n   :op2 \"Fallon\")",
      "(b / broadcast-program\n   :name (n2 / name\n             :op1 \"The\"\n             :op2 \"Tonight\"\n             :op3 \"Show\"))",
      "(c / call-out-15\n   :ARG0 (p / person :name (n / name :op1 \"Chris\" :op2 \"Christie\"))\n   :ARG1 (p2 / person\n             :name (n3 / name\n                       :op1 \"Jimmy\"\n                       :op2 \"Fallon\"))\n   :ARG2 (j / joke-01\n            :ARG0 p2\n            :ARG2 (w / weight)\n            :topic (p3 / person\n                       :ARG0-of (h / have-org-role-91\n                                   :ARG2 (g / governor)))))",
      "(j / joke-01\n   :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\"))\n   :ARG2 (w / weight))",
      "(j / joke-01\n   :ARG0 (p2 / person :name (n3 / name :op1 \"Jimmy\" :op2 \"Fallon\"))\n   :ARG2 (w / weight)\n   :topic (p3 / person\n              :ARG0-of (h / have-org-role-91\n                          :ARG2 (g / governor))))",
      "(h / have-org-role-91\n   :ARG2 (g / governor))",
      "(h / hoard-01\n   :ARG0 (h2 / he)\n   :ARG1 (ii / ice-cream\n             :quant (p / pint)\n             :ARG1-of (b / bring-01\n                         :ARG0 (p2 / person\n                                   :name (n / name\n                                            :op1 \"Fallon\"))\n                         :ARG2 (o / out)\n                         :purpose (s / share-01\n                                     :ARG0 (t / two)))))",
      "(h / hoard-01\n   :ARG0 (h2 / he)\n   :ARG1 (ii / ice-cream\n             :quant (p / pint)\n             :ARG1-of (b / bring-01\n                         :ARG0 (p2 / person\n                                   :name (n / name\n                                            :op1 \"Fallon\"))\n                         :ARG2 (o / out)\n                         :purpose (s / share-01\n                                     :ARG0 (t / two))))\n   :time (l / late\n            :op1 (p3 / program)\n            :degree (s2 / somewhat)))",
      "(ii / ice-cream\n    :ARG1-of (b / bring-01\n                :ARG0 (p2 / person\n                          :name (n / name\n                                   :op1 \"Fallon\"))\n                :ARG2 (o / out)\n                :purpose (s / share-01\n                            :ARG0 (t / two))))",
      "(ii / ice-cream\n    :ARG1-of (b / bring-01\n                :ARG0 (p2 / person\n                          :name (n / name\n                                   :op1 \"Fallon\"))\n                :ARG2 (o / out)\n                :purpose (s / share-01\n                            :ARG0 (t / two)))\n    :quant (p / pint))",
      "(b / bring-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Fallon\"))\n   :ARG2 (o / out))",
      "(b / bring-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Fallon\"))\n   :ARG2 (o / out))",
      "(p2 / person\n    :name (n / name\n             :op1 \"Fallon\"))",
      "(n / name\n   :op1 \"Fallon\")",
      "(s / share-01\n   :ARG0 (t / two))",
      "(l / late\n   :op1 (p3 / program))",
      "(l / late\n   :degree (s2 / somewhat))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG0 p\n            :ARG1 (j / job\n                     :mod (d / day)\n                     :ARG0-of (k / keep-02\n                                 :ARG1 (b / busy-01\n                                          :ARG1 p)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Christie\"))\n   :ARG1 (h / have-03\n            :ARG0 p\n            :ARG1 (j / job\n                     :mod (d / day)\n                     :ARG0-of (k / keep-02\n                                 :ARG1 (b / busy-01\n                                          :ARG1 p))))\n   :time (a / ask-01\n            :ARG1 (t / truth-value\n                     :polarity-of (r / run-02\n                                     :ARG0 p\n                                     :ARG1 (p2 / person\n                                               :ARG0-of (h2 / have-org-role-91\n                                                            :ARG2 (p3 / president)))))\n            :ARG2 p))",
      "(p / person\n   :ARG0-of (h2 / have-org-role-91\n                :ARG2 (p3 / president)))",
      "(p / person\n   :ARG0-of (h2 / have-org-role-91\n                :ARG2 (p3 / president))\n   :name (n / name\n            :op1 \"Christie\"))",
      "(n / name\n   :op1 \"Christie\")",
      "(h / have-03\n   :ARG0 (p / person :name (n / name :op1 \"Christie\"))\n   :ARG1 (j / job\n            :mod (d / day)\n            :ARG0-of (k / keep-02\n                        :ARG1 (b / busy-01\n                                 :ARG1 p))))",
      "(j / job\n   :ARG0-of (k / keep-02\n               :ARG1 (b / busy-01\n                        :ARG1 (p / person :name (n / name :op1 \"Christie\")))))",
      "(j / job\n   :ARG0-of (k / keep-02\n               :ARG1 (b / busy-01\n                        :ARG1 (p / person :name (n / name :op1 \"Christie\"))))\n   :mod (d / day))",
      "(k / keep-02\n   :ARG1 (b / busy-01\n            :ARG1 (p / person :name (n / name :op1 \"Christie\"))))",
      "(b / busy-01\n   :ARG1 (p / person :name (n / name :op1 \"Christie\")))",
      "(a / ask-01\n   :ARG1 (t / truth-value\n            :polarity-of (r / run-02\n                            :ARG0 (p / person :name (n / name :op1 \"Christie\"))\n                            :ARG1 (p2 / person\n                                      :ARG0-of (h2 / have-org-role-91\n                                                   :ARG2 (p3 / president)))))\n   :ARG2 p)",
      "(t / truth-value\n   :polarity-of (r / run-02\n                   :ARG0 (p / person :name (n / name :op1 \"Christie\"))\n                   :ARG1 (p2 / person\n                             :ARG0-of (h2 / have-org-role-91\n                                          :ARG2 (p3 / president)))))",
      "(r / run-02\n   :ARG0 (p / person :name (n / name :op1 \"Christie\"))\n   :ARG1 (p2 / person\n             :ARG0-of (h2 / have-org-role-91\n                          :ARG2 (p3 / president))))",
      "(h2 / have-org-role-91\n    :ARG2 (p3 / president))"
    ],
    "smus": [
      "And Chris Christie appeared on \"The Tonight Show\".",
      "And Chris Christie called Jimmy Fallon out for his weighty jokes about the governor.",
      "Chris Christie appeared.",
      "Chris Christie appeared on The Tonight Show.",
      "the governor",
      "Chris Christie is governor.",
      "Governor Jimmy Fallon",
      "Chris",
      "Christie",
      "The",
      "Tonight.",
      "Show.",
      "Jimmy",
      "Fallon",
      "The Tonight Show",
      "Chris Christie called out Jimmy Fallon for his weight jokes about the governor.",
      "Jimmy Fallon jokes about weight.",
      "Jimmy Fallon jokes about the weight of the governor.",
      "the governor",
      "He hoarded a pint of ice-cream that Fallon brought out to share with the two.",
      "Later in the program, he hoarded a pint of ice-cream that Fallon brought out to share with the two.",
      "ice-cream that Fallon brought out to share with the two.",
      "A pint of ice-cream that Fallon brought out to share with the two.",
      "Fallon brought out.",
      "Fallon brought out.",
      "Fallon.",
      "Fallon",
      "The two will share.",
      "Late to the program.",
      "Quite late.",
      "Christie said she has a day job that keeps her busy.",
      "When asked if she would run for president, Christie said she has a day job that keeps her busy.",
      "President.",
      "Christie is president.",
      "Christie",
      "Christie has a day job that keeps her busy.",
      "a job that keeps Christie busy.",
      "Day job that keeps Christie busy.",
      "Christie keeps busy.",
      "Christie is busy.",
      "Christie will run for president?",
      "Christie will run for president?",
      "Christie will run for president.",
      "President."
    ]
  },
  {
    "instance_id": "realsumm-93",
    "summary": "<t> Qantas ' on time rating slipped to 75th out of the 80 airlines using Heathrow . </t> <t> The airline could loose their eight landing strips at the popular airport . </t> <t> They are also facing a fine in excess of $ 38,000 for every flight that 's late . </t> <t> Qantas blamed air congestion at Heathrow and Dubai airports . </t>",
    "tree": [
      "(s / slip-01\n   :ARG1 (r / rate-01\n            :ARG1 (c / company\n                     :name (n / name\n                              :op1 \"Qantas\"))\n            :ARG3 (o / on-time))\n   :ARG4 (r2 / rank-01\n             :ARG2 75\n             :ARG1 c\n             :ARG5 (a / airline\n                      :quant 80\n                      :ARG0-of (u / use-01\n                                  :ARG1 (a2 / airport\n                                            :name (n2 / name\n                                                      :op1 \"Heathrow\"))))))",
      "(r / rate-01\n   :ARG1 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG3 (o / on-time))",
      "(c / company\n   :name (n / name\n            :op1 \"Qantas\"))",
      "(n / name\n   :op1 \"Qantas\")",
      "(n / name\n   :op1 \"Heathrow\")",
      "(r2 / rank-01\n    :ARG2 75\n    :ARG1 (c / company :name (n / name :op1 \"Qantas\"))\n    :ARG5 (a / airline\n             :quant 80\n             :ARG0-of (u / use-01\n                         :ARG1 (a2 / airport\n                                   :name (n2 / name\n                                             :op1 \"Heathrow\")))))",
      "(a / airline\n   :ARG0-of (u / use-01\n               :ARG1 (a2 / airport\n                         :name (n2 / name\n                                   :op1 \"Heathrow\"))))",
      "(a / airline\n   :ARG0-of (u / use-01\n               :ARG1 (a2 / airport\n                         :name (n2 / name\n                                   :op1 \"Heathrow\")))\n   :quant 80)",
      "(u / use-01\n   :ARG1 (a2 / airport\n             :name (n2 / name\n                       :op1 \"Heathrow\")))",
      "(a2 / airport\n    :name (n2 / name\n              :op1 \"Heathrow\"))",
      "(p / possible-01\n   :ARG1 (l / loose-02\n            :ARG0 (a / airline)\n            :ARG1 (s / strip\n                     :quant 8\n                     :purpose (l2 / land-01)\n                     :poss a)\n            :location (a2 / airport\n                          :ARG1-of (p2 / popular-02))))",
      "(l / loose-02\n   :ARG0 (a / airline)\n   :ARG1 (s / strip\n            :quant 8\n            :purpose (l2 / land-01)\n            :poss a))",
      "(l / loose-02\n   :ARG0 (a / airline)\n   :ARG1 (s / strip\n            :quant 8\n            :purpose (l2 / land-01)\n            :poss a)\n   :location (a2 / airport\n                 :ARG1-of (p2 / popular-02)))",
      "(s / strip\n   :quant 8)",
      "(s / strip\n   :poss (a / airline))",
      "(a2 / airport\n    :ARG1-of (p2 / popular-02))",
      "(f / face-01\n   :ARG0 (t / they)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000\n                               :unit (d / dollar)))\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)\n                       :ARG1-of (l / late-02))))",
      "(f / face-01\n   :ARG0 (t / they)\n   :ARG1 (f2 / fine-01\n             :ARG1 (ii / in-excess-of\n                       :op1 (m / monetary-quantity\n                               :quant 38000\n                               :unit (d / dollar)))\n             :ARG3 (f3 / fly-01\n                       :mod (e / every)\n                       :ARG1-of (l / late-02)))\n   :mod (a / also))",
      "(f2 / fine-01\n    :ARG1 (ii / in-excess-of\n              :op1 (m / monetary-quantity\n                      :quant 38000\n                      :unit (d / dollar)))\n    :ARG3 (f3 / fly-01\n              :mod (e / every)\n              :ARG1-of (l / late-02)))",
      "(ii / in-excess-of\n    :op1 (m / monetary-quantity\n            :quant 38000\n            :unit (d / dollar)))",
      "(m / monetary-quantity\n   :quant 38000)",
      "(m / monetary-quantity\n   :unit (d / dollar))",
      "(f3 / fly-01\n    :ARG1-of (l / late-02))",
      "(f3 / fly-01\n    :ARG1-of (l / late-02)\n    :mod (e / every))",
      "(b / blame-01\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Qantas\"))\n   :ARG1 (c2 / congest-01\n             :ARG1 (a / air)\n             :location (a2 / and\n                           :op1 (a3 / airport\n                                    :name (n2 / name\n                                              :op1 \"Heathrow\"))\n                           :op2 (a4 / airport\n                                    :name (n3 / name\n                                              :op1 \"Dubai\")))))",
      "(c / company\n   :name (n / name\n            :op1 \"Qantas\"))",
      "(n / name\n   :op1 \"Qantas\")",
      "(n / name\n   :op1 \"Heathrow\")",
      "(n / name\n   :op1 \"Dubai\")",
      "(c2 / congest-01\n    :ARG1 (a / air))",
      "(c2 / congest-01\n    :ARG1 (a / air)\n    :location (a2 / and\n                  :op1 (a3 / airport\n                           :name (n2 / name\n                                     :op1 \"Heathrow\"))\n                  :op2 (a4 / airport\n                           :name (n3 / name\n                                     :op1 \"Dubai\"))))",
      "(a2 / and\n    :op1 (a3 / airport\n             :name (n2 / name\n                       :op1 \"Heathrow\")))",
      "(a2 / and\n    :op2 (a4 / airport\n             :name (n3 / name\n                       :op1 \"Dubai\")))",
      "(a3 / airport\n    :name (n2 / name\n              :op1 \"Heathrow\"))",
      "(a3 / airport\n    :name (n3 / name\n              :op1 \"Dubai\"))"
    ],
    "smus": [
      "Qantas's on-time rating slipped to 75th among the 80 airlines using Heathrow.",
      "Qantas is rated on time.",
      "Qantas",
      "Qantas",
      "\"Heathrow\"",
      "Qantas ranks 75th among 80 airlines using Heathrow.",
      "airlines using Heathrow",
      "80 airlines using Heathrow",
      "Using Heathrow.",
      "Heathrow",
      "The airline may loose eight of its landing strips at the popular airport.",
      "The airline will loose its 8 landing strips.",
      "At a popular airport, the airline will loose eight of its landing strips.",
      "8 strips.",
      "The airline stripe.",
      "popular airport",
      "They are facing a $ 38K in excess fine for every late flight.",
      "They are also facing a $38k fine for every late flight over.",
      "Every late flight that is in excess of $38,000 is fined.",
      "In excess of $38,000.",
      "38,000",
      "$",
      "late flight",
      "Every late flight.",
      "Qantas blamed air congestion at Heathrow and Dubai.",
      "Qantas",
      "Qantas",
      "\"Heathrow\"",
      "Dubai",
      "Air congest.",
      "There was air congest at Heathrow and Dubai.",
      "and Heathrow air.",
      "and Dubai air.",
      "Heathrow air.",
      "Dubai air."
    ]
  },
  {
    "instance_id": "realsumm-94",
    "summary": "<t> Christopher Starrs was spared jail in an ' act of mercy ' by judge in January . </t> <t> But senior judge has now said his colleague took ' his eye off the ball ' . </t> <t> Nicholas Cooke QC said wheelchair - bound Starrs should have been jailed . </t> <t> But added Starrs should thank his lucky stars as sentence allowed to stand . </t>",
    "tree": [
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :manner (a / act-02\n              :ARG0 p\n              :ARG1 (m / mercy)))",
      "(s / spare-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01)))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Christopher\"\n                      :op2 \"Starrs\"))\n   :ARG2 (j2 / jail)\n   :time (d / date-entity\n            :month 1))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG3 (j / judge-01)))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG3 (j / judge-01))\n   :name (n / name\n            :op1 \"Christopher\"\n            :op2 \"Starrs\"))",
      "(h / have-org-role-91\n   :ARG3 (j / judge-01))",
      "(n / name\n   :op1 \"Christopher\")",
      "(n / name\n   :op2 \"Starrs\")",
      "(a / act-02\n   :ARG0 (p / person)\n   :ARG1 (m / mercy))",
      "(d / date-entity\n   :month 1)",
      "(c / contrast-01\n   :ARG2 (s / say-01\n            :ARG0 (p / person\n                     :ARG0-of (h / have-org-role-91\n                                 :ARG3 (j / judge-01)\n                                 :mod (s2 / senior)))\n            :ARG1 (t / take-01\n                     :ARG0 (p2 / person\n                               :ARG0-of (h2 / have-rel-role-91\n                                            :ARG1 p\n                                            :ARG2 (c2 / colleague)))\n                     :ARG1 (e / eye\n                              :direction (o / off\n                                            :op1 (b / ball))))\n            :time (n / now)))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01)\n                        :mod (s2 / senior)))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0-of (h2 / have-rel-role-91\n                                   :ARG1 p\n                                   :ARG2 (c2 / colleague)))\n            :ARG1 (e / eye\n                     :direction (o / off\n                                   :op1 (b / ball)))))",
      "(s / say-01\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG3 (j / judge-01)\n                        :mod (s2 / senior)))\n   :ARG1 (t / take-01\n            :ARG0 (p2 / person\n                      :ARG0-of (h2 / have-rel-role-91\n                                   :ARG1 p\n                                   :ARG2 (c2 / colleague)))\n            :ARG1 (e / eye\n                     :direction (o / off\n                                   :op1 (b / ball))))\n   :time (n / now))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG3 (j / judge-01)\n               :mod (s2 / senior))\n   :ARG0-of (h2 / have-rel-role-91\n                :ARG1 p\n                :ARG2 (c2 / colleague)))",
      "(h / have-org-role-91\n   :ARG3 (j / judge-01))",
      "(h / have-org-role-91\n   :ARG3 (j / judge-01)\n   :mod (s2 / senior))",
      "(t / take-01\n   :ARG0 (p2 / person\n             :ARG0-of (h2 / have-rel-role-91\n                          :ARG1 (p / person)\n                          :ARG2 (c2 / colleague)))\n   :ARG1 (e / eye\n            :direction (o / off\n                          :op1 (b / ball))))",
      "(h2 / have-rel-role-91\n    :ARG1 (p / person)\n    :ARG2 (c2 / colleague))",
      "(e / eye\n   :direction (o / off\n                 :op1 (b / ball)))",
      "(o / off\n   :op1 (b / ball))",
      "(s / say-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nicholas\"\n                     :op2 \"Cooke\"\n                     :op3 \"Q QC\"))\n   :ARG1 (r / recommend-01\n            :ARG1 (j / jail-01\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Starrs\")\n                               :ARG1-of (b / bind-01\n                                           :ARG2 (w / wheelchair))))))",
      "(p / person\n   :ARG1-of (b / bind-01\n               :ARG2 (w / wheelchair)))",
      "(p / person\n   :ARG1-of (b / bind-01\n               :ARG2 (w / wheelchair))\n   :name (n / name\n            :op1 \"Nicholas\"\n            :op2 \"Cooke\"\n            :op3 \"Q QC\"))",
      "(p / person\n   :ARG1-of (b / bind-01\n               :ARG2 (w / wheelchair))\n   :name (n2 / name\n             :op1 \"Starrs\"))",
      "(n / name\n   :op1 \"Nicholas\")",
      "(n / name\n   :op2 \"Cooke\")",
      "(n / name\n   :op3 \"Q QC\")",
      "(n / name\n   :op1 \"Starrs\")",
      "(r / recommend-01\n   :ARG1 (j / jail-01\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Starrs\")\n                      :ARG1-of (b / bind-01\n                                  :ARG2 (w / wheelchair)))))",
      "(j / jail-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Starrs\")\n             :ARG1-of (b / bind-01\n                         :ARG2 (w / wheelchair))))",
      "(b / bind-01\n   :ARG2 (w / wheelchair))",
      "(c / contrast-01\n   :ARG2 (a / add-01\n            :ARG1 (r / recommend-01\n                     :ARG1 (t / thank-01\n                              :ARG0 (p / person\n                                       :name (n / name\n                                                :op1 \"Starrs\"))\n                              :ARG1 (s / star\n                                       :mod (l / lucky)\n                                       :poss p)\n                              :time (a2 / allow-01\n                                        :ARG1 (s2 / stand-04\n                                                  :ARG1 (s3 / sentence-01)))))))",
      "(a / add-01\n   :ARG1 (r / recommend-01\n            :ARG1 (t / thank-01\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Starrs\"))\n                     :ARG1 (s / star\n                              :mod (l / lucky)\n                              :poss p)\n                     :time (a2 / allow-01\n                               :ARG1 (s2 / stand-04\n                                         :ARG1 (s3 / sentence-01))))))",
      "(r / recommend-01\n   :ARG1 (t / thank-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Starrs\"))\n            :ARG1 (s / star\n                     :mod (l / lucky)\n                     :poss p)\n            :time (a2 / allow-01\n                      :ARG1 (s2 / stand-04\n                                :ARG1 (s3 / sentence-01)))))",
      "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Starrs\"))\n   :ARG1 (s / star\n            :mod (l / lucky)\n            :poss p))",
      "(t / thank-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Starrs\"))\n   :ARG1 (s / star\n            :mod (l / lucky)\n            :poss p)\n   :time (a2 / allow-01\n             :ARG1 (s2 / stand-04\n                       :ARG1 (s3 / sentence-01))))",
      "(p / person\n   :name (n / name\n            :op1 \"Starrs\"))",
      "(n / name\n   :op1 \"Starrs\")",
      "(s / star\n   :mod (l / lucky))",
      "(s / star\n   :poss (p / person :name (n / name :op1 \"Starrs\")))",
      "(a2 / allow-01\n    :ARG1 (s2 / stand-04\n              :ARG1 (s3 / sentence-01)))",
      "(s2 / stand-04\n    :ARG1 (s3 / sentence-01))"
    ],
    "smus": [
      "The Judge has spared Christopher Starrs from jail.",
      "The Judge has spared Christopher Starrs from jail in an act of mercy.",
      "A judge spared Christopher Starrs from jail in January.",
      "Judge.",
      "Judge Christopher Starrs",
      "Judge.",
      "Christopher",
      "Starrs",
      "The mercy act of the people.",
      "January",
      "But now a senior judge has said his colleague took an eye off the ball.",
      "A senior judge has said his colleague took his eye off the ball.",
      "A senior judge has now said his colleague took an eye off the ball.",
      "Senior judge and colleague.",
      "Judge.",
      "Senior judge",
      "A colleague took an eye off the ball.",
      "colleague",
      "Eye off the ball.",
      "Off the ball.",
      "Nicholas Cooke Q QC said Starrs, who was bound in a wheelchair, should have been jailed.",
      "Person bound in wheelchair",
      "Nicholas Cooke Q QC wheelchair bound",
      "Starrs is in a wheelchair bound.",
      "Nicholas",
      "Cooke.",
      "QQC",
      "Starrs",
      "Starrs, who was bound in a wheelchair, should have been jailed.",
      "Starrs, who was bound in a wheelchair, was jailed.",
      "wheelchair bound",
      "But it was added that Starrs should thank his lucky stars when the sentence is allowed to stand.",
      "Starrs should thank his lucky stars when the sentence is allowed to stand, he was added.",
      "Starrs should thank his lucky stars when the sentence is allowed to stand.",
      "Starrs, thank your lucky stars.",
      "Starrs will thank his lucky stars when the sentence is allowed to stand.",
      "Starrs",
      "Starrs",
      "Lucky stars.",
      "Starrs stars",
      "The sentence was allowed to stand.",
      "stand trial"
    ]
  },
  {
    "instance_id": "realsumm-95",
    "summary": "<t> Real Madrid thrashed Granada 9 - 1 in La Liga at the weekend . </t> <t> Cristiano Ronaldo scored five to take his league tally to 36 for the season . </t> <t> Real travel to Rayo Vallecano in a Madrid derby on Wednesday night . </t> <t> Juventus won 3 - 0 at Fiorentina to reach the Coppa Italia final on Tuesday . </t>",
    "tree": [
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\")))",
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\"))\n   :time (w / weekend))",
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\"))\n   :quant (s / score-entity\n             :op1 9\n             :op2 1))",
      "(t / thrash-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"\n                      :op2 \"Madrid\"))\n   :ARG1 (t3 / team\n             :name (n2 / name\n                       :op1 \"Granada\"))\n   :location (l / league\n                :name (n3 / name\n                          :op1 \"La\"\n                          :op2 \"Liga\")))",
      "(t2 / team\n    :name (n / name\n             :op1 \"Real\"\n             :op2 \"Madrid\"))",
      "(t2 / team\n    :name (n2 / name\n              :op1 \"Granada\"))",
      "(n / name\n   :op1 \"Real\")",
      "(n / name\n   :op2 \"Madrid\")",
      "(n / name\n   :op1 \"Granada\")",
      "(n / name\n   :op1 \"La\")",
      "(n / name\n   :op2 \"Liga\")",
      "(s / score-entity\n   :op1 9)",
      "(s / score-entity\n   :op2 1)",
      "(l / league\n   :name (n3 / name\n             :op1 \"La\"\n             :op2 \"Liga\"))",
      "(s / score-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cristiano\"\n                     :op2 \"Ronaldo\"))\n   :ARG1 5\n   :ARG0-of (t / take-01\n               :ARG1 (t2 / tally-01\n                         :ARG0 p\n                         :ARG1 (l / league))\n               :ARG3 s\n               :ARG2 36\n               :ARG1 p\n               :ARG3 l\n               :time (s2 / season)))",
      "(p / person\n   :name (n / name\n            :op1 \"Cristiano\"\n            :op2 \"Ronaldo\"))",
      "(n / name\n   :op1 \"Cristiano\")",
      "(n / name\n   :op2 \"Ronaldo\")",
      "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n             :ARG1 (l / league))\n   :ARG3 (s / score-01)\n   :ARG2 36\n   :ARG1 p\n   :ARG3 l)",
      "(t / take-01\n   :ARG1 (t2 / tally-01\n             :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n             :ARG1 (l / league))\n   :ARG3 (s / score-01)\n   :ARG2 36\n   :ARG1 p\n   :ARG3 l\n   :time (s2 / season))",
      "(t2 / tally-01\n    :ARG0 (p / person :name (n / name :op1 \"Cristiano\" :op2 \"Ronaldo\"))\n    :ARG1 (l / league))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\")))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :subevent-of (d / derby\n                   :mod (c / city\n                           :name (n3 / name\n                                     :op1 \"Madrid\"))))",
      "(t / travel-01\n   :ARG0 (t2 / team\n             :name (n / name\n                      :op1 \"Real\"))\n   :ARG4 (t3 / team\n             :name (n2 / name\n                       :op1 \"Rayo\"\n                       :op2 \"Vallecano\"))\n   :time (d2 / date-entity\n             :weekday (w / wednesday)\n             :dayperiod (n4 / night)))",
      "(t2 / team\n    :name (n / name\n             :op1 \"Real\"))",
      "(t2 / team\n    :name (n2 / name\n              :op1 \"Rayo\"\n              :op2 \"Vallecano\"))",
      "(n / name\n   :op1 \"Real\")",
      "(n / name\n   :op1 \"Rayo\")",
      "(n / name\n   :op2 \"Vallecano\")",
      "(n / name\n   :op1 \"Madrid\")",
      "(d / derby\n   :mod (c / city\n           :name (n3 / name\n                     :op1 \"Madrid\")))",
      "(c / city\n   :name (n3 / name\n             :op1 \"Madrid\"))",
      "(d2 / date-entity\n    :weekday (w / wednesday))",
      "(d2 / date-entity\n    :dayperiod (n4 / night))",
      "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\"))\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Fiorentina\"))\n   :ARG4 (s / score-entity\n            :op1 3\n            :op2 0))",
      "(w / win-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Juventus\"))\n   :ARG2 (t2 / team\n             :name (n2 / name\n                       :op1 \"Fiorentina\"))\n   :ARG4 (s / score-entity\n            :op1 3\n            :op2 0))",
      "(t / team\n   :name (n / name\n            :op1 \"Juventus\"))",
      "(t / team\n   :name (n2 / name\n             :op1 \"Fiorentina\"))",
      "(n / name\n   :op1 \"Juventus\")",
      "(n / name\n   :op1 \"Fiorentina\")",
      "(n / name\n   :op1 \"Coppa\")",
      "(n / name\n   :op2 \"Italia\")",
      "(s / score-entity\n   :op1 3)",
      "(s / score-entity\n   :op2 0)",
      "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Juventus\"))\n   :ARG1 (f / final\n            :subevent-of (g / game\n                            :name (n3 / name\n                                      :op1 \"Coppa\"\n                                      :op2 \"Italia\"))))",
      "(r / reach-01\n   :ARG0 (t / team :name (n / name :op1 \"Juventus\"))\n   :ARG1 (f / final\n            :subevent-of (g / game\n                            :name (n3 / name\n                                      :op1 \"Coppa\"\n                                      :op2 \"Italia\")))\n   :time (d / date-entity\n            :weekday (t3 / tuesday)))",
      "(f / final\n   :subevent-of (g / game\n                   :name (n3 / name\n                             :op1 \"Coppa\"\n                             :op2 \"Italia\")))",
      "(g / game\n   :name (n3 / name\n             :op1 \"Coppa\"\n             :op2 \"Italia\"))",
      "(d / date-entity\n   :weekday (t3 / tuesday))"
    ],
    "smus": [
      "Real Madrid thrash Granada",
      "Real Madrid thrash Granada over the weekend.",
      "Real Madrid thrashed Granada 9-1.",
      "Real Madrid thrashed Granada in La Liga.",
      "Real Madrid",
      "Granada",
      "Real.",
      "Madrid",
      "Granada",
      "La",
      "Liga",
      "9",
      "1",
      "La Liga",
      "Cristiano Ronaldo scored five, taking his league tally to 36 this season.",
      "Cristina Ronaldo",
      "Cristina",
      "Ronaldo",
      "Cristiano Ronaldo's league tally took him to 36 points.",
      "Cristiano Ronaldo's league tally would take him to 36 points this season.",
      "Cristiano Ronaldo has a league tally.",
      "Real will travel to Rayo Vallecano.",
      "Real travel to Rayo Vallecano in the Madrid derby.",
      "Real will travel to Rayo Vallecano on Wednesday night.",
      "Real.",
      "Rayo Vallecano",
      "Real.",
      "Rayo",
      "Vallecano",
      "Madrid",
      "Madrid derby",
      "Madrid",
      "Wednesday",
      "Night.",
      "Juventus won 3-1 against Fiorentina.",
      "Juventus won 3-1 against Fiorentina.",
      "Juventus",
      "Fiorentina",
      "Juventus",
      "Fiorentina",
      "Coppa.",
      "Italy",
      "3",
      "0",
      "Juventus reached the final of the Coppa Italia.",
      "Juventus reached the final of the Coppa Italia game on Tuesday.",
      "Final of Coppa Italia",
      "Coppa Italia",
      "Tuesday"
    ]
  },
  {
    "instance_id": "realsumm-96",
    "summary": "<t> Kevin Pietersen was sacked by England 14 months ago after Ashes defeat . </t> <t> Batsman scored 170 on his county cricket return for Surrey last week . </t> <t> Pietersen wants to make a sensational return to the England side this year . </t> <t> But Andrew Flintoff thinks time is running out for him to resurrect career . </t>",
    "tree": [
      "(s / sack-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"England\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\")))",
      "(s / sack-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"England\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (b / before\n            :op1 (n3 / now)\n            :quant (t2 / temporal-quantity\n                       :quant 14\n                       :unit (m / month))))",
      "(s / sack-01\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"England\"))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Kevin\"\n                      :op2 \"Pietersen\"))\n   :time (a / after\n            :op1 (d / defeat-01\n                    :ARG0 t\n                    :ARG2 (g / game\n                             :name (n4 / name\n                                       :op1 \"Ashes\")))))",
      "(t / team\n   :name (n / name\n            :op1 \"England\"))",
      "(n / name\n   :op1 \"England\")",
      "(n / name\n   :op1 \"Kevin\")",
      "(n / name\n   :op2 \"Pietersen\")",
      "(n / name\n   :op1 \"Ashes\")",
      "(p / person\n   :name (n2 / name\n             :op1 \"Kevin\"\n             :op2 \"Pietersen\"))",
      "(b / before\n   :op1 (n3 / now))",
      "(b / before\n   :quant (t2 / temporal-quantity\n              :quant 14\n              :unit (m / month)))",
      "(t2 / temporal-quantity\n    :quant 14)",
      "(t2 / temporal-quantity\n    :unit (m / month))",
      "(a / after\n   :op1 (d / defeat-01\n           :ARG0 (t / team :name (n / name :op1 \"England\"))\n           :ARG2 (g / game\n                    :name (n4 / name\n                              :op1 \"Ashes\"))))",
      "(d / defeat-01\n   :ARG0 (t / team :name (n / name :op1 \"England\"))\n   :ARG2 (g / game\n            :name (n4 / name\n                      :op1 \"Ashes\")))",
      "(g / game\n   :name (n4 / name\n             :op1 \"Ashes\"))",
      "(s / score-01\n   :ARG0 (b / batsman)\n   :ARG1 170)",
      "(s / score-01\n   :ARG0 (b / batsman)\n   :ARG1 170\n   :time (w / week\n            :mod (l / last)))",
      "(s / score-01\n   :ARG0 (b / batsman)\n   :ARG1 170\n   :time (r / return-01\n            :ARG1 b\n            :ARG4 (c / county\n                     :name (n / name\n                              :op1 \"Surrey\"))\n            :mod (c2 / cricket)))",
      "(w / week\n   :mod (l / last))",
      "(r / return-01\n   :ARG1 (b / batsman)\n   :ARG4 (c / county\n            :name (n / name\n                     :op1 \"Surrey\")))",
      "(r / return-01\n   :ARG1 (b / batsman)\n   :ARG4 (c / county\n            :name (n / name\n                     :op1 \"Surrey\"))\n   :mod (c2 / cricket))",
      "(c / county\n   :name (n / name\n            :op1 \"Surrey\"))",
      "(n / name\n   :op1 \"Surrey\")",
      "(w / want-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pietersen\"))\n   :ARG1 (r / return-01\n            :ARG1 p\n            :ARG4 (s / side\n                     :mod (c / country\n                             :name (n2 / name\n                                       :op1 \"England\")))\n            :mod (s2 / sensational)\n            :time (y / year\n                     :mod (t / this))))",
      "(p / person\n   :name (n / name\n            :op1 \"Pietersen\"))",
      "(n / name\n   :op1 \"Pietersen\")",
      "(n / name\n   :op1 \"England\")",
      "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\"))))",
      "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\")))\n   :mod (s2 / sensational))",
      "(r / return-01\n   :ARG1 (p / person :name (n / name :op1 \"Pietersen\"))\n   :ARG4 (s / side\n            :mod (c / country\n                    :name (n2 / name\n                              :op1 \"England\")))\n   :time (y / year\n            :mod (t / this)))",
      "(s / side\n   :mod (c / country\n           :name (n2 / name\n                     :op1 \"England\")))",
      "(c / country\n   :name (n2 / name\n             :op1 \"England\"))",
      "(y / year\n   :mod (t / this))",
      "(c / contrast-01\n   :ARG2 (t / think-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Andrew\"\n                              :op2 \"Flintoff\"))\n            :ARG1 (r / run-out-05\n                     :ARG1 (t2 / time)\n                     :ARG2 (r2 / resurrect-01\n                               :ARG0 p\n                               :ARG1 (c2 / career\n                                         :poss p)))))",
      "(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andrew\"\n                     :op2 \"Flintoff\"))\n   :ARG1 (r / run-out-05\n            :ARG1 (t2 / time)\n            :ARG2 (r2 / resurrect-01\n                      :ARG0 p\n                      :ARG1 (c2 / career\n                                :poss p))))",
      "(p / person\n   :name (n / name\n            :op1 \"Andrew\"\n            :op2 \"Flintoff\"))",
      "(n / name\n   :op1 \"Andrew\")",
      "(n / name\n   :op2 \"Flintoff\")",
      "(r / run-out-05\n   :ARG1 (t2 / time)\n   :ARG2 (r2 / resurrect-01\n             :ARG0 (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))\n             :ARG1 (c2 / career\n                       :poss p)))",
      "(r2 / resurrect-01\n    :ARG0 (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\"))\n    :ARG1 (c2 / career\n              :poss p))",
      "(c2 / career\n    :poss (p / person :name (n / name :op1 \"Andrew\" :op2 \"Flintoff\")))"
    ],
    "smus": [
      "England have sacked Kevin Pietersen.",
      "England have sacked Kevin Pietersen in 14 months.",
      "England have sacked Kevin Pietersen after they defeat the Ashes.",
      "England",
      "England",
      "Kevin",
      "Pietersen.",
      "Ashes",
      "Kevin Pietersen",
      "Earlier.",
      "14 months earlier",
      "14",
      "Months",
      "After England defeat the Ashes",
      "England defeat the Ashes 1-0",
      "The Ashes.",
      "The batsman scored 170 runs.",
      "The batsman scored 170 last week.",
      "On his return from cricket to Surrey, the batsman scored 170 runs.",
      "Last week.",
      "Batsman returns to Surrey.",
      "The batsman will return to Surrey in cricket.",
      "Surrey County",
      "Surrey",
      "Pietersen wants a sensational return to the English side this year.",
      "Pietersen",
      "Pietersen.",
      "England",
      "Pietersen's return to the English side.",
      "Pietersen's return to the English side was sensational.",
      "Pietersen's return to the English side this year.",
      "The English side",
      "England (EE)",
      "This year.",
      "But Andrew Flintoff thinks time is running out to resurrect his career.",
      "Andrew Flintoff thinks time is running out to resurrect his career.",
      "Andrew Flintoff",
      "Andrew",
      "Flintoff",
      "Time is running out for Andrew Flintoff to resurrect his career.",
      "Andrew Flintoff will resurrect his career.",
      "Andrew Flintoff's career"
    ]
  },
  {
    "instance_id": "realsumm-97",
    "summary": "<t> If Carl Froch does n't fight in 2015 I 'm not sure he 'll be back at all . </t> <t> A blockbuster with James DeGale is most likely after Julio Cesar Chavez Jnr defeat - but Anthony Dirrell has made contact . </t> <t> Scott Quigg - Carl Frampton summer fight is dead in the water . </t>",
    "tree": [
      "(h / have-condition-91\n   :ARG1 (s / sure-02\n            :polarity -\n            :ARG0 (ii / i)\n            :ARG1 (r / return-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Carl\"\n                                       :op2 \"Froch\"))\n                     :mod (a / at-all)))\n   :ARG2 (f / fight-01\n            :polarity -\n            :ARG0 p\n            :time (d / date-entity\n                     :year 2015)))",
      "(s / sure-02\n   :ARG0 (ii / i)\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Carl\"\n                              :op2 \"Froch\"))\n            :mod (a / at-all)))",
      "(s / sure-02\n   :ARG0 (ii / i)\n   :ARG1 (r / return-01\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Carl\"\n                              :op2 \"Froch\"))\n            :mod (a / at-all))\n   :polarity -)",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carl\"\n                     :op2 \"Froch\")))",
      "(r / return-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Carl\"\n                     :op2 \"Froch\"))\n   :mod (a / at-all))",
      "(p / person\n   :name (n / name\n            :op1 \"Carl\"\n            :op2 \"Froch\"))",
      "(n / name\n   :op1 \"Carl\")",
      "(n / name\n   :op2 \"Froch\")",
      "(f / fight-01\n   :ARG0 (p / person :name (n / name :op1 \"Carl\" :op2 \"Froch\")))",
      "(f / fight-01\n   :ARG0 (p / person :name (n / name :op1 \"Carl\" :op2 \"Froch\"))\n   :polarity -)",
      "(f / fight-01\n   :ARG0 (p / person :name (n / name :op1 \"Carl\" :op2 \"Froch\"))\n   :time (d / date-entity\n            :year 2015))",
      "(d / date-entity\n   :year 2015)",
      "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :ARG2-of (h / have-degree-91\n               :ARG1 b\n               :ARG3 (m / most)))",
      "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :ARG2-of (h / have-degree-91\n               :ARG1 b\n               :ARG3 (m / most))\n   :time (a / after\n            :op1 (d / defeat-01\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Julio\"\n                                        :op2 \"Cesar\"\n                                        :op3 \"Chavez\"\n                                        :op4 \"Jr\")))))",
      "(l / likely-01\n   :ARG1 (b / blockbuster\n            :mod (p / person\n                    :name (n / name\n                             :op1 \"James\"\n                             :op2 \"DeGale\")))\n   :ARG2-of (h / have-degree-91\n               :ARG1 b\n               :ARG3 (m / most))\n   :concession (c / contact-01\n                  :ARG0 (p3 / person\n                            :name (n3 / name\n                                      :op1 \"Anthony\"\n                                      :op2 \"Dirrell\"))))",
      "(b / blockbuster\n   :mod (p / person\n           :name (n / name\n                    :op1 \"James\"\n                    :op2 \"DeGale\")))",
      "(p / person\n   :name (n / name\n            :op1 \"James\"\n            :op2 \"DeGale\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Julio\"\n             :op2 \"Cesar\"\n             :op3 \"Chavez\"\n             :op4 \"Jr\"))",
      "(p / person\n   :name (n3 / name\n             :op1 \"Anthony\"\n             :op2 \"Dirrell\"))",
      "(n / name\n   :op1 \"James\")",
      "(n / name\n   :op2 \"DeGale\")",
      "(n / name\n   :op1 \"Julio\")",
      "(n / name\n   :op2 \"Cesar\")",
      "(n / name\n   :op3 \"Chavez\")",
      "(n / name\n   :op4 \"Jr\")",
      "(n / name\n   :op1 \"Anthony\")",
      "(n / name\n   :op2 \"Dirrell\")",
      "(a / after\n   :op1 (d / defeat-01\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Julio\"\n                               :op2 \"Cesar\"\n                               :op3 \"Chavez\"\n                               :op4 \"Jr\"))))",
      "(d / defeat-01\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Julio\"\n                       :op2 \"Cesar\"\n                       :op3 \"Chavez\"\n                       :op4 \"Jr\")))",
      "(c / contact-01\n   :ARG0 (p3 / person\n             :name (n3 / name\n                       :op1 \"Anthony\"\n                       :op2 \"Dirrell\")))",
      "(h / have-degree-91\n   :ARG1 (b / blockbuster)\n   :ARG3 (m / most))",
      "(s / say-01\n   :ARG0 (ii / i)\n   :ARG1 (d / die-01\n            :ARG1 (f / fight-01\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Scott\"\n                                       :op2 \"Quigg\"))\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Carl\"\n                                         :op2 \"Frampton\"))\n                     :time (d2 / date-entity\n                               :season (s2 / summer)))\n            :location (w / water))\n   :ARG2 p)",
      "(d / die-01\n   :ARG1 (f / fight-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Scott\"\n                              :op2 \"Quigg\"))\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carl\"\n                                :op2 \"Frampton\"))\n            :time (d2 / date-entity\n                      :season (s2 / summer))))",
      "(d / die-01\n   :ARG1 (f / fight-01\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Scott\"\n                              :op2 \"Quigg\"))\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Carl\"\n                                :op2 \"Frampton\"))\n            :time (d2 / date-entity\n                      :season (s2 / summer)))\n   :location (w / water))",
      "(f / fight-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Scott\"\n                     :op2 \"Quigg\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carl\"\n                       :op2 \"Frampton\")))",
      "(f / fight-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Scott\"\n                     :op2 \"Quigg\"))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Carl\"\n                       :op2 \"Frampton\"))\n   :time (d2 / date-entity\n             :season (s2 / summer)))",
      "(p / person\n   :name (n / name\n            :op1 \"Scott\"\n            :op2 \"Quigg\"))",
      "(p / person\n   :name (n2 / name\n             :op1 \"Carl\"\n             :op2 \"Frampton\"))",
      "(n / name\n   :op1 \"Scott\")",
      "(n / name\n   :op2 \"Quigg\")",
      "(n / name\n   :op1 \"Carl\")",
      "(n / name\n   :op2 \"Frampton\")",
      "(d2 / date-entity\n    :season (s2 / summer))"
    ],
    "smus": [
      "I'm not sure about Carl Froch returning at all, but he's not going to be fifti in 2015.",
      "I'm sure Carl Froch will return at all.",
      "I'm not sure Carl Froch will return at all.",
      "Carl Froch returned.",
      "Carl Froch returns at all.",
      "Carl Froch",
      "Carl",
      "Froch",
      "Carl Froch is fift.",
      "Carl Froch is not fiddling.",
      "Carl Froch is fifti 2015",
      "2015-03-28",
      "James DeGale's most likely blockbuster",
      "James DeGale's most likely blockbuster after Julio Cesar Chavez Jr. defeats",
      "Despite the contact with Anthony Dirrell, James DeGale's blockbuster is most likely.",
      "James DeGale blockbuster",
      "James DeGale",
      "Julio Cesar Chavez Jr",
      "Anthony Dirrell",
      "James",
      "DeGale.",
      "Julio",
      "Cesar",
      "Chavez...",
      "Jr",
      "Anthony",
      "-Dirrell",
      "After defeating Julio Cesar Chavez Jr.",
      "defeat Julio Cesar Chavez Jr.",
      "Anthony Dirrell is in contact.",
      "The biggest blockbuster.",
      "Scott Quigg's fight with Carl Frampton in the summer was dead on the water, you know.",
      "Scott Quigg's fight with Carl Frampton in the summer was dead.",
      "Scott Quigg's fight with Carl Frampton in the summer died on the water.",
      "Scott Quigg vs Carl Frampton:",
      "Scott Quigg and Carl Frampton had a fight in the summer.",
      "Scott Quigg",
      "Carl Frampton",
      "Scott",
      "Quigg.",
      "Carl",
      "Frampton.",
      "Summer."
    ]
  },
  {
    "instance_id": "realsumm-98",
    "summary": "<t> Clip shows mysterious black cloud hanging over the village of Shortandy . </t> <t> The perfect hoop shape sat in the air not moving for more than 15 minutes . </t> <t> Eerie video has been viewed tens of thousands of times on Youtube . </t> <t> While some viewers are suggesting the cloud was an alien spacecraft , experts think it could have been caused by nearby factories . </t>",
    "tree": [
      "(s / show-01\n   :ARG0 (c / clip)\n   :ARG1 (c2 / cloud\n             :mod (m / mysterious)\n             :ARG1-of (b / black-04)\n             :ARG1-of (h / hang-01\n                         :ARG2 (o / over\n                                  :op1 (v / village\n                                          :name (n / name\n                                                   :op1 \"Shortandy\"))))))",
      "(c2 / cloud\n    :ARG1-of (b / black-04)\n    :ARG1-of (h / hang-01\n                :ARG2 (o / over\n                         :op1 (v / village\n                                 :name (n / name\n                                          :op1 \"Shortandy\")))))",
      "(c2 / cloud\n    :ARG1-of (b / black-04)\n    :ARG1-of (h / hang-01\n                :ARG2 (o / over\n                         :op1 (v / village\n                                 :name (n / name\n                                          :op1 \"Shortandy\"))))\n    :mod (m / mysterious))",
      "(h / hang-01\n   :ARG2 (o / over\n            :op1 (v / village\n                    :name (n / name\n                             :op1 \"Shortandy\"))))",
      "(o / over\n   :op1 (v / village\n           :name (n / name\n                    :op1 \"Shortandy\")))",
      "(v / village\n   :name (n / name\n            :op1 \"Shortandy\"))",
      "(n / name\n   :op1 \"Shortandy\")",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop)\n             :ARG1-of (p / perfect-02))\n   :ARG2 (a / air))",
      "(s / sit-01\n   :ARG1 (s2 / shape\n             :mod (h / hoop)\n             :ARG1-of (p / perfect-02))\n   :ARG2 (a / air)\n   :manner (m / move-01\n              :polarity -\n              :ARG1 s2\n              :duration (m2 / more-than\n                            :op1 (t / temporal-quantity\n                                    :quant 15\n                                    :unit (m3 / minute)))))",
      "(s2 / shape\n    :ARG1-of (p / perfect-02))",
      "(s2 / shape\n    :ARG1-of (p / perfect-02)\n    :mod (h / hoop))",
      "(m / move-01\n   :ARG1 (s2 / shape))",
      "(m / move-01\n   :ARG1 (s2 / shape)\n   :polarity -)",
      "(m / move-01\n   :ARG1 (s2 / shape)\n   :duration (m2 / more-than\n                 :op1 (t / temporal-quantity\n                         :quant 15\n                         :unit (m3 / minute))))",
      "(m2 / more-than\n    :op1 (t / temporal-quantity\n            :quant 15\n            :unit (m3 / minute)))",
      "(t / temporal-quantity\n   :quant 15)",
      "(t / temporal-quantity\n   :unit (m3 / minute))",
      "(v / view-01\n   :ARG1 (v2 / video\n             :mod (e / eerie)))",
      "(v / view-01\n   :ARG1 (v2 / video\n             :mod (e / eerie))\n   :frequency (m / multiple\n                 :op1 10000))",
      "(v / view-01\n   :ARG1 (v2 / video\n             :mod (e / eerie))\n   :medium (p / publication\n              :name (n / name\n                       :op1 \"YouTube\")))",
      "(v2 / video\n    :mod (e / eerie))",
      "(m / multiple\n   :op1 10000)",
      "(p / publication\n   :name (n / name\n            :op1 \"YouTube\"))",
      "(n / name\n   :op1 \"YouTube\")",
      "(c / contrast-01\n   :ARG1 (s / suggest-01\n            :ARG0 (p / person\n                     :ARG0-of (v / view-01)\n                     :quant (s2 / some))\n            :ARG1 (s3 / spacecraft\n                      :mod (a / alien)\n                      :domain (c2 / cloud)))\n   :ARG2 (t / think-01\n            :ARG0 (p2 / person\n                      :ARG1-of (e / expert-01))\n            :ARG1 (p3 / possible-01\n                      :ARG1 (c3 / cause-01\n                                :ARG0 (f / factory\n                                         :location (n / nearby))\n                                :ARG1 c2))))",
      "(s / suggest-01\n   :ARG0 (p / person\n            :ARG0-of (v / view-01)\n            :quant (s2 / some))\n   :ARG1 (s3 / spacecraft\n             :mod (a / alien)\n             :domain (c2 / cloud)))",
      "(p / person\n   :ARG0-of (v / view-01)\n   :ARG1-of (e / expert-01))",
      "(p / person\n   :ARG0-of (v / view-01)\n   :ARG1-of (e / expert-01)\n   :quant (s2 / some))",
      "(s3 / spacecraft\n    :mod (a / alien))",
      "(s3 / spacecraft\n    :domain (c2 / cloud))",
      "(t / think-01\n   :ARG0 (p2 / person\n             :ARG1-of (e / expert-01))\n   :ARG1 (p3 / possible-01\n             :ARG1 (c3 / cause-01\n                       :ARG0 (f / factory\n                                :location (n / nearby))\n                       :ARG1 (c2 / cloud))))",
      "(p3 / possible-01\n    :ARG1 (c3 / cause-01\n              :ARG0 (f / factory\n                       :location (n / nearby))\n              :ARG1 (c2 / cloud)))",
      "(c3 / cause-01\n    :ARG0 (f / factory\n             :location (n / nearby))\n    :ARG1 (c2 / cloud))",
      "(f / factory\n   :location (n / nearby))"
    ],
    "smus": [
      "The clip shows a mysterious black cloud hanging over Shortandy village.",
      "A black cloud hung over Shortandy village.",
      "A mysterious black cloud hung over Shortandy village.",
      "Hanging over Shortandy village.",
      "Over Shortandy village.",
      "Shortandy village",
      "Shortandy.",
      "The perfect hoop shape sat in the air.",
      "The perfect hoop shape sat in the air, not moving for more than 15 minutes.",
      "Perfect shape.",
      "Perfect hoop shape.",
      "Moving in shape.",
      "Not moving in shape.",
      "The shape has been moving for more than 15 minutes.",
      "more than 15 minutes",
      "15",
      "Minutes",
      "The eerie video was viewed.",
      "The eerie video has been viewed thousands of times.",
      "a href=\"http://www.youtube.com/watch?v=Eerie\">Eerie Video - YouTube/a>",
      "Eerie video.",
      "Tens of thousands.",
      "YouTube",
      "YouTube",
      "Some viewers are suggesting the cloud is an alien spacecraft while experts think nearby factories may have caused it.",
      "Some viewers are suggesting the cloud is an alien spacecraft.",
      "Experts and viewers",
      "Some experts with views.",
      "alien spacecraft",
      "The cloud is a spacecraft.",
      "Experts think nearby factories may have caused the cloud.",
      "Perhaps nearby factories have caused the cloud.",
      "The nearby factories have caused the cloud.",
      "There are nearby factories."
    ]
  },
  {
    "instance_id": "realsumm-99",
    "summary": "<t> Incredible images show handcuffed members from the notorious Barrio 18 gang being marched onto buses . </t> <t> In total 1,177 were transferred to a different jail where they will mix with their arch rivals - Mara Salvatrucha . </t> <t> The gang members will now no longer be classified by gang affiliation , but by how dangerous they are . </t>",
    "tree": [
      "(s / show-01\n   :ARG0 (ii / image\n             :ARG0-of (a / awe-01))\n   :ARG1 (m / march-01\n            :ARG1 (p / person\n                     :ARG0-of (h / have-org-role-91\n                                 :ARG1 (g / gang\n                                          :name (n / name\n                                                   :op1 \"Barrio\"\n                                                   :op2 18)\n                                          :ARG1-of (n2 / notorious-01))\n                                 :ARG2 (m2 / member))\n                     :ARG1-of (h2 / handcuff-01))\n            :destination (b / bus)))",
      "(ii / image\n    :ARG0-of (a / awe-01))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang\n                                 :name (n / name\n                                          :op1 \"Barrio\"\n                                          :op2 18)\n                                 :ARG1-of (n2 / notorious-01))\n                        :ARG2 (m2 / member))\n            :ARG1-of (h2 / handcuff-01)))",
      "(m / march-01\n   :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / gang\n                                 :name (n / name\n                                          :op1 \"Barrio\"\n                                          :op2 18)\n                                 :ARG1-of (n2 / notorious-01))\n                        :ARG2 (m2 / member))\n            :ARG1-of (h2 / handcuff-01))\n   :destination (b / bus))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (g / gang\n                        :name (n / name\n                                 :op1 \"Barrio\"\n                                 :op2 18)\n                        :ARG1-of (n2 / notorious-01))\n               :ARG2 (m2 / member))\n   :ARG1-of (h2 / handcuff-01))",
      "(h / have-org-role-91\n   :ARG1 (g / gang\n            :name (n / name\n                     :op1 \"Barrio\"\n                     :op2 18)\n            :ARG1-of (n2 / notorious-01))\n   :ARG2 (m2 / member))",
      "(g / gang\n   :ARG1-of (n2 / notorious-01))",
      "(g / gang\n   :ARG1-of (n2 / notorious-01)\n   :name (n / name\n            :op1 \"Barrio\"\n            :op2 18))",
      "(n / name\n   :op1 \"Barrio\")",
      "(n / name\n   :op2 18)",
      "(t / transfer-01\n   :ARG1 (p / person\n            :quant 1741\n            :ARG1-of (t2 / total-01))\n   :ARG2 (j / jail\n            :ARG1-of (d / differ-02)\n            :location-of (m / mix-01\n                            :ARG1 p\n                            :ARG2 (o / organization\n                                     :name (n / name\n                                              :op1 \"Mara\"\n                                              :op2 \"Salvatrucha\")\n                                     :ARG0-of (r / rival-01\n                                                 :ARG1 p\n                                                 :mod (a / arch))))))",
      "(p / person\n   :ARG1-of (t2 / total-01))",
      "(p / person\n   :ARG1-of (t2 / total-01)\n   :quant 1741)",
      "(j / jail\n   :ARG1-of (d / differ-02))",
      "(j / jail\n   :ARG1-of (d / differ-02)\n   :location-of (m / mix-01\n                   :ARG1 (p / person)\n                   :ARG2 (o / organization\n                            :name (n / name\n                                     :op1 \"Mara\"\n                                     :op2 \"Salvatrucha\")\n                            :ARG0-of (r / rival-01\n                                        :ARG1 p\n                                        :mod (a / arch)))))",
      "(m / mix-01\n   :ARG1 (p / person)\n   :ARG2 (o / organization\n            :name (n / name\n                     :op1 \"Mara\"\n                     :op2 \"Salvatrucha\")\n            :ARG0-of (r / rival-01\n                        :ARG1 p\n                        :mod (a / arch))))",
      "(o / organization\n   :ARG0-of (r / rival-01\n               :ARG1 (p / person)\n               :mod (a / arch)))",
      "(o / organization\n   :ARG0-of (r / rival-01\n               :ARG1 (p / person)\n               :mod (a / arch))\n   :name (n / name\n            :op1 \"Mara\"\n            :op2 \"Salvatrucha\"))",
      "(n / name\n   :op1 \"Mara\")",
      "(n / name\n   :op2 \"Salvatrucha\")",
      "(r / rival-01\n   :ARG1 (p / person))",
      "(r / rival-01\n   :ARG1 (p / person)\n   :mod (a / arch))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0-of (h / have-org-role-91\n                                  :ARG1 (g / gang)\n                                  :ARG2 (m / member)))\n             :ARG2 (a / affiliate-01\n                      :ARG1 p\n                      :ARG2 (g2 / gang)))\n   :ARG2 (c3 / classify-01\n             :ARG1 p\n             :ARG2 (e / endanger-01\n                      :ARG0 p)))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0-of (h / have-org-role-91\n                                  :ARG1 (g / gang)\n                                  :ARG2 (m / member)))\n             :ARG2 (a / affiliate-01\n                      :ARG1 p\n                      :ARG2 (g2 / gang)))\n   :ARG2 (c3 / classify-01\n             :ARG1 p\n             :ARG2 (e / endanger-01\n                      :ARG0 p))\n   :time (n / now))",
      "(c / contrast-01\n   :ARG1 (c2 / classify-01\n             :ARG1 (p / person\n                      :ARG0-of (h / have-org-role-91\n                                  :ARG1 (g / gang)\n                                  :ARG2 (m / member)))\n             :ARG2 (a / affiliate-01\n                      :ARG1 p\n                      :ARG2 (g2 / gang)))\n   :ARG2 (c3 / classify-01\n             :ARG1 p\n             :ARG2 (e / endanger-01\n                      :ARG0 p))\n   :time (n2 / no-longer))",
      "(c2 / classify-01\n    :ARG1 (p / person\n             :ARG0-of (h / have-org-role-91\n                         :ARG1 (g / gang)\n                         :ARG2 (m / member)))\n    :ARG2 (a / affiliate-01\n             :ARG1 p\n             :ARG2 (g2 / gang))\n    :ARG1 p\n    :ARG2 (e / endanger-01\n             :ARG0 p))",
      "(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG1 (g / gang)\n               :ARG2 (m / member)))",
      "(h / have-org-role-91\n   :ARG1 (g / gang)\n   :ARG2 (m / member))",
      "(a / affiliate-01\n   :ARG1 (p / person)\n   :ARG2 (g2 / gang))",
      "(e / endanger-01\n   :ARG0 (p / person))"
    ],
    "smus": [
      "Amazing images show handcuffed members of the notorious Barrio 18 marching to buses.",
      "Amazing images.",
      "Handcuffed members of the notorious gang Barrio 18 were marched.",
      "Handcuffed members of the notorious gang Barrio 18 were marched to buses.",
      "The members of the notorious gang Barrio 18 were handcuffed.",
      "The notorious gang, Barrio 18, is a group of members.",
      "A notorious gang.",
      "The notorious Barrio 18 gang.",
      "barrio/b>",
      "18.",
      "A total of 1741 people were transferred to a different jail where they would mix with their arch rivals the Mara Salvatrucha.",
      "Total:",
      "In total, 174 people.",
      "There is a different jail.",
      "There is a different jail where people mix with their arch rivals, the Mara Salvatrucha.",
      "Mix people with their arch rivals, the Mara Salvatrucha.",
      "arch rivals of the people.",
      "Mara Salvatrucha is an arch rival of the people.",
      "Mara",
      "Salavatrucha.",
      "People are rivals.",
      "Arch rivalries between people.",
      "Gang members are classified as affiliated with the gang but are classified as dangerous.",
      "Now gang members are classified as affiliated with the gang but are classified as in danger.",
      "Gang members are no longer classified as gang affiliates but as dangerous.",
      "Gang members are classified as having an affiliation with the gang as dangerous.",
      "Gang members.",
      "The gang is made up of members.",
      "People are affiliates of a gang.",
      "People are in danger."
    ]
  }
]